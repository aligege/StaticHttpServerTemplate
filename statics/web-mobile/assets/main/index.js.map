{"version":3,"sources":["assets/script/Net/AccountHttp.ts","assets/script/Service/AdService.ts","assets/script/Framework/Extention/Ajust.ts","assets/script/Framework/View/Page/Alipay.ts","assets/script/Framework/Extention/AlphaReverseTimerLabel.ts","assets/script/DataModel/AppDataModel.ts","assets/script/Framework/Core/Astar.ts","assets/script/Framework/Logic/AudioTool.ts","assets/script/Framework/Core/Base64.ts","assets/script/sdk/BaseAd.ts","assets/script/Framework/DataModel/BaseDataModel.ts","assets/script/Framework/Core/Base.ts","assets/script/Framework/Core/BehaviorAI.ts","assets/script/platform/Bridge_android.ts","assets/script/platform/Bridge_h5.ts","assets/script/platform/Bridge_ios.ts","assets/script/CQRCode.js","assets/script/DataModel/CardTableDataModel.ts","assets/script/view/game/play/Card.ts","assets/script/Service/ClubService.ts","assets/script/Framework/Extention/CoinRain.ts","assets/script/model/DailyModel.ts","assets/script/Framework/DataModel/EmotionDataModel.ts","assets/script/view/game/layer/EndLayer.ts","assets/script/Framework/View/Entity/EntityManager.ts","assets/script/Framework/View/Entity/Entity.ts","assets/script/manager/EventManager.ts","assets/script/Framework/Logic/FaceCheckTool.ts","assets/script/Framework/Extention/FlyCoins.ts","assets/script/view/game/play/GameChipsMove.ts","assets/script/Framework/DataModel/GameDataModel.ts","assets/script/model/GameModel.ts","assets/script/view/game/GameScene.ts","assets/script/Game.ts","assets/script/Framework/Logic/GaoDeMapTool.ts","assets/script/view/game/Global.ts","assets/script/Framework/Net/ProtoFilter/GoogleProtoFilter.ts","assets/script/Framework/Logic/GoogleTool.ts","assets/script/Framework/Extention/Gradient.ts","assets/script/Net/HallHttp.ts","assets/script/utils/HashMap.ts","assets/script/Framework/Logic/Helper.ts","assets/script/view/game/HorseRaceLamp.ts","assets/script/Framework/IGame.ts","assets/script/Framework/Net/ProtoFilter/IProtoFilter.ts","assets/script/view/game/play/ItemCard.ts","assets/script/view/main/room/ItemRoom.ts","assets/script/Service/ItemService.ts","assets/script/view/main/layer/ItemTask.ts","assets/script/Framework/Extention/JoyStick.ts","assets/script/Framework/Net/ProtoFilter/JsonProtoFilter.ts","assets/script/manager/LayerManager.ts","assets/script/utils/ListView.ts","assets/script/view/loading/LoadingLayer.ts","assets/script/view/loading/LoadingScene.ts","assets/script/Framework/DataModel/LocalizationDataModel.ts","assets/script/view/login/LoginLayer.ts","assets/script/model/LoginModel.ts","assets/script/view/login/LoginScene.ts","assets/script/Service/LoginService.ts","assets/script/Framework/Extention/LoopScrollList.ts","assets/script/utils/MD5.ts","assets/script/Framework/Extention/MFAnimation.ts","assets/script/view/main/MainScene.ts","assets/script/Service/MatchService.ts","assets/script/manager/MaterialManager.ts","assets/script/Framework/Core/Md5.ts","assets/script/utils/MessageCenter.ts","assets/script/platform/MultiPlatform.ts","assets/script/Framework/Extention/MutualEmotion.ts","assets/script/Framework/Logic/NativeTool.ts","assets/script/Net/NetGameTexas.ts","assets/script/Framework/DataModel/NetService.ts","assets/script/manager/NetworkManager.ts","assets/script/Service/NewsService.ts","assets/script/view/main/layer/NodeLive.ts","assets/script/view/game/layer/NodeMatchInfo.ts","assets/script/view/game/layer/NodeMatchLevel.ts","assets/script/view/game/layer/NodeMatchReward.ts","assets/script/view/game/layer/NodeMatchScore.ts","assets/script/Framework/Logic/NotificationCenter.ts","assets/script/sdk/OppoAd.ts","assets/script/Net/OrderHttp.ts","assets/script/Service/OrderService.ts","assets/script/Framework/View/Page/PageManager.ts","assets/script/view/Page/Page_About.ts","assets/script/view/Page/Page_AccountLogin.ts","assets/script/view/Page/Page_AddClub.ts","assets/script/view/Page/Page_Address.ts","assets/script/view/Page/Page_Bind.ts","assets/script/view/Page/Page_ChangePassword.ts","assets/script/view/Page/Page_ChangePhone.ts","assets/script/view/Page/Page_ChangePoint.ts","assets/script/view/Page/Page_Change.ts","assets/script/view/Page/Page_ChargeConfirm.ts","assets/script/view/Page/Page_ChargeResult.ts","assets/script/view/Page/Page_Charge.ts","assets/script/view/Page/Page_ClubDetail.ts","assets/script/view/Page/Page_Club.ts","assets/script/view/Page/Page_CodeLogin.ts","assets/script/view/Page/Page_CupDetail.ts","assets/script/view/Page/Page_CustomerService.ts","assets/script/view/Page/Page_Donate.ts","assets/script/view/Page/Page_EditAddress.ts","assets/script/view/Page/Page_ExchangeTip.ts","assets/script/view/Page/Page_Exchange.ts","assets/script/view/Page/Page_Game.ts","assets/script/view/Page/Page_Home.ts","assets/script/view/main/layer/Page_IDCard.ts","assets/script/view/Page/Page_Invite_Friend.ts","assets/script/view/Page/Page_Invitee.ts","assets/script/view/Page/Page_Invite.ts","assets/script/view/Page/Page_Loading.ts","assets/script/view/Page/Page_Logout.ts","assets/script/view/Page/Page_Maintain.ts","assets/script/view/Page/Page_Main.ts","assets/script/view/Page/Page_MatchFocus.ts","assets/script/view/Page/Page_MatchInfo.ts","assets/script/view/Page/Page_MatchList.ts","assets/script/view/Page/Page_MatchPay.ts","assets/script/view/Page/Page_MatchSignup.ts","assets/script/view/Page/Page_MyPrizeDetail.ts","assets/script/view/Page/Page_MyPrizeInfo.ts","assets/script/view/Page/Page_MyPrize.ts","assets/script/view/Page/Page_My.ts","assets/script/view/Page/Page_NeiYe.ts","assets/script/view/Page/Page_Notice.ts","assets/script/view/main/layer/Page_Person.ts","assets/script/view/Page/Page_Register.ts","assets/script/view/Page/Page_ResetPassword.ts","assets/script/view/Page/Page_ServerList.ts","assets/script/view/Page/Page_Setting.ts","assets/script/view/Page/Page_SignTip.ts","assets/script/view/Page/Page_Sign.ts","assets/script/view/Page/Page_Start.ts","assets/script/view/Page/Page_Statement.ts","assets/script/view/Page/Page_Table.ts","assets/script/view/Page/Page_Term.ts","assets/script/view/Page/Page_Tips.ts","assets/script/view/Page/Page_Update.ts","assets/script/view/Page/Page_UseItemByCode.ts","assets/script/view/Page/Page_WebView.ts","assets/script/Framework/View/Page/Page.ts","assets/script/view/game/layer/PauseLayer.ts","assets/script/manager/PoolManager.ts","assets/script/model/PropModel.ts","assets/script/Framework/Net/ProtoFilter/ProtoFactory.ts","assets/script/sdk/QQAd.ts","assets/script/Framework/Logic/QiNiuTool.ts","assets/script/model/RankingModel.ts","assets/script/view/Review/ReViewItem.ts","assets/script/view/Review/ReView.ts","assets/script/model/RecordModel.ts","assets/script/Framework/Logic/ResTool.ts","assets/script/manager/ResourceManager.ts","assets/script/Framework/Extention/ReverseCountLabel.ts","assets/script/Framework/Extention/ReverseTimerLabel.ts","assets/script/model/RewardModel.ts","assets/script/Framework/Extention/RollingNode.ts","assets/script/manager/SdkManager.ts","assets/script/view/game/play/Seat.ts","assets/script/Framework/DataModel/SettingDataModel.ts","assets/script/Framework/Logic/Share.ts","assets/script/model/ShopModel.ts","assets/script/Framework/Logic/ShopTool.ts","assets/script/view/main/layer/SignLayer.ts","assets/script/model/SignModel.ts","assets/script/view/game/layer/SignupLayer.ts","assets/script/Framework/DataModel/SimpleLogDataModel.ts","assets/script/Framework/Net/SimpleWebServer.ts","assets/script/Framework/Net/SimpleWebSocket.ts","assets/script/Base/SingleBase.ts","assets/script/Framework/Extention/SkillWheel.ts","assets/script/Framework/Extention/SpriteNumLabel.ts","assets/script/sdk/TTAd.ts","assets/script/model/TaskModel.ts","assets/script/model/TeachModel.ts","assets/script/view/game/TexasRewardTool.ts","assets/script/DataModel/TexasTableDataModel.ts","assets/script/Framework/Extention/TimeLabel.ts","assets/script/utils/TimeManageer.ts","assets/script/Framework/Extention/TipLabel.ts","assets/script/Framework/Extention/TipRunning.ts","assets/script/Framework/Logic/ToServerLog.ts","assets/script/Framework/Core/TriggerMgr.ts","assets/script/sdk/UCAd.ts","assets/script/Logic/UserManager.ts","assets/script/model/UserModel.ts","assets/script/utils/Utils.ts","assets/script/view/main/layer/VideoLayer.ts","assets/script/sdk/VivoAd.ts","assets/script/Framework/Extention/VoiceWidget.ts","assets/script/sdk/WXAd.ts","assets/script/view/main/layer/WalletLayer.ts","assets/script/Framework/Logic/WeiXinTool.ts","assets/script/view/Widget/Widget_AddressItem.ts","assets/script/view/Widget/Widget_ChangeItem.ts","assets/script/view/Widget/Widget_CitySearchCupItem.ts","assets/script/view/Widget/Widget_ClubFiltrateScrollview.ts","assets/script/view/Widget/Widget_ClubItem.ts","assets/script/view/Widget/Widget_ClubShaiXuanItem.ts","assets/script/view/Widget/Widget_CupDetailItem.ts","assets/script/view/Widget/Widget_CupItem.ts","assets/script/view/Widget/Widget_DemainCode.ts","assets/script/view/Widget/Widget_ExchangeItem.ts","assets/script/view/Widget/Widget_HomeAdsItem.ts","assets/script/view/Widget/Widget_HomeNewsItem.ts","assets/script/view/Widget/Widget_InviteeItem.ts","assets/script/view/Widget/Widget_ItemItem.ts","assets/script/view/Widget/Widget_MatchInfo.ts","assets/script/view/Widget/Widget_MatchListItemEd.ts","assets/script/view/Widget/Widget_MatchListItemIng.ts","assets/script/view/Widget/Widget_MatchListItem.ts","assets/script/view/Widget/Widget_NumberFrame.ts","assets/script/view/Widget/Widget_ProductItem.ts","assets/script/view/Widget/Widget_ScoreItem.ts","assets/script/view/Widget/Widget_SignUpBar.ts","assets/script/view/Widget/Widget_TableMatchTip.ts","assets/script/view/Widget/Widget_Table_Action.ts","assets/script/view/Widget/Widget_Time.ts","assets/script/view/Widget/Widget_mathinfo_level_cell.ts","assets/script/view/Widget/Widget_serverListItem.ts","assets/script/view/main/layer/WithdrawLayer.ts","assets/script/utils/YkUtils.ts","assets/script/Config/_ini_.ts","assets/script/utils/encryptjs/algo.js","assets/script/utils/encryptjs/base64-js.js","assets/script/utils/encryptjs/buffer.js","assets/script/view/head/changeHead.ts","assets/script/data/data.ts","assets/script/utils/encryptjs/encryptjs.js","assets/script/utils/encryptjs/ieee754.js","assets/script/data/pool.ts","assets/script/utils/sprintf.js","assets/script/Framework/TableView/tableView.ts","assets/script/Framework/TableView/viewCell.ts","assets/script/Config/zdpkDatas.ts"],"names":["SimpleWebServer_1","require","exports","GAccountHttp","AccountHttp","_super","__extends","SimpleWebServer","HallHttp_1","AdModel","this","id","title","icon","url","info","create_time","AdService","_ads","Object","defineProperty","prototype","get","init","GHallHttp","request","res","_a","sent","ads","GAdSer","PageManager_1","cc","_decorator","ccclass","property","EAjustPosType","EAjustScaleType","Ajust","_this","apply","arguments","_scale","_dtw","_dth","type","None","scaleType","frameSize","view","getFrameSize","designSize","getDesignResolutionSize","sw","width","Math","abs","scale","height","safeSize","sys","getSafeAreaRect","visibleSize","getVisibleSize","size","equals","h","w","lh","os","OS_IOS","y","x","ratio","getDevicePixelRatio","winSize","data","lb","JSON","stringify","onLoad","dty_ipad","GPageMgr","node","Left","dtWidth","Top","dtHeight","Right","Bottom","LeftTop","RightTop","RightBottom","LeftBottom","Width","s","Height","All","sh","min","DtHeight","__decorate","Enum","Component","UserManager_1","OrderService_1","MessageCenter_1","Alipay","alipayEvent","produceid","self","console","log","GOrderSer","getOrderInfo","orderstr","OS_ANDROID","payResult","jsb","reflection","callStaticMethod","handler_1","setInterval","isPay","payResultFun","clearInterval","toString","then","rs","GUserMgr","addOneUser","user","GMsgCenter","send","GAlipay","window","obj","Helper_1","AlphaReverseTimerLabel","selectedFont","num_spacing","_seconds","AlphaReverseTimerLabel_1","set","value","_isOnLoadCalled","_init","_getNumStr","_interval_handler","run","create","seconds","font_num","rtl","GHelper","createNode","num","m","floor","_root","Node","parent","_changeTo","numStr","removeAllChildren","length","pre_path","_nums","i","sp","createSprite","push","str","_init_callback","stop","_run","bind","startTime","getLocalTime","endTime","curTime","curNum","end_callback","_changeOne","str_num","pre","opacity","runAction","fadeTo","sequence","removeSelf","onDestroy","AccountHttp_1","OrderHttp_1","ItemService_1","MatchService_1","EAccountFrom","AccountModel","AppDataModel","account","token","account_server","host","port","hall_server","texas_server","texas_servers","last_get_code","signs","quick_test","auto_login","update","isShowServerList","checkUpdate","getItemDesc","mii","count","item","GItemCfg","getItemById","name","onLogin","unionid","openid","from","Promise","resolve","reject","__awaiter","msg","errcode","showTip","localStorage","setItem","hall","allhall","index","texas","alltexas","GOrderHttp","account_id","session_id","_tryEnd","GMatchSer","GAppDM","Base_1","AStarNode","tilePos","G","H","ParentNode","CurTilePos","F","GAStar","_maxTileWidth","_maxTileHeight","getRoutes","srcTilePos","tarTilePos","mapData","maxTileWidth","maxTileHeight","_markList","_markedList","_routes","_mapData","tp","sub","_routing","reverse","shift","curIndex","core","removeAt","v2","_addToMark","_isInMark","curTilePos","parentAStarNode","newNode","temp_tp","SettingDataModel_1","GAudioTool","AudioTool","_musicId","_m_v","_s_v","_v_v","_lock","_cur_music","_allIn_id","playMusic","path","loop","GSettingDM","musicOn","undefined","stopMusic","loader","loadRes","AudioClip","err","clip","audioEngine","play","resumeMusic","setMusicVolume","v","setVolume","lockMusic","unlockMusic","setSoundVolume","resetEffect","stopAllEffects","stopAllIn","stopEffect","playEffect","isAllin","soundOn","audioID","playSound","fun","stopSound","setVoiceVolume","playVoice","voiceOn","indexOf","split","voice_path","fileUtils","getWritablePath","isFileExist","httpRequest","xhr","tmp_data","Uint8Array","response","writeDataToFile","stopAllSound","stopAll","GBase64","Base64","_b64","Array","_s64","_invalidEncoding","string","p","n","charAt","ceil","encode","buffer","start","end","parts","chunk","j","t","b","String","fromCharCode","slice","join","decode","offset","c","charCodeAt","Error","SUBSCRIBE","BaseAd","platform","banner_id","video_id","interstitial_id","native_id","subscribe_templates","setSubscribeTemplates","templates","getPlatform","requestSubscribeMessage","success","fail","vibrateShort","navigator","vibrate","vibrateLong","TestAd","call","login","nickname","avatar","gender","code","share","createBannerAd","destroyBannerAd","createVideoAd","createInterstitialAd","callback","createNativeAd","reportAdShow","reportAdClick","testAd","BaseDataModel","filename","_data","_filename","isString","parse","json","isObject","param","isArray","isNumber","isNaN","isFunction","random","max","clone","newArray","newObj","merge","dest","src","tlen","len","key","getExit","template","dump","strSpace","_dump","intent","startIntentStr","contentStr","toArray","table","array","foreach","items","ret","getLength","len_1","find","arr","char2buf","out","ArrayBuffer","u16a","Uint16Array","strs","array2arraybuffer","DataView","setUint8","arraybuffer2array","a","byteLength","getUint8","firstCharUpCase","reg","toLowerCase","replace","toUpperCase","convertIntToUInt8Array","c2","c1","convertUInt8ArrayToInt","getArrayFromArray","l","blobToArrayBuffer","isNative","fileReader","FileReader","onload","progressEvent","result","readAsArrayBuffer","format","formatStr","args_1","Date","Week","Y","getFullYear","M","getMonth","getDay","D","getDate","getHours","getMinutes","S","getSeconds","fuzzy","first","last","newStr","trim","isPhoneNo","phone","test","isVirtualNo","flag","toLatestTime","time","dt","now","dtm","getTime","one_day","d","one_hour","one_m","one_s","toSimpleTime","getStartTime","getMilliseconds","include","objs","r","k","Number","toLocaleString","locales","options","TriggerMgr_1","BehaviorAI","behavior_data","targetObjs","_current_behavior_name","_obj","_behavior_data","_targetObjs","_triggers","GTriggerMgr","addConditionTriggerEvent","EConditionType","Die","onTriggerDie","getCode","goto","removeConditionTriggerEvent","_current_check","current","event_name","targetInfo","_getNearestTarget","target","distance","insight","forceReturn","_doEvents","_current_behavior","conditions","_targetObj","objPos","getPosition","tpos","mag","dty","behavior_name","behaviors","_checkConditions","animation","animation_done","self_1","behaviorAnimation","events","failto","behaviorWalkAny","behaviorPersue","params","rate","done","userDM","targetNum","minIndex","mindis","dis","addTarget","getTargets","BRIDGE_CLASS","Bridge_android_functionName","Bridge_android","tsCallNative","callData","sigs","saveImgToSystemGallery","sendData","resultData","crashPush","Bridge_h5","setUpdateCall","Bridge_ios_functionName","Bridge_ios","QR8bitByte","mode","QRMode","MODE_8BIT_BYTE","write","put","QRCode","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","addData","newData","isDark","row","col","getModuleCount","make","rsBlocks","QRRSBlock","getRSBlocks","QRBitBuffer","totalDataCount","dataCount","_i","QRUtil","getLengthInBits","makeImpl","getBestMaskPattern","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","minLostPoint","pattern","lostPoint","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","cs","dark","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","bits","getBCHTypeNumber","mod","_i2","_mod","getBCHTypeInfo","_i3","_mod2","inc","bitIndex","byteIndex","mask","getMask","PAD0","PAD1","_i4","putBit","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","rsPoly","getErrorCorrectPolynomial","rawPoly","QRPolynomial","modPoly","_i5","modIndex","totalCodeCount","_i6","_i7","_r","_i8","_r2","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","QRErrorCorrectLevel","L","Q","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHDigit","digit","errorCorrectLength","multiply","QRMath","gexp","qrCode","sameCount","_row","_col","_row2","_col2","_col3","_row3","darkCount","_col4","_row4","glog","LOG_TABLE","EXP_TABLE","_i9","_i10","_i11","e","_i12","_i13","_i14","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","list","_i15","bufIndex","_i16","bit","CQRCode","Class","extends","Graphics","properties","default","notify","oldValue","setContent","backColor","Color","WHITE","foreColor","BLACK","old","color","margin","Float","_size","setContentSize","clear","fillColor","offsetX","anchorX","offsetY","anchorY","rect","fill","close","qrcode","tileW","tileH","round","Attr","setClassAttr","module","_ini_1","_ECardSeatState","Waiting","Preparing","Playing","Leaving","ECardSeatState","CardRoomInfo","_id","game_name","level","base","user_num","ETableType","PlayerInfo","logo","sex","ip","with_point","point","crystal","is_robot","CardSeatInfo","playerinfo","state","dt_point","auto","agree_dismiss","CardRecordSeatInfo","table_id","dtpoint","CardCreateTableDataModel","table_type","game_type","base_point","min_point","max_user","min_user","total_num","fee_type","can_enter_after","can_leave","can_any_leave","need_end_record","auto_prepare","auto_sitdown","prepare_timeout_type","EPrepareTimeOutType","random_seat","carry_coin","virtual_coin","CardTableInfo","ctdm","room_id","room_level","club_id","create_user_id","is_dismissing","apply_dismiss_user_id","cur_num","dismiss_timeout","timeout","seats","audience","Map","CardRecordTableInfo","userrecords","create_user_nickname","create_user_logo","begin_time","end_time","CardTableDataModel","_room_infos","_cur_room_id","_table_infos","_battlerecords","getTableInfo","addBattleRecords","concat","getUserIdList","user_id_list","ti","user_id","getSeatByUserId","getSeatByIndex","st","table_info","seat","_refreshToUserMgr","_addOneUserBySeat","one","onEnter","seatinfo","onSitdown","onStandup","tableinfo","onAuto","onAgree","onApplyDismiss","deadline","onPrepare","onResult","record","ETableState","End","onLeave","EventManager_1","ResourceManager_1","CardInfo","mark","select","delay","Card","imgLight","imgShadow","imgBack","rootNode","img_cardFace","img_num","img_shadow","_bBonny","_dealPos","_dealRotate","_dealTime","_hasContent","resetPosTimeOut","setColor","active","updateCardBack","reset","imgpath","_getCardBgResPath","resMgr","loadImage","isValid","spriteFrame","setCardBg","suffix","getComponent","Sprite","getItem","updateCardBack1","loadCard","card_style","setReviewContent","clearContent","doStopAllActions","hasContent","setDealPos","convertToNodeSpaceAR","getDealPos","resetPos","setPosition","angle","setDealRotate","rotate","deal","show","_onDeal","stopAllActions","callFunc","resetCardPos","delayTime","Vec2","setOp","op","isBonny","turn","showAction","_realTurn","isFace","dely","scaleTo","turnCallBack","hide_Img_back","setFace","bActive","scaleX","setGary","initTable","onDisable","eventMgr","removeListener","ClubService","_clubs","clublist","getClubDataById","clubId","allClubDatas","allClubDatas_1","joinClub","quitClub","searchClub","message","instance","_instance","GClubSer","CoinRain","isSpine","_spinePath","trackIndex","_is_rain","_fly_up_height","_fly_down_height","_amin","_start_posy","lPosX","rPosX","_rain_level","_time","onDestory","destroy","startRain","action","upDateCoin","repeatForever","stopRain","setRainCoinSpine","setRainCoin","createAnimation","WrapMode","Loop","startPosY","deltaTime","rainLevel","bezier","isRain","midx","coin","position","setParent","SkeletonData","skeleton_data","skeleton","Skeleton","skeletonData","premultipliedAlpha","bezierTo","DailyModel","daily_share","daily_lottery","daily_coin","daily_diamond","daily_publish","daily_score_max","daily_money_max","daily_money_total","GEmotionDataModel","EmotionDataModel","Mutual","1","ani","fly","audio","audio_delay","2","3","4","5","6","7","face","8","9","10","11","12","Page_1","EndLayer","onClickClose","onClickHome","onClickRestart","onClickNext","onClickDouble","Page","GEntityMgr","Entity","pool_1","CallbackInfo","once","EventManager","pool","Pool","listeners","_on","_off","infos","splice","_once","_emit","args","filter","_b","infos_1","__spreadArrays","addListener","id_1","eventOnce","dispatchEvent","SingleBase_1","NativeTool_1","YkUtils_1","AppDataModel_1","GameDataModel_1","FaceCheckTool","isVerifiOpen","isNeedRefreshCheck","lastCheckTime","initOnCreate","setTimeout","ykUtils","getServerTime","saveData","checkFace","idcard_no","self_user_id","isBrowser","GGameDM","match_is_verification","saveTime","getData","GNativeTool","callRlsb","faceCheckTool","Instance","AudioTool_1","FlyCoins","_sf","flyTo","coin_num","createSpriteFrame","sf","coins","actions_1","fadeOut","action_1","actions","removeFromParent","Seat_1","GameChipsMove","chips","m_kFadeInPos","m_pkTarget","setSeat","sat","SetFadeInPos","kFadeIn","MoveIn","f32Delay","_MoveInDelay","scheduleOnce","MoveOut","isAnte","outpos","inpos","_MoveOutDelay","MoveOutToTarget","pkTarget","_MoveOutToTargetDelay","u32ShowChips","pkChips","instantiate","setScale","addChild","u32Inv","pkCallback","_MoveInHide","fadeIn","destroySelf","hideChips","TargetCallback","_RandPos","_MoveOutTargetHide","f32Delta","showChips","kPos","i32RandX","i32RandY","ShakeSeat","Prefab","EGameState","GameDataModel","isLAN","isDev","_pre_state","Entering","_state","_match_is_verification","_pass_word","_server_list","_androidMaxVersion","_isServerUpdate","_iosMaxVersion","_iosLoadUrl","_androidLoadUrl","_diff_server_time","_delay_time","_authtype","_version","_review_version","_auth","_res_url","at","vs","restoreGameState","isState","_arrayInvite","_arrayInviteNei","GameModel","stage","speed","score","select_bg","select_card","GameScene","gameLayer","onShow","onHide","IGame_1","GoogleTool_1","LoginService_1","MultiPlatform_1","Main","nodeCaptureCamera","lastBackTime","backTime","reLoginTime","getInstance","crashBind","initSceenState","initCamera","onPreInitDone","GGoogleTool","auth","isServerUpdate","openPage","onBackPressed","serverListHandler","getServerConfig","loginService","isget","server_list","curData","checkBackApp","doBackClose","game","on","EVENT_HIDE","EVENT_SHOW","hideTime","closeAll","getGameConfig","Camera","IGame","GaoDeMapTool","getLocation","force","promise","isReviewVersion","locationRes","longitude","latitude","errorMsg","error","asyncGetLoaction","timeOutCb","Global","tableData","selfRank","tableId","IProtoFilter_1","GoogleProtoFilter","_proto","cmd","ClientMsgHead","lookupType","clientHead_content","msgname","svr_id","service_address","msgtype","clientHead","finish","msg_class","body","headLen","dd","_decode","arrayBuffer","headLenArray","clientHeadArray","builder","bodyArray","substring","builder_name","IProtoFilter","GoogleAccount","email","google","GoogleTool","_native_plugin","_empty_params","_one_string_param","_two_string_params","_login_cb","_endrewardfsad_cb","_pay_cb","_onad_num","onEndRewardFSAD","onPurchasesUpdated","onVerify","onLaunchBillingFlow","onAdNum","cb","jsonStr","showRewardFSAD","amount","buy","goods_id","order_id","consume","purchase_token","money","jsonData","vip_exp","self_user","refreshPage","getAdNum","parseInt","executeInEditMode","requireComponent","menu","Gradient","_colors","colors","_updateColors","onEnable","director","Director","EVENT_AFTER_DRAW","off","FLAG_COLOR","cmp","RenderComponent","_assembler","uintVerts","_renderData","uintVDatas","floatsPerVert","colorOffset","HallHttp","HashMap","_list","_getIndexByKey","element","add","remove","has","getValueByIndex","forEachKeyValue","forEach","MutualEmotion_1","LocalizationDataModel_1","TipLabel_1","Md5_1","TipRunning_1","ResTool_1","MD5_1","_onReadysf_1","GResTool","getRes","classname","js","getClassName","SpriteFrame","createTexture","filepath","load","txt","raw","isAbsolutePath","Texture2D","texture","tex","setRect","addComponent","pathOrFrames","wrapMode","func","Normal","sp_n","Animation","substr","SpriteAtlas","atlas","frames","getSpriteFrames","loadResDir","resource","urls","spriteFrames","getOriginalSize","sort","a_index","b_index","AnimationClip","createWithSpriteFrames","addClip","need_del","createMutual","to_target","me","MutualEmotion","convertShortTime","convertTime","mill","diffServerTime","GLocalizationDataModel","getStringByKey","noTip","getTipStr","GTipLabel","clearTip","getUniqueDeviceCode","jsj","showRunningTip","GTipRunning","clearRunningTip","clearData","needRemove","removeItem","createFont","font","getUTF8","GMd5","convertUTF8","utf8ToUnicode","strUtf8","bstr","nTotalChars","nOffset","nRemainingBytes","nOutputPosition","iCode","iCode1","iCode2","getStoragePath","getShortStr","shuffle","ok_cb","error_cb","responseType","XMLHttpRequest","onreadystatechange","readyState","status","ontimeout","onerror","open","httpPost","xhr_1","ev","setRequestHeader","signature","getAnimationClip","clipName","defaultClip","clips","getClips","cp","shake","shake_num","shake_pos","one_shake_actions","one_shake_action","repeat","saveImage","camera","getScene","getComponentInChildren","cullingMask","RenderTexture","initWithSize","_renderContext","STENCIL_INDEX8","targetTexture","render","readPixels","filpYImage","fileName","fullPath","removeFile","wxShareShot","sType","targetNode","presscale","prey","reallyscall","picData","rowBytes","srow","reStart","screenShot","setTexture","nodeX","nodeY","nodeWidth","nodeHeight","Rect","sprite","scaleY","keys","keys_1","sign","MD5","hex_md5","getMD5","convertMd5","makeDir","folders","dir","createDirectory","Direction","HorseRaceLamp","label","maskNode","m_speed","text","m_xLeftEnd","m_xRightEnd","m_yPos","m_direction","LEFT_TO_RIGHT","initTemplate","contentSize","getContentSize","xPos","RichText","Mask","tooltip","LayerManager_1","reGetInterval","reloadingIndex","pageNode","PageManager","tipNode","TipLabel","tipRunningNode","TipRunning","registerKeyPath","layerMgr","showNetLoading","isGet","ItemCard","imgCard","imgCardBack","ItemRoom","labelTitle","labelScore","labelTime","labelCount","refreshUI","config","entry_cost","count_play","count_match","date","start_time","hour","minute","onClickSelect","Label","EItemType","ItemItem","Common","des","can_give","can_exchange","verifi_club","EBagItemState","BagItemItem","item_id","start_userid","give_userid","give_time","to_nickname","to_userid","ok_time","apply_time","give_check","ItemConfig","_items","_exitems","_bagitems","getBagItemById","removeById","bagitems","exitems","ItemTask","imgIcon","labelName","labelDesc","btnGoto","labelGoto","btnGet","labelReward","taskname","refresh","selfuser","task","taskstatus","ticket","onClickGoto","closePage","page","getPage","onToggleMatch","onClickGet","Button","JoyStick","node_bg","node_tip","_radius","_battle_page","EventType","TOUCH_START","onTouchEvent","TOUCH_MOVE","TOUCH_END","TOUCH_CANCEL","eventType","location","convertToNodeSpace","touch","toward","normalize","atan2","PI","_fun_callback","registerCallBack","JsonProtoFilter","LayerManager","layers","loading","beginTimeOut","closeTimeOut","qzCloseTimeOut","loadingIdx","beginTime","loadPrefab","showPersist","setSiblingIndex","emit","isPersistRootNode","addPersistRootNode","showLayer","Canvas","showLoading","hideLoading","isShow","showLabel","timeOut","clearQzgb","clearTimeout","qzGbTimeOut","showToast","toast","showTips","tips","buttons","showReward","rewards","showPropGet","showPropCost","showRewardProp","posStart","posEnd","showNotEnough","showWebview","showVideo","ItemInfo","NodePool","ListView","pfb_types","np_types","contentPaddingTop","contentPaddingBottom","_scrollEventTarget","_itemNodeName","sv","ScrollView","np","createItemNodeFromPool","recycleItemNodeToPool","updateDisplay","_onSVEventTouchCancel","vertical","_onSVEventScrollToTop","_onSVEventScrollToBottom","_onSVEventBounceTop","_onSVEventBounceBottom","horizontal","_onSVEventScrollToLeft","_onSVEventScrollToRight","_onSVEventBounceLeft","_onSVEventBounceRight","bindScrollEventTarget","arg","onSVEventTouchCancel","onSVEventScrollToTop","onSVEventScrollToBottom","onSVEventBounceTop","onSVEventBounceBottom","onSVEventScrollToLeft","onSVEventScrollToRight","onSVEventBounceLeft","onSVEventBounceRight","_adaptWidget","bTransChild","widget","Widget","enabled","updateAlignment","children","mtd","setAnchorPoint","itemNode","itemInfos","maxScrollY","getMaxScrollOffset","scrollY","getScrollOffset","onSVEventScrolling","startIndex","endIndex","bottom","recycleContentItemNodes","iStr","content","getChildByName","top","bindItemFunc","isForce","getIndexByItemNode","getItemTypeFunc","setContentPadding","notifyDataSetChanged","datas","computeContentHeight","notifyDataRefresh","allNode","allNode_1","totalHeight","getItemTypeByData","destroyAllChildren","PreloadInfo","bundle","total","complete","LoadingLayer","imgBg","nodeLoading","progressBar","labelProgress","imgTips","scene_loaded","scene_total","preloads","preload","onReady","progress","ProgressBar","LoadingScene","loadingLayer","_cfg","_curLan","_noTip","lan","all","LoginLayer","nodeWaiting","btnLogin","btnRegister","btnAccount","onClickLogin","onClickRegister","onClickAccountLogin","LoginModel","uid","password","idcard_name","idcard_number","inviter","invitees","daily_login","count_login","LoginScene","loginLayer","prefabRegister","prefabAccountLogin","prefabCodeLogin","prefabResetPassword","registerLayer","accountLoginLayer","codeLoginLayer","resetPasswordLayer","onShowRegisterLayer","onShowAccountLoginLayer","onShowCodeLoginLayer","onShowResetPasswordLayer","LoginService","review_version","resUrl","res_url","androidMaxVersion","androidLoadUrl","iosMaxVersion","iosLoadUrl","arrayInvite","arrayInviteNei","links","pass_word","verification","LoopScrollList","_width","_isRecyle","_scrollToIndex","_item_height","_item_num","_item_show_num","_offsetx","_offsety","_touch_began_y","_need_update","_prey","_motion_a","_motion_v","_motion_s","_motion_time","_touch_state","_touch_moved_y","_touch_ended_y","_touch_cancelled_y","_touch_begin_time","LoopScrollList_1","showNum","item_height","isRecyle","scrollToIndex","lsl","_onTouchEvent","_init_items","_gotoFixedPos","getHeight","testInit","_next_root","_next_item_list","_item_list","_addItem","initPos","ttfConfig","fontFilePath","fontSize","text_item","centerIndex","_autoScroll","abs_y","getSelectedValue","dtnum","event","custom","isCustom","posx","posy","rooty","next_root_y","temp_item_list","temp_root","minY","maxY","curY","hexcase","b64pad","rstr2hex","rstr_md5","str2rstr_utf8","b64_md5","rstr2b64","any_md5","rstr2any","hex_hmac_md5","rstr_hmac_md5","b64_hmac_md5","any_hmac_md5","binl2rstr","binl_md5","rstr2binl","bkey","ipad","opad","hash","input","hex_tab","output","tab","triplet","encoding","divisor","q","quotient","dividend","full_length","remainders","str2rstr_utf16le","str2rstr_utf16be","olda","oldb","oldc","oldd","md5_ff","md5_gg","md5_hh","md5_ii","safe_add","md5_cmn","bit_rol","lsw","msw","cnt","MFAnimation","_curAnimationName","_isloop","_curTime","_interval","_curFrameIndex","_isPlaying","mfa","animationName","_animations","widgets","widgetInfos","widgetIndex","animationInfo","framesCount","_widgetBones","frameCount","_lastFrameCallback","widgetFrames","getOffset","isAnimationExist","addWidget","widgetInfo","_formatNumName","getSpriteFrame","removeWidget","widgetName","animationName_1","framess","setLastFrameCallFunc","clearFrameEventCallFunc","MainScene","mainLayer","CardTableDataModel_1","TexasTableDataModel_1","EMatchLoopType","MatchItemInfo","MatchModel","show_region","blind_id","looptype","singup_starttime","singup_endtime","match_starttime","signup_cost","reward","reenter_cost","reenter_blind_index","reenter_count","dynamic_reward","gg_reward_begin_people_num","gg_reward_begin_coin_num","MatchPlayer","reenter_time","rank","drop_time","identified","pre_point","cur_rank","MatchInsModel","match_id","match","signup_end_time","players","player_num","blind_index","EMatchState","rankplayers","BlindItem","small_blind","big_blind","ante","BlindModel","ExtUserMatchInfo","UserMatchInfo","MultiDynamicReward","MatchService","mutireward","mutireward2","_focusmatchins","_blinds","_mymatchinfos","_allmatches","_allmatchins","_match_records","setMatchInsM","findIndex","mim","trySignup","ins_id","matchIns","getMatchInsById","mm","need_coin","need_item","need_item_count","bagItems","allneeds","tryItems","tryNeedCount","reward_coin","getSelfPlayer","getPlayers","setPlayers","blinds","i_1","bm","getAllMatches","matchinses","getBlind","getBlindModel","getBlindItem","canSignup","GTexasTableDM","matchInsM","match_insid","getSelfSeatInfo","signups","matchinfos","player","onSignup","umi","getMatchById","need_refresh","matches","matchins","mi","initMyMatches","onUpgradeBlind","initRecords","records","addRecord","hasself","getMatchRecords","getCurBlindItem","bi","MATERIAL","MaterialManager","getMaterial","SPRITE","GRAY_SPRITE","UNLIT","SPINE","CLEAR","Material","getBuiltinMaterial","setGray","gray","setMaterial","matMgr","sprites","getComponentsInChildren","sprites_1","initVertices","count_x","count_y","uv","getRect","vertices","nu","nv","triangles","points","vector_x","vector_y","offset_x","offset_y","mul","p0","p1","p2","p3","Type","MESH","setVertsDirty","updateVerticesX","rotateLeft","lValue","iShiftBits","addUnsigned","lX","lY","lX4","lY4","lX8","lY8","lResult","z","I","FF","ac","GG","HH","II","convertToWordArray","lWordCount","lMessageLength","lNumberOfWordsTempOne","lNumberOfWordsTempTwo","lNumberOfWords","lWordArray","lBytePosition","lByteCount","wordToHex","WordToHexValue","WordToHexValueTemp","lByte","lCount","uTF8Encode","AA","BB","CC","DD","S11","S12","S13","S14","S21","S22","S23","S24","S31","S32","S33","S34","S41","S42","S43","S44","tempValue","msgItem","object","MessageCenter","_Que","register","isObjectHasRegister","unregister","callbacks","Bridge_android_1","Bridge_ios_1","Bridge_h5_1","NATIVE_CALL_TYPE","MultiPlatform","_platform","capCamera","_capCamera","flipCapImageData","_height","mtd_arr","width_array","smd","jds","i_2","d_1","catScreenNodeSave","capNode","_texture","visibleRect","PIXEL_FORMAT_RGBA8888","pixels","tagData","write_path","saveImageData","capScreenShareWx","isSucces","imgPath","capScreen","getRemoteImgSaveToPhone","remote_url","u8a","handleNativeResultData","mdData","nativeCallTs","callId","ImgToSystemGallery","backData","__errorHandler","file","line","CrashPush","errorMsgTag","imgUrl","EmotionDataModel_1","to","fly_node","ani_obj","NativeTool","_return_one_string","_return_boolean","_voice_callback","_battery_info_callback","_flag","_preslsb_time","tag","_registerBatterCallback","fun_name","_convertCallBackName","onBatteryCallback","setBatteryCallback","isCharging","getBatteryStatus","copyString","getUDID","udId","beginVoiceRecord","_on_record_callback","endVoiceRecord","cancelRecord","funName","nativeToJsCallback","no","getMaxVersion","openUrl","checkLocationPremissionIsOpen","reqLocationPremission","SimpleWebSocket_1","GaoDeMapTool_1","Global_1","GNetGameTexas","NetGameTexas","_ins_id","_entered","onOpen","_is_open","send_texas_login","openHeartBeat","_onCacheMsg","_need_close","pageTable","receive_texas_login","receive_texas_kickout","send_texas_enter_match","isOpen","server","connect","receive_texas_enter_match","onEnterMatch","receive_texas_enter_match_failed","send_texas_gps","lm","gps","receive_texas_enter_table","initGame","onGetPage","receive_texas_enter_table_bc","receive_texas_sitdown_bc","onSit","receive_texas_start_game_bc","mins","onGameStart","receive_texas_refresh_table_rank","tableRankInfo","temp","refreshTableRank","receive_texas_beginbet_bc","curmaxbet","dtbet","turn_user_id","min_raise_bet","onBeginBet","send_texas_bet","bet","receive_texas_bet_bc","onbet","onBet","receive_texas_dealcard","onDealCard","cards","cardtype","receive_texas_dealcard_bc","receive_texas_game_result_bc","onGameResult","receive_texas_upgradeblind_bc","tableInfo","_c","blinditem","receive_texas_idle_bc","onIdle","receive_texas_standup_bc","onStandUp","receive_texas_match_end","send_texas_auto","receive_texas_auto_bc","receive_texas_matchresult_nt","cur_player_num","total_player_num","send_texas_showcard","showcards","receive_texas_showcard_bc","onShowCards","receive_texas_allallinshow_bc","pots","onAllAllInShow","send_texas_identified","receive_texas_identified","tabl_id","si","pi","send_texas_watch","receive_texas_waitcombine_bc","WaintingCombine","receive_texas_waiting_start_bc","WaitingStart","SimpleWebSocket","ENetState","GNetSer","NetService","_ping","_tip_dt","_tip_last_time","_tip_num","_dt_server_time","_ping_cb","_tip","_curCfg","ping","showPing","tip","Connectting","Ready","Closed","NetworkManager","EDITOR_PAGE","networkMgr","NewsModel","subtitle","NewsService","_news","news","GNewsSer","NodeLive","toggles","editSearch","toggleItems","check","onToggleAll","isChecked","onToggleLive","onToggleVideo","onClickSearch","search","ToggleContainer","EditBox","Utils_1","NodeMatchInfo","labelStartTime","labelCost","labelPlayerMin","labelChips","labelSignup","labelReentry","matchM","utils","formatDate","mtLen","getRewardsLen","formatNumber","tableView_1","NodeMatchLevel","scrollview","layout","tableView","cur_index","delegate","scrollToOffset","TexasRewardTool_1","NodeMatchReward","labelTotal","mrs","GTexasRewardTool","getRewardAll","itemcfg","Widget_ScoreItem_1","NodeMatchScore","tableview","isGetNext","matchInfoPage","gage_MatchInfo","matchInfo","onRefresh","hadSaved","skip","lastOffset","getItemType","bindcallfunc","setdata","GNotificationCenter","NotificationCenter","eventTarget","EventTarget","arg1","arg2","arg3","arg4","arg5","BaseAd_1","OppoAd","bannerAd","videoAd","videoSuccess","videoFail","nativeAd","nativeSuccess","nativeFail","qg","getUserInfo","nickName","smallAvatar","sysInfo_1","getSystemInfoSync","adUnitId","style","pixelRatio","screenWidth","onResize","screenHeight","left","onError","catch","hide","createRewardedVideoAd","onClose","isEnded","interstitialAd","adList","ad","adId","desc","image","imgUrlList","logoUrl","clickBtnTxt","oppoAd","OrderHttp","ShopTool_1","CoinItem","popular","best","ERechargeType","ProductItem","EOrderState","OrderModel","product_id","Init","OrderService","_config","products","getNewOrder","EOrderFrom","order","order_info","getProduct","getCoin","coin_id","_key_path","_pages","maxZindex","_reopening","cachePage","pageName","prefix","prefab","isPageOpened","reOpenPage","pg","newone","openPageHide","page_path","page_node","zIndex","hidePage","Page_About","Btn_Close_OnClick","Page_AccountLogin","editAccount","editPassword","toggleAgree","Phone","onClickCode","onClickResetPassword","onEditAccount","onEditPassword","Toggle","ClubService_1","ListView_1","Page_AddClub","nodeJoin","nodeJoined","memberNumber","clubData","clubs","refreshIsJoined","user_count","onJoninClubClick","service","onQuitClub","nodeClub","doClose","Widget_AddressItem_1","Page_Address","pf_address","sv_content","_wgt_adress","chooiseBt","isChooise","addresses","ai","wai","btn_chooise","address_time","Btn_Return_OnClick","Btn_Add_OnClick","Page_Bind","editbox","btnConfirm","_cb","pre_user_id","getUserByUserId","Btn_Update_OnClick","pre_user","Page_ChangePassword","editPasswordOld","editPasswordNew","editPasswordConfirm","onEditPasswordOld","onEditPasswordNew","onEditPasswordConfirm","onClickChangePassword","password_old","password_new","password_confirm","Page_ChangePhone","editPhone","editCode","btnCode","updateLabel","remain","onClickGetCode","onEditPhone","onEditCode","onClickChangePhoneNumber","Widget_NumberFrame_1","Page_ChangePoint","lab_title_0","lab_title_1","lab_title_2","numberFrame","_itemData","setOnEditEndCb","refreshView","bt_close","bt_confirm","refreshSelfUser","getCurNum","item_id_1","allNum","successNum","itemM","itemData","setMax","Page_Change","lb_wx","qr","lb_entity","kefu","commentEdit","commentLab","addressLab","_item","_chooiseAddress","commentEidtboxChange","checkCommentEidtBt","checkAddressChooiseBt","getOneAddress","initKefu","mmAddressItem","loadNetSpriteFrame","getKefu","onGetCode","onClickOk","commentStr","addressStr","comment","address","exItems","exitem","itemscfg","Page_ChargeConfirm","labelPrice","onClickSub","onClickAdd","onClickCharge","Page_ChargeResult","onClickConfirm","onClickRecharge","Widget_ProductItem_1","Page_Charge","sv_score","initProducts","product","Page_ClubDetail","initDetail","Widget_ClubItem_1","Widget_CupItem_1","Widget_CitySearchCupItem_1","Page_Club","area","edit","nodeCup","nodeSearch","filtrate","nodeTogs","inputLabel","nodeCitySearch","filtrateCity","cubAll","_allMatchData","allClubData","detailInfo","detailBack","doClubDetail","filtrateSearch","refreshData","onClickEditCancel","onToggleClub","setDelegate","detailData","detail","initDetailData","needAnimal","animalTime","getItemType1","getItemType2","getItemType3","getItemType4","bindcallfunc1","bindcallfunc2","bindcallfunc3","bindcallfunc4","allClub","refreshClubAll","initPageCub","resDd","clubdata","resetSearch","onToggleCup","onEditBegin","onEditChanged","onClubEditClick","onCLubFiltrateClick","onEditEnd","searchResultListView","city","searchList","onEditReturn","Page_CodeLogin","btn_getCode","btn_login","developLimit","developData","onDevelopChick","touchIndex","interactable","uncheck","_onLogin","develpNd","phone_code_Change","QuickPhone","codeTime","schedule","unscheduleAllCallbacks","onClickAccount","Btn_UserAgree_OnClick","Btn_Privacy_OnClick","Widget_CupDetailItem_1","fialterRule","Page_CupDetail","nodeDetail","titleDetail","bootomChoice","isBootomShowIng","hideY","isBootonAnimalRuning","mFialterRule","week","allBootomBts","setChoice","clubName","onClickBack","showBootomChoiceBtn","eventData","showY","onDateChoice","choiceIdx","btNodes","choiceNode","Page_CustomerService","labelWechat","imgQrcode","Page_Donate","dfname","dfid","onClickCancel","giveitem","Page_EditAddress","editReceiver","editAddress","btn_remove","btn_confirm","_address","onEditReceiver","onEditAddress","Btn_Adress_OnClick","AddressItem","Btn_Remove_OnClick","Page_ExchangeTip","labelTips","Page_Exchange","node_chooseaddress","node_addressinfo","lbl_address","lbl_name_phone","sp_icon","lbl_itemname","lbl_itemcount","_count","Btn_Address_OnClick","Btn_Minus_OnClick","Btn_Exchange_OnClick","addressinfo","bag_id","NetGameTexas_1","Page_Table_1","Page_MatchList_1","HorseRaceLamp_1","HashMap_1","MaterialManager_1","Page_Game","nodeMenu","nodeType","nodeSetting","card","card0","card1","card2","card3","card4","item1","item2","item3","item4","item5","carditem1","carditem2","carditem3","carditem4","cardbgitem1","cardbgitem2","cardbgitem3","cardbgitem4","switch","bb","richtext","nodePoster","pagetable","matchName","lbl_curs","lbl_chooses","tg_pre","tg_aft","success_erweima","fail_erweima","fail_share_invite_lab","fail_share_invite_codeLab","success_share_invite_codeLab","_table_id","aft1","aft2","initGameShare","loadInviteCode","PATH","png_kefuCode","registerGameToggle","registerCardToggle","registerCardBgToggle","initGameBg","initCardStyle","showALlTable","initSwitch","reloadUI","initBb","debug","setDisplayStats","match_result","_tryIpad","refreshQuickRaise","choiceNum","updateQuickRaisePre","quick_raise_pre","aft","quick_raise_aft","Btn_QuickRaiseTitle_OnClick","tg","Btn_QuickRaiseChoose_OnClick","choose_index","parseFloat","curList","newList","initHorseRace","onEventShow","cardcallback","cardbgcallback","initCardBgStyle","cardbg_style","onClickPause","onClickSpeed","onClickLeaveRoom","GPageMatchList","onClickShowMenu","onClickHideMenu","onClickShowType","Tween","stopAllByTarget","tween","total_coin","now_coin","last_coin","rd","dcoin","dtcoin","signup_coin","left_signup_num","mr","onClickHideType","initQuickRate","onClickShowSetting","onClickHideSetting","onClickExit","onClickDetail","onClickSignup","onItemClicked","bbOn","onSwitch","setSoundOn","onBb","setBbOn","onCloseResultShare","onClosePoster","onClosePosterNo","poster_1","map","ch","matchitem","rankImageStr","bg","cansignup","reshSignUp","bgno","onCheckClick","onResetClick","onClickShare","posterno","poster","tempNode","r_h","AdService_1","NewsService_1","Widget_HomeAdsItem_1","Widget_HomeNewsItem_1","Page_Home","pv_ads","sv_news","pre_newsitem","pre_iditem","btn_exchange","initNews","initAds","checkIsNew","newbies","sc","scrollToTop","addPage","scrollToLeft","onClickSignupMatch","onClickFocusMatch","onClickExchange","onClickInvitee","onClickSign","onClickInvite","PageView","Page_IDCard","editboxIdcardName","editboxIdcardNumber","layoutTop","layoutMiddle","btnNext","label_name1","label_number","step","GPage_IDCard","VerificationSuccess","onEditIdcardName","onEditIdcardNumber","onBtnBack","checkIdCard","idCard","Page_Invite_Friend","nn_page","initPage","allHb","getPosterNet","gg","nn","onShareFriend","getParent","onShareFriendCircle","Widget_InviteeItem_1","Page_Invitee","btn_invite","labelMoney","pf_item","followers","f","isNew","initFenxiao","fenXiao","is_distributor","divide_all","allGet","curDate","today","divideDetail","divide_record","todayGet","divide","onClickWithdraw","Page_Invite","labelInvite","invite_er_wei_ma","qrcodeNode","changeQRCodeUI","Page_Loading","Page_Logout","Page_Main","nodeHome","nodeMatch","nodePerson","nodeHead","onToggleHome","showNodeMatch","Layout","spacingX","initClubView","chs","chs_1","changeNode","onTogglePerson","layout_center","showNodeHome","showNodeClub","showNodePerson","onClickAvatar","faceCheckTest","shareTest","Widget_MatchListItem_1","Page_MatchFocus","sv_list","focusmatchins","insm","Cancel","Page_MatchInfo","nodeInfo","nodeLevel","nodeReward","nodeScore","_init_y","outPos","onToggleInfo","doShow","onToggleLevel","onToggleReward","onToggleScore","onToggleType","Btn_Bg_Click","Alipay_1","Widget_ExchangeItem_1","Page_MatchList","lbl_score","lbl_score1","node_btn","nodeExchange","labelToday","labelTomorrow","sv_match","pf_matchitem","scrollviewExchange","layoutExchange","pf_exchangeitem","_all","title_toggle","_handle","initExchange","toexchange","video_coin","month","setHours","checkindex","toggle","today_start","tomorrow","createOne","mli","wei","Btn_Match_OnClick","Btn_Score_OnClick","Tg_All_OnClick","payMoney","produce_id","productid","ToggleGroup","Widget_SignUpBar_1","Page_MatchPay","widget_SignUpBar","upLayout","lb_lackCoin","zhifulabel","downLayout","coinUse","initTitle","needCost","useItem","itemCoin","_canUse","canUse","use","use_weight","checkIsEnough","uItems","idx","isNeedReturn","unshift","ceItemCoin","ceItem","ceItemNum","rc","leftCoin","allCoin","haveItems","checkRes","notEnoughNum","initView","createUseView","itemCfg","haveNum","useNum","nView","setNum","useItem_1","createZhifuLabel","useItem_2","callBack","onCloseClick","Widget_MatchListItemEd_1","Widget_MatchListItemIng_1","Page_MatchSignup","sv_ing","sv_ed","pf_ing","pf_ed","onToggleMatchBegin","myMatchInfos","onToggleMatchEnd","Page_MyPrizeDetail","itemsId","doRefresh","newItems","onBackClick","Page_MyPrizeInfo","comment_server_Nd","comment_server_line","name_item_lab","name_phone_lab","address_lab","comment_client_lab","comment_server_lab","mData","addressData","infoData","comment_client","comment_server","Page_MyPrize","groupList","groupDetailList","_checkIndex","refreshGroups","update_myprize","Tg_Exchange_OnChanged","resh","eventdata","resList","TransOk","groupRes","resList_1","listData","firstList","threeList","oldList","Exchanging","onPageDetailClick","Page_My","imgAvatar","labelNickname","labelUid","imgAuth","labelCoin","labelTicket","lbl_version","node_func","label_checkAuth","updateUserInfo","changelogo","verify","isEmpty","version","refreshUser","onClickPerson","onClickNotice","onClickSetting","onClickReceivingAddress","onClickMyPrize","onClickCustomerService","onClickInvitationCode","Page_NeiYe","shareContent","inviteDeminCode","labelInviteCode","onSaveClick","Page_Notice","Page_Person","editboxNickname","labelId","labelPhone","onEditNickname","onClickSave","onClickAuth","Page_Register","editNickname","lbl_phonetip","editInviter","lbl_invitertip","btnHead","headNode","heads","getRandomInt","why","invite_code","extra","Edit_Phone_OnEnd","Edit_Inviter_OnEnd","clickHeadCallback","selfTg","onClickHead","ResetPasswordLayer","Page_ServerList","item_prefab","contentNode","chooiseNd","pass_wordNd","pass_word_editbox","serverData","mdata","checkPassWord","closeView","btn_close_onClick","btn_closeShowIng_onClick","Page_Setting","node_match","onClickTerm","onClickStatement","onClickAbout","onClickLogout","onClickDeleteAccount","Page_SignTip","Btn_Invite_OnClick","ItemTask_1","Page_Sign","labelSignCount","scrollviewTask","layoutTask","tg_signs","wgt_tasks","sign_count","next","next_mii","today_sign","sign_time","signday","Page_Start","goNextPage","reviewLogin","checkMaxVersionAndroid","checkMaxVersionIos","phoneCode","getRndInteger","waitTime","serverVersion","isMax","compareVersionMax","onUpdateMaxVersionClick","OS_WINDOWS","Page_Statement","Card_1","Widget_TableMatchTip_1","Widget_Table_Action_1","FaceCheckTool_1","Page_Table","wgt_tableaction","lbl_tablenum","lbl_levelinfo","lbl_levelinfo2","lbl_avg","lbl_num","lbl_rank","lbl_total_pot","lbl_pots","btn_signup","node_light_tip","m_publiccards","self_card","SelfCard","wgt_tmt","orginalBetPos","chipsMovePrefab","m_chipsMove","reviewPrefab","btn_focus","clearAnimalNode","percent_imgPosY","perPercent","lastPercent","curBig_blind","_create_time","reviewNode","centerCardX","lastBbClickTime","self_seat","selfSeatInfo","updateCardStyle","updateCardBgStyle","turnShowCard","identify_success","identify_failed","doInGameHide","refreshTableInfo","closeInHide","check_identify","empty","dttime","blind_deadline","timestr","padStart","refreshNumber","bm_next","avg","getFormatNum","selfseat","refreshPots","onBbChangeClick","clickTimec","isToPot","bigBland","_toPot","toFixed","seatInfo","getCard","resetPublicCards","showTable","insid","focusmatches","setBootomChangeShow","initCenterCardPos","updateSignUp","showSelfCards","selfInfo","m_pkCards","Size","pot","has_allin","allseats","ETexasSeatState","AllIn","total_bet","allin","allin_bet","chipMoveIn","centerPos","ZERO","convertToWorldSpaceAR","labelBet","generalChip","chip","initSendCard","worldpos","dealer_index","selfSeatIndex","TurnSelfCard","clearSeatCardPos","turnThreeCards","_loop_1","this_1","movecallback","pkMove","dealer","displayPublicCards","refreshLight","refreshButtons","node_dealer_tip","st_wd_pos","cur_wd_pos","dtv2","getSeat","userId","beginSignUp","pre_create_time","match_total_point","Btn_Signup_OnClick","waitTimeNode","SelfFoldAnim","pkFoldCard","m_card_panel","temppos","Vec3","pkScale","pkFadeOut","pkSpawn","spawn","removeFoldCard","_seatSafeCheck","doInitSendCard","big_blind_index","small_blind_index","stopTimeCutDown","fromHEX","ETexasAction","Raise","Call","Allin","refreshTip","showCardType","clearTable","Idle","serverTime","_getTip","tip_str","sc_func","refershTip","unschedule","battleRecords","gameresult","_loop_2","recordseatinfo","this_2","piaozi","realIndex","win","setLabelChipNum","lbp","onClickRaise","onClickReview","onReviewData","Btn_Focus_OnClick","onChangeTableLeftClick","onChangeTableRightClick","cur_table_num","Page_Term","ButtonInfo","Page_Tips","btnClose","layoutButton","itemButtons","initUI","BYTE_LABEL","getFormatLabel","bytes","fix","Page_Update","_storagePath","_am","_failCount","_hotupdatePath","manifestUrl","customManifestStr","versionCompareHandle","_nativeAsset","versionA","versionB","vA","vB","AssetsManager","getState","State","UNINITED","nativeUrl","loadLocalManifest","getLocalManifest","isLoaded","setEventCallback","checkCb","responseGetHotUpdateUrl","failed","getEventCode","EventAssetsManager","ERROR_NO_LOCAL_MANIFEST","ERROR_DOWNLOAD_MANIFEST","ERROR_PARSE_MANIFEST","ALREADY_UP_TO_DATE","NEW_VERSION_FOUND","getTotalBytes","updateCb","UPDATE_PROGRESSION","getPercent","getDownloadedFiles","getTotalFiles","UPDATE_FINISHED","UPDATE_FAILED","getMessage","downloadFailedAssets","ERROR_UPDATING","getAssetId","ERROR_DECOMPRESS","searchPaths","getSearchPaths","newPaths","ay","setSearchPaths","restart","modifyAppLoadUrlForManifestFile","newAppHotUpdateUrl","localManifestPath","loadManifest","getStringFromFile","manifestObject","packageUrl","remoteManifestUrl","remoteVersionUrl","afterString","isWritten","writeStringToFile","originManifest","originManifestObject","isDirectoryExist","clearHotFileCache","removeDirectory","Asset","Widget_DemainCode_1","Page_UseItemByCode","widget_DemainCode","onRefreshNumber","itemConf","club","itemId","hxData","generateDeminCode","clearXpInterval","xpInterval","onCheckXiaoPiao","onCancel","isHave","Page_WebView","webview","webNode","resizeWibHeight","WebView","PauseLayer","onClickContinue","PoolManager","pools","WeakMap","poolMgr","PropModel","props","JsonProtoFilter_1","GoogleProtoFilter_1","EProtoType","GProtoFactory","createFilter","GoogleProtoBuffer","QQAd","qq","getSetting","userInfo","sysInfo","button","createUserInfoButton","lineHeight","backgroundColor","textAlign","borderRadius","onTap","avatarUrl","qqAd","Base64_1","GQiNiuTool","QiNiuTool","_local_file_path","_upload_callback","uploadFile","qiniu_filename","localfilepath","onGetUploadToken","upload_token","_download_host","str_b64","_upload","responseText","RankingModel","next_like","count_like","next_refresh","ReViewItem","yourname","card5","card6","userrecord","ECardType","High","OnePair","TwoPair","Tribble","Flush","Straight","FullHouse","Quadruple","StraightFlush","RoyalFlush","Check","Fold","isself","show_all","acion_len","publiccards","ReViewItem_1","ReView","data_scrollview","frontBtn","backBtn","prevBtn","nextBtn","cur","number","adaptWidget","convertReviewTime","onClickFirstPage","onClickEndPage","onClickPrevPage","onClickNextPage","RecordModel","shop_diamond_free","shop_diamond_video","shop_buy","ResTool","cacheAll","dirs","_cacheDir","ResourceManager","onProgress","onComplete","assetManager","loadBundle","preloadDir","resources","loadProp","loadGoods","loadAudio","ReverseCountLabel","_deadline","_pre_text","end_event","_pre_count","_left_time","pause","resume","_refresh","dt_time","ReverseTimerLabel","_num","_forceLen","_max_num","ReverseTimerLabel_1","forcelen","str_one","_sp_rect","tb","_createOne","top_one","bottom_one","tb_1","pto","pbo_1","newAction","RewardModel","receiver","RollingNode","_total_width","rn","addText","addNode","lbl","addSprite","node_comp","_root_layout","_check_move","_temp_items","UCAd_1","WXAd_1","TTAd_1","VivoAd_1","OppoAd_1","QQAd_1","SdkManager","vibrate_on","MOBILE_BROWSER","browserType","BROWSER_TYPE_UC","ucAd","WECHAT_GAME","wxAd","QQ_PLAY","HUAWEI_GAME","XIAOMI_GAME","OPPO_GAME","VIVO_GAME","vivoAd","BYTEDANCE_GAME","ttAd","getAd","getNetworkMode","checkVideoAd","checkInterstitialAd","checkNativeAd","hasLogin","hasShare","hasVideoAd","hasInterstitialAd","hasNativeAd","hasRanking","showBannerAd","hideBannerAd","showVideoAd","showInterstitialAd","showNativeAd","sdkMgr","SEAT_POS","v3","SeatCardInfo","Seat","lbl_cardtype","btnSit","nodeAllin","nodeMark","labelChip","card_panel","prefab_card","bar_timer","node_wait","node_fold","node_raise","node_call","node_allin","node_check","node_gray","node_auto_tip","node_win_tip","tableIdx","_cardsInfoMap","_user_id","_recordseatinfo","_preshowcards","lastChipNum","lastBetNum","sp_blink","_initCardsInfo","cardsInfo","childrenCount","resetCardSize","resetCardStye","setLabelBetNum","showTime","showSeatCard","lefttime","startTimeCutDown","tempPos","cardIndex","onClickSeat","showMove","worldPos","seatIndex","updatePosition","blink","allTime","startOsTime","scheduleCallback","nowOsTime","nowTime","GCardTypeStr","showCardNode","chipNum","betNum","SettingDataModel","shakeOn","music_value","sound_value","voice_value","setting_quick_raise_pre","updateQuickRaiseAft","setting_quick_raise_aft","setMusicValue","m_value","setting_music_value","setSoundValue","s_value","setting_sound_value","setVoiceValue","setMusicOn","setting_musicOn","setting_soundOn","setVoiceOn","setting_voiceOn","setShakeOn","setting_shakeOn","isOn","setting_bbOn","SimpleLogDataModel_1","GShare","Share","_agent","_share_plugin","_callback","anysdk","GSimpleLogDataModel","agentManager","getSharePlugin","setListener","onShareCallBack","ShareResultCode","kShareSuccess","kShareFail","kShareCancel","kShareNetworkError","ShopModel","next_staff","daily_staff","count_staff","daily_diamond_free","daily_diamond_video","count_diamond","GShopTool","ProductInfo","transactionIdentifier","receipt","STInitData","signType","charset","signKey","msgSender","pageUrl","notifyUrl","language","currency","STPayDataModel","OrderNo","OrderAmount","PayType","PayChannel","InstCode","ProductId","ProductName","ProductNum","UnitPrice","ProductDesc","ProductUrl","SellerId","BuyerName","BuyerId","PayerId","BuyerContact","BuyerIp","PayeeId","DepositId","DepositIdType","SharingInfo","Ext1","Ext2","ShopTool","_unHandlePI","_st_plugin","pay","Ios","listener","_on_pay_callback","pd","Google","Android_Sft","dm","errorCode","clearPay","SignLayer","layoutSign","itemTask","SignModel","daily_sign","SignupLayer","labelMatch","_log_list","log_list","_host","_port","_ctr","ctr","_getUrl","_request","ProtoFactory_1","ToServerLog_1","_cacheMsg","_protoType","Json","_heart_beat","outTime","_heart_beat_handler","_cmd_cb_objs","_rcv_heart_beat","_rec_handler","_send_heart_beat_time","_cmd_callbacks","_protocol","_heart_timeout","lastChckTime","_protoFilter","_wb_client","onopen","onmessage","onclose","WebSocket","onMessage","send_heartbeat","registerCmdCallbackObj","cmd_cb_obj","registerCmdCallback","is_only","getGamekeys","_onMessage","stack","GToSvrLog","servertime","_index","strData","_close_and_rc","xtTime","receive_heartbeat","SingleBase","_Instance","SkillWheel","Btn_Skill_OnClick","SpriteNumLabel","spriteAtlas","_string","_numType","_forceNum","SpriteNumLabel_1","_updateShow","numType","forceNum","snl","TTAd","tt","authorize","scope","on_error","offError","on_close","offClose","TaskModel","status_daily","status_main","task_daily","task_main","TeachModel","teach_start","teach_main","teach_task","TexasMatchReward","matchnIns","getImmobilizationReward","getBaseActiveReward","getAdvanceActiveReward","getAdvanceActiveCoinReward","getAdvanceActiveOnlyCoinReward","oneCost","getOneCost","lastReward","rewardDetail","getRewardCoinDetail","allRewardCoin","newRewards","getNewRewards_acc","needAddCoinNum","realLeft","peopleOff","getNewRewards_advance","lastRewardCoin","onlayCoin","newRewad","outReward","rew","rateReward","rwOne","costs","CardTableDataModel_2","_ETexasSeatState","TexasSeatInfo","TexasTableInfo","turnpot","allallinshow","TexasResultPotItem","wins","TexasResult","TexasRecordTableInfo","tr","TexasRecordSeatInfo","negative","TexasTableDataModel","results","rr","getTableInfoByMatchInsId","getSelfSeatIndex","selfseatinfo","ur","TimeLabel","_time_handler","TimeManageer","getServiceTime","timeMgr","_bg","_lbl_tip","showPos","rotateBy","ToServerLog","_logs","sendAll","ETriggerType","_GTriggerCode","_regionTriggers","_conditionTriggers","clearAll","clearRegionTrigger","clearConditionTrigger","triggertype","Region","initRegionTrigger","triggers","callBackObj","triggerInfos","trigger","objInfos","_checkRegion","addObjToRegionTrigger","removeObjInRegionTrigger","o","_isInTrigger","region","prePos","pFuzzyEqual","length_1","triggerInfo","_triggerIn","_triggerOut","onTriggerIn","onTriggerOut","initConditionTrigger","conditiontype","triggerCondition","UCAd","uc","avatar_url","shareAppMessage","query","gravity","createRewardVideoAd","signup_time","sigup","TaskStatus","latest_time","ticket_club","UserModel","role_group","role","wechat","about","exp","vip_level","idcard_time","divide_money","UserManager","_self_user_id","_users","encryptjs","LABEL_NUM","Utils","secretkey","fmt","opt","y+","M+","d+","h+","m+","s+","exec","RegExp","formatTime","second","encrypt","secret","decrypt","parseCsv","delimiter","objPattern","arrData","arrMatches","strMatchedDelimiter","strMatchedValue","pop","csvToJSON","index_key","values","getPowerSum","pow","getSquaresSum","getFibonacci","sqrt","getRoute","checkWeight","weights","list_1","weight","list_2","SplitChipsLevel","u32Stake","u32MiniRaise","isSmall","ChipsStep","i32Stake","i32Step","GetRaiseLevel","VideoLayer","video","remoteURL","VideoPlayer","VivoAd","posId","QiNiuTool_1","Btn_Voice_OnStart","chat","Btn_Voice_OnCancel","Btn_Voice_OnEnd","WXAd","wx","appid","getAccountInfoSync","miniProgram","appId","WalletLayer","EShareTo","EMediaType","EWeiXinCode","WeiXinLoginModel","wxcode","accessToken","refreshToken","openId","roleName","unionId","WeiXinPayModel","partnerId","prepayId","packageValue","nonceStr","timeStamp","WeiXinShareModel","shareTo","mediaType","imagePath","GWXTool","WeiXinTool","_app_id","_app_idsecret","_wx_plugin","_pay_activity","_return_one_bool","_share_cb","_is_support","_on_login_callback","err_info","ErrorNoWeiXin","ErrorNullAPI","ErrorGetAccessToken","ErrorGetUserInfo","ErrorCancle","ErrorDenyByWeixin","wxsm","onCallFunc","str_params","_on_share_callback","Image","wxpm","_getAccessToken","errmsg","_getUserInfo","access_token","refresh_token","_refreshAccessToken","_checkAccessToken","wxlm","headimgurl","FollowerItem","Widget_AddressItem","tg_choose","onChanged","Btn_Edit_OnClick","Btn_Choose_OnClick","viewCell_1","Widget_ChangeItem","lbl_title","lbl_subtitle","lbl_count","lbl_time","lbl_time_end","layout1","layout2","layout3","layout4","node_btnexchange","node_btnexchange_reward","node_btndonate","node_btnuse","node_btnGiveCheck","infoBt","initBagItem","tv","reload","needHideBtn","idex","initlayout","give_nickname","start_nickname","ExOk","ExRewardCoin","ExClub","ExClubOk","RED","Btn_copy","copyStr","el","document","createElement","setAttribute","selection","getSelection","originalRange","rangeCount","getRangeAt","appendChild","selectionStart","selectionEnd","execCommand","removeChild","removeAllRanges","addRange","Btn_Change_Reward_OnClick","Btn_Change_OnClick","Btn_donate_OnClick","Btn_use_OnClick","Btn_Givecheck_OnClick","Widget_CitySearchCupItem","onDetailClick","zdpkDatas_1","Widget_ClubShaiXuanItem","pfb","lastChoiceNode","lastChoiceCity","initData","cityDatas","setData","onDirectChoice","allChildren","onCityChoice","Widget_ClubItem","lbl_clubname","lbl_areaname","btn_join","im_joined","Btn_Join_Click","btn_Detail_click","maxDirect","cityNodes","direct","citys","addClickEventListener","setIsOpen","setShowGray","setCityOpen","onDirectClick","onCityClick","isShowGray","Widget_CupDetailItem","lbl_date","Btn_Detail_Click","str2","Widget_CupItem","Btn_Enter_Click","setClubData","Widget_DemainCode","drawNode","margain","drawNodelen","ctx","Widget_ExchangeItem","btnExchange","loadNetSpriteFrameWithNode","getItemIcon","bagitem","Widget_HomeAdsItem","sp_ad","_ad","Btn_Self_OnClick","startsWith","Widget_HomeNewsItem","labelType","cdt","Widget_InviteeItem","follower","Widget_ItemItem","lbl_state","btn_state","Widget_MatchInfo","lbl_level","lbl_curnum","lbl_prizenum","lbl_blind","lbl_ante","lbl_nextblind","lbl_signendtime","lbl_avcoin","lbl_totalcoin","blindItem","rewardsLen","nextBlindItem","playsers","onUpdate","Widget_MatchListItemEd","lbl_name","lbl_signup","lbl_reward","_usermatchinfo","eumi","Btn_Self_Click","Widget_MatchListItemIng","Widget_MatchListItem","labelStart","nodeRemain","labelRemainTitle","labelRemainDay","labelRemainTime","imgMarkSignin","imgMarkEnd","labelDead","nodeDead","cost","cost_str","reward_str","entt","totalBlind","dayday","day","total_hour","Btn_Match_Click","Widget_NumberFrame","lbNum","maxNum","edSts","onAdd","onSub","Widget_ProductItem","lbl_money","btn_item","Btn_Click","Widget_ScoreItem","jsonDataid","Widget_SignUpBar","itemName","left_kuang","left_label","right_label","Widget_TableMatchTip","lbl_main","_matchIns","Widget_Table_Action","node_showcards0","node_showcards1","btn_menu","btn_setup","btn_review","btn_auto_callfold","btn_auto_any","btn_fold","btn_raise","btn_check","btn_call","btn_allin","btn_auto","lbl_quickbet_tips","lbl_quickbet_bets","lbl_call","free_raise","btn_allin2","_iscallfold","_isany","_preany","showleft","showright","sd_raise","percent_img","_onclickSliderDown","sd_raiseStep","lbl_slider_text","lbl_slider_total","node_raise_top","node_countdown","_slider_height","raise1Vec2","raise2Vec2","raise3Vec2","raise4Vec2","raise5Vec2","_quickRaiseStrategy","handle","onsliderHandDown","onsliderHandUp","onsliderHandCancel","convertChip","dtchip","getBlindMod","startTimeCut","curmax","_getMinRaise","_getMaxRaise","lbl_q_t","lbl_q_b","totalbet","getBigBlind","aa","strchip","tgshowCard","showCardEnd","leftorright","Btn_QuickRaise_OnClick","Btn_AutoCallFold_OnClick","Btn_AutoAny_OnClick","Btn_Fold_OnClick","Btn_Check_OnClick","Btn_Call_OnClick","Btn_Allin_OnClick","_getRaise","Slider_More_OnChanged","slider","evt","Btn_Auto_OnClick","Btn_Bet_OnClick","Btn_ShowLeft_OnClick","Btn_ShowRight_OnClick","onHideFreeRaise","alltime","stopTimeCut","fillRange","Slider","Widget_Time","tm","digits","realDigits","Widget_mathinfo_level_cell","shadow","Widget_serverListItem","lbl_host","lbl_port","item_data","item_index","m_item_data","mIndex","Btn_Connect_OnClick","WithdrawLayer","YkUtils","_obsUrl","game_poster","png_kefu","item_icon","item_icon_reward_share","hbName","reIcon","getItemIconReward","scriptName","clickEventHandler","EventHandler","component","handler","customEventData","clickEvents","version1","version2","valuse1","valuse2","copy","Function","loadResourse","loadPath","typp","pngTp","loadRemote","ext","frame","EFeeType","Prepare","Algo","cipher","Nb","Nr","addRoundKey","subBytes","shiftRows","mixColumns","keyExpansion","Nk","subWord","rotWord","rCon","sBox","rnd","tmp","define","amd","toByteArray","fromByteArray","lookup","revLookup","Arr","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","curByte","tripletToBase64","encodeChunk","uint8","extraBytes","maxChunkLength","len2","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","proto","foo","setPrototypeOf","enumerable","isBuffer","byteOffset","createBuffer","RangeError","buf","encodingOrOffset","TypeError","allocUnsafe","poolSize","fromString","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","fromObject","toPrimitive","assertSize","alloc","checked","allocUnsafeSlow","isEncoding","actual","fromArrayLike","arrayView","numberIsNaN","_isBuffer","compare","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","swap16","swap32","swap64","inspect","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","includes","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","hexSliceLookupTable","newBuf","subarray","checkOffset","readUintLE","readUIntLE","noAssert","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","base64clean","units","Infinity","leadSurrogate","byteArray","hi","lo","dst","constructor","alphabet","i16","changeHead","ITEM_TYPE","PROP","parseItems","parseObject","parseTime","PropConfig","WeightInfo","TASK_TYPE","TaskConfig","TaskInfo","SignConfig","TEACH_TYPE","TeachConfig","layer","TeachInfo","UserInfo","InviteeInfo","CARD_TYPE","TABLE_STATUS","SEAT_STATUS","ACTION","ChargeConfig","price","ExchangeConfig","prop","MatchConfig","cycle_day","cycle_time","reentry_cost","reentry_count","reentry_blind","player_min","player_max","RoomConfig","interval_levelup","match_limit","blind_limit","RoomInfo","Pot","seat_index","GameResult","RecordSeat","Record","match_start_time","match_name","small_blink_index","definition","petal","plaintext","nBits","blockSize","utf8Encode","nBytes","pwBytes","counterBlock","nonce","nonceMs","nonceSec","nonceRnd","ctrTxt","keySchedule","blockCount","ciphertxt","cipherCntr","blockLength","cipherChar","ciphertext","base64Encode","base64Decode","nBlocks","ct","plaintxt","plaintxtByte","utf8Decode","unescape","encodeURIComponent","decodeURIComponent","escape","btoa","atob","isLE","mLen","eLen","eMax","eBias","NaN","rt","LN2","re","not_string","not_bool","not_type","not_primitive","numeric_arg","not_json","modulo","placeholder","key_access","index_access","sprintf","sprintf_format","sprintf_parse","vsprintf","argv","parse_tree","cursor","tree_length","ph","pad","pad_character","pad_length","is_positive","param_no","precision","toExponential","toPrecision","pad_char","align","sprintf_cache","_fmt","arg_names","SyntaxError","field_list","replacement_field","field_match","ScrollModel","Horizontal","Vertical","ScrollType","Single","Multiple","scrollEvents","_cell","cellPool","cellData","cellCount","childCount","maxStartIndex","anchorCenterX","anchorCenterY","anchorLeftX","anchorTopY","cellAnchorX","cellAnchorY","customSize","cellAccumSizes","cellSizes","cellSize","updateRefreshOnce","updateRefreshForce","updateCellsOn","updateCellsOnce","initPromiseBack","_delegate","onScrollBegin","onScrollEnd","getCellCount","setCellCount","getCellData","setCellData","getCellRange","tvIndex","refreshScrollBar","_updateScrollBar","_getHowMuchOutOfBoundary","refreshSync","stopRefresh","updateCells","CC_DEBUG","cell","getViewCell","stopAutoScroll","scrollToOrigin","updateCellCount","reloadCell","insert","_tvIndex","getCell","putCell","initCell","com","uninit","uninitCell","getClassByName","getDefaultCellSize","warn","dele","getDefaultCellAnchor","getAnchorPoint","getScrollLengh","scrollLen","defaultCellSize","viewLen","hasOwnProperty","accumSize","getSize","accumIndex","cellAnchor","getStartIndex","updateCellRange","cellAccumLen","startSize","updateCell","keepCells","changeCells","keepPoint","changePoint","sortAllChildren","timeInSecond","attenuated","getPerScrollOffset","scrollToPerOffset","scrollToBottom","scrollToRight","visible","override","viewCell","华东","华北","华中","华南","东北","西南","西北"],"mappings":"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AA,GAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,MAMA,EAAA,GAAA,KAAA,OAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAMA,EAAA,GAAA,KAAA,IAAA,GAAA,KAAA,MAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,IAAA,IAAA,MAMA,EAAA,GAAA,KAAA,IAAA,GAAA,KAAA,MAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,IAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,IAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,IAAA,KAAA,OAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,IAAA,KAAA,OAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,IAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,IAAA,KAAA,OAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,IAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,IAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAMA,EAAA,IAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,IAAA,KAAA,OAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,GAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,IAAA,KAAA,KAAA,GAAA,KAAA,OAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAMA,EAAA,GAAA,KAAA,KAAA,IAAA,KAAA,OAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,EAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MA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AAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,MAAA,MAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA;WAEJ;UACI1d,KAAA;UACA+T,KAAA;UACA2J,MAAA,EAAA,OAAA,QAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA;WAEJ;UACI1d,KAAA;UACA+T,KAAA;UACA2J,MAAA,EAAA,OAAA,OAAA,MAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA;WAEJ;UACI1d,KAAA;UACA+T,KAAA;UACA2J,MAAA,EAAA,OAAA,OAAA,OAAA,MAAA,OAAA,OAAA,MAAA,OAAA,OAAA,MAAA,MAAA,MAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA;WAEJ;UACI1d,KAAA;UACA+T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,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAAA,MAAA,MAAA;WAGJ;UACI1d,KAAA;UACA+T,KAAA;UACA2J,MAAA,EAAA,OAAA,MAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA;WAGJ;UACI1d,KAAA;UACA+T,KAAA;UACA2J,MAAA,EAAA,OAAA,QAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,MAAA,MAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA;WAGJ;UACI1d,KAAA;UACA+T,KAAA;UACA2J,MAAA,EAAA,OAAA,QAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA;WAGJ;UACI1d,KAAA;UACA+T,KAAA;UACA2J,MAAA,EAAA,OAAA,OAAA,MAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA;WAGJ;UACI1d,KAAA;UACA+T,KAAA;UACA2J,MAAA,EAAA,OAAA,OAAA,OAAA,MAAA,OAAA,OAAA,MAAA,OAAA,OAAA,MAAA,MAAA,MAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA;WAGJ;UACI1d,KAAA;UACA+T,KAAA;UACA2J,MAAA,EAAA,OAAA,MAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,OAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA;WAGJ;UACI1d,KAAA;UACA+T,KAAA;UACA2J,MAAA,EAAA,MAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MA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","sourcesContent":["import { SimpleWebServer } from \"../Framework/Net/SimpleWebServer\";\r\n\r\nexport let GAccountHttp:AccountHttp=null\r\nexport class AccountHttp extends SimpleWebServer\r\n{\r\n}\r\nGAccountHttp = new AccountHttp()","import { GHallHttp } from \"../Net/HallHttp\"\r\n\r\nexport class AdModel\r\n{\r\n    id=0\r\n    title=\"\"\r\n    icon=\"\"\r\n    url=\"\"\r\n    info=\"\"\r\n    create_time=-1\r\n}\r\nclass AdService\r\n{\r\n    protected _ads:AdModel[]=[]\r\n    get ads()\r\n    {\r\n        return this._ads\r\n    }\r\n    async init()\r\n    {\r\n        let res = await GHallHttp.request(\"allads\")\r\n        this._ads=res.ads||[]\r\n        return this._ads\r\n    }\r\n}\r\nexport let GAdSer=new AdService()","import { GHelper } from \"../Logic/Helper\";\r\nimport { GPageMgr } from \"../View/Page/PageManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nenum EAjustPosType\r\n{\r\n    None,\r\n    Left,\r\n    Top,\r\n    Right,\r\n    Bottom,\r\n    LeftTop,\r\n    RightTop,\r\n    RightBottom,\r\n    LeftBottom\r\n}\r\n\r\nenum EAjustScaleType\r\n{\r\n    None,\r\n    Width,\r\n    Height,\r\n    All,\r\n    DtHeight\r\n}\r\n\r\n@ccclass\r\nexport class Ajust extends cc.Component\r\n{\r\n    protected _scale=-1\r\n    get scale()\r\n    {\r\n        if(this._scale!=-1)\r\n        {\r\n            return this._scale\r\n        }\r\n        //获取当前游戏窗口大小\r\n        let frameSize = cc.view.getFrameSize()\r\n        //设计分辨率\r\n        let designSize = cc.view.getDesignResolutionSize()\r\n        let sw=designSize.width/frameSize.width\r\n        //let sh=designSize.height/frameSize.height\r\n        this._scale=sw//Math.max(sw,sh)\r\n        return this._scale\r\n    }\r\n    protected _dtw=-1\r\n    get dtWidth()\r\n    {\r\n        if(this._dtw!=-1)\r\n        {\r\n            return this._dtw\r\n        }\r\n        //获取当前游戏窗口大小\r\n        let frameSize = cc.view.getFrameSize()\r\n        //设计分辨率\r\n        let designSize = cc.view.getDesignResolutionSize()\r\n        this._dtw = Math.abs(frameSize.width*this.scale - designSize.width)\r\n        return this._dtw\r\n    }\r\n    protected _dth=-1\r\n    get dtHeight()\r\n    {\r\n        if(this._dth!=-1)\r\n        {\r\n            return this._dth\r\n        }\r\n        //获取当前游戏窗口大小\r\n        let frameSize = cc.view.getFrameSize()\r\n        //设计分辨率\r\n        let designSize = cc.view.getDesignResolutionSize()\r\n        this._dth = frameSize.height*this.scale - designSize.height\r\n        return this._dth\r\n    }\r\n    get lh()\r\n    {\r\n        //获取当前游戏窗口大小\r\n        let frameSize = cc.view.getFrameSize()\r\n        let safeSize = cc.sys.getSafeAreaRect()\r\n        let visibleSize = cc.view.getVisibleSize()\r\n        if(safeSize.size.equals(visibleSize))\r\n        {\r\n            return {h:0,w:0}\r\n        }\r\n        let lh={h:(frameSize.height*this.scale-safeSize.height),w:(frameSize.width*this.scale-safeSize.width)}\r\n        if(cc.sys.os==cc.sys.OS_IOS)\r\n        {\r\n            lh={h:Math.abs(safeSize.y),w:Math.abs(safeSize.x)}\r\n        }\r\n        return lh\r\n    }\r\n    get info()\r\n    {\r\n        //获取当前游戏窗口大小\r\n        let frameSize = cc.view.getFrameSize()\r\n        let ratio = cc.view.getDevicePixelRatio()\r\n        //设计分辨率\r\n        let designSize = cc.view.getDesignResolutionSize()\r\n        let safeSize = cc.sys.getSafeAreaRect()\r\n        let visibleSize = cc.view.getVisibleSize()\r\n        let winSize = cc.winSize\r\n        let data = {\r\n            scale:this.scale,\r\n            lb:this.lh,\r\n            frameSize,\r\n            designSize,\r\n            safeSize,\r\n            visibleSize,\r\n            winSize,\r\n            ratio\r\n        }\r\n        return JSON.stringify(data)\r\n    }\r\n    @property({type:cc.Enum(EAjustPosType)})\r\n    type=EAjustPosType.None\r\n    @property({type:cc.Enum(EAjustScaleType)})\r\n    scaleType=EAjustScaleType.None\r\n    onLoad()\r\n    {\r\n        let dty_ipad = (1-GPageMgr.node.scale)*1344/2\r\n        let lh = this.lh\r\n        switch(this.type)\r\n        {\r\n            case EAjustPosType.Left:\r\n            {\r\n                this.node.x-=this.dtWidth/2\r\n                break\r\n            }\r\n            case EAjustPosType.Top:\r\n            {\r\n                this.node.y+=this.dtHeight/2-lh.h+dty_ipad\r\n                break\r\n            }\r\n            case EAjustPosType.Right:\r\n            {\r\n                this.node.x+=this.dtWidth/2\r\n                break\r\n            }\r\n            case EAjustPosType.Bottom:\r\n            {\r\n                this.node.y-=this.dtHeight/2+dty_ipad\r\n                break\r\n            }\r\n            case EAjustPosType.LeftTop:\r\n            {\r\n                this.node.x-=this.dtWidth/2\r\n                this.node.y+=this.dtHeight/2-lh.h+dty_ipad\r\n                break\r\n            }\r\n            case EAjustPosType.RightTop:\r\n            {\r\n                this.node.x+=this.dtWidth/2\r\n                this.node.y+=this.dtHeight/2-lh.h+dty_ipad\r\n                break\r\n            }\r\n            case EAjustPosType.RightBottom:\r\n            {\r\n                this.node.x+=this.dtWidth/2\r\n                this.node.y-=this.dtHeight/2+dty_ipad\r\n                break\r\n            }\r\n            case EAjustPosType.LeftBottom:\r\n            {\r\n                this.node.x-=this.dtWidth/2\r\n                this.node.y-=this.dtHeight/2+dty_ipad\r\n                break\r\n            }\r\n        }\r\n        //获取当前游戏窗口大小\r\n        let frameSize = cc.view.getFrameSize()\r\n        //设计分辨率\r\n        let designSize = cc.view.getDesignResolutionSize()\r\n        switch(this.scaleType)\r\n        {\r\n            case EAjustScaleType.Width:\r\n            {\r\n                let s = designSize.width/(frameSize.width*this.scale)\r\n                this.node.width/=s\r\n                break\r\n            }\r\n            case EAjustScaleType.Height:\r\n            {\r\n                let s = designSize.height/(frameSize.height*this.scale)\r\n                this.node.height/=s\r\n                break\r\n            }\r\n            case EAjustScaleType.All:\r\n            {\r\n                let sw = designSize.width/(frameSize.width*this.scale)\r\n                let sh = designSize.height/(frameSize.height*this.scale)\r\n                this.node.height/=Math.min(sw,sh)\r\n                this.node.width/=Math.min(sw,sh)\r\n                this.node.height+=dty_ipad*2\r\n                break\r\n            }\r\n            case EAjustScaleType.DtHeight:\r\n                {\r\n                    this.node.height+=this.dtHeight-lh.h+dty_ipad*2\r\n                }\r\n        }\r\n    }\r\n}\r\n","import { GUserMgr } from \"../../../Logic/UserManager\";\r\nimport { GHallHttp } from \"../../../Net/HallHttp\";\r\nimport { GMatchSer } from \"../../../Service/MatchService\";\r\nimport { GOrderSer } from \"../../../Service/OrderService\";\r\nimport { GMsgCenter } from \"../../../utils/MessageCenter\";\r\nimport { GHelper } from \"../../Logic/Helper\";\r\n//支付宝支付接口\r\nclass Alipay {\r\n    async alipayEvent(produceid) {\r\n        var self = this;\r\n        console.log(\"-------------------\");\r\n        //let order = await GHallHttp.request(\"getorder\", { product_id: produceid }, \"order\")\r\n\r\n        let orderstr = await GOrderSer.getOrderInfo(produceid)\r\n        console.log(\"<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\");\r\n        if (cc.sys.os === cc.sys.OS_ANDROID) {\r\n            //如果响应部位空的话\r\n            console.log(\"response is \" + orderstr)\r\n            var payResult = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"payV2\", \"(Ljava/lang/String;)Ljava/lang/String;\", orderstr);\r\n            console.log(\"payResult is \" + payResult);\r\n            //当返回的支付结果不是空字符串的时候\r\n            if (payResult === \"\") {\r\n                //每0.5秒请求一次\r\n                let handler = setInterval(()=> {\r\n                    var isPay = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"isPaySuccess\", \"()Z\");\r\n                    if (isPay) {\r\n                        console.log(\"is pay is \" + isPay);\r\n                        //如果支付状态为true的话获得支付信息\r\n                        payResult = jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"getPayResult\", \"()Ljava/lang/String;\");\r\n                        console.log(\"payResult is \" + payResult);\r\n                        //打印payResult\r\n                        console.log(\"---------->>>>>>>>>>>>>>>payResult is \" + payResult);\r\n                        //将支付宝返回的数据传给服务器\r\n                        self.payResultFun(payResult);\r\n                        clearInterval(handler)\r\n                    }\r\n                }, 500)\r\n            }\r\n            else {\r\n                //如果刚开始请求的时候是成功的话将支付信息返回给服务器端\r\n                self.payResultFun(payResult);\r\n            }\r\n        }\r\n        else if (cc.sys.os == cc.sys.OS_IOS)\r\n        {\r\n            //console.log(\"该平台暂时不支持支付功能\");\r\n            jsb.reflection.callStaticMethod(\"AppController\", \"CallAlipay:\", orderstr.toString());\r\n        }\r\n    }\r\n    //向服务器发送支付结果\r\n    async payResultFun(payResult) {\r\n        console.log(\"<<<<<<<<<<<<<<<<<<<<< payResult is \" + payResult);\r\n        console.log(\"type of payResult is \" + typeof (payResult));\r\n        // let rs = await GHallHttp.request(\"alipaycomplete\",{result:payResult},\"order\")\r\n        // if (rs.errcode&&rs.errcode.id!=20012) {\r\n        //     GHelper.showTip(JSON.stringify(rs.errcode));\r\n        // }\r\n        GHallHttp.request(\"getuser\").then((rs)=>\r\n        {\r\n            GUserMgr.addOneUser(rs.user);\r\n            GMsgCenter.send(\"updateuserinfo\");\r\n            GMsgCenter.send(\"coinchanged\")\r\n        })\r\n    }\r\n}\r\nexport let GAlipay = new Alipay()\r\nwindow[\"payResultFun\"] = (obj)=> {\r\n    GAlipay.payResultFun(obj);\r\n}","import {GHelper} from \"../Logic/Helper\"\r\n\r\nconst {ccclass, property} = cc._decorator\r\n\r\n@ccclass\r\nexport class AlphaReverseTimerLabel extends cc.Component{\r\n    _nums: {sp:cc.Sprite,str:string}[]\r\n    _root:cc.Node\r\n    @property({})\r\n    selectedFont:number= 10\r\n    @property({})\r\n    num_spacing:number= -9\r\n    _interval_handler:number\r\n    _seconds:number= 0\r\n    get seconds() \r\n    {\r\n        return this._seconds\r\n    }\r\n    set seconds(value) \r\n    {\r\n        if(this._seconds===value)\r\n        {\r\n            return\r\n        }\r\n        this._seconds = value\r\n        if(this._isOnLoadCalled)//有尺寸表示已经onload过了现在立刻刷新，，否则等onload去处理就好\r\n        {\r\n            this._init(this._getNumStr())\r\n        }\r\n        if(this._interval_handler)//表示正在倒计时的过程中修改了数据所以要重新run\r\n        {\r\n            this.run()\r\n        }\r\n    }\r\n    end_callback:any//时间为0的时候的回调\r\n    _init_callback:any\r\n    static create(seconds?:number,font_num?:number)\r\n    {\r\n        let rtl = <AlphaReverseTimerLabel>GHelper.createNode(AlphaReverseTimerLabel)\r\n        rtl._seconds = seconds || 0\r\n        rtl.selectedFont = font_num || 10\r\n        return rtl\r\n    }\r\n    _getNumStr(num?:number):string\r\n    {\r\n        if(typeof num===\"undefined\")\r\n        {\r\n            num = this._seconds\r\n        }\r\n        let m:any = Math.floor(num/60)\r\n        let s:any = num%60\r\n        if(m<10)\r\n        {\r\n            m = \"0\"+m\r\n        }\r\n        if(s<10)\r\n        {\r\n            s = \"0\"+s\r\n        }\r\n        return m+\".\"+s\r\n    }\r\n    // use this for initialization\r\n    onLoad() \r\n    {\r\n        this._root = new cc.Node()\r\n        this._root.parent = this.node\r\n        this._init(this._getNumStr(0))\r\n        this._changeTo(this._seconds)\r\n    }\r\n    _init(numStr)\r\n    {\r\n        this._root.removeAllChildren()\r\n        let length = numStr.length\r\n        let pre_path = \"Image/Num/\" + this.selectedFont + \"_\"\r\n        let x = 0\r\n        this._nums = []\r\n        for(let i = 0; i<length; ++i)\r\n        {\r\n            let sp = GHelper.createSprite(pre_path+numStr[i])\r\n            this._nums.push({sp:sp,str:numStr[i]})\r\n            sp.node.parent = this._root\r\n            if(i==0)\r\n            {\r\n                sp.node.x=x\r\n                x = sp.node.width/2+this.num_spacing\r\n            }\r\n            else\r\n            {\r\n                sp.node.x=x+sp.node.width/2\r\n                x += sp.node.width + this.num_spacing \r\n            }\r\n        }\r\n        if(this._init_callback)\r\n        {\r\n            this._init_callback()\r\n        }\r\n    }\r\n    stop()\r\n    {\r\n        if(this._interval_handler)\r\n        {\r\n            clearInterval(this._interval_handler)\r\n            this._interval_handler = null\r\n        }\r\n    }\r\n    run()\r\n    {\r\n        if(this._isOnLoadCalled)\r\n        {\r\n            this._run()\r\n        }\r\n        else\r\n        {\r\n            this._init_callback = this._run.bind(this)\r\n        }\r\n    }\r\n    _run()\r\n    {\r\n        this._init_callback = null\r\n        let self = this\r\n        let startTime = GHelper.getLocalTime()\r\n        let endTime = startTime+this._seconds*1000\r\n        if(this._interval_handler)\r\n        {\r\n            clearInterval(this._interval_handler)\r\n            this._interval_handler = null\r\n        }\r\n        if(this._seconds<=0)\r\n        {\r\n            return\r\n        }\r\n        this._interval_handler = setInterval(function(){\r\n            let curTime = GHelper.getLocalTime()\r\n            let curNum = Math.floor((endTime-curTime)/1000)\r\n            curNum = curNum>0?curNum:0\r\n            if(curNum!=self._seconds)\r\n            {\r\n                self._changeTo(curNum)\r\n                self._seconds = curNum\r\n            }\r\n            if(curNum<=0)\r\n            {\r\n                if(self.end_callback)\r\n                {\r\n                    if(self._interval_handler)\r\n                    {\r\n                        clearInterval(self._interval_handler)\r\n                        self._interval_handler = null\r\n                    }\r\n                    self.end_callback()\r\n                }\r\n            }\r\n        },1000)\r\n    }\r\n    _changeTo(num)\r\n    {\r\n        let numStr = this._getNumStr(num)\r\n        let length = numStr.length\r\n        for(let i = 0; i<length; ++i)\r\n        {\r\n            this._changeOne(numStr,i)\r\n        }\r\n    }\r\n    _changeOne(numStr,i)\r\n    {\r\n        let str_num = numStr[i]\r\n        let pre = this._nums[i]\r\n        if(pre.str != str_num)\r\n        {\r\n            let pre_path = \"Image/Num/\" + this.selectedFont + \"_\"\r\n            let sp = GHelper.createSprite(pre_path+str_num)\r\n            this._nums[i] = {sp:sp,str:str_num}\r\n            sp.node.parent = this._root\r\n            sp.node.opacity = 0\r\n            sp.node.x = pre.sp.node.x\r\n            sp.node.runAction(cc.fadeTo(0.3,255))\r\n            pre.sp.node.runAction(cc.sequence(\r\n                                    cc.fadeTo(0.3,0),\r\n                                    cc.removeSelf())\r\n                                    )\r\n        }\r\n    }\r\n    onDestroy()\r\n    {\r\n        if(this._interval_handler)\r\n        {\r\n            clearInterval(this._interval_handler)\r\n            this._interval_handler = null\r\n        }\r\n    }\r\n}","import { GHelper } from \"../Framework/Logic/Helper\";\r\nimport { GUserMgr } from \"../Logic/UserManager\";\r\nimport { GAccountHttp } from \"../Net/AccountHttp\";\r\nimport { GHallHttp } from \"../Net/HallHttp\";\r\nimport { GNetGameTexas } from \"../Net/NetGameTexas\";\r\nimport { GOrderHttp } from \"../Net/OrderHttp\";\r\nimport { GItemCfg } from \"../Service/ItemService\";\r\nimport { GMatchSer, MatchItemInfo } from \"../Service/MatchService\";\r\nimport { GOrderSer } from \"../Service/OrderService\";\r\n\r\nexport enum EAccountFrom\r\n{\r\n    Guest=0,\r\n    OpenSocial,\r\n    WeChat,\r\n    QQ,\r\n    Phone,\r\n    Email,\r\n    Name,\r\n    QuickPhone,\r\n    Apple,\r\n    Google\r\n}\r\nexport class AccountModel\r\n{\r\n    id: number;\r\n    phone: string;\r\n    email: string;\r\n    name: string;\r\n    password: string;\r\n    unionid: string;\r\n    openid: string;\r\n    create_time: number;\r\n    create_ip: string;\r\n    login_time: number;\r\n    login_ip: string;\r\n    from: number;\r\n    state: number;\r\n}\r\nclass AppDataModel\r\n{\r\n    account:AccountModel=null\r\n    token=\"\"\r\n    account_server={host:\"192.168.0.106\",port:6001}\r\n    hall_server={host:\"192.168.0.106\",port:6001}\r\n    texas_server={host:\"192.168.0.106\",port:6101}\r\n    texas_servers=[{host:\"192.168.0.106\",port:6101},{host:\"192.168.0.106\",port:6101}]\r\n    //最近获取验证码的时间\r\n    last_get_code=0\r\n    signs:MatchItemInfo[]=[]\r\n    quick_test=false\r\n    auto_login=true\r\n    update = true\r\n\r\n    isShowServerList = false;\r\n    checkUpdate = true  // 是否检测更新\r\n\r\n\r\n    getItemDesc(mii:MatchItemInfo)\r\n    {\r\n        if(mii.id==-99)\r\n        {\r\n            return \"获得\" + mii.count+\"游戏点\"\r\n        }\r\n        let item=GItemCfg.getItemById(mii.id)\r\n        return \"获得\" + mii.count+\"x\"+item.name\r\n    }\r\n    async onLogin(unionid:string,openid:string,from:EAccountFrom)\r\n    {\r\n        return new Promise(async (resolve,reject)=>\r\n        {\r\n            let msg = {unionid,openid,from}\r\n            let res = await GAccountHttp.request(\"thirdlogin\",msg)\r\n            if(res.errcode)\r\n            {\r\n                GHelper.showTip(JSON.stringify(res.errcode))\r\n                resolve(false)\r\n                return\r\n            }\r\n            cc.sys.localStorage.setItem(\"login_data\",JSON.stringify(msg))\r\n            this.account=res.account\r\n            this.hall_server=res.hall\r\n            let allhall:any[]=res.allhall\r\n            if(allhall&&allhall.length>0)\r\n            {\r\n                let index = this.account.id%allhall.length\r\n                this.hall_server=allhall[index]\r\n            }\r\n            this.texas_server=res.texas\r\n            this.texas_servers=res.alltexas\r\n            this.token=res.token\r\n            GHallHttp.init(\"logic\",this.hall_server.host,this.hall_server.port)\r\n            GOrderHttp.init(\"order\",this.hall_server.host,this.hall_server.port)\r\n            res = await GHallHttp.request(\"login\",{account_id:this.account.id,token:this.token})\r\n            GUserMgr.addOneUser(res.user)\r\n            GUserMgr.init(res.user.id)\r\n            GHallHttp.session_id=res.session_id\r\n            GOrderHttp.session_id=res.session_id\r\n            let i=4\r\n            let _tryEnd=()=>\r\n            {\r\n                --i\r\n                if(i==0)\r\n                {\r\n                    resolve(true)\r\n                }\r\n            }\r\n            \r\n            GMatchSer.init().then(()=>\r\n            {\r\n                _tryEnd()\r\n            })\r\n            GItemCfg.init().then(()=>\r\n            {\r\n                _tryEnd()\r\n            })\r\n            GHallHttp.request(\"getsignconfig\").then((rs)=>\r\n            {\r\n                this.signs = rs.signs\r\n                _tryEnd()\r\n            })\r\n            GOrderSer.init().then(()=>\r\n            {\r\n                _tryEnd()\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport let GAppDM=new AppDataModel()","﻿import {core} from \"./Base\"\r\n\r\nclass AStarNode\r\n{\r\n    ParentNode: AStarNode\r\n    CurTilePos: cc.Vec2\r\n    G: number=0\r\n    H: number=0\r\n    constructor(node:AStarNode, tilePos)\r\n    {\r\n        this.ParentNode = node;\r\n        this.CurTilePos = tilePos;\r\n        if (this.ParentNode)\r\n        {\r\n            this.G = this.ParentNode.G + 10;\r\n        }\r\n        else\r\n        {\r\n            this.G = 0;\r\n        }\r\n    }\r\n    F()\r\n    {\r\n        return this.G + this.H;\r\n    }\r\n}\r\n\r\nexport class GAStar\r\n{\r\n    protected _markList: AStarNode[]\r\n    protected _markedList: AStarNode[]\r\n    protected _routes: cc.Vec2[]\r\n    protected _maxTileWidth: number=0\r\n    protected _maxTileHeight: number=0\r\n    protected _mapData: any[]\r\n    getRoutes(srcTilePos:cc.Vec2, tarTilePos:cc.Vec2, mapData, maxTileWidth, maxTileHeight)\r\n    {\r\n        if(srcTilePos.equals(tarTilePos))\r\n        {\r\n            return []\r\n        }\r\n        this._markList = []\r\n        this._markedList = []\r\n        this._routes = []\r\n        this._mapData = mapData\r\n        this._maxTileWidth = maxTileWidth\r\n        this._maxTileHeight = maxTileHeight\r\n        let tp = srcTilePos.sub(tarTilePos)\r\n        let node = new AStarNode(null, srcTilePos)\r\n        node.H = (Math.abs(tp.x) + Math.abs(tp.y)) * 14\r\n        this._markList.push(node)\r\n\r\n        node = this._routing(srcTilePos, tarTilePos)\r\n        while (node)\r\n        {\r\n            this._routes.push(node.CurTilePos)\r\n            node = node.ParentNode\r\n        }\r\n        this._routes.reverse()\r\n        this._routes.shift()\r\n        return this._routes\r\n    }\r\n    protected _routing(srcTilePos, tarTilePos)\r\n    {\r\n        if (this._markList.length <= 0)//已经没有节点，是死路根本无法到达\r\n        {\r\n            return null;\r\n        }\r\n\r\n        let node = this._markList[0];\r\n        let curIndex = 0;\r\n        for (let i = 1; i < this._markList.length; ++i)\r\n        {\r\n            if (node.F() > this._markList[i].F())\r\n            {\r\n                node = this._markList[i];\r\n                curIndex = i;\r\n            }\r\n            if (this._markList[i].CurTilePos.equals(tarTilePos))//到达终点\r\n            {\r\n                return this._markList[i];\r\n            }\r\n        }\r\n\r\n        core.removeAt(this._markList,curIndex)\r\n        this._markedList.push(node);\r\n\r\n        let tp = cc.v2(0, 0);\r\n        //上\r\n        tp.x = node.CurTilePos.x; tp.y = node.CurTilePos.y + 1;\r\n        this._addToMark(tp, tarTilePos, node);\r\n        //下\r\n        tp = cc.v2(0, 0);\r\n        tp.x = node.CurTilePos.x; tp.y = node.CurTilePos.y - 1;\r\n        this._addToMark(tp, tarTilePos, node);\r\n        //左\r\n        tp = cc.v2(0, 0);\r\n        tp.x = node.CurTilePos.x - 1; tp.y = node.CurTilePos.y;\r\n        this._addToMark(tp, tarTilePos, node);\r\n        //右\r\n        tp = cc.v2(0, 0);\r\n        tp.x = node.CurTilePos.x + 1; tp.y = node.CurTilePos.y;\r\n        this._addToMark(tp, tarTilePos, node);\r\n\r\n        return this._routing(srcTilePos, tarTilePos);\r\n    }\r\n    protected _isInMark(tilePos)\r\n    {\r\n        for (let i = 0; i < this._markList.length; ++i)\r\n        {\r\n            if (this._markList[i].CurTilePos.equals(tilePos))\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        for (let i = 0; i < this._markedList.length; ++i)\r\n        {\r\n            if (this._markedList[i].CurTilePos.equals(tilePos))\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    protected _addToMark(curTilePos, tarTilePos, parentAStarNode:AStarNode)\r\n    {\r\n        //无地图数据\r\n        if (curTilePos.x < 0 || curTilePos.y < 0\r\n            || !this._mapData[curTilePos.y] || !this._mapData[curTilePos.y][curTilePos.x]\r\n            || this._mapData[curTilePos.y][curTilePos.x] != 1)\r\n        {\r\n            return\r\n        }\r\n        if (!this._isInMark(curTilePos))//未曾添加\r\n        {\r\n            let newNode = new AStarNode(parentAStarNode, curTilePos)\r\n            let temp_tp = parentAStarNode.CurTilePos.sub(tarTilePos)\r\n            newNode.H = (Math.abs(temp_tp.x) + Math.abs(temp_tp.y)) * 10\r\n            this._markList.push(newNode)\r\n        }\r\n    }\r\n}","import {GSettingDM} from \"../DataModel/SettingDataModel\"\r\nimport { GHelper } from \"./Helper\";\r\nexport let GAudioTool:AudioTool=null\r\n\r\n \r\nclass AudioTool  \r\n{\r\n    protected _musicId=0\r\n    protected _m_v=1\r\n    protected _s_v=1\r\n    protected _v_v=1\r\n    protected _lock=0\r\n    protected _cur_music = null\r\n\r\n    playMusic(path,loop=true)\r\n    {\r\n        if(!path)\r\n        {\r\n            return\r\n        }\r\n        this._cur_music = path\r\n        if(!GSettingDM.musicOn)\r\n        {\r\n            return\r\n        }\r\n        if(loop === undefined)\r\n        {\r\n            loop = true\r\n        }\r\n        this.stopMusic()\r\n        cc.loader.loadRes(path, cc.AudioClip, (err, clip)=>{\r\n            if(err)\r\n            {\r\n                console.log(\"err =\" + JSON.stringify(err))\r\n                return\r\n            }\r\n            this._musicId = cc.audioEngine.play(clip, loop, this._m_v)\r\n        })\r\n    }\r\n    resumeMusic()\r\n    {\r\n        this.playMusic(this._cur_music)\r\n    }\r\n    setMusicVolume(v)\r\n    {\r\n        this._m_v = v\r\n        if(this._musicId)\r\n        {\r\n            cc.audioEngine.setVolume(this._musicId,v)\r\n        }\r\n    }\r\n    lockMusic()\r\n    {\r\n        ++this._lock\r\n        if(this._lock>0)\r\n        {\r\n            this.setMusicVolume(0)\r\n        }\r\n    }\r\n    unlockMusic()\r\n    {\r\n        --this._lock\r\n        if(this._lock<=0)\r\n        {\r\n            this.setMusicVolume(this._m_v)\r\n        }\r\n    }\r\n    setSoundVolume(s)\r\n    {\r\n        this._s_v = s\r\n    }\r\n    resetEffect()\r\n    {\r\n        cc.audioEngine.stopAllEffects();\r\n        this._allIn_id =-1;\r\n    }\r\n\r\n    _allIn_id = -1;\r\n\r\n    stopAllIn()\r\n    {\r\n        cc.audioEngine.stopEffect( this._allIn_id)\r\n        this._allIn_id  = -1;\r\n    }\r\n    playEffect(path,isAllin?)\r\n    {\r\n        if(!GSettingDM.soundOn)\r\n        {\r\n            return\r\n        }\r\n        let self = this;\r\n        cc.loader.loadRes(path, cc.AudioClip, (err, clip)=>{\r\n            if(err)\r\n            {\r\n                console.log(\"err =\" + JSON.stringify(err))\r\n                return\r\n            }\r\n            var audioID = cc.audioEngine.playEffect(clip,false)\r\n            if(isAllin)\r\n            {\r\n                self._allIn_id = audioID;\r\n            }\r\n        })\r\n    }\r\n    playSound(path,fun?)\r\n    {\r\n        //path = cc.url.raw(\"resources/\"+path)\r\n        if(!GSettingDM.soundOn)\r\n        {\r\n            return\r\n        }\r\n        //return cc.audioEngine.play(path,false,this._s_v)\r\n        cc.loader.loadRes(path, cc.AudioClip, (err, clip)=>{\r\n            if(err)\r\n            {\r\n                console.log(\"err =\" + JSON.stringify(err))\r\n                return\r\n            }\r\n            var audioID = cc.audioEngine.play(clip, false, this._s_v)\r\n            if(fun)\r\n            {\r\n                fun(audioID)\r\n            }\r\n        })\r\n    }\r\n    stopSound(id)\r\n    {\r\n        if(!id)\r\n        {\r\n            return\r\n        }\r\n        cc.audioEngine.stop(id)\r\n    }\r\n    setVoiceVolume(s)\r\n    {\r\n        this._v_v = s\r\n    }\r\n    playVoice(path:string)\r\n    {\r\n        if(!GSettingDM.voiceOn)\r\n        {\r\n            return\r\n        }\r\n        if(path.indexOf(\"http\")<0)\r\n        {\r\n            //path = cc.url.raw(\"resources/\"+path)\r\n            //return cc.audioEngine.play(path,false,this._v_v)\r\n            cc.loader.loadRes(path, cc.AudioClip, (err, clip)=>{\r\n                if(err)\r\n                {\r\n                    console.log(\"err =\" + JSON.stringify(err))\r\n                    return\r\n                }\r\n                var audioID = cc.audioEngine.play(clip, false, this._v_v)\r\n                return audioID\r\n            })\r\n        }\r\n        else\r\n        {\r\n            //var name = path.split(\".com/\")[1] + \".wav\"\r\n            var name = path.split(\".com/\")[1] + \"\"\r\n            var voice_path = jsb.fileUtils.getWritablePath() + name\r\n            if (!jsb.fileUtils.isFileExist(voice_path))\r\n            {    \r\n                GHelper.httpRequest(path, (xhr)=>\r\n                {\r\n                    var tmp_data = new Uint8Array(xhr.response)          \r\n                    jsb.fileUtils.writeDataToFile(tmp_data, voice_path)\r\n                    //return cc.audioEngine.play(voice_path,false,this._v_v)\r\n                    cc.loader.loadRes(voice_path, cc.AudioClip, (err, clip)=>{\r\n                        if(err)\r\n                        {\r\n                            console.log(\"err =\" + JSON.stringify(err))\r\n                            return\r\n                        }\r\n                        var audioID = cc.audioEngine.play(clip, false, this._v_v)\r\n                        return audioID\r\n                    })\r\n                })\r\n            }\r\n            else\r\n            {\r\n                //return cc.audioEngine.play(voice_path,false,this._v_v)\r\n                cc.loader.loadRes(voice_path, cc.AudioClip, (err, clip)=>{\r\n                    if(err)\r\n                    {\r\n                        console.log(\"err =\" + JSON.stringify(err))\r\n                        return\r\n                    }\r\n                    var audioID = cc.audioEngine.play(clip, false, this._v_v)\r\n                    return audioID\r\n                })\r\n            }\r\n        }\r\n    }    \r\n    stopMusic()\r\n    {\r\n        cc.audioEngine.stop(this._musicId)\r\n    }\r\n    stopAllSound()\r\n    {\r\n        cc.audioEngine.stopAll()\r\n    }\r\n}\r\nGAudioTool = new AudioTool()","export let GBase64:Base64=null\r\nclass Base64\r\n{\r\n    protected _b64 = new Array(64)\r\n    protected _s64 = new Array(123)\r\n    protected _invalidEncoding = \"invalid encoding\"\r\n    constructor()\r\n    {\r\n        // 65..90, 97..122, 48..57, 43, 47\r\n        for (let i = 0; i < 64;)\r\n        {\r\n            this._s64[this._b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++\r\n        }\r\n    }\r\n    /**\r\n     * Calculates the byte length of a base64 encoded string.\r\n     * @param {string} string Base64 encoded string\r\n     * @returns {number} Byte length\r\n     */\r\n    length(string) \r\n    {\r\n        let p = string.length\r\n        if (!p)\r\n        {\r\n            return 0\r\n        }\r\n        let n = 0\r\n        while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        {\r\n            ++n\r\n        }\r\n        return Math.ceil(string.length * 3) / 4 - n\r\n    }\r\n\r\n    /**\r\n     * Encodes a buffer to a base64 encoded string.\r\n     * @param {Uint8Array} buffer Source buffer\r\n     * @param {number} start Source start\r\n     * @param {number} end Source end\r\n     * @returns {string} Base64 encoded string\r\n     */\r\n    encode(buffer, start, end) \r\n    {\r\n        let parts = null\r\n        let chunk = []\r\n        let i = 0 // output index\r\n        let j = 0 // goto index\r\n        let t     // temporary\r\n        while (start < end) \r\n        {\r\n            let b = buffer[start++]\r\n            switch (j) \r\n            {\r\n                case 0:\r\n                    chunk[i++] = this._b64[b >> 2]\r\n                    t = (b & 3) << 4\r\n                    j = 1\r\n                    break\r\n                case 1:\r\n                    chunk[i++] = this._b64[t | b >> 4]\r\n                    t = (b & 15) << 2\r\n                    j = 2\r\n                    break\r\n                case 2:\r\n                    chunk[i++] = this._b64[t | b >> 6]\r\n                    chunk[i++] = this._b64[b & 63]\r\n                    j = 0\r\n                    break\r\n            }\r\n            if (i > 8191) \r\n            {\r\n                (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk))\r\n                i = 0\r\n            }\r\n        }\r\n        if (j) \r\n        {\r\n            chunk[i++] = this._b64[t]\r\n            chunk[i++] = 61\r\n            if (j === 1)\r\n            {\r\n                chunk[i++] = 61\r\n            }\r\n        }\r\n        if (parts) \r\n        {\r\n            if (i)\r\n            {\r\n                parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)))\r\n            }\r\n            return parts.join(\"\")\r\n        }\r\n        return String.fromCharCode.apply(String, chunk.slice(0, i))\r\n    }\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to a buffer.\r\n     * @param {string} string Source string\r\n     * @param {Uint8Array} buffer Destination buffer\r\n     * @param {number} offset Destination offset\r\n     * @returns {number} Number of bytes written\r\n     * @throws {Error} If encoding is invalid\r\n     */\r\n    decode(string, buffer, offset) \r\n    {\r\n        let start = offset\r\n        let j = 0 // goto index\r\n        let t     // temporary\r\n        for (let i = 0; i < string.length;) \r\n        {\r\n            let c = string.charCodeAt(i++)\r\n            if (c === 61 && j > 1)\r\n            {\r\n                break\r\n            }\r\n            if ((c = this._s64[c]) === undefined)\r\n            {\r\n                throw Error(this._invalidEncoding)\r\n            }\r\n            switch (j) \r\n            {\r\n                case 0:\r\n                {\r\n                    t = c\r\n                    j = 1\r\n                    break\r\n                }\r\n                case 1:\r\n                {\r\n                    buffer[offset++] = t << 2 | (c & 48) >> 4\r\n                    t = c\r\n                    j = 2\r\n                    break\r\n                }\r\n                case 2:\r\n                {\r\n                    buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2\r\n                    t = c\r\n                    j = 3\r\n                    break\r\n                }\r\n                case 3:\r\n                {\r\n                    buffer[offset++] = (t & 3) << 6 | c;\r\n                    j = 0;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (j === 1)\r\n        {\r\n            throw Error(this._invalidEncoding)\r\n        }\r\n        return offset - start\r\n    }\r\n}\r\n\r\nGBase64 = new Base64()","export enum SUBSCRIBE { //订阅消息\r\n    VERSION,            //版本更新\r\n    SIGN,               //签到奖励\r\n    GIFT,               //礼包领取\r\n    OFFLINE,            //离线收益\r\n    VITALITY,           //体力恢复\r\n    ACTIVITY,           //活动开启、结束\r\n    TASK,               //任务完成\r\n}\r\n\r\nexport abstract class BaseAd {\r\n    protected platform: string = \"\";\r\n    protected banner_id: string = \"\";\r\n    protected video_id: string = \"\";\r\n    protected interstitial_id: string = \"\";\r\n    protected native_id: string = \"\";\r\n    protected subscribe_templates: string[] = [];\r\n\r\n    constructor(platform: string) {\r\n        this.platform = platform;\r\n    }\r\n    \r\n    init(data?) {\r\n        this.banner_id = data.banner_id || \"\";\r\n        this.video_id = data.video_id || \"\";\r\n        this.interstitial_id = data.interstitial_id || \"\";\r\n        this.native_id = data.native_id || \"\";\r\n    }\r\n\r\n    setSubscribeTemplates(templates: string[]) {\r\n        this.subscribe_templates = templates;\r\n    }\r\n\r\n    getPlatform() {\r\n        return this.platform;\r\n    }\r\n\r\n    abstract login(success?: Function, fail?: Function);\r\n    abstract share(success?: Function, fail?: Function);\r\n    \r\n    requestSubscribeMessage(success?: Function, fail?: Function) {\r\n        fail && fail();\r\n    }\r\n\r\n    abstract createBannerAd();\r\n    abstract destroyBannerAd();\r\n    abstract createVideoAd(success?: Function, fail?: Function);\r\n    abstract createInterstitialAd(callback?: Function);\r\n    abstract createNativeAd(success?: Function, fail?: Function);\r\n    abstract reportAdShow(id: string);\r\n    abstract reportAdClick(id: string);\r\n\r\n    vibrateShort() {\r\n        window.navigator.vibrate(15);\r\n    }\r\n\r\n    vibrateLong() {\r\n        window.navigator.vibrate(400);\r\n    }\r\n}\r\n\r\nexport class TestAd extends BaseAd {\r\n\r\n    constructor() {\r\n        super(\"guest\");\r\n    }\r\n\r\n    login(success?: Function, fail?: Function) {\r\n        success && success({\r\n            nickname: \"\",\r\n            avatar: \"\",\r\n            gender: 0,\r\n            platform: this.platform,\r\n            code: \"\"\r\n        });\r\n    }\r\n\r\n    share(success?: Function, fail?: Function) {\r\n        success && success();\r\n    }\r\n\r\n    createBannerAd() {\r\n    }\r\n\r\n    destroyBannerAd() {\r\n    }\r\n\r\n    createVideoAd(success?: Function, fail?: Function) {\r\n        success && success();\r\n    }\r\n\r\n    createInterstitialAd(callback?: Function) {\r\n        callback && callback();\r\n    }\r\n    \r\n    createNativeAd(success?: Function, fail?: Function) {\r\n        success && success();\r\n    }\r\n    \r\n    reportAdShow(id: string) {\r\n\r\n    }\r\n    \r\n    reportAdClick(id: string) {\r\n\r\n    }\r\n}\r\n\r\nexport let testAd: TestAd = new TestAd();","import { core } from './../Core/Base';\r\nexport class BaseDataModel\r\n{\r\n    protected _data=null\r\n    protected _filename=\"\"\r\n    get data()\r\n    {\r\n        return this._data\r\n    }\r\n    constructor(filename:string)\r\n    {\r\n        this._filename = filename\r\n    }\r\n    init()\r\n    {\r\n        cc.loader.loadRes(\"Common/Data/\"+this._filename,(err,data)=>\r\n        {\r\n            if(core.isString(data))\r\n            {\r\n                data = JSON.parse(data)\r\n            }\r\n            this._data = data.json\r\n        })\r\n    }\r\n}","export class core {\r\n    static isObject(param):boolean\r\n    {\r\n        return typeof (param) === \"object\"\r\n    }\r\n    static isArray(param):boolean\r\n    {\r\n        return param instanceof Array\r\n    }\r\n    static isNumber(param):boolean\r\n    {\r\n        return !isNaN(param)\r\n    }\r\n    static isNaN(param):boolean\r\n    {\r\n        return isNaN(param)\r\n    }\r\n    static isFunction(param):boolean\r\n    {\r\n        return typeof (param) === \"function\"\r\n    }\r\n    static isString(param):boolean\r\n    {\r\n        return typeof (param) === \"string\"\r\n    }\r\n    static random(min?:number, max?:number):number\r\n    {\r\n        if(min==undefined)\r\n        {\r\n            return Math.random()\r\n        }\r\n        else if(!max)\r\n        {\r\n            max = min\r\n            min = 0\r\n        }\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n    static clone(obj)\r\n    {\r\n        if (typeof obj===\"undefined\")\r\n        {\r\n            return null\r\n        }\r\n        if (core.isArray(obj))\r\n        {\r\n            let newArray = new Array()\r\n            for (let i = 0, length = obj.length; i < length; ++i)\r\n            {\r\n                newArray[i] = this.clone(obj[i])\r\n            }\r\n            return newArray\r\n        }\r\n        if (core.isObject(obj))\r\n        {\r\n            let newObj = new Object()\r\n            for (let i in obj)\r\n            {\r\n                newObj[i] = this.clone(obj[i])\r\n            }\r\n            return newObj\r\n        }\r\n        return obj\r\n    }\r\n    //合并但是不改变dest\r\n    static merge(dest, src)\r\n    {\r\n        let t = core.clone(dest)\r\n        if (!src)\r\n        {\r\n            return t\r\n        }\r\n        if (core.isArray(src))\r\n        {\r\n            t = t || []\r\n            let tlen = t.length\r\n            for (let i = 0, len = src.length; i < len; ++i)\r\n            {\r\n                let value = src[i]\r\n                if (core.isFunction(value))\r\n                {\r\n                    continue\r\n                }\r\n                if (core.isArray(value) || core.isObject(value))\r\n                {\r\n                    if (i < tlen)\r\n                    {\r\n                        t[i] = core.merge(null, value)\r\n                    }\r\n                    else\r\n                    {\r\n                        t.push(core.merge(null, value))\r\n                    }\r\n\r\n                }\r\n                else\r\n                {\r\n                    if (i < tlen)\r\n                    {\r\n                        t[i] = value\r\n                    }\r\n                    else\r\n                    {\r\n                        t.push(value)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (core.isObject(src))\r\n        {\r\n            t = t || {}\r\n            for (let key in src)\r\n            {\r\n                let value = src[key]\r\n                if (core.isFunction(value))\r\n                {\r\n                    continue\r\n                }\r\n                if (core.isArray(value) || core.isObject(value))\r\n                {\r\n                    t[key] = core.merge(null, value)\r\n                }\r\n                else\r\n                {\r\n                    t[key] = value\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            t = src\r\n        }\r\n        return t\r\n    }\r\n    //只是取出template里面已经有的部分\r\n    static getExit(template, src)\r\n    {\r\n        if (!src || !template)\r\n        {\r\n            return {}\r\n        }\r\n        let t = {}\r\n        for (let key in src)\r\n        {\r\n            if (template[key]===undefined)\r\n            {\r\n                continue\r\n            }\r\n            let value = src[key]\r\n            if (core.isFunction(value))\r\n            {\r\n                continue\r\n            }\r\n            if (core.isArray(value) || core.isObject(value))\r\n            {\r\n                t[key] = core.getExit(template[key], value)\r\n            }\r\n            else\r\n            {\r\n                t[key] = value\r\n            }\r\n        }\r\n        return t\r\n    }\r\n    static dump(data)\r\n    {\r\n        let strSpace = \"    \"\r\n        let _dump = function(data, intent)\r\n        {\r\n            let startIntentStr = \"\"\r\n            for (let i = 0; i < intent; ++i)\r\n            {\r\n                startIntentStr += strSpace\r\n            }\r\n            let contentStr = \"\"\r\n            if (core.isArray(data))\r\n            {\r\n                contentStr += \"\\n\" + startIntentStr + \"[\\n\"\r\n                for (let i = 0, length = data.length; i < length; ++i)\r\n                {\r\n                    if (!core.isArray(data[i]) && !core.isObject(data[i]) && !core.isFunction(data[i]))\r\n                    {\r\n                        contentStr += startIntentStr + strSpace + _dump(data[i], intent + 1) + \",\\n\"\r\n                    }\r\n                    else\r\n                    {\r\n                        contentStr += startIntentStr + _dump(data[i], intent + 1) + \",\\n\"\r\n                    }\r\n                }\r\n                contentStr += startIntentStr + \"]\"\r\n            }\r\n            else if (core.isObject(data))\r\n            {\r\n                contentStr += startIntentStr + \"{\\n\"\r\n                for (let key in data)\r\n                {\r\n                    contentStr += startIntentStr + strSpace + key + \":\" + _dump(data[key], intent + 1) + \",\\n\"\r\n                }\r\n                contentStr += startIntentStr + \"}\"\r\n            }\r\n            else if (!core.isFunction(data))\r\n            {\r\n                if (core.isString(data))\r\n                {\r\n                    return \"\\\"\" + data + \"\\\"\"\r\n                }\r\n                return data\r\n            }\r\n            if (contentStr == \"\")\r\n            {\r\n                return \"\"\r\n            }\r\n            return contentStr\r\n        }\r\n        console.log(_dump(data, 0))\r\n    }\r\n\r\n    static toArray(table):any[]\r\n    {\r\n        let array = []\r\n        for (let key in table)\r\n        {\r\n            if (core.isFunction(table[key]))\r\n            {\r\n                continue\r\n            }\r\n            array.push(key)\r\n            array.push(table[key])\r\n        }\r\n        return array\r\n    }\r\n\r\n    static foreach(items, callback)\r\n    {\r\n        if (!items || !callback)\r\n        {\r\n            return\r\n        }\r\n        if (core.isNumber(items))\r\n        {\r\n            for (let i = 0; i < items; ++i)\r\n            {\r\n                let ret = callback(i)\r\n                if(ret)\r\n                {\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        else if (core.isString(items))\r\n        {\r\n            for (let i = 0, length = items.length; i < length; i++)\r\n            {\r\n                let ret = callback(i,items.charAt(i))\r\n                if(ret)\r\n                {\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        else if (core.isArray(items))\r\n        {\r\n            for (let i = 0, length = items.length; i < length; ++i)\r\n            {\r\n                let ret = callback(i,items[i])\r\n                if(ret)\r\n                {\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        else if (core.isObject(items))\r\n        {\r\n            for (let key in items)\r\n            {\r\n                let ret = callback(key,items[key])\r\n                if(ret)\r\n                {\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        return\r\n    }\r\n\r\n    static getLength(items):number\r\n    {\r\n        if(core.isArray(items))\r\n        {\r\n            return items.length\r\n        }\r\n        if(core.isObject)\r\n        {\r\n            let len = 0\r\n            core.foreach(items,function()\r\n            {\r\n                ++len\r\n            })\r\n            return len\r\n        }\r\n        return 0\r\n    }\r\n\r\n    static find(items, callback)\r\n    {\r\n        if (!items || !callback)\r\n        {\r\n            return\r\n        }\r\n        if (core.isArray(items))\r\n        {\r\n            for (let i = 0, length = items.length; i < length; ++i)\r\n            {\r\n                if (callback(items[i]) === true)\r\n                {\r\n                    return items[i]\r\n                }\r\n            }\r\n        }\r\n        else if (core.isObject(items))\r\n        {\r\n            for (let key in items)\r\n            {\r\n                if (callback(items[key]) === true)\r\n                {\r\n                    return items[key]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static indexOf(items, value)\r\n    {\r\n        if (!items || !value)\r\n        {\r\n            return -1\r\n        }\r\n        if (core.isArray(items))\r\n        {\r\n            for (let i = 0, length = items.length; i < length; ++i)\r\n            {\r\n                if (items[i] === value)\r\n                {\r\n                    return i\r\n                }\r\n            }\r\n        }\r\n        else if (core.isObject(items))\r\n        {\r\n            for (let key in items)\r\n            {\r\n                if (items[key] === value)\r\n                {\r\n                    return key\r\n                }\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n    static include = function(objs, key) \r\n    {\r\n        let r = false\r\n        core.foreach(objs,function(k,obj)\r\n        {\r\n            if(k==key)\r\n            {\r\n                r = true\r\n                return true\r\n            }\r\n        })\r\n        return r\r\n    }\r\n\r\n    static removeAt(arr:any[],index:number)\r\n    {\r\n        let len = arr.length\r\n        if(isNaN(index)||index>=len||index<0)\r\n        {\r\n            return arr\r\n        }\r\n        for(let i=0;i<len-1;++i)\r\n        {\r\n            if(i<index)\r\n            {\r\n                continue\r\n            }\r\n            else\r\n            {\r\n                arr[i] = arr[i+1]\r\n            }\r\n        }\r\n        arr.length-=1\r\n        return arr\r\n    }\r\n    \r\n    static char2buf(str)\r\n    {\r\n        let out = new ArrayBuffer(str.length*2)\r\n        let u16a= new Uint16Array(out)\r\n        let strs = str.split(\"\")\r\n        for(let i =0 ; i<strs.length;i++)\r\n        {\r\n            u16a[i]=strs[i].charCodeAt()\r\n        }\r\n        return out\r\n    }\r\n\r\n    static array2arraybuffer(array) \r\n    {\r\n        let b = new ArrayBuffer(array.length)\r\n        let v = new DataView(b, 0)\r\n        for (let i = 0; i < array.length; i++) \r\n        {\r\n            v.setUint8(i, array[i])\r\n        }\r\n        return b\r\n    }\r\n\r\n    static arraybuffer2array(buffer) \r\n    {\r\n        let v = new DataView(buffer, 0)\r\n        let a = new Array()\r\n        for (let i = 0; i < v.byteLength; i++)\r\n        {\r\n            a[i] = v.getUint8(i)\r\n        }\r\n        return a\r\n    }\r\n\r\n    static firstCharUpCase(str)\r\n    {\r\n        let reg = /\\b(\\w)|\\s(\\w)/g \r\n        str = str.toLowerCase() \r\n        return str.replace(reg,function(m){return m.toUpperCase()}) \r\n    } \r\n\r\n    static convertIntToUInt8Array(num):number[]\r\n    {\r\n        let c2 = num%256\r\n        let c1 = Math.floor(num/256)\r\n        \r\n        return [c1,c2]\r\n    }\r\n\r\n    static convertUInt8ArrayToInt(array):number\r\n    {\r\n        if(array.length!=2)\r\n        {\r\n            return 0\r\n        }\r\n        return array[0]*256+array[1]\r\n    }\r\n    //从一个数组里面按照下标和长度的方式去获取另一个数组，至少返回空数组\r\n    //包含start\r\n    static getArrayFromArray(data,start,l?):any[]\r\n    {\r\n        let len = data.length\r\n        start = start || 0//默认最开始\r\n        l = l || len//默认到最后\r\n        if(start>=len)\r\n        {\r\n            return []\r\n        }\r\n        let arr = []\r\n        for(let i = start ;i<start+l&&i<len;++i)\r\n        {\r\n            arr.push(data[i])\r\n        }\r\n        return arr\r\n    }\r\n\r\n    static blobToArrayBuffer(data,callback)\r\n    {\r\n        if(cc.sys.isNative)\r\n        {\r\n            callback(data)\r\n            return\r\n        }\r\n        let fileReader = new FileReader()\r\n        fileReader.onload  = function(progressEvent) \r\n        {\r\n            if(callback)\r\n            {\r\n                callback(this.result)\r\n            }\r\n        }\r\n        fileReader.readAsArrayBuffer(data)\r\n    }\r\n\r\n    static format(src,formatStr)   \r\n    {   \r\n        if(core.isString(src))\r\n        {\r\n            let args = Array.prototype.slice.call(arguments, 1)\r\n            return src.replace(/\\{(\\d+)\\}/g, function(m, i)\r\n            {\r\n                return args[i]\r\n            })\r\n        }\r\n        else\r\n        {\r\n            if(core.isNumber(src))\r\n            {\r\n                src=new Date(src)\r\n            }\r\n            let str = formatStr\r\n            let Week = ['日','一','二','三','四','五','六']\r\n            let Y=src.getFullYear()\r\n            str=str.replace(/yyyy|YYYY/,Y)\r\n            str=str.replace(/yy|YY/,( Y % 100)>9?(Y % 100).toString():'0' + (Y % 100))\r\n        \r\n            let M=src.getMonth()+1\r\n            str=str.replace(/MM/,M>9?M:'0' + M)\r\n            str=str.replace(/M/g,M)\r\n        \r\n            str=str.replace(/w|W/g,Week[src.getDay()])\r\n        \r\n            let D=src.getDate()\r\n            str=str.replace(/dd|DD/,D>9?D.toString():'0' + D)\r\n            str=str.replace(/d|D/g,D)\r\n        \r\n            let H=src.getHours()\r\n            str=str.replace(/hh|HH/,H>9?H.toString():'0' + H)\r\n            str=str.replace(/h|H/g,H)\r\n            let m=src.getMinutes()\r\n            str=str.replace(/mm/,m>9?m.toString():'0' + m)\r\n            str=str.replace(/m/g,m)\r\n        \r\n            let S=src.getSeconds()\r\n            str=str.replace(/ss|SS/,S>9?S.toString():'0' + S)\r\n            str=str.replace(/s|S/g,S)\r\n        \r\n            return str\r\n        }\r\n    }\r\n    static fuzzy(str:string)\r\n    {\r\n        if(!str)\r\n        {\r\n            return str\r\n        }\r\n        if(str.length<=1)\r\n        {\r\n            return str\r\n        }\r\n        if(str.length==2)\r\n        {\r\n            return str[0]+\"*\"\r\n        }\r\n        let first = str[0]\r\n        let last = str[str.length-1]\r\n        let newStr = first\r\n        for(let i=0;i<str.length-2;++i)\r\n        {\r\n            newStr+=\"*\"\r\n        }\r\n        newStr+=last\r\n        return newStr\r\n    }\r\n    static trim(str:string)\r\n    {\r\n        return str.replace(/(^\\s*)|(\\s*$)/g, \"\")\r\n    }\r\n        /**\r\n     * 判断是否是手机号\r\n     * @param phone 手机号\r\n     */\r\n    static isPhoneNo(phone:string)\r\n    {\r\n        if(!phone)\r\n        {\r\n            return false\r\n        }\r\n        // let reg = /^1[3|4|5|7|8][0-9]{9}$/ //验证规则\r\n        // let flag = reg.test(phone) //true\r\n        // return flag\r\n        return /^1[3-9]\\d{9}$/.test(phone)\r\n    }\r\n    static isVirtualNo(phone:string)\r\n    {\r\n        let flag = false\r\n        if(phone.indexOf(\"167\")==0\r\n            ||phone.indexOf(\"170\")==0\r\n            ||phone.indexOf(\"171\")==0)\r\n        {\r\n            flag = true\r\n        }\r\n        return flag\r\n    }\r\n    static toLatestTime(time:number)\r\n    {\r\n        let dt = new Date(time)\r\n        let now = new Date()\r\n        let dtm=now.getTime()-dt.getTime()\r\n        let one_day=24*60*60*1000\r\n        if(dtm<=7*one_day)\r\n        {\r\n            if(dtm>one_day)\r\n            {\r\n                let d = Math.floor(dtm/one_day)\r\n                return d+\"天前\"\r\n            }\r\n            let one_hour=1*60*60*1000\r\n            if(dtm>one_hour)\r\n            {\r\n                let h = Math.floor(dtm/one_hour)\r\n                return h+\"小时前\"\r\n            }\r\n            let one_m=1*60*1000\r\n            if(dtm>one_m)\r\n            {\r\n                let m = Math.floor(dtm/one_m)\r\n                return m+\"分前\"\r\n            }\r\n            let one_s=1*1000\r\n            let s = Math.floor(dtm/one_s)\r\n            return s+\"秒前\"\r\n        }\r\n        if(dt.getFullYear()!=now.getFullYear())\r\n        {\r\n            return core.format(dt,\"YYYY-MM-DD HH:mm\")\r\n        }\r\n        if(dt.getMonth()!=now.getMonth()\r\n            ||dt.getDate()!=now.getDate())\r\n        {\r\n            return core.format(dt,\"MM-DD HH:mm\")\r\n        }\r\n        return core.format(dt,\"HH:mm\")\r\n    }\r\n    static toSimpleTime(time:number)\r\n    {\r\n        let dt = new Date(time)\r\n        let now = new Date()\r\n        if(dt.getFullYear()!=now.getFullYear())\r\n        {\r\n            return core.format(dt,\"YYYY-MM-DD HH:mm\")\r\n        }\r\n        if(dt.getMonth()!=now.getMonth()\r\n            ||dt.getDate()!=now.getDate())\r\n        {\r\n            return core.format(dt,\"MM-DD HH:mm\")\r\n        }\r\n        return core.format(dt,\"HH:mm\")\r\n    }\r\n    static getStartTime(time?:number)\r\n    {\r\n        time = time || Date.now()\r\n        let dt = new Date(time)\r\n        time-=dt.getHours()*60*60*1000+dt.getMinutes()*60*1000+dt.getSeconds()*1000+dt.getMilliseconds()\r\n        return time\r\n    }\r\n}\r\nNumber.prototype.toLocaleString=function (locales?: string | string[], options?: Intl.NumberFormatOptions)\r\n{\r\n    var parts = this.toString().split(\".\")\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return parts.join(\".\")\r\n}","﻿import {core} from \"./Base\"\r\nimport { GTriggerMgr, EConditionType } from \"./TriggerMgr\"\r\nimport { GHelper } from \"../Logic/Helper\"\r\nexport class BehaviorAI\r\n{\r\n    protected _obj: any\r\n    protected _targetObjs: any[]\r\n    protected _triggers: any[]\r\n    protected _behavior_data: any\r\n    protected _current_behavior:any\r\n    protected _current_behavior_name: string=\"\"\r\n    protected _current_check: any[]\r\n    protected _targetObj: any\r\n    constructor(behavior_data, obj, targetObjs)\r\n    {\r\n        this._obj = obj\r\n        this._behavior_data = behavior_data\r\n\r\n        if (core.isArray(targetObjs))\r\n        {\r\n            this._targetObjs = targetObjs\r\n        }\r\n        else if (targetObjs)\r\n        {\r\n            this._targetObjs[0] = targetObjs\r\n        }\r\n        else\r\n        {\r\n            this._targetObjs = []\r\n        }\r\n\r\n        this._triggers = []\r\n        let code = GTriggerMgr.addConditionTriggerEvent(EConditionType.Die, this.onTriggerDie.bind(this), { code: this._obj.getCode() })\r\n        this._triggers.push({ type: EConditionType.Die, code: code })\r\n    }\r\n    //启动行为树AI\r\n    start()\r\n    {\r\n        if (!this._behavior_data)\r\n        {\r\n            cc.log(\"------------error------------this._behavior_data  can not be null!\");\r\n            return;\r\n        }\r\n        this.goto(this._behavior_data.start);\r\n    }\r\n    //结束行为树AI\r\n    end()\r\n    {\r\n        for (let i = 0, length = this._triggers.length; i < length; ++i)\r\n        {\r\n            GTriggerMgr.removeConditionTriggerEvent(this._triggers[i].type, this._triggers[i].code);\r\n        }\r\n        this._triggers = [];\r\n    }\r\n    //帧检查\r\n    //支持多条件check\r\n    update(dt)\r\n    {\r\n        if (this._current_check.length < 0)\r\n        {\r\n            return\r\n        }\r\n\r\n        for (let i = 0; i < this._current_check.length; ++i)\r\n        {\r\n            let current = this._current_check[i]\r\n            //目前只支持同时存在一个update检查\r\n            if (current.event_name == \"target_insight\")\r\n            {\r\n                let targetInfo = this._getNearestTarget()\r\n                if (targetInfo)\r\n                {\r\n                    let target = targetInfo.target\r\n                    let distance = targetInfo.distance\r\n                    if (distance <= this._behavior_data.insight)//视野发现敌人\r\n                    {\r\n                        core.removeAt(this._current_check,i)\r\n                        --i\r\n                        let forceReturn = this._doEvents(this._current_behavior.conditions[current.event_name])\r\n                        if (forceReturn)\r\n                        {\r\n                            return//防止goto修改this._current_check后，做了立刻check\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (current.event_name == \"sure\")\r\n            {\r\n                core.removeAt(this._current_check,i)\r\n                --i;\r\n                let forceReturn = this._doEvents(this._current_behavior.conditions[current.event_name]);\r\n                if (forceReturn)\r\n                {\r\n                    return;//防止goto修改this._current_check后，做了立刻check\r\n                }\r\n            }\r\n            else if (current.event_name == \"near\")\r\n            {\r\n                if (this._targetObj)\r\n                {\r\n                    let objPos:cc.Vec2 = this._obj.getPosition();\r\n                    let tpos:cc.Vec2 = this._targetObj.getPosition();\r\n                    let distance = objPos.sub(tpos).mag();//目标和自己的距离\r\n                    let dty = objPos.y - tpos.y;\r\n                    dty = dty >= 0 ? dty : -dty;\r\n                    if (distance <= current.distance && dty <= 10)//视野发现敌人\r\n                    {\r\n                        core.removeAt(this._current_check,i)\r\n                        --i;\r\n                        let forceReturn = this._doEvents(this._current_behavior.conditions[current.event_name]);\r\n                        if (forceReturn)\r\n                        {\r\n                            return;//防止goto修改this._current_check后，做了立刻check\r\n                        }\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    core.removeAt(this._current_check,i)\r\n                    --i;\r\n                    let forceReturn = this._doEvents(this._current_behavior.conditions[current.event_name], true);\r\n                    if (forceReturn)\r\n                    {\r\n                        return;//防止goto修改this._current_check后，做了立刻check\r\n                    }\r\n                }\r\n            }\r\n            else if (current.event_name == \"timeout\")\r\n            {\r\n                current.time -= dt;\r\n                if (current.time <= 0)\r\n                {\r\n                    core.removeAt(this._current_check,i)\r\n                    --i;\r\n                    let forceReturn = this._doEvents(this._current_behavior.conditions[current.event_name]);\r\n                    if (forceReturn)\r\n                    {\r\n                        return;//防止goto修改this._current_check后，做了立刻check\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //goto事件\r\n    goto(behavior_name)\r\n    {\r\n        //cc.log(\"=====goto behavior=\" + behavior_name);\r\n        if (this._behavior_data && this._behavior_data.name == behavior_name)\r\n        {\r\n            return//拒绝相同行为跳转\r\n        }\r\n        this._current_check = [];\r\n        this._current_behavior = this._behavior_data.behaviors[behavior_name];\r\n\r\n        //全局条件\r\n        if (this._behavior_data.conditions)\r\n        {\r\n            this._checkConditions(this._behavior_data.conditions);\r\n        }\r\n        //行为条件\r\n        if (this._current_behavior.conditions)\r\n        {\r\n            this._checkConditions(this._current_behavior.conditions);\r\n        }\r\n\r\n        if (this._current_behavior.animation)\r\n        {\r\n            if (!this._current_behavior.conditions.animation_done)\r\n            {\r\n                this._obj.behaviorAnimation(this._current_behavior.animation.name, this._current_behavior.animation.loop);\r\n            }\r\n            else\r\n            {\r\n                let self = this;\r\n                this._obj.behaviorAnimation(this._current_behavior.animation.name, this._current_behavior.animation.loop, function ()\r\n                {\r\n                    self._doEvents(self._current_behavior.conditions.animation_done)\r\n                });\r\n            }\r\n        }\r\n        else\r\n        {\r\n            cc.log(\"---------warning--------_goto->behavior_name=\" + behavior_name + \".animaiton not exist!\");\r\n        }\r\n    }\r\n    //检查有没有已经达到的条件,又的话就执行他的相关事件\r\n    _checkConditions(conditions)\r\n    {\r\n        if (!conditions)\r\n        {\r\n            return;\r\n        }\r\n        for (let key in conditions)\r\n        {\r\n            switch (key)\r\n            {\r\n                case \"target_insight\":\r\n                    {\r\n                        this._current_check.push({ event_name: key });\r\n                    }\r\n                    break;\r\n                case \"timeout\":\r\n                    {\r\n                        this._current_check.push({ event_name: key, time: conditions[key].time });\r\n                    }\r\n                    break;\r\n                case \"sure\":\r\n                    {\r\n                        this._current_check.push({ event_name: key });//下次update执行\r\n                    }\r\n                    break;\r\n                case \"near\":\r\n                    {\r\n                        this._targetObj = null;\r\n                        this._current_check.push({ event_name: key, distance: conditions[key].distance });\r\n                        let targetInfo = this._getNearestTarget();\r\n                        if (targetInfo)\r\n                        {\r\n                            if (this._behavior_data.name == \"sm\")\r\n                                cc.log(\"distance\" + targetInfo.distance);\r\n                            this._targetObj = targetInfo.target;\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    //执行事件\r\n    _doEvents(events, fail:boolean=false)\r\n    {\r\n        if (!events)\r\n        {\r\n            return false;\r\n        }\r\n        if (fail && events.failto)\r\n        {\r\n            this.goto(events.failto);\r\n            return true;\r\n        }\r\n        let forceReturn = false;\r\n        for (let key in events)\r\n        {\r\n            switch (key)\r\n            {\r\n                case \"goto\":\r\n                    {\r\n                        this.goto(events[key]);\r\n                        forceReturn = true;\r\n                    }\r\n                    break;\r\n                case \"walk_any\":\r\n                    {\r\n                        if (this._obj.behaviorWalkAny)\r\n                        {\r\n                            this._obj.behaviorWalkAny();\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"persue\":\r\n                    {\r\n                        if (this._obj.behaviorPersue && this._targetObj)\r\n                        {\r\n                            this._obj.behaviorPersue(this._targetObj);\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"call\":\r\n                    {\r\n                        if (events[key].fun && this._obj[events[key].fun])\r\n                        {\r\n                            this._obj[events[key].fun](events[key].params);\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"random\":\r\n                    {\r\n                        let r = GHelper.random();\r\n                        let rate = 0;\r\n                        let done = false;\r\n                        //最后一条不参与检测\r\n                        for (let i = 0, length = events[key].length; i < length - 1; ++i)\r\n                        {\r\n                            rate += events[key][i].rate;\r\n                            if (r <= rate)\r\n                            {\r\n                                forceReturn = this._doEvents(events[key][i].events);\r\n                                done = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        //如果前面都没有成功，必须保证最后一条得到执行\r\n                        if (!done)\r\n                        {\r\n                            forceReturn = this._doEvents(events[key][events[key].length - 1].events);\r\n                        }\r\n                    }\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return forceReturn;\r\n    }\r\n\r\n\r\n\r\n    //角色死亡触发\r\n    onTriggerDie(userDM)\r\n    {\r\n        if (!userDM)\r\n        {\r\n            return\r\n        }\r\n        if (this._obj.getCode() === userDM.code)\r\n        {\r\n            this.goto(\"die\")\r\n            this.end()\r\n            return\r\n        }\r\n        for (let i = 0, length = this._targetObjs.length; i < length; ++i)\r\n        {\r\n            if (this._targetObjs[i].getCode() === userDM.code)\r\n            {\r\n                core.removeAt(this._targetObjs,i)\r\n                if (this._targetObj.getCode() === userDM.code)\r\n                {\r\n                    this._targetObj = null\r\n                }\r\n                return\r\n            }\r\n        }\r\n\r\n        return\r\n    }\r\n    //获取最近的target\r\n    _getNearestTarget()\r\n    {\r\n        let targetNum = this._targetObjs.length;\r\n        if (targetNum <= 0)\r\n        {\r\n            return null\r\n        }\r\n\r\n        let objPos:cc.Vec2 = this._obj.getPosition()\r\n\r\n        if (targetNum == 1)\r\n        {\r\n            return { target: this._targetObjs[0], distance: objPos.sub(this._targetObjs[0].getPosition()).mag() }\r\n        }\r\n\r\n        let minIndex = 0;\r\n        let mindis = objPos.sub(this._targetObjs[0].getPosition()).mag()\r\n        for (let i = 1; i < targetNum; ++i)\r\n        {\r\n            let dis = objPos.sub(this._targetObjs[i].getPosition()).mag()\r\n            if (mindis > dis)\r\n            {\r\n                mindis = dis\r\n                minIndex = i\r\n            }\r\n        }\r\n        return { target: this._targetObjs[minIndex], distance: mindis }\r\n    }\r\n    //添加target\r\n    addTarget(target)\r\n    {\r\n        if (!target)\r\n        {\r\n            return\r\n        }\r\n        this._targetObjs.push(target)\r\n    }\r\n    getTargets()\r\n    {\r\n        return this._targetObjs\r\n    }\r\n}"," \r\nconst BRIDGE_CLASS = \"org/cocos2dx/javascript/AppActivity\";\r\nconst Bridge_android_functionName = \"nativeCall\";\r\n\r\nexport default class Bridge_android {\r\n    constructor() \r\n    {\r\n    }\r\n    tsCallNative(callData:any)\r\n    {\r\n        var sigs = \"(Ljava/lang/String;)Ljava/lang/String;\"\r\n        var result = jsb.reflection.callStaticMethod(BRIDGE_CLASS, Bridge_android_functionName, sigs,JSON.stringify(callData))\r\n        return result;\r\n    }\r\n    saveImgToSystemGallery(sendData:any) \r\n    {\r\n        var result = this.tsCallNative(sendData);\r\n        var resultData = JSON.parse(result);\r\n        return resultData;\r\n    }\r\n    crashPush(msg:any)\r\n    {\r\n        var result = this.tsCallNative(msg);\r\n        var resultData = JSON.parse(result);\r\n        return resultData;\r\n    }\r\n    \r\n\r\n}\r\n","\r\nexport default class Bridge_h5 {\r\n\r\n    saveImgToSystemGallery(sendData:any) \r\n    {\r\n        \r\n        return null;\r\n    }\r\n\r\n    crashPush(sendData:any) \r\n    {\r\n        \r\n        return null;\r\n    }\r\n\r\n    tsCallNative(callData:any)\r\n    {\r\n        return null\r\n    }\r\n    setUpdateCall()\r\n    {\r\n        \r\n    }\r\n    // saveImgToSystemGallery(imgUrl: string, filepath: string, filename: string) \r\n    // {\r\n    //     //var Url = filepath;\r\n    //     var blob = new Blob([''], { type: 'application/octet-stream' });\r\n    //     var url = URL.createObjectURL(blob);\r\n    //     var a = document.createElement('a');\r\n    //     a.href = imgUrl;\r\n    //     //a.download = Url.replace(/(.*\\/)*([^.]+.*)/ig,\"$2\").split(\"?\")[0];\r\n    //     let index = imgUrl.lastIndexOf('.');\r\n    //     if (index < 0) {\r\n    //         a.download = imgUrl.replace(/[\\/|\\.|\\:|\\+]/g, \"\") + '.png';\r\n    //     } else {\r\n    //         let tmpStr = imgUrl.substr(index);\r\n    //         if (tmpStr.length > 4) {\r\n    //             a.download = imgUrl.replace(/[\\/|\\.|\\:|\\+]/g, \"\") + '.png';\r\n    //         }\r\n\r\n    //         let indexa = tmpStr.indexOf('.');\r\n    //         if (indexa == -1) {\r\n    //             a.download = imgUrl.replace(/[\\/|\\.|\\:|\\+]/g, \"\") + '.png';\r\n    //         }\r\n    //     }\r\n    //     var e = document.createEvent('MouseEvents');\r\n    //     e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n    //     a.dispatchEvent(e);\r\n    //     URL.revokeObjectURL(url);\r\n    // }\r\n\r\n}","let BRIDGE_CLASS = \"NativeOcClass\"\r\nconst Bridge_ios_functionName = \"nativeCall:\";\r\nexport default class Bridge_ios {\r\n\r\n    constructor() \r\n    {\r\n        \r\n    }\r\n    tsCallNative(callData:any)\r\n    {\r\n        var result = jsb.reflection.callStaticMethod(BRIDGE_CLASS, Bridge_ios_functionName,JSON.stringify(callData))\r\n        return result;\r\n    }\r\n    saveImgToSystemGallery(sendData:any) \r\n    {\r\n        var result = this.tsCallNative(sendData);\r\n        var resultData = JSON.parse(result);\r\n        return resultData;\r\n    }\r\n    crashPush(sendData:any) \r\n    {\r\n        var result = this.tsCallNative(sendData);\r\n        var resultData = JSON.parse(result);\r\n        return resultData;\r\n    }\r\n\r\n  \r\n}","//---------------------------------------------------------------------\r\n// QRCode for JavaScript\r\n//\r\n// Copyright (c) 2009 Kazuhiko Arase\r\n//\r\n// URL: http://www.d-project.com/\r\n//\r\n// Licensed under the MIT license:\r\n//   http://www.opensource.org/licenses/mit-license.php\r\n//\r\n// The word \"QR Code\" is registered trademark of \r\n// DENSO WAVE INCORPORATED\r\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\r\n//\r\n//---------------------------------------------------------------------\r\n\r\n//---------------------------------------------------------------------\r\n// QR8bitByte\r\n//---------------------------------------------------------------------\r\n\r\nfunction QR8bitByte(data) {\r\n    this.mode = QRMode.MODE_8BIT_BYTE;\r\n    this.data = data;\r\n}\r\n\r\nQR8bitByte.prototype = {\r\n\r\n    getLength: function (buffer) {\r\n        return this.data.length;\r\n    },\r\n\r\n    write: function (buffer) {\r\n        for (let i = 0; i < this.data.length; i++) {\r\n            // not JIS ...\r\n            buffer.put(this.data.charCodeAt(i), 8);\r\n        }\r\n    }\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRCode\r\n//---------------------------------------------------------------------\r\n\r\nlet QRCode = function (typeNumber, errorCorrectLevel) {\r\n    this.typeNumber = typeNumber;\r\n    this.errorCorrectLevel = errorCorrectLevel;\r\n    this.modules = null;\r\n    this.moduleCount = 0;\r\n    this.dataCache = null;\r\n    this.dataList = new Array();\r\n}\r\n\r\nQRCode.prototype = {\r\n\r\n    addData: function (data) {\r\n        let newData = new QR8bitByte(data);\r\n        this.dataList.push(newData);\r\n        this.dataCache = null;\r\n    },\r\n\r\n    isDark: function (row, col) {\r\n        if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\r\n            throw new Error(row + \",\" + col);\r\n        }\r\n        return this.modules[row][col];\r\n    },\r\n\r\n    getModuleCount: function () {\r\n        return this.moduleCount;\r\n    },\r\n\r\n    make: function () {\r\n        // Calculate automatically typeNumber if provided is < 1\r\n        if (this.typeNumber < 1) {\r\n            let typeNumber = 1;\r\n            for (typeNumber = 1; typeNumber < 40; typeNumber++) {\r\n                let rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\r\n\r\n                let buffer = new QRBitBuffer();\r\n                let totalDataCount = 0;\r\n                for (let i = 0; i < rsBlocks.length; i++) {\r\n                    totalDataCount += rsBlocks[i].dataCount;\r\n                }\r\n\r\n                for (let i = 0; i < this.dataList.length; i++) {\r\n                    let data = this.dataList[i];\r\n                    buffer.put(data.mode, 4);\r\n                    buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\r\n                    data.write(buffer);\r\n                }\r\n                if (buffer.getLengthInBits() <= totalDataCount * 8)\r\n                    break;\r\n            }\r\n            this.typeNumber = typeNumber;\r\n        }\r\n        this.makeImpl(false, this.getBestMaskPattern());\r\n    },\r\n\r\n    makeImpl: function (test, maskPattern) {\r\n\r\n        this.moduleCount = this.typeNumber * 4 + 17;\r\n        this.modules = new Array(this.moduleCount);\r\n\r\n        for (let row = 0; row < this.moduleCount; row++) {\r\n\r\n            this.modules[row] = new Array(this.moduleCount);\r\n\r\n            for (let col = 0; col < this.moduleCount; col++) {\r\n                this.modules[row][col] = null;//(col + row) % 3;\r\n            }\r\n        }\r\n\r\n        this.setupPositionProbePattern(0, 0);\r\n        this.setupPositionProbePattern(this.moduleCount - 7, 0);\r\n        this.setupPositionProbePattern(0, this.moduleCount - 7);\r\n        this.setupPositionAdjustPattern();\r\n        this.setupTimingPattern();\r\n        this.setupTypeInfo(test, maskPattern);\r\n\r\n        if (this.typeNumber >= 7) {\r\n            this.setupTypeNumber(test);\r\n        }\r\n\r\n        if (this.dataCache == null) {\r\n            this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\r\n        }\r\n\r\n        this.mapData(this.dataCache, maskPattern);\r\n    },\r\n\r\n    setupPositionProbePattern: function (row, col) {\r\n\r\n        for (let r = -1; r <= 7; r++) {\r\n\r\n            if (row + r <= -1 || this.moduleCount <= row + r) continue;\r\n\r\n            for (let c = -1; c <= 7; c++) {\r\n\r\n                if (col + c <= -1 || this.moduleCount <= col + c) continue;\r\n\r\n                if ((0 <= r && r <= 6 && (c == 0 || c == 6))\r\n                    || (0 <= c && c <= 6 && (r == 0 || r == 6))\r\n                    || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\r\n                    this.modules[row + r][col + c] = true;\r\n                } else {\r\n                    this.modules[row + r][col + c] = false;\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    getBestMaskPattern: function () {\r\n\r\n        let minLostPoint = 0;\r\n        let pattern = 0;\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n\r\n            this.makeImpl(true, i);\r\n\r\n            let lostPoint = QRUtil.getLostPoint(this);\r\n\r\n            if (i == 0 || minLostPoint > lostPoint) {\r\n                minLostPoint = lostPoint;\r\n                pattern = i;\r\n            }\r\n        }\r\n\r\n        return pattern;\r\n    },\r\n\r\n    createMovieClip: function (target_mc, instance_name, depth) {\r\n\r\n        let qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\r\n        let cs = 1;\r\n\r\n        this.make();\r\n\r\n        for (let row = 0; row < this.modules.length; row++) {\r\n\r\n            let y = row * cs;\r\n\r\n            for (let col = 0; col < this.modules[row].length; col++) {\r\n\r\n                let x = col * cs;\r\n                let dark = this.modules[row][col];\r\n\r\n                if (dark) {\r\n                    qr_mc.beginFill(0, 100);\r\n                    qr_mc.moveTo(x, y);\r\n                    qr_mc.lineTo(x + cs, y);\r\n                    qr_mc.lineTo(x + cs, y + cs);\r\n                    qr_mc.lineTo(x, y + cs);\r\n                    qr_mc.endFill();\r\n                }\r\n            }\r\n        }\r\n\r\n        return qr_mc;\r\n    },\r\n\r\n    setupTimingPattern: function () {\r\n\r\n        for (let r = 8; r < this.moduleCount - 8; r++) {\r\n            if (this.modules[r][6] != null) {\r\n                continue;\r\n            }\r\n            this.modules[r][6] = (r % 2 == 0);\r\n        }\r\n\r\n        for (let c = 8; c < this.moduleCount - 8; c++) {\r\n            if (this.modules[6][c] != null) {\r\n                continue;\r\n            }\r\n            this.modules[6][c] = (c % 2 == 0);\r\n        }\r\n    },\r\n\r\n    setupPositionAdjustPattern: function () {\r\n\r\n        let pos = QRUtil.getPatternPosition(this.typeNumber);\r\n\r\n        for (let i = 0; i < pos.length; i++) {\r\n\r\n            for (let j = 0; j < pos.length; j++) {\r\n\r\n                let row = pos[i];\r\n                let col = pos[j];\r\n\r\n                if (this.modules[row][col] != null) {\r\n                    continue;\r\n                }\r\n\r\n                for (let r = -2; r <= 2; r++) {\r\n\r\n                    for (let c = -2; c <= 2; c++) {\r\n\r\n                        if (r == -2 || r == 2 || c == -2 || c == 2\r\n                            || (r == 0 && c == 0)) {\r\n                            this.modules[row + r][col + c] = true;\r\n                        } else {\r\n                            this.modules[row + r][col + c] = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    setupTypeNumber: function (test) {\r\n\r\n        let bits = QRUtil.getBCHTypeNumber(this.typeNumber);\r\n\r\n        for (let i = 0; i < 18; i++) {\r\n            let mod = (!test && ((bits >> i) & 1) == 1);\r\n            this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\r\n        }\r\n\r\n        for (let i = 0; i < 18; i++) {\r\n            let mod = (!test && ((bits >> i) & 1) == 1);\r\n            this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\r\n        }\r\n    },\r\n\r\n    setupTypeInfo: function (test, maskPattern) {\r\n\r\n        let data = (this.errorCorrectLevel << 3) | maskPattern;\r\n        let bits = QRUtil.getBCHTypeInfo(data);\r\n\r\n        // vertical\t\t\r\n        for (let i = 0; i < 15; i++) {\r\n\r\n            let mod = (!test && ((bits >> i) & 1) == 1);\r\n\r\n            if (i < 6) {\r\n                this.modules[i][8] = mod;\r\n            } else if (i < 8) {\r\n                this.modules[i + 1][8] = mod;\r\n            } else {\r\n                this.modules[this.moduleCount - 15 + i][8] = mod;\r\n            }\r\n        }\r\n\r\n        // horizontal\r\n        for (let i = 0; i < 15; i++) {\r\n\r\n            let mod = (!test && ((bits >> i) & 1) == 1);\r\n\r\n            if (i < 8) {\r\n                this.modules[8][this.moduleCount - i - 1] = mod;\r\n            } else if (i < 9) {\r\n                this.modules[8][15 - i - 1 + 1] = mod;\r\n            } else {\r\n                this.modules[8][15 - i - 1] = mod;\r\n            }\r\n        }\r\n\r\n        // fixed module\r\n        this.modules[this.moduleCount - 8][8] = (!test);\r\n\r\n    },\r\n\r\n    mapData: function (data, maskPattern) {\r\n\r\n        let inc = -1;\r\n        let row = this.moduleCount - 1;\r\n        let bitIndex = 7;\r\n        let byteIndex = 0;\r\n\r\n        for (let col = this.moduleCount - 1; col > 0; col -= 2) {\r\n\r\n            if (col == 6) col--;\r\n\r\n            while (true) {\r\n\r\n                for (let c = 0; c < 2; c++) {\r\n\r\n                    if (this.modules[row][col - c] == null) {\r\n\r\n                        let dark = false;\r\n\r\n                        if (byteIndex < data.length) {\r\n                            dark = (((data[byteIndex] >>> bitIndex) & 1) == 1);\r\n                        }\r\n\r\n                        let mask = QRUtil.getMask(maskPattern, row, col - c);\r\n\r\n                        if (mask) {\r\n                            dark = !dark;\r\n                        }\r\n\r\n                        this.modules[row][col - c] = dark;\r\n                        bitIndex--;\r\n\r\n                        if (bitIndex == -1) {\r\n                            byteIndex++;\r\n                            bitIndex = 7;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                row += inc;\r\n\r\n                if (row < 0 || this.moduleCount <= row) {\r\n                    row -= inc;\r\n                    inc = -inc;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\nQRCode.PAD0 = 0xEC;\r\nQRCode.PAD1 = 0x11;\r\n\r\nQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\r\n\r\n    let rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\r\n\r\n    let buffer = new QRBitBuffer();\r\n\r\n    for (let i = 0; i < dataList.length; i++) {\r\n        let data = dataList[i];\r\n        buffer.put(data.mode, 4);\r\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\r\n        data.write(buffer);\r\n    }\r\n\r\n    // calc num max data.\r\n    let totalDataCount = 0;\r\n    for (let i = 0; i < rsBlocks.length; i++) {\r\n        totalDataCount += rsBlocks[i].dataCount;\r\n    }\r\n\r\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\r\n        throw new Error(\"code length overflow. (\"\r\n            + buffer.getLengthInBits()\r\n            + \">\"\r\n            + totalDataCount * 8\r\n            + \")\");\r\n    }\r\n\r\n    // end code\r\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\r\n        buffer.put(0, 4);\r\n    }\r\n\r\n    // padding\r\n    while (buffer.getLengthInBits() % 8 != 0) {\r\n        buffer.putBit(false);\r\n    }\r\n\r\n    // padding\r\n    while (true) {\r\n\r\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n            break;\r\n        }\r\n        buffer.put(QRCode.PAD0, 8);\r\n\r\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n            break;\r\n        }\r\n        buffer.put(QRCode.PAD1, 8);\r\n    }\r\n\r\n    return QRCode.createBytes(buffer, rsBlocks);\r\n}\r\n\r\nQRCode.createBytes = function (buffer, rsBlocks) {\r\n\r\n    let offset = 0;\r\n\r\n    let maxDcCount = 0;\r\n    let maxEcCount = 0;\r\n\r\n    let dcdata = new Array(rsBlocks.length);\r\n    let ecdata = new Array(rsBlocks.length);\r\n\r\n    for (let r = 0; r < rsBlocks.length; r++) {\r\n\r\n        let dcCount = rsBlocks[r].dataCount;\r\n        let ecCount = rsBlocks[r].totalCount - dcCount;\r\n\r\n        maxDcCount = Math.max(maxDcCount, dcCount);\r\n        maxEcCount = Math.max(maxEcCount, ecCount);\r\n\r\n        dcdata[r] = new Array(dcCount);\r\n\r\n        for (let i = 0; i < dcdata[r].length; i++) {\r\n            dcdata[r][i] = 0xff & buffer.buffer[i + offset];\r\n        }\r\n        offset += dcCount;\r\n\r\n        let rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\r\n        let rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\r\n\r\n        let modPoly = rawPoly.mod(rsPoly);\r\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\r\n        for (let i = 0; i < ecdata[r].length; i++) {\r\n            let modIndex = i + modPoly.getLength() - ecdata[r].length;\r\n            ecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\r\n        }\r\n\r\n    }\r\n\r\n    let totalCodeCount = 0;\r\n    for (let i = 0; i < rsBlocks.length; i++) {\r\n        totalCodeCount += rsBlocks[i].totalCount;\r\n    }\r\n\r\n    let data = new Array(totalCodeCount);\r\n    let index = 0;\r\n\r\n    for (let i = 0; i < maxDcCount; i++) {\r\n        for (let r = 0; r < rsBlocks.length; r++) {\r\n            if (i < dcdata[r].length) {\r\n                data[index++] = dcdata[r][i];\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < maxEcCount; i++) {\r\n        for (let r = 0; r < rsBlocks.length; r++) {\r\n            if (i < ecdata[r].length) {\r\n                data[index++] = ecdata[r][i];\r\n            }\r\n        }\r\n    }\r\n\r\n    return data;\r\n\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRMode\r\n//---------------------------------------------------------------------\r\n\r\nlet QRMode = {\r\n    MODE_NUMBER: 1 << 0,\r\n    MODE_ALPHA_NUM: 1 << 1,\r\n    MODE_8BIT_BYTE: 1 << 2,\r\n    MODE_KANJI: 1 << 3\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRErrorCorrectLevel\r\n//---------------------------------------------------------------------\r\n\r\nlet QRErrorCorrectLevel = {\r\n    L: 1,\r\n    M: 0,\r\n    Q: 3,\r\n    H: 2\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRMaskPattern\r\n//---------------------------------------------------------------------\r\n\r\nlet QRMaskPattern = {\r\n    PATTERN000: 0,\r\n    PATTERN001: 1,\r\n    PATTERN010: 2,\r\n    PATTERN011: 3,\r\n    PATTERN100: 4,\r\n    PATTERN101: 5,\r\n    PATTERN110: 6,\r\n    PATTERN111: 7\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRUtil\r\n//---------------------------------------------------------------------\r\n\r\nlet QRUtil = {\r\n\r\n    PATTERN_POSITION_TABLE: [\r\n        [],\r\n        [6, 18],\r\n        [6, 22],\r\n        [6, 26],\r\n        [6, 30],\r\n        [6, 34],\r\n        [6, 22, 38],\r\n        [6, 24, 42],\r\n        [6, 26, 46],\r\n        [6, 28, 50],\r\n        [6, 30, 54],\r\n        [6, 32, 58],\r\n        [6, 34, 62],\r\n        [6, 26, 46, 66],\r\n        [6, 26, 48, 70],\r\n        [6, 26, 50, 74],\r\n        [6, 30, 54, 78],\r\n        [6, 30, 56, 82],\r\n        [6, 30, 58, 86],\r\n        [6, 34, 62, 90],\r\n        [6, 28, 50, 72, 94],\r\n        [6, 26, 50, 74, 98],\r\n        [6, 30, 54, 78, 102],\r\n        [6, 28, 54, 80, 106],\r\n        [6, 32, 58, 84, 110],\r\n        [6, 30, 58, 86, 114],\r\n        [6, 34, 62, 90, 118],\r\n        [6, 26, 50, 74, 98, 122],\r\n        [6, 30, 54, 78, 102, 126],\r\n        [6, 26, 52, 78, 104, 130],\r\n        [6, 30, 56, 82, 108, 134],\r\n        [6, 34, 60, 86, 112, 138],\r\n        [6, 30, 58, 86, 114, 142],\r\n        [6, 34, 62, 90, 118, 146],\r\n        [6, 30, 54, 78, 102, 126, 150],\r\n        [6, 24, 50, 76, 102, 128, 154],\r\n        [6, 28, 54, 80, 106, 132, 158],\r\n        [6, 32, 58, 84, 110, 136, 162],\r\n        [6, 26, 54, 82, 110, 138, 166],\r\n        [6, 30, 58, 86, 114, 142, 170]\r\n    ],\r\n\r\n    G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\r\n    G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\r\n    G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\r\n\r\n    getBCHTypeInfo: function (data) {\r\n        let d = data << 10;\r\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\r\n            d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15)));\r\n        }\r\n        return ((data << 10) | d) ^ QRUtil.G15_MASK;\r\n    },\r\n\r\n    getBCHTypeNumber: function (data) {\r\n        let d = data << 12;\r\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\r\n            d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18)));\r\n        }\r\n        return (data << 12) | d;\r\n    },\r\n\r\n    getBCHDigit: function (data) {\r\n\r\n        let digit = 0;\r\n\r\n        while (data != 0) {\r\n            digit++;\r\n            data >>>= 1;\r\n        }\r\n\r\n        return digit;\r\n    },\r\n\r\n    getPatternPosition: function (typeNumber) {\r\n        return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\r\n    },\r\n\r\n    getMask: function (maskPattern, i, j) {\r\n\r\n        switch (maskPattern) {\r\n\r\n            case QRMaskPattern.PATTERN000: return (i + j) % 2 == 0;\r\n            case QRMaskPattern.PATTERN001: return i % 2 == 0;\r\n            case QRMaskPattern.PATTERN010: return j % 3 == 0;\r\n            case QRMaskPattern.PATTERN011: return (i + j) % 3 == 0;\r\n            case QRMaskPattern.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\r\n            case QRMaskPattern.PATTERN101: return (i * j) % 2 + (i * j) % 3 == 0;\r\n            case QRMaskPattern.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 == 0;\r\n            case QRMaskPattern.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 == 0;\r\n\r\n            default:\r\n                throw new Error(\"bad maskPattern:\" + maskPattern);\r\n        }\r\n    },\r\n\r\n    getErrorCorrectPolynomial: function (errorCorrectLength) {\r\n\r\n        let a = new QRPolynomial([1], 0);\r\n\r\n        for (let i = 0; i < errorCorrectLength; i++) {\r\n            a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\r\n        }\r\n\r\n        return a;\r\n    },\r\n\r\n    getLengthInBits: function (mode, type) {\r\n\r\n        if (1 <= type && type < 10) {\r\n\r\n            // 1 - 9\r\n\r\n            switch (mode) {\r\n                case QRMode.MODE_NUMBER: return 10;\r\n                case QRMode.MODE_ALPHA_NUM: return 9;\r\n                case QRMode.MODE_8BIT_BYTE: return 8;\r\n                case QRMode.MODE_KANJI: return 8;\r\n                default:\r\n                    throw new Error(\"mode:\" + mode);\r\n            }\r\n\r\n        } else if (type < 27) {\r\n\r\n            // 10 - 26\r\n\r\n            switch (mode) {\r\n                case QRMode.MODE_NUMBER: return 12;\r\n                case QRMode.MODE_ALPHA_NUM: return 11;\r\n                case QRMode.MODE_8BIT_BYTE: return 16;\r\n                case QRMode.MODE_KANJI: return 10;\r\n                default:\r\n                    throw new Error(\"mode:\" + mode);\r\n            }\r\n\r\n        } else if (type < 41) {\r\n\r\n            // 27 - 40\r\n\r\n            switch (mode) {\r\n                case QRMode.MODE_NUMBER: return 14;\r\n                case QRMode.MODE_ALPHA_NUM: return 13;\r\n                case QRMode.MODE_8BIT_BYTE: return 16;\r\n                case QRMode.MODE_KANJI: return 12;\r\n                default:\r\n                    throw new Error(\"mode:\" + mode);\r\n            }\r\n\r\n        } else {\r\n            throw new Error(\"type:\" + type);\r\n        }\r\n    },\r\n\r\n    getLostPoint: function (qrCode) {\r\n\r\n        let moduleCount = qrCode.getModuleCount();\r\n\r\n        let lostPoint = 0;\r\n\r\n        // LEVEL1\r\n\r\n        for (let row = 0; row < moduleCount; row++) {\r\n\r\n            for (let col = 0; col < moduleCount; col++) {\r\n\r\n                let sameCount = 0;\r\n                let dark = qrCode.isDark(row, col);\r\n\r\n                for (let r = -1; r <= 1; r++) {\r\n\r\n                    if (row + r < 0 || moduleCount <= row + r) {\r\n                        continue;\r\n                    }\r\n\r\n                    for (let c = -1; c <= 1; c++) {\r\n\r\n                        if (col + c < 0 || moduleCount <= col + c) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (r == 0 && c == 0) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (dark == qrCode.isDark(row + r, col + c)) {\r\n                            sameCount++;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (sameCount > 5) {\r\n                    lostPoint += (3 + sameCount - 5);\r\n                }\r\n            }\r\n        }\r\n\r\n        // LEVEL2\r\n\r\n        for (let row = 0; row < moduleCount - 1; row++) {\r\n            for (let col = 0; col < moduleCount - 1; col++) {\r\n                let count = 0;\r\n                if (qrCode.isDark(row, col)) count++;\r\n                if (qrCode.isDark(row + 1, col)) count++;\r\n                if (qrCode.isDark(row, col + 1)) count++;\r\n                if (qrCode.isDark(row + 1, col + 1)) count++;\r\n                if (count == 0 || count == 4) {\r\n                    lostPoint += 3;\r\n                }\r\n            }\r\n        }\r\n\r\n        // LEVEL3\r\n\r\n        for (let row = 0; row < moduleCount; row++) {\r\n            for (let col = 0; col < moduleCount - 6; col++) {\r\n                if (qrCode.isDark(row, col)\r\n                    && !qrCode.isDark(row, col + 1)\r\n                    && qrCode.isDark(row, col + 2)\r\n                    && qrCode.isDark(row, col + 3)\r\n                    && qrCode.isDark(row, col + 4)\r\n                    && !qrCode.isDark(row, col + 5)\r\n                    && qrCode.isDark(row, col + 6)) {\r\n                    lostPoint += 40;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let col = 0; col < moduleCount; col++) {\r\n            for (let row = 0; row < moduleCount - 6; row++) {\r\n                if (qrCode.isDark(row, col)\r\n                    && !qrCode.isDark(row + 1, col)\r\n                    && qrCode.isDark(row + 2, col)\r\n                    && qrCode.isDark(row + 3, col)\r\n                    && qrCode.isDark(row + 4, col)\r\n                    && !qrCode.isDark(row + 5, col)\r\n                    && qrCode.isDark(row + 6, col)) {\r\n                    lostPoint += 40;\r\n                }\r\n            }\r\n        }\r\n\r\n        // LEVEL4\r\n\r\n        let darkCount = 0;\r\n\r\n        for (let col = 0; col < moduleCount; col++) {\r\n            for (let row = 0; row < moduleCount; row++) {\r\n                if (qrCode.isDark(row, col)) {\r\n                    darkCount++;\r\n                }\r\n            }\r\n        }\r\n\r\n        let ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\r\n        lostPoint += ratio * 10;\r\n\r\n        return lostPoint;\r\n    }\r\n\r\n};\r\n\r\n\r\n//---------------------------------------------------------------------\r\n// QRMath\r\n//---------------------------------------------------------------------\r\n\r\nlet QRMath = {\r\n\r\n    glog: function (n) {\r\n\r\n        if (n < 1) {\r\n            throw new Error(\"glog(\" + n + \")\");\r\n        }\r\n\r\n        return QRMath.LOG_TABLE[n];\r\n    },\r\n\r\n    gexp: function (n) {\r\n\r\n        while (n < 0) {\r\n            n += 255;\r\n        }\r\n\r\n        while (n >= 256) {\r\n            n -= 255;\r\n        }\r\n\r\n        return QRMath.EXP_TABLE[n];\r\n    },\r\n\r\n    EXP_TABLE: new Array(256),\r\n\r\n    LOG_TABLE: new Array(256)\r\n\r\n};\r\n\r\nfor (let i = 0; i < 8; i++) {\r\n    QRMath.EXP_TABLE[i] = 1 << i;\r\n}\r\nfor (let i = 8; i < 256; i++) {\r\n    QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\r\n        ^ QRMath.EXP_TABLE[i - 5]\r\n        ^ QRMath.EXP_TABLE[i - 6]\r\n        ^ QRMath.EXP_TABLE[i - 8];\r\n}\r\nfor (let i = 0; i < 255; i++) {\r\n    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRPolynomial\r\n//---------------------------------------------------------------------\r\n\r\nfunction QRPolynomial(num, shift) {\r\n\r\n    if (num.length == undefined) {\r\n        throw new Error(num.length + \"/\" + shift);\r\n    }\r\n\r\n    let offset = 0;\r\n\r\n    while (offset < num.length && num[offset] == 0) {\r\n        offset++;\r\n    }\r\n\r\n    this.num = new Array(num.length - offset + shift);\r\n    for (let i = 0; i < num.length - offset; i++) {\r\n        this.num[i] = num[i + offset];\r\n    }\r\n}\r\n\r\nQRPolynomial.prototype = {\r\n\r\n    get: function (index) {\r\n        return this.num[index];\r\n    },\r\n\r\n    getLength: function () {\r\n        return this.num.length;\r\n    },\r\n\r\n    multiply: function (e) {\r\n\r\n        let num = new Array(this.getLength() + e.getLength() - 1);\r\n\r\n        for (let i = 0; i < this.getLength(); i++) {\r\n            for (let j = 0; j < e.getLength(); j++) {\r\n                num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\r\n            }\r\n        }\r\n\r\n        return new QRPolynomial(num, 0);\r\n    },\r\n\r\n    mod: function (e) {\r\n\r\n        if (this.getLength() - e.getLength() < 0) {\r\n            return this;\r\n        }\r\n\r\n        let ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\r\n\r\n        let num = new Array(this.getLength());\r\n\r\n        for (let i = 0; i < this.getLength(); i++) {\r\n            num[i] = this.get(i);\r\n        }\r\n\r\n        for (let i = 0; i < e.getLength(); i++) {\r\n            num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\r\n        }\r\n\r\n        // recursive call\r\n        return new QRPolynomial(num, 0).mod(e);\r\n    }\r\n};\r\n\r\n//---------------------------------------------------------------------\r\n// QRRSBlock\r\n//---------------------------------------------------------------------\r\n\r\nfunction QRRSBlock(totalCount, dataCount) {\r\n    this.totalCount = totalCount;\r\n    this.dataCount = dataCount;\r\n}\r\n\r\nQRRSBlock.RS_BLOCK_TABLE = [\r\n\r\n    // L\r\n    // M\r\n    // Q\r\n    // H\r\n\r\n    // 1\r\n    [1, 26, 19],\r\n    [1, 26, 16],\r\n    [1, 26, 13],\r\n    [1, 26, 9],\r\n\r\n    // 2\r\n    [1, 44, 34],\r\n    [1, 44, 28],\r\n    [1, 44, 22],\r\n    [1, 44, 16],\r\n\r\n    // 3\r\n    [1, 70, 55],\r\n    [1, 70, 44],\r\n    [2, 35, 17],\r\n    [2, 35, 13],\r\n\r\n    // 4\t\t\r\n    [1, 100, 80],\r\n    [2, 50, 32],\r\n    [2, 50, 24],\r\n    [4, 25, 9],\r\n\r\n    // 5\r\n    [1, 134, 108],\r\n    [2, 67, 43],\r\n    [2, 33, 15, 2, 34, 16],\r\n    [2, 33, 11, 2, 34, 12],\r\n\r\n    // 6\r\n    [2, 86, 68],\r\n    [4, 43, 27],\r\n    [4, 43, 19],\r\n    [4, 43, 15],\r\n\r\n    // 7\t\t\r\n    [2, 98, 78],\r\n    [4, 49, 31],\r\n    [2, 32, 14, 4, 33, 15],\r\n    [4, 39, 13, 1, 40, 14],\r\n\r\n    // 8\r\n    [2, 121, 97],\r\n    [2, 60, 38, 2, 61, 39],\r\n    [4, 40, 18, 2, 41, 19],\r\n    [4, 40, 14, 2, 41, 15],\r\n\r\n    // 9\r\n    [2, 146, 116],\r\n    [3, 58, 36, 2, 59, 37],\r\n    [4, 36, 16, 4, 37, 17],\r\n    [4, 36, 12, 4, 37, 13],\r\n\r\n    // 10\t\t\r\n    [2, 86, 68, 2, 87, 69],\r\n    [4, 69, 43, 1, 70, 44],\r\n    [6, 43, 19, 2, 44, 20],\r\n    [6, 43, 15, 2, 44, 16],\r\n\r\n    // 11\r\n    [4, 101, 81],\r\n    [1, 80, 50, 4, 81, 51],\r\n    [4, 50, 22, 4, 51, 23],\r\n    [3, 36, 12, 8, 37, 13],\r\n\r\n    // 12\r\n    [2, 116, 92, 2, 117, 93],\r\n    [6, 58, 36, 2, 59, 37],\r\n    [4, 46, 20, 6, 47, 21],\r\n    [7, 42, 14, 4, 43, 15],\r\n\r\n    // 13\r\n    [4, 133, 107],\r\n    [8, 59, 37, 1, 60, 38],\r\n    [8, 44, 20, 4, 45, 21],\r\n    [12, 33, 11, 4, 34, 12],\r\n\r\n    // 14\r\n    [3, 145, 115, 1, 146, 116],\r\n    [4, 64, 40, 5, 65, 41],\r\n    [11, 36, 16, 5, 37, 17],\r\n    [11, 36, 12, 5, 37, 13],\r\n\r\n    // 15\r\n    [5, 109, 87, 1, 110, 88],\r\n    [5, 65, 41, 5, 66, 42],\r\n    [5, 54, 24, 7, 55, 25],\r\n    [11, 36, 12],\r\n\r\n    // 16\r\n    [5, 122, 98, 1, 123, 99],\r\n    [7, 73, 45, 3, 74, 46],\r\n    [15, 43, 19, 2, 44, 20],\r\n    [3, 45, 15, 13, 46, 16],\r\n\r\n    // 17\r\n    [1, 135, 107, 5, 136, 108],\r\n    [10, 74, 46, 1, 75, 47],\r\n    [1, 50, 22, 15, 51, 23],\r\n    [2, 42, 14, 17, 43, 15],\r\n\r\n    // 18\r\n    [5, 150, 120, 1, 151, 121],\r\n    [9, 69, 43, 4, 70, 44],\r\n    [17, 50, 22, 1, 51, 23],\r\n    [2, 42, 14, 19, 43, 15],\r\n\r\n    // 19\r\n    [3, 141, 113, 4, 142, 114],\r\n    [3, 70, 44, 11, 71, 45],\r\n    [17, 47, 21, 4, 48, 22],\r\n    [9, 39, 13, 16, 40, 14],\r\n\r\n    // 20\r\n    [3, 135, 107, 5, 136, 108],\r\n    [3, 67, 41, 13, 68, 42],\r\n    [15, 54, 24, 5, 55, 25],\r\n    [15, 43, 15, 10, 44, 16],\r\n\r\n    // 21\r\n    [4, 144, 116, 4, 145, 117],\r\n    [17, 68, 42],\r\n    [17, 50, 22, 6, 51, 23],\r\n    [19, 46, 16, 6, 47, 17],\r\n\r\n    // 22\r\n    [2, 139, 111, 7, 140, 112],\r\n    [17, 74, 46],\r\n    [7, 54, 24, 16, 55, 25],\r\n    [34, 37, 13],\r\n\r\n    // 23\r\n    [4, 151, 121, 5, 152, 122],\r\n    [4, 75, 47, 14, 76, 48],\r\n    [11, 54, 24, 14, 55, 25],\r\n    [16, 45, 15, 14, 46, 16],\r\n\r\n    // 24\r\n    [6, 147, 117, 4, 148, 118],\r\n    [6, 73, 45, 14, 74, 46],\r\n    [11, 54, 24, 16, 55, 25],\r\n    [30, 46, 16, 2, 47, 17],\r\n\r\n    // 25\r\n    [8, 132, 106, 4, 133, 107],\r\n    [8, 75, 47, 13, 76, 48],\r\n    [7, 54, 24, 22, 55, 25],\r\n    [22, 45, 15, 13, 46, 16],\r\n\r\n    // 26\r\n    [10, 142, 114, 2, 143, 115],\r\n    [19, 74, 46, 4, 75, 47],\r\n    [28, 50, 22, 6, 51, 23],\r\n    [33, 46, 16, 4, 47, 17],\r\n\r\n    // 27\r\n    [8, 152, 122, 4, 153, 123],\r\n    [22, 73, 45, 3, 74, 46],\r\n    [8, 53, 23, 26, 54, 24],\r\n    [12, 45, 15, 28, 46, 16],\r\n\r\n    // 28\r\n    [3, 147, 117, 10, 148, 118],\r\n    [3, 73, 45, 23, 74, 46],\r\n    [4, 54, 24, 31, 55, 25],\r\n    [11, 45, 15, 31, 46, 16],\r\n\r\n    // 29\r\n    [7, 146, 116, 7, 147, 117],\r\n    [21, 73, 45, 7, 74, 46],\r\n    [1, 53, 23, 37, 54, 24],\r\n    [19, 45, 15, 26, 46, 16],\r\n\r\n    // 30\r\n    [5, 145, 115, 10, 146, 116],\r\n    [19, 75, 47, 10, 76, 48],\r\n    [15, 54, 24, 25, 55, 25],\r\n    [23, 45, 15, 25, 46, 16],\r\n\r\n    // 31\r\n    [13, 145, 115, 3, 146, 116],\r\n    [2, 74, 46, 29, 75, 47],\r\n    [42, 54, 24, 1, 55, 25],\r\n    [23, 45, 15, 28, 46, 16],\r\n\r\n    // 32\r\n    [17, 145, 115],\r\n    [10, 74, 46, 23, 75, 47],\r\n    [10, 54, 24, 35, 55, 25],\r\n    [19, 45, 15, 35, 46, 16],\r\n\r\n    // 33\r\n    [17, 145, 115, 1, 146, 116],\r\n    [14, 74, 46, 21, 75, 47],\r\n    [29, 54, 24, 19, 55, 25],\r\n    [11, 45, 15, 46, 46, 16],\r\n\r\n    // 34\r\n    [13, 145, 115, 6, 146, 116],\r\n    [14, 74, 46, 23, 75, 47],\r\n    [44, 54, 24, 7, 55, 25],\r\n    [59, 46, 16, 1, 47, 17],\r\n\r\n    // 35\r\n    [12, 151, 121, 7, 152, 122],\r\n    [12, 75, 47, 26, 76, 48],\r\n    [39, 54, 24, 14, 55, 25],\r\n    [22, 45, 15, 41, 46, 16],\r\n\r\n    // 36\r\n    [6, 151, 121, 14, 152, 122],\r\n    [6, 75, 47, 34, 76, 48],\r\n    [46, 54, 24, 10, 55, 25],\r\n    [2, 45, 15, 64, 46, 16],\r\n\r\n    // 37\r\n    [17, 152, 122, 4, 153, 123],\r\n    [29, 74, 46, 14, 75, 47],\r\n    [49, 54, 24, 10, 55, 25],\r\n    [24, 45, 15, 46, 46, 16],\r\n\r\n    // 38\r\n    [4, 152, 122, 18, 153, 123],\r\n    [13, 74, 46, 32, 75, 47],\r\n    [48, 54, 24, 14, 55, 25],\r\n    [42, 45, 15, 32, 46, 16],\r\n\r\n    // 39\r\n    [20, 147, 117, 4, 148, 118],\r\n    [40, 75, 47, 7, 76, 48],\r\n    [43, 54, 24, 22, 55, 25],\r\n    [10, 45, 15, 67, 46, 16],\r\n\r\n    // 40\r\n    [19, 148, 118, 6, 149, 119],\r\n    [18, 75, 47, 31, 76, 48],\r\n    [34, 54, 24, 34, 55, 25],\r\n    [20, 45, 15, 61, 46, 16]\r\n];\r\n\r\nQRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\r\n\r\n    let rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\r\n\r\n    if (rsBlock == undefined) {\r\n        throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\r\n    }\r\n\r\n    let length = rsBlock.length / 3;\r\n\r\n    let list = new Array();\r\n\r\n    for (let i = 0; i < length; i++) {\r\n\r\n        let count = rsBlock[i * 3 + 0];\r\n        let totalCount = rsBlock[i * 3 + 1];\r\n        let dataCount = rsBlock[i * 3 + 2];\r\n\r\n        for (let j = 0; j < count; j++) {\r\n            list.push(new QRRSBlock(totalCount, dataCount));\r\n        }\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\nQRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\r\n\r\n    switch (errorCorrectLevel) {\r\n        case QRErrorCorrectLevel.L:\r\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\r\n        case QRErrorCorrectLevel.M:\r\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\r\n        case QRErrorCorrectLevel.Q:\r\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\r\n        case QRErrorCorrectLevel.H:\r\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\r\n//---------------------------------------------------------------------\r\n// QRBitBuffer\r\n//---------------------------------------------------------------------\r\n\r\nfunction QRBitBuffer() {\r\n    this.buffer = new Array();\r\n    this.length = 0;\r\n}\r\n\r\nQRBitBuffer.prototype = {\r\n\r\n    get: function (index) {\r\n        let bufIndex = Math.floor(index / 8);\r\n        return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) == 1;\r\n    },\r\n\r\n    put: function (num, length) {\r\n        for (let i = 0; i < length; i++) {\r\n            this.putBit(((num >>> (length - i - 1)) & 1) == 1);\r\n        }\r\n    },\r\n\r\n    getLengthInBits: function () {\r\n        return this.length;\r\n    },\r\n\r\n    putBit: function (bit) {\r\n\r\n        let bufIndex = Math.floor(this.length / 8);\r\n        if (this.buffer.length <= bufIndex) {\r\n            this.buffer.push(0);\r\n        }\r\n\r\n        if (bit) {\r\n            this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\r\n        }\r\n\r\n        this.length++;\r\n    }\r\n};\r\n\r\n/**\r\n * 二维码组件\r\n */\r\nlet CQRCode = cc.Class({\r\n    extends: cc.Graphics,\r\n    properties: {\r\n        string: {\r\n            default: 'Hello World!',\r\n            notify(oldValue) {\r\n                if (this.string === oldValue) {\r\n                    return;\r\n                }\r\n                this.setContent();\r\n            },\r\n        },\r\n\r\n        backColor: {\r\n            type: cc.Color,\r\n            default: cc.Color.WHITE,\r\n            notify() {\r\n                this.setContent();\r\n            },\r\n        },\r\n\r\n        foreColor: {\r\n            type: cc.Color,\r\n            default: cc.Color.BLACK,\r\n            notify(old) {\r\n                this.node.color = this.foreColor;\r\n                this.setContent();\r\n            },\r\n        },\r\n\r\n        margin: {\r\n            type: cc.Float,\r\n            default: 10,\r\n            notify(old) {\r\n                if (old === this.margin) {\r\n                    return;\r\n                }\r\n                this.setContent();\r\n            }\r\n        },\r\n\r\n        _size: 200,\r\n        size: {\r\n            type: cc.Float,\r\n            get() {\r\n                return this._size;\r\n            },\r\n\r\n            set(value) {\r\n                if (this._size === value) {\r\n                    return;\r\n                }\r\n                \r\n                this.node.setContentSize(value, value);\r\n                this.setContent();\r\n                this._size = value;\r\n            },\r\n        }\r\n    },\r\n\r\n    onLoad() {\r\n        this.node.setContentSize(this._size, this._size);\r\n        this.setContent();\r\n    },\r\n\r\n    setContent() {\r\n        this.clear();\r\n        //背景色\r\n        this.fillColor = this.backColor;\r\n        let width = this.node.width;\r\n        let offsetX = -width * this.node.anchorX;\r\n        let offsetY = -width * this.node.anchorY;\r\n        this.rect(offsetX, offsetY, width, width);\r\n        this.fill();\r\n        this.close();\r\n        //生成二维码数据\r\n        let qrcode = new QRCode(-1, 2);\r\n        qrcode.addData(this.string);\r\n        qrcode.make();\r\n        this.fillColor = this.foreColor;\r\n        let size = width - this.margin * 2;\r\n        let num = qrcode.getModuleCount();\r\n        \r\n        let tileW = size / num;\r\n        let tileH = size / num;\r\n        let w = Math.ceil(tileW);\r\n        let h = Math.ceil(tileH);\r\n        for (let row = 0; row < num; row++) {\r\n            for (let col = 0; col < num; col++) {\r\n                if (qrcode.isDark(row, col)) {\r\n                    this.rect(offsetX + this.margin + col * tileW, offsetX + size - tileH - Math.round(row * tileH) + this.margin, w, h);\r\n                    this.fill();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    \r\n});\r\n\r\ncc.Class.Attr.setClassAttr(CQRCode, 'lineWidth', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'lineJoin', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'lineCap', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'strokeColor', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'miterLimit', 'visible', false);\r\ncc.Class.Attr.setClassAttr(CQRCode, 'fillColor', 'visible', false);\r\n\r\nmodule.exports = CQRCode;","import { GUserMgr } from \"../Logic/UserManager\";\r\nimport { EPrepareTimeOutType, EFeeType, ETableState } from \"../Config/_ini_\";\r\nimport { ETexasSeatState } from \"./TexasTableDataModel\";\r\n\r\nexport class _ECardSeatState\r\n{\r\n    Waiting=0\r\n    Preparing=1\r\n    Playing=2\r\n    Leaving=3\r\n}\r\nexport let ECardSeatState=new _ECardSeatState()\r\n\r\nexport class CardRoomInfo\r\n{\r\n    _id:string = \"\"\r\n    game_name:string = \"\"\r\n    level:number = 0\r\n    base:number = 0\r\n    min:number = 0\r\n    max:number = -1\r\n    user_num:number = 0\r\n}\r\n\r\nexport enum ETableType\r\n{\r\n    Friend=0,//自建\r\n    Score,//竞技点\r\n    ClubFriend,//俱乐部自建\r\n}\r\n\r\n\r\nexport class PlayerInfo\r\n{\r\n    id=-1           //用户id\r\n    nickname=\"\"     //名称\r\n    logo=\"\"         //头像\r\n    sex=-1          //性别\r\n    ip=\"\"           //登陆ip\r\n    with_point=0    //带入分数\r\n    point=0         //当前分数\r\n    crystal=0\r\n    is_robot=0\r\n}\r\nexport class CardSeatInfo\r\n{\r\n    playerinfo:PlayerInfo=null\r\n    state=ECardSeatState.Waiting\r\n    index=-1        //座位号\r\n    dt_point=0      //当前局分数\r\n    auto=false\r\n    agree_dismiss=null\r\n}\r\n\r\nexport class CardRecordSeatInfo\r\n{\r\n    playerinfo:PlayerInfo=null\r\n    index=-1        //座位号\r\n    table_id=-1\r\n    dtpoint=0\r\n}\r\nexport class CardCreateTableDataModel\r\n{\r\n    /**\r\n     * 房间类型\r\n     */\r\n    table_type:ETableType=-1\r\n    /**\r\n     * 游戏分类\r\n     */\r\n    game_type=-1\r\n    /**\r\n     * 底分\r\n     */\r\n    base_point:number=1\r\n    /**\r\n     * 最小金币携带量\r\n     */\r\n    min_point:number=-1\r\n    /**\r\n     * 最多人数\r\n     */\r\n    max_user:number=-1\r\n    /**\r\n     * 最低人数\r\n     */\r\n    min_user:number=-1\r\n    /**\r\n     * 局数\r\n     */\r\n    total_num:number=-1\r\n    /**\r\n     * 付费方式\r\n     */\r\n    fee_type:EFeeType=-1\r\n    /**\r\n     * 是否可以中途加入\r\n     */\r\n    can_enter_after:boolean = false\r\n    /**\r\n     * 是否可以中途离开\r\n     */\r\n    can_leave:boolean = false\r\n    /**\r\n     * 是否可以随时离开，包括正在玩耍还没结束当前局\r\n     */\r\n    can_any_leave:boolean = false\r\n    /**\r\n     * 是否需要记录结束时候的总结战绩，通常只有再单纯固定局数的玩法中为true其他都为false\r\n     */\r\n    need_end_record:boolean = false\r\n    /**\r\n     * 是否自动准备\r\n     */\r\n    auto_prepare:boolean = false\r\n    /**\r\n     * 自动坐下模式不可支持旁观\r\n     * 非自动坐下模式可支持旁观\r\n     */\r\n    auto_sitdown:boolean = false   \r\n    /**\r\n     * 超时准备的处理方式\r\n     */\r\n    prepare_timeout_type = EPrepareTimeOutType.None\r\n    /**\r\n     * 是否随机座位\r\n     */\r\n    random_seat:boolean=true\r\n    /**\r\n     * 是否携带金币\r\n     */\r\n    carry_coin:boolean=false\r\n    /**\r\n     * 虚拟金币（非携带模式使用）\r\n     */\r\n    virtual_coin:number = -1\r\n}\r\nexport class CardTableInfo<TSeatInfo extends CardSeatInfo>\r\n{\r\n    ctdm:CardCreateTableDataModel = null\r\n    id = -1\r\n    room_id = \"\"\r\n    room_level = -1\r\n    club_id = -1\r\n    state = -1\r\n    create_user_id = -1\r\n    is_dismissing = false\r\n    apply_dismiss_user_id = -1\r\n    cur_num = -1                        //当前局数\r\n    dismiss_timeout = -1\r\n    timeout = -1\r\n    seats:{[user_id:number]:TSeatInfo} = {}\r\n    audience = new Map<number,{id:number,logo:string,nickname:string}>()\r\n}\r\n\r\nexport class CardRecordTableInfo<TRecordSeatInfo extends CardRecordSeatInfo>\r\n{\r\n    userrecords:{[user_id:number]:TRecordSeatInfo}={}\r\n    table_id:number=-1\r\n    create_time:number=-1\r\n    create_user_id=-1\r\n    create_user_nickname=\"\"\r\n    create_user_logo=\"\"\r\n    ctdm:CardCreateTableDataModel=null\r\n    total_num:number=-1\r\n\tcur_num:number=-1\r\n    begin_time:number=-1\r\n    end_time:number=-1\r\n}\r\n\r\nexport class CardTableDataModel<TSeatInfo extends CardSeatInfo,TTableInfo extends CardTableInfo<TSeatInfo>,TRecordSeatInfo extends CardRecordSeatInfo,TRecordTableInfo extends CardRecordTableInfo<TRecordSeatInfo>>\r\n{\r\n    /**\r\n     * room_id,RoomModel\r\n     */\r\n    protected _room_infos:Map<number,CardRoomInfo>=null\r\n    get roomInfos()\r\n    {\r\n        return this._room_infos\r\n    }\r\n    set roomInfos(value)\r\n    {\r\n        this._room_infos=value\r\n    }\r\n    protected _cur_room_id:number=-1\r\n    get curRoomId()\r\n    {\r\n        return this._cur_room_id\r\n    }\r\n    set curRoomId(value)\r\n    {\r\n        this._cur_room_id=value\r\n    }\r\n    get curRoomInfo():CardRoomInfo\r\n    {\r\n        return this._room_infos[this._cur_room_id]\r\n    }\r\n    protected _table_infos:{[table_id:number]:TTableInfo}={}\r\n    getTableInfo(table_id:number)\r\n    {\r\n        return this._table_infos[table_id]\r\n    }\r\n\r\n    protected _battlerecords:{[table_id:number]:TRecordTableInfo[]}={}\r\n    get battleRecords()\r\n    {\r\n        return this._battlerecords\r\n    }\r\n    addBattleRecords(value:TRecordTableInfo[])\r\n    {\r\n        if(!value||value.length<=0)\r\n        {\r\n            return\r\n        }\r\n        let table_id=value[0].table_id\r\n        this._battlerecords[table_id]=this._battlerecords[table_id]||[]\r\n        this._battlerecords[table_id]=this._battlerecords[table_id].concat(value)\r\n    }\r\n    getUserIdList(table_id:number)\r\n    {\r\n        let user_id_list=[]\r\n        let ti = this._table_infos[table_id]\r\n        if(!ti)\r\n        {\r\n            return user_id_list\r\n        }\r\n        for(let user_id in ti.seats)\r\n        {\r\n            if(ti.seats[user_id])\r\n            {\r\n                user_id_list.push(user_id)\r\n            }\r\n        }\r\n        return user_id_list\r\n    }\r\n    getSeatByUserId(table_id:number,user_id:number)\r\n    {\r\n        let ti = this._table_infos[table_id]\r\n        if(!ti||!ti.seats)\r\n\t\t{\r\n\t\t\treturn null\r\n        }\r\n        return ti.seats[user_id]\r\n    }\r\n    getSeatByIndex(table_id:number,index:number)\r\n\t{\r\n        let ti = this._table_infos[table_id]\r\n        if(!ti||!ti.seats)\r\n        {\r\n            return null\r\n        }\r\n        for(let user_id in ti.seats)\r\n\t\t{\r\n            let st = ti.seats[user_id] as TSeatInfo\r\n            if(st&&st.index==index)\r\n            {\r\n                return st\r\n            }\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n    init(table_info:TTableInfo)\r\n    {\r\n        this._table_infos[table_info.id] = table_info\r\n        for(let user_id in table_info.seats)\r\n        {\r\n            let seat = table_info.seats[user_id]\r\n            seat.dt_point = Math.abs(seat.dt_point||0)\r\n        }\r\n        this._refreshToUserMgr(table_info)\r\n    }\r\n    protected _refreshToUserMgr(table_info:TTableInfo)\r\n    {\r\n        for(let user_id in table_info.seats)\r\n        {\r\n            let seat = table_info.seats[user_id] as TSeatInfo\r\n            this._addOneUserBySeat(seat)\r\n        }\r\n    }\r\n    protected _addOneUserBySeat(seat:TSeatInfo)\r\n    {\r\n        let one = \r\n        {\r\n            id:seat.playerinfo.id,\r\n            nickname:seat.playerinfo.nickname,\r\n            sex:seat.playerinfo.sex,\r\n            logo:seat.playerinfo.logo,\r\n            ip:seat.playerinfo.ip,\r\n        }\r\n        GUserMgr.addOneUser(<any>one)\r\n    }\r\n    onEnter(table_id:number,seatinfo:TSeatInfo)\r\n\t{\r\n        let ti = this._table_infos[table_id]\r\n\t\tti.seats[seatinfo.playerinfo.id] = seatinfo\r\n\t\tlet one = \r\n\t\t{\r\n\t\t\tid:seatinfo.playerinfo.id,\r\n\t\t\tnickname:seatinfo.playerinfo.nickname,\r\n\t\t\tlogo:seatinfo.playerinfo.logo,\r\n\t\t\tsex:seatinfo.playerinfo.sex,\r\n\t\t\tip:seatinfo.playerinfo.ip,\r\n\t\t}\r\n\t\tGUserMgr.addOneUser(<any>one)\r\n\t}\r\n    //有玩家进来\r\n    \r\n    \r\n    onSitdown(table_id:number,seat:TSeatInfo)\r\n    {\r\n        let ti = this._table_infos[table_id]\r\n        if(!ti)\r\n        {\r\n            return\r\n        }\r\n        ti.seats[seat.playerinfo.id] = seat\r\n        this._refreshToUserMgr(ti)\r\n    }\r\n    onStandup(table_id:number,user_id:number)\r\n    {\r\n        let tableinfo = this.getTableInfo(table_id)\r\n        if(!tableinfo)\r\n        {\r\n            return\r\n        }\r\n        delete tableinfo.seats[user_id]\r\n    }\r\n    //有玩家托管\r\n    onAuto(table_id:number,user_id:number,auto:boolean)\r\n    {\r\n        let seat = this.getSeatByUserId(table_id,user_id)\r\n        seat.auto = auto\r\n    }\r\n    onAgree(table_id:number,user_id:number,agree_dismiss)\r\n    {\r\n        let seat = this.getSeatByUserId(table_id,user_id)\r\n        seat.agree_dismiss = agree_dismiss\r\n    }\r\n    onApplyDismiss(table_id:number,user_id:number,deadline:number)\r\n    {\r\n        this.onAgree(table_id,user_id,true)\r\n        this._table_infos[table_id].apply_dismiss_user_id = user_id\r\n        this._table_infos[table_id].timeout = deadline   \r\n    }\r\n    onPrepare(table_id:number,user_id:number)\r\n    {\r\n        let seat = this.getSeatByUserId(table_id,user_id)\r\n        seat.state = ECardSeatState.Preparing\r\n    }\r\n    onResult(record:TRecordTableInfo)\r\n    {\r\n        let ti = this._table_infos[record.table_id]\r\n        if(!ti)\r\n        {\r\n            return\r\n        }\r\n        ++ti.cur_num\r\n        ti.state=ETableState.End\r\n        this._battlerecords[record.table_id]=this._battlerecords[record.table_id]||[]\r\n\t\tthis._battlerecords[record.table_id].push(record)\r\n        for(let user_id in record.userrecords)\r\n        {\r\n            let one = record.userrecords[user_id]\r\n            let seat = this.getSeatByUserId(record.table_id,one.playerinfo.id)\r\n\t\t\tseat.playerinfo.point = one.playerinfo.point\r\n\t\t}\r\n    }\r\n    //有玩家离开\r\n    onLeave(table_id:number,user_id:number)\r\n    {\r\n        delete this._table_infos[table_id].seats[user_id]\r\n    }\r\n}","import { eventMgr } from \"../../../manager/EventManager\";\r\nimport { resMgr } from \"../../../manager/ResourceManager\";\r\nimport { GSettingDM } from \"../../../Framework/DataModel/SettingDataModel\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n// 14,2-13,其中14位A，而0、1、2、3 = 黑、红、梅、方\r\n// 例如{0,14}代表黑桃A  52\r\nexport class CardInfo {\r\n    id: number = 0;\r\n    x: number = 0;\r\n    y: number = 0;\r\n    scale: number = 1;\r\n    mark: number = 0;\r\n    select: boolean = false;\r\n    delay: number = 0;\r\n}\r\n\r\n@ccclass\r\nexport default class Card extends cc.Component {\r\n\r\n    // @property(cc.Sprite)\r\n    // imgCard: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    imgLight: cc.Sprite = null;\r\n\r\n    @property(cc.Node)\r\n    imgShadow: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    imgBack: cc.Node = null;\r\n\r\n    public info: CardInfo = new CardInfo();\r\n    \r\n    @property(cc.Node) rootNode: cc.Node = null;\r\n    @property(cc.Node) img_cardFace: cc.Node = null;\r\n    @property(cc.Sprite) img_num: cc.Sprite = null;\r\n    @property(cc.Node) img_shadow: cc.Node = null;\r\n\r\n    private _bBonny: boolean = false;\r\n    private _dealPos: cc.Vec2 = cc.v2(0, 0);\r\n    private _dealRotate: number = 0;\r\n    private _dealTime: number = 0;\r\n    private _hasContent: boolean = false;\r\n\r\n    setColor(color:cc.Color)\r\n    {\r\n        if(!this.img_num)\r\n        {\r\n            return\r\n        }\r\n        this.img_num.node.color=color\r\n    }\r\n\r\n    onLoad() {\r\n        this.node.active = true;\r\n        this.img_cardFace.active = false;\r\n\r\n        this.imgBack.active = true;\r\n        this.imgShadow.active = false;\r\n        this.imgLight.node.active = false;\r\n\r\n        this.updateCardBack()\r\n    }\r\n\r\n    // 重置牌值（默认显示牌背）\r\n    public reset() {\r\n        this._hasContent = false;\r\n        //cv.resMgr.setSpriteFrame(this.img_num.node, this._getCardBgResPath());\r\n        let imgpath = this._getCardBgResPath();\r\n        resMgr.loadImage(imgpath, (res) => {\r\n            cc.isValid(this.img_num) && (this.img_num.spriteFrame = res);\r\n        })\r\n    }\r\n\r\n    setCardBg(index: number) {\r\n        let suffix: string = \"image/game/card/img_card_back\" + index.toString();\r\n        let path = `${suffix}`;\r\n\r\n        resMgr.loadImage(path, (res) => {\r\n            cc.isValid(this.imgBack) && (this.imgBack.getComponent(cc.Sprite).spriteFrame = res);\r\n        })\r\n    }\r\n\r\n    _getCardBgResPath() {\r\n        let str = cc.sys.localStorage.getItem(\"setting_cardbg_style\") || \"1\"\r\n        let suffix: string = \"image/game/card/img_card_back\" + str;\r\n        let path = `${suffix}`;\r\n\r\n        return path;\r\n    }\r\n\r\n    updateCardBack(): void {\r\n        let path: string = this._getCardBgResPath();\r\n        resMgr.loadImage(path, (res) => {\r\n            cc.isValid(this.imgBack) && (this.imgBack.getComponent(cc.Sprite).spriteFrame = res);\r\n        })\r\n    }\r\n\r\n    updateCardBack1(): void {\r\n        let path: string = \"image/game/card/img_card_back1\";\r\n        resMgr.loadImage(path, (res) => {\r\n            cc.isValid(this.imgBack) && (this.imgBack.getComponent(cc.Sprite).spriteFrame = res);\r\n        })\r\n    }\r\n\r\n    setContent(id: number): void {\r\n        //this.imgBack.active = id == 0;\r\n        this.info.id = id;\r\n        this.setColor(cc.Color.WHITE)\r\n        resMgr.loadCard(Number(GSettingDM.card_style), id, (res) => {\r\n            cc.isValid(this.img_num) && (this.img_num.spriteFrame = res);\r\n            this._hasContent = true;\r\n        });\r\n        // resMgr.loadImage(\"image/card/1/\" + id, (res) => {\r\n        //     cc.isValid(this.img_num) && (this.img_num.spriteFrame = res);\r\n        //     this._hasContent = true;\r\n        // })\r\n    }\r\n\r\n    setReviewContent(id: number): void {\r\n        //this.imgBack.active = id == 0;\r\n        this.info.id = id;\r\n        this.setColor(cc.Color.WHITE)\r\n        resMgr.loadCard(5, id, (res) => {\r\n            cc.isValid(this.img_num) && (this.img_num.spriteFrame = res);\r\n            this._hasContent = true;\r\n        });\r\n        // resMgr.loadImage(\"image/card/1/\" + id, (res) => {\r\n        //     cc.isValid(this.img_num) && (this.img_num.spriteFrame = res);\r\n        //     this._hasContent = true;\r\n        // })\r\n    }\r\n\r\n \r\n\r\n\r\n    clearContent(): void {\r\n        // let path: string = `${this._card_back_folder_path}Pb_02`;\r\n        // cv.resMgr.setSpriteFrame(this.img_num.node, path);\r\n        this.info.id = 0\r\n        this.img_num.spriteFrame=null\r\n        // this.imgBack.active = this.info.id == 0;\r\n\r\n        this._hasContent = false;\r\n        this.doStopAllActions()\r\n    }\r\n\r\n\r\n\r\n \r\n    /**\r\n     * 当前牌是否设置了牌内容\r\n     */\r\n    hasContent(): boolean {\r\n        return this._hasContent;\r\n    }\r\n\r\n    /**\r\n    * 设置坐标(把传入的坐标转换为该节点坐标系坐标)\r\n    */\r\n    setDealPos(pos: cc.Vec2): void {\r\n        this.node.convertToNodeSpaceAR(pos, this._dealPos);\r\n    }\r\n\r\n    getDealPos() {\r\n        return this._dealPos;\r\n    }\r\n    /**\r\n     * 重置节点坐标,旋转角度\r\n     */\r\n    resetPos(): void {\r\n        this.rootNode.setPosition(cc.v2(0, 0));\r\n        this.rootNode.angle = 0;\r\n    }\r\n\r\n    /**\r\n     * 设置旋转角度\r\n     */\r\n    setDealRotate(rotate: number): void {\r\n        this._dealRotate = rotate;\r\n    }\r\n\r\n    deal(delay: number) {\r\n        this.node.active = true;\r\n        this.imgBack.runAction(cc.show());\r\n        this._onDeal(delay)\r\n    }\r\n\r\n    private resetPosTimeOut = null\r\n    private _onDeal(delay: number): void {\r\n        this.node.parent.opacity=255;\r\n        this.node.parent.scale = 1;\r\n        this.node.opacity=255\r\n\r\n        this.rootNode.stopAllActions()\r\n\r\n        this.rootNode.setPosition(this._dealPos);\r\n        let resetPos = cc.callFunc(this.resetCardPos.bind(this));\r\n        this.rootNode.runAction(cc.sequence(cc.delayTime(delay),cc.moveTo(0.3, new cc.Vec2(0, 0)), resetPos))\r\n    }\r\n\r\n    public resetCardPos(): void {\r\n        this.rootNode.setPosition(0, 0)\r\n    }\r\n\r\n \r\n    /**\r\n    * 设置透明度  发发看之前为透明，现在改为不透明\r\n    */\r\n    setOp(op: boolean): void {\r\n        this._bBonny = op;\r\n        this.node.opacity = op ? 80 : 255;\r\n        // this.img_num.node.opacity = op ? 80 : 255;\r\n        // this.img_back.node.opacity = op ? 80 : 255;\r\n        // this.img_num.node.opacity = op ? 80 : 255;\r\n    }\r\n\r\n    isBonny(): boolean {\r\n        return this._bBonny;\r\n    }\r\n\r\n    \r\n    turn(delay: number, showAction: boolean = false): void {\r\n        this._realTurn(showAction,delay)\r\n    }   \r\n\r\n    doStopAllActions(){\r\n        this.node.stopAllActions()\r\n        this.imgBack.stopAllActions()\r\n        this.rootNode.stopAllActions()\r\n        this.img_cardFace.stopAllActions()\r\n        // this.rootNode.setPosition(new cc.Vec2(0,0))\r\n        this.resetCardPos()\r\n\r\n    }\r\n\r\n    public isFace() {\r\n        return this.img_cardFace.active = true;\r\n    }\r\n\r\n    private _realTurn(showAction: boolean,dely:number): void {\r\n        //if (this.isFace()) return;\r\n\r\n        if (showAction) {\r\n            this.img_cardFace.active = true;\r\n            this.img_cardFace.runAction(cc.sequence(cc.delayTime(dely),cc.scaleTo(0.13, 0.01, 1), cc.scaleTo(0.13, 1, 1)));\r\n            let turnCallBack = cc.callFunc(this.hide_Img_back.bind(this));\r\n            this.imgBack.runAction(cc.sequence(cc.delayTime(dely),cc.scaleTo(0.13, 0.01, 1), turnCallBack));\r\n        } else {\r\n            this.setFace(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 设置是否显示牌面\r\n    * @param bActive true:显示牌正面, false:显示牌背面\r\n    */\r\n    setFace(bActive: boolean): void {\r\n        this.doStopAllActions()\r\n        this.img_cardFace.active = bActive;\r\n        this.img_cardFace.scaleX = 1;\r\n\r\n        this.imgBack.active = !bActive;\r\n        this.imgBack.scaleX = 1;\r\n\r\n        this.img_cardFace.angle = 0;\r\n        this.imgBack.angle = 0;\r\n\r\n        this.resetCardPos()\r\n    }\r\n\r\n    setGary(b: boolean) {\r\n        this.img_shadow.active = b;\r\n    }\r\n\r\n    public hide_Img_back(): void {\r\n        this.imgBack.active = false;\r\n        this.imgBack.scaleX = 1;\r\n    }\r\n\r\n    init(info) {\r\n        if (this.info != info) {\r\n            this.info = info;\r\n        } else {\r\n            this.initTable();\r\n        }\r\n    }\r\n\r\n    update (dt) {\r\n        if (!this.info) {\r\n            return;\r\n        }\r\n\r\n        this.imgShadow.opacity = this.info.select ? 128 : 0;\r\n\r\n        if (this.info.delay > 0) {\r\n            this.info.delay -= dt;\r\n            if (this.info.delay <= 0) {\r\n                this.info.delay = 0;\r\n            }\r\n            return;\r\n        }\r\n    }\r\n\r\n    onDisable() {\r\n        eventMgr.removeListener(this);\r\n    }\r\n\r\n    initTable() {\r\n        if (!this.info) {\r\n            return;\r\n        }\r\n\r\n        this.imgBack.active = this.info.id == 0;\r\n        // resMgr.loadImage(\"image/card/1\" + this.info.id, (res) => {\r\n        //     cc.isValid(this.img_num) && (this.img_num.spriteFrame = res);\r\n        // })\r\n\r\n        resMgr.loadCard(Number(GSettingDM.card_style), this.info.id, (res) => {\r\n            cc.isValid(this.img_num) && (this.img_num.spriteFrame = res);\r\n            this._hasContent = true;\r\n        });\r\n    }\r\n}\r\n","import { GHallHttp } from \"../Net/HallHttp\"\r\n\r\nexport interface ClubModel\r\n{\r\n    _id:string\r\n    id:number\r\n    invite_code:string\r\n    title:string\r\n    url:string\r\n    icon:string\r\n    ads:string[]\r\n    notice:string\r\n    region:string\r\n    provience:string\r\n    city:string\r\n    address:string\r\n    address_detail:string\r\n    service:string\r\n    user_count:number\r\n    create_time:number\r\n    open:number\r\n}\r\n\r\nclass ClubService\r\n{\r\n    private static _instance: ClubService = null\r\n    protected _clubs:ClubModel[]=null\r\n    get clubs()\r\n    {\r\n        return this._clubs\r\n    }\r\n    async init()\r\n    {\r\n        if( this._clubs){\r\n            return this._clubs\r\n        }\r\n        let res = await GHallHttp.request(\"GetClubList\")\r\n        this._clubs=res.clublist||[]\r\n        return this._clubs\r\n    }\r\n\r\n    async getClubDataById(clubId){\r\n        let allClubDatas = await this.init()\r\n\r\n        for(var v of allClubDatas){\r\n            if(v.id.toString() == clubId.toString()){\r\n                return v\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    async joinClub(clubId)\r\n    {\r\n        let res = await GHallHttp.request(\"joinclub\",{club_id:clubId})\r\n        return res\r\n    }\r\n\r\n    async quitClub(clubId)\r\n    {\r\n        let res = await GHallHttp.request(\"QuitClub\",{club_id:clubId})\r\n        return res\r\n    }\r\n\r\n    async searchClub(message)\r\n    {\r\n        let res = await GHallHttp.request(\"Searchclub\",message)\r\n        return res\r\n    }\r\n\r\n    static  instance(){\r\n        if(this._instance === null) {\r\n          this._instance = new ClubService()\r\n        }\r\n        return this._instance\r\n    }\r\n    \r\n}\r\nexport let GClubSer:ClubService =  ClubService.instance()","import { GHelper } from \"../Logic/Helper\";\r\nimport { core } from \"../Core/Base\";\r\n\r\nexport class CoinRain extends cc.Component\r\n{\r\n    protected isSpine = true\r\n    protected _spinePath = \"Platform/View/Page/Res/Common/spine/goldcoin2\"\r\n    protected trackIndex = 0\r\n    protected _is_rain = true\r\n    set isRain(value)\r\n    {\r\n        this._is_rain = value\r\n    }\r\n    protected _fly_up_height = 640\r\n    set flyUpHeight(value)\r\n    {\r\n        this._fly_up_height = value\r\n    }\r\n    protected _fly_down_height = -60\r\n    set flyDownHeight(value)\r\n    {\r\n        this._fly_down_height = value\r\n    }\r\n\t_amin:cc.Component = null\r\n    protected _start_posy = 0\r\n    set startPosY(value)\r\n    {\r\n        this._start_posy=value\r\n    }\r\n    protected lPosX = 0\r\n    protected rPosX = 0\r\n    protected _scale = 1.0\r\n    set rainScale(value)\r\n    {\r\n        this._scale = value\r\n    }\r\n\t// rain密度\r\n    protected _rain_level = 1\t//返回0——1\r\n    set rainLevel(value)\r\n    {\r\n        this._rain_level = value\r\n    }\r\n    protected _time = 1.5\r\n    set rainSpeedTime(value)\r\n    {\r\n        this._time = value\r\n    }\r\n    constructor()\r\n    {\r\n        super()\r\n    }\r\n    onLoad()\r\n    {\r\n    }\r\n\r\n\r\n    onDestory()\r\n    {\r\n        if(this._amin)\r\n        {\r\n            this._amin.destroy()\r\n            this._amin = null\r\n        }\r\n    }\r\n\r\n    startRain()\r\n    {\r\n        let action = cc.sequence(cc.callFunc(this.upDateCoin.bind(this))\r\n                                    ,cc.delayTime(0.03))\r\n        this.node.runAction(cc.repeatForever(action))\r\n    }\r\n\r\n\r\n    stopRain()\r\n    {\r\n        this.node.stopAllActions()\r\n    }\r\n\r\n    // spin 动画为金币的雨\r\n    setRainCoinSpine()\r\n    {\r\n        this.isSpine = true\r\n        this._spinePath = \"Platform/View/Page/Res/Common/spine/goldcoin2\"\r\n        this.trackIndex = 10\r\n        this._start_posy = 720 + 100\r\n        this.lPosX = 0\r\n        this.rPosX = 1280\r\n    }\r\n\r\n    setRainCoin()\r\n    {\r\n        this._amin = GHelper.createAnimation(\"Platform/View/Page/Res/Common/coinGold.plist\",cc.WrapMode.Loop,0.03,()=>\r\n        {\r\n            return false\r\n        })\r\n\r\n        this.startPosY = 720 + 60\r\n        this.lPosX = 0\r\n        this.rPosX = 1280\r\n    }\r\n\r\n\r\n    upDateCoin(deltaTime)\r\n    {\r\n        if(!this._amin && !this.isSpine)\r\n        {\r\n            return\r\n        }\r\n\r\n        // 过滤雨大小(密度)\r\n        let rainLevel = core.random(1, 1000)/1000\r\n        if(rainLevel > this.rainLevel)\r\n        {\r\n            return\r\n        }\r\n        let x = 0\r\n        let bezier = []\r\n        if(this.isRain)\r\n        {\r\n            x = core.random() * (this.rPosX - this.lPosX) + this.lPosX\r\n            bezier.push(cc.v2(x, this._start_posy))\r\n            bezier.push(cc.v2(x, this._start_posy))\r\n            bezier.push(cc.v2(x, -160))\r\n        }\r\n        else\r\n        {\r\n            x =  core.random() * (this.rPosX - this.lPosX + 200) + this.lPosX - 100\r\n            bezier.push(cc.v2(640, 0))\r\n            let midx = (x - 640)/2 + 640\r\n            bezier.push(cc.v2(midx, this._fly_up_height + core.random(0, 200)))\r\n            bezier.push(cc.v2(x, this._fly_down_height))\r\n        }\r\n\r\n        let coin = GHelper.createNode(cc.Sprite)\r\n        coin.node.position = bezier[0]\r\n        coin.node.scale = this._scale\r\n        coin.node.setParent(this.node)\r\n        if(this.isSpine)\r\n        {\r\n            cc.loader.loadRes(this._spinePath, sp.SkeletonData, (err,skeleton_data)=>\r\n            {\r\n                let skeleton = GHelper.createNode(sp.Skeleton)\r\n                skeleton.skeletonData = skeleton_data\r\n                skeleton.animation = \"animation\"\r\n                skeleton.loop = true\r\n                skeleton.premultipliedAlpha = false\r\n                skeleton.node.setParent(coin.node)\r\n            })\r\n        }\r\n        else\r\n        {\r\n            this._amin.node.setParent(coin.node)\r\n        }\r\n        coin.node.runAction(cc.sequence(cc.bezierTo(this._time, bezier), cc.removeSelf()))\r\n    }\r\n}","\r\n\r\nexport class DailyModel {\r\n    public daily_share: number = 0;\r\n    public daily_lottery: number = 0;\r\n    public daily_coin: number = 0;\r\n    public daily_diamond: number = 0;\r\n    public daily_publish: number = 0;\r\n    public daily_score_max: number = 0;\r\n    public daily_money_max: number = 0;\r\n    public daily_money_total: number = 0;\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    reset() {\r\n        this.daily_share = 0;\r\n        this.daily_lottery = 0;\r\n        this.daily_coin = 0;\r\n        this.daily_diamond = 0;\r\n        this.daily_publish = 0;\r\n        this.daily_score_max = 0;\r\n        this.daily_money_max = 0;\r\n        this.daily_money_total = 0;\r\n    }\r\n}","export let GEmotionDataModel:EmotionDataModel=null\r\nclass EmotionDataModel\r\n{\r\n    Mutual=\r\n    {\r\n        \"1\":\r\n        {\r\n            ani:\"Common/Emotion/item1/item1_anims_i6p\",\r\n            fly:\"Common/Emotion/item1/item1_fly-i6p\",\r\n            audio:\"Common/Audio/Item/item1\",\r\n            audio_delay:0\r\n        },\r\n        \"2\":\r\n        {\r\n            ani:\"Common/Emotion/item2/item2_anims_i6p\",\r\n            fly:\"Common/Emotion/item2/item2_fly-i6p\",\r\n            audio:\"Common/Audio/Item/item2\",\r\n            audio_delay:1\r\n        },\r\n        \"3\":\r\n        {\r\n            ani:\"Common/Emotion/item3/item3_anims_i6p\",\r\n            fly:\"Common/Emotion/item3/item3_fly-i6p\",\r\n            audio:\"Common/Audio/Item/item3\",\r\n            audio_delay:1\r\n        },\r\n        \"4\":\r\n        {\r\n            ani:\"Common/Emotion/item4/item4_anims_i6p\",\r\n            fly:\"Common/Emotion/item4/item4_fly-i6p\",\r\n            audio:\"Common/Audio/Item/item4\",\r\n            audio_delay:0\r\n        },\r\n        \"5\":\r\n        {\r\n            ani:\"Common/Emotion/item5/item5_anims_i6p\",\r\n            fly:\"Common/Emotion/item5/item5_fly-i6p\",\r\n            audio:\"Common/Audio/Item/item5\",\r\n            audio_delay:0.5\r\n        },\r\n        \"6\":\r\n        {\r\n            ani:\"Common/Emotion/item6/item6_anims_i6p\",\r\n            fly:\"Common/Emotion/item6/item6_fly-i6p\",\r\n            audio:\"Common/Audio/Item/item6\",\r\n            audio_delay:0\r\n        },\r\n        \"7\":\r\n        {\r\n            ani:\"Common/Emotion/item7/item7_anims_i6p\",\r\n            fly:\"Common/Emotion/item7/item7_fly-i6p\",\r\n            audio:\"Common/Audio/Item/item7\",\r\n            audio_delay:0.5\r\n        }\r\n    }\r\n    face=\r\n    {\r\n        \"1\":\"Common/Emotion/desk_face1\",\r\n        \"2\":\"Common/Emotion/desk_face2\",\r\n        \"3\":\"Common/Emotion/desk_face3\",\r\n        \"4\":\"Common/Emotion/desk_face4\",\r\n        \"5\":\"Common/Emotion/desk_face5\",\r\n        \"6\":\"Common/Emotion/desk_face6\",\r\n        \"7\":\"Common/Emotion/desk_face7\",\r\n        \"8\":\"Common/Emotion/desk_face8\",\r\n        \"9\":\"Common/Emotion/desk_face9\",\r\n        \"10\":\"Common/Emotion/desk_face10\",\r\n        \"11\":\"Common/Emotion/desk_face11\",\r\n        \"12\":\"Common/Emotion/desk_face12\"\r\n    }\r\n}\r\nGEmotionDataModel = new EmotionDataModel()","import { Page } from \"../../../Framework/View/Page/Page\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class EndLayer extends Page {\r\n\r\n    onClickClose() {\r\n        //this.hide();\r\n    }\r\n\r\n    onClickHome() {\r\n        //sceneMgr.toMainScene();\r\n    }\r\n\r\n    onClickRestart() {\r\n        //sceneMgr.toGameScene();\r\n    }\r\n\r\n    onClickNext() {\r\n    }\r\n\r\n    onClickDouble() {\r\n    }\r\n}\r\n","export let GEntityMgr=\r\n{\r\n    init()\r\n    {\r\n    }\r\n}\r\n","export class Entity extends cc.Component\r\n{\r\n    onLoad()\r\n    {\r\n    }\r\n}\r\n","import { Pool } from \"../data/pool\";\r\n\r\nclass CallbackInfo {\r\n    callback: Function;\r\n    target: Object;\r\n    once: boolean;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        this.callback = undefined;\r\n        this.target = undefined;\r\n        this.once = false;\r\n    }\r\n}\r\n\r\nclass EventManager {\r\n    private pool: Pool<CallbackInfo>;\r\n    private listeners: {[key: string]: CallbackInfo[]};\r\n    constructor() {\r\n        this.pool = new Pool(CallbackInfo);\r\n        this.listeners = {};\r\n    }\r\n\r\n    private _on(id: string, callback: Function, target: Object) {\r\n        let info = this.pool.get();\r\n        info.callback = callback;\r\n        info.target = target;\r\n        info.once = false;\r\n\r\n        this.listeners[id].push(info);\r\n    }\r\n\r\n    private _off(target: Object, id: string) {\r\n        let infos = this.listeners[id];\r\n\r\n        for (let i = infos.length - 1; i >= 0; i--) {\r\n            if (infos[i].target === target) {\r\n                let info = infos.splice(i, 1)[0];\r\n                info.reset();\r\n                this.pool.put(info);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _once(id: string, callback: Function, target: Object) {\r\n        let info = this.pool.get();\r\n        info.callback = callback;\r\n        info.target = target;\r\n        info.once = true;\r\n\r\n        this.listeners[id].push(info);\r\n    }\r\n\r\n    private _emit(id: string, ...args) {\r\n        let infos = this.listeners[id].filter(info => info.callback && info.target);\r\n        for (let info of infos) {\r\n            info.callback.call(info.target, ...args);\r\n            if (info.once) {\r\n                this._off(info.target, id);\r\n            }\r\n        }\r\n    }\r\n\r\n    public addListener(id: number|string, callback: Function, target: Object) {\r\n        if (!this.listeners[id]) {\r\n            this.listeners[id] = [];\r\n        }\r\n\r\n        this._on(String(id), callback, target);\r\n    }\r\n\r\n    public removeListener(target: Object, id?: number|string) {\r\n        if (id === undefined) {\r\n            for (let id in this.listeners) {\r\n                this._off(target, id);\r\n            }\r\n        } else {\r\n            this._off(target, String(id))\r\n        }\r\n    }\r\n\r\n    public eventOnce(id: number|string, callback: Function, target: Object) {\r\n        if (!this.listeners[id]) {\r\n            this.listeners[id] = [];\r\n        }\r\n\r\n        this._once(String(id), callback, target);\r\n    }\r\n\r\n    public dispatchEvent(id: number|string, ...args) {\r\n        if (!id || !this.listeners[id]) {\r\n            return;\r\n        }\r\n\r\n        this._emit(String(id), ...args);\r\n    }\r\n}\r\n\r\nexport const eventMgr: EventManager = new EventManager();","import  SingleBase from '../../Base/SingleBase'\r\nimport { GNativeTool } from \"../../Framework/Logic/NativeTool\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { ykUtils } from '../../utils/YkUtils';\r\nimport { GAppDM } from '../../DataModel/AppDataModel';\r\nimport { GGameDM } from '../DataModel/GameDataModel';\r\n\r\n\r\n class FaceCheckTool extends SingleBase{\r\n\r\n    // private lastCheckFaceTime = 0\r\n    private isVerifiOpen = true\r\n    private isNeedRefreshCheck = false\r\n    public lastCheckTime = 0\r\n    initOnCreate(){\r\n        console.log('face open')\r\n        // 注册消息 \r\n        window[\"VerificationSuccess\"] = async ()=> {\r\n            setTimeout(()=>{\r\n                GMsgCenter.send(\"identify_success\")\r\n            },200)\r\n          \r\n            setTimeout(()=>\r\n            {\r\n                // GHelper.showTip(\"验证成功\")\r\n            },500)\r\n            if(this.isNeedRefreshCheck){\r\n                this.isNeedRefreshCheck = false\r\n                this.lastCheckTime = await ykUtils.getServerTime()\r\n                ykUtils.saveData('FACE_TIME',this.lastCheckTime)\r\n            }\r\n            \r\n        }\r\n\r\n        window[\"VerificationFailed\"] = ()=> {\r\n            GMsgCenter.send(\"identify_failed\")\r\n            setTimeout(()=>\r\n            {\r\n                // GHelper.showTip(\"验证失败\")\r\n            },2500)\r\n        }\r\n        //验证 窗口关闭\r\n        window[\"VerificationWindowsClosed\"] = ()=> {\r\n            console.log('VerificationWindowsClosed')\r\n            GMsgCenter.send(\"identify_window_close\")\r\n\r\n            this.isVerifiOpen = false\r\n        }\r\n    }\r\n\r\n\r\n    async checkFace(nickname,idcard_no,self_user_id){\r\n        if(cc.sys.isBrowser){\r\n            window[\"VerificationSuccess\"]()\r\n            return\r\n        }\r\n        if(GAppDM.account_server.host==\"123.60.12.239\")\r\n        {\r\n            window[\"VerificationSuccess\"]()\r\n            return\r\n        }\r\n        if(GGameDM.match_is_verification.indexOf(GUserMgr.self_user_id.toString())!=-1)\r\n        {\r\n            window[\"VerificationSuccess\"]()\r\n            return\r\n        }\r\n    \r\n        console.log('lastCheckTime ===>',this.lastCheckTime)\r\n        if(this.lastCheckTime==0 || this.lastCheckTime==null){\r\n            let saveTime = ykUtils.getData('FACE_TIME')\r\n            if(saveTime!=null){\r\n                this.lastCheckTime = Number(saveTime)\r\n            }\r\n        }\r\n\r\n        console.log('lastCheckTime2 ===>',this.lastCheckTime)\r\n        if(this.lastCheckTime==0||this.lastCheckTime==null){\r\n            this.isNeedRefreshCheck = true\r\n            GNativeTool.callRlsb(nickname, idcard_no, self_user_id)\r\n        }else{\r\n            let curTime =await ykUtils.getServerTime()\r\n            if((curTime-this.lastCheckTime)/1000>2*60*60){\r\n                // 超时\r\n                this.isNeedRefreshCheck = true\r\n                GNativeTool.callRlsb(nickname, idcard_no, self_user_id)\r\n            }else{\r\n                window[\"VerificationSuccess\"]()\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport let faceCheckTool = FaceCheckTool.Instance()","import { GAudioTool } from './../Logic/AudioTool';\r\nimport { GHelper } from \"../Logic/Helper\";\r\nimport { GResTool } from \"../Logic/ResTool\";\r\n\r\nconst {ccclass, property} = cc._decorator\r\n\r\n@ccclass\r\nexport class FlyCoins extends cc.Component\r\n{\r\n    protected _sf:cc.SpriteFrame = null\r\n    onLoad()\r\n    {\r\n    }\r\n    flyTo(time:number,coin_num,pos:cc.Vec2)\r\n    {\r\n        GHelper.createSpriteFrame(\"Common/Image/Other/icon_coin\",(sf)=>\r\n        {\r\n            if(sf == null){\r\n                return\r\n            }\r\n\r\n            this._sf = sf\r\n            let coins = new Array<cc.Sprite>()\r\n            for(let i=0;i<coin_num;++i)\r\n            {\r\n                let sp = GHelper.createSprite(cc.Sprite)\r\n                sp.spriteFrame = this._sf\r\n                coins.push(sp)\r\n                sp.node.parent = this.node\r\n            }\r\n            let x = pos.x-this.node.x\r\n            let y = pos.y-this.node.y\r\n            for(let i=0;i<coins.length;++i)\r\n            {\r\n                let sp = coins[i]\r\n                let actions = []\r\n                actions.push(cc.delayTime(0.08*i))\r\n                actions.push(cc.callFunc(()=>\r\n                {\r\n                    GAudioTool.playSound(\"Common/Audio/Effect/coins_fly\")\r\n                }))\r\n                actions.push(cc.moveTo(time,cc.v2(x,y)))\r\n                actions.push(cc.fadeOut(0.3))\r\n                let action = cc.sequence(actions)\r\n                sp.node.runAction(action)\r\n            }\r\n            let actions = []\r\n            actions.push(cc.delayTime(coins.length*0.08+(0.3+time)))\r\n            actions.push(cc.callFunc(()=>\r\n            {\r\n                this.node.removeFromParent()\r\n            }))\r\n            let action = cc.sequence(actions)\r\n            this.node.runAction(action)\r\n        })\r\n    }\r\n}","import Seat from \"./Seat\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class GameChipsMove extends cc.Component {\r\n    @property(cc.Prefab) chips: cc.Prefab = null;\r\n\r\n    public m_kFadeInPos: cc.Vec2 = new cc.Vec2();\r\n    public m_pkTarget: any = null;\r\n    private seat: Seat;\r\n    onLoad() {\r\n\r\n    }\r\n    public setSeat(sat: Seat) {\r\n        this.seat = sat;\r\n    }\r\n    public SetFadeInPos(kFadeIn: cc.Vec2) {\r\n        this.m_kFadeInPos = cc.v2(this.node.convertToNodeSpaceAR(kFadeIn));\r\n    }\r\n\r\n    public MoveIn(f32Delay: number = 0) {\r\n        if(f32Delay == 0)\r\n        {\r\n            this._MoveInDelay(0);\r\n        }else\r\n        {\r\n            this.scheduleOnce(this._MoveInDelay, f32Delay);\r\n        }\r\n    }\r\n\r\n    public MoveOut(isAnte: boolean, outpos:cc.Vec2, inpos:cc.Vec2, f32Delay: number = 0) {\r\n        if(f32Delay == 0)\r\n        {\r\n            this._MoveOutDelay(isAnte, cc.v2(this.node.convertToNodeSpaceAR(outpos)), cc.v2(this.node.convertToNodeSpaceAR(inpos)));\r\n        }else\r\n        {\r\n            this.scheduleOnce(() => { this._MoveOutDelay(isAnte, cc.v2(this.node.convertToNodeSpaceAR(outpos)), cc.v2(this.node.convertToNodeSpaceAR(inpos))); }, f32Delay);\r\n        }\r\n    }\r\n\r\n    public MoveOutToTarget(pkTarget: cc.Node, outpos:cc.Vec2, f32Delay: number = 0) {\r\n        this.m_pkTarget = pkTarget.getComponent(Seat);\r\n        if(f32Delay == 0)\r\n        {\r\n            this._MoveOutToTargetDelay(cc.v2(this.node.convertToNodeSpaceAR(outpos)));\r\n        }\r\n        else\r\n        {\r\n            this.scheduleOnce(() => { this._MoveOutToTargetDelay(cc.v2(this.node.convertToNodeSpaceAR(outpos))); }, f32Delay);\r\n        }\r\n    }\r\n\r\n    public _MoveInDelay(f32Delay: number) {\r\n        let u32ShowChips = 3;\r\n        for (let i = 0; i < u32ShowChips; ++i) {\r\n            let pkChips: cc.Node = cc.instantiate(this.chips);\r\n            pkChips.setScale(1);\r\n            this.node.addChild(pkChips);\r\n\r\n            let u32Inv = u32ShowChips - 1 - i;\r\n            pkChips.setPosition(this.m_kFadeInPos);\r\n            pkChips.opacity = 0;\r\n            \r\n            let pkCallback = cc.callFunc(this._MoveInHide.bind(this));\r\n            pkChips.runAction(cc.sequence(cc.delayTime(0.02 * u32Inv), cc.fadeIn(0.1)));\r\n            if(i == 0)\r\n            {\r\n                pkChips.runAction(cc.sequence(cc.delayTime(0.02 * u32Inv), cc.moveTo(0.1, new cc.Vec2(0, 0)), pkCallback));\r\n            }else\r\n            {\r\n                pkChips.runAction(cc.sequence(cc.delayTime(0.02 * u32Inv), cc.moveTo(0.1, new cc.Vec2(0, 0))));\r\n            }\r\n            pkChips.runAction(cc.sequence(cc.delayTime(0.02 * u32Inv), cc.scaleTo(0.1, 1.0), cc.fadeOut(0.1), cc.destroySelf()));\r\n        }\r\n    }\r\n    public _MoveOutDelay(isAnte, outpos:cc.Vec2, inpos:cc.Vec2) {\r\n        let u32ShowChips = 3;\r\n        for (let i = 0; i < u32ShowChips; ++i) {\r\n            let pkChips: cc.Node = cc.instantiate(this.chips);\r\n            pkChips.scale = 0.5;\r\n            this.node.addChild(pkChips);\r\n            \r\n            let u32Inv = u32ShowChips - 1 - i;\r\n            if(isAnte)\r\n            {\r\n                pkChips.setPosition(inpos);\r\n            }else\r\n            {\r\n                pkChips.setPosition(new cc.Vec2(0, 0));\r\n            }\r\n            pkChips.opacity = 0;\r\n            pkChips.runAction(cc.sequence(cc.delayTime(0.02 * u32Inv), cc.fadeIn(0.2), cc.delayTime(0.19), cc.destroySelf()));\r\n            pkChips.runAction(cc.sequence(cc.delayTime(0.02 * u32Inv), cc.moveTo(0.2, outpos)));\r\n            pkChips.runAction(cc.sequence(cc.delayTime(0.02 * u32Inv), cc.scaleTo(0.2, 0.25)))\r\n        }\r\n    \r\n        this.seat.hideChips();\r\n    }\r\n\r\n    public _MoveOutToTargetDelay(outpos:cc.Vec2) {\r\n        let u32ShowChips = 3;\r\n        for (let i = 0; i < u32ShowChips; ++i) {\r\n            let pkChips: cc.Node = cc.instantiate(this.chips);\r\n            pkChips.scale = (Math.random()-0.5)*2;\r\n            this.node.addChild(pkChips);\r\n            \r\n            let u32Inv = u32ShowChips - 1 - i;\r\n            pkChips.stopAllActions();\r\n            pkChips.setPosition(new cc.Vec2(0, 0));\r\n            pkChips.opacity = 0;\r\n            pkChips.runAction(cc.sequence( cc.fadeIn(0.3), cc.delayTime(1)));\r\n            pkChips.runAction(cc.scaleTo(0.3, 1));\r\n            let pkCallback = cc.callFunc(this.TargetCallback.bind(this));\r\n            if(i  == 0)\r\n            {\r\n                var fun = cc.callFunc(function () {\r\n                }, this);\r\n                pkChips.runAction( cc.sequence(cc.moveTo(0.3,this._RandPos(this.m_kFadeInPos)), fun, cc.moveTo(0.3 + Math.random()*0.2, outpos), pkCallback, cc.destroySelf()));\r\n            }else\r\n            {\r\n                pkChips.runAction( cc.sequence(cc.moveTo(0.3,this._RandPos(this.m_kFadeInPos)),cc.moveTo(0.3 + Math.random()*0.2, outpos), pkCallback, cc.destroySelf()));\r\n            }\r\n        }\r\n        this.scheduleOnce(this._MoveOutTargetHide, 0.05 * u32ShowChips + 1);\r\n    }\r\n\r\n    public _MoveInHide(f32Delta) {\r\n        if(this.seat){\r\n            this.seat.showChips();\r\n        }\r\n    }\r\n\r\n    public _MoveOutTargetHide(f32Delta) {\r\n        this.node.destroy();\r\n    }\r\n\r\n    public _RandPos(kPos: cc.Vec2): cc.Vec2 {\r\n        let i32RandX, i32RandY = 0;\r\n        i32RandX =  (Math.random() - 0.5) * 2 * 100;\r\n        i32RandY = Math.random() * 200;\r\n        return new cc.Vec2(kPos.x + i32RandX, kPos.y + i32RandY);\r\n        \r\n    }\r\n\r\n    public TargetCallback() {\r\n        if(this.m_pkTarget) {\r\n            (this.m_pkTarget as Seat).ShakeSeat();\r\n        }\r\n    }\r\n}\r\n","import { GWXTool } from \"../Logic/WeiXinTool\";\r\n\r\nexport enum EGameState\r\n{\r\n    Login=0,\r\n    Logining,\r\n    Entering,\r\n    Main,\r\n    OX,\r\n}\r\n\r\nexport let GGameDM:GameDataModel = null\r\n\r\n\r\nclass GameDataModel\r\n{\r\n    isLAN = false//是否是局域网\r\n    isDev = false//是否开发模式\r\n    update=false\r\n\r\n  \r\n\r\n    protected _pre_state = EGameState.Entering//前个状态\r\n    protected _state = EGameState.Entering//游戏状态\r\n    get state()\r\n    {\r\n        return this._state\r\n    }\r\n\r\n    protected _match_is_verification:any= [];\r\n    get match_is_verification(){\r\n       return   this._match_is_verification;\r\n    }\r\n    set match_is_verification(value:any){\r\n        this._match_is_verification = value\r\n    }\r\n\r\n    protected _pass_word:any= \"\";\r\n    get pass_word(){\r\n       return   this._pass_word;\r\n    }\r\n    set pass_word(value:any){\r\n        this._pass_word = value\r\n    }\r\n\r\n\r\n    protected _server_list:any= [];\r\n    get server_list(){\r\n       return   this._server_list;\r\n    }\r\n    set server_list(value:any){\r\n        this._server_list = value\r\n    }\r\n\r\n\r\n    set state(value)\r\n    {\r\n        this._pre_state = this._state\r\n        this._state = value\r\n    }\r\n    protected _androidMaxVersion= null\r\n    get androidMaxVersion(){\r\n       return   this._androidMaxVersion\r\n    }\r\n    set androidMaxVersion(value:string){\r\n        this._androidMaxVersion = value\r\n    }\r\n\r\n\r\n    protected _isServerUpdate= null\r\n    get isServerUpdate(){\r\n       return   this._isServerUpdate\r\n    }\r\n    set isServerUpdate(value:string){\r\n        this._isServerUpdate = value\r\n    }\r\n\r\n    protected _iosMaxVersion= null\r\n    get iosMaxVersion(){\r\n       return   this._iosMaxVersion\r\n    }\r\n    set iosMaxVersion(value:string){\r\n        this._iosMaxVersion = value\r\n    }\r\n\r\n    protected _iosLoadUrl=''\r\n    get iosLoadUrl(){\r\n        return   this._iosLoadUrl\r\n     }\r\n     set iosLoadUrl(value:string){\r\n         this._iosLoadUrl = value\r\n     }\r\n\r\n\r\n    protected _androidLoadUrl=''\r\n    get androidLoadUrl(){\r\n        return   this._androidLoadUrl\r\n     }\r\n     set androidLoadUrl(value:string){\r\n         this._androidLoadUrl = value\r\n     }\r\n\r\n    //和服务器的时间差\r\n    protected _diff_server_time=100000\r\n    get diffServerTime()\r\n    {\r\n        return this._diff_server_time\r\n    }\r\n    set diffServerTime(value)\r\n    {\r\n        this._diff_server_time = value\r\n    }\r\n    get serverTime()\r\n    {\r\n        let dt = Date.now()+this._diff_server_time\r\n        return dt\r\n    }\r\n    //最近心跳延迟时间\r\n    protected _delay_time=0\r\n    get delayTime()\r\n    {\r\n        return this._delay_time\r\n    }\r\n    set delayTime(value)\r\n    {\r\n        this._delay_time = value\r\n    }\r\n    protected _authtype=-1\r\n    get authType()\r\n    {\r\n        return this._authtype\r\n    }\r\n    set authType(at)\r\n    {\r\n        this._authtype = at\r\n    }\r\n    // protected _version=\"1.4.755\"//当前版本号\r\n    protected _version=\"1.3.34\"//当前版本号\r\n    get version()\r\n    {\r\n        return this._version\r\n    }\r\n    set version(vs)\r\n    {\r\n        this._version = vs\r\n    }\r\n    protected _review_version=\"1.3.34\"//当前评审版本号\r\n    set review_version(vs)\r\n    {\r\n        this._review_version = vs\r\n    }\r\n    get isReviewVersion()\r\n    {\r\n        console.log('this._version',this._version,this._review_version)\r\n        // 检测android 审核\r\n        // if(cc.sys.os==cc.sys.OS_ANDROID){\r\n        //     if(this._review_version == '1.3.32'){\r\n        //         return true\r\n        //     }\r\n        // }\r\n\r\n        // return true\r\n\r\n        if(cc.sys.os!=cc.sys.OS_IOS)\r\n        {\r\n            return false\r\n        }\r\n        return this._version == this._review_version\r\n    }\r\n    protected _auth:{host:string,port:number}=null\r\n    get auth()\r\n    {\r\n        return this._auth\r\n    }\r\n    set auth(value:{host:string,port:number})\r\n    {\r\n        this._auth=value\r\n    }\r\n    protected _res_url=\"\"\r\n    get resUrl()\r\n    {\r\n        return this._res_url\r\n    }\r\n    set resUrl(value)\r\n    {\r\n        this._res_url=value\r\n    }\r\n    restoreGameState()\r\n    {\r\n        this._state = this._pre_state\r\n    }\r\n    isState(state:EGameState)\r\n    {\r\n        return this._state == state\r\n    }\r\n\r\n\r\n    protected _arrayInvite\r\n    get arrayInvite(){\r\n        return this._arrayInvite\r\n    }\r\n    set arrayInvite(data){\r\n        this._arrayInvite = data\r\n    }\r\n\r\n    protected _arrayInviteNei\r\n    get arrayInviteNei(){\r\n        return this._arrayInviteNei\r\n    }\r\n    set arrayInviteNei(data){\r\n        this._arrayInviteNei = data\r\n    }\r\n    \r\n    \r\n}\r\nGGameDM = new GameDataModel()","export class GameModel {\r\n\r\n    public stage: number = 1;\r\n    public level: number = 1;\r\n    public speed: number = 1;\r\n    public coin: number = 0;\r\n    public score: number = 0;\r\n    public select_bg: number = 1;\r\n    public select_card: number = 1;\r\n}","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameScene extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    gameLayer: cc.Node = null;\r\n\r\n    onShow() {\r\n    }\r\n\r\n    onHide() {\r\n    }\r\n}\r\n","\r\nimport { GPageMgr, PageManager } from './Framework/View/Page/PageManager';\r\nimport {IGame} from \"./Framework/IGame\"\r\nimport { GGoogleTool } from './Framework/Logic/GoogleTool';\r\nimport { GGameDM } from './Framework/DataModel/GameDataModel';\r\nimport { GAppDM } from './DataModel/AppDataModel';\r\nimport { GAccountHttp } from './Net/AccountHttp';\r\nimport { GaoDeMapTool } from './Framework/Logic/GaoDeMapTool';\r\nimport { layerMgr } from \"./manager/LayerManager\"\r\nimport { loginService } from './Service/LoginService';\r\nimport { GMsgCenter } from './utils/MessageCenter';\r\nimport { GHelper } from './Framework/Logic/Helper';\r\nimport { GNativeTool } from './Framework/Logic/NativeTool';\r\n\r\nimport MultiPlatform from './platform/MultiPlatform';\r\nimport { ykUtils } from './utils/YkUtils';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class Main extends IGame{\r\n\r\n    @property(cc.Camera)\r\n    nodeCaptureCamera:cc.Camera = null;\r\n    onLoad() \r\n    {\r\n        super.onLoad()\r\n        MultiPlatform.getInstance().crashBind();\r\n        this.initSceenState()\r\n        MultiPlatform.getInstance().initCamera(this.nodeCaptureCamera);\r\n    }\r\n    async onPreInitDone()\r\n    {\r\n        super.onPreInitDone()\r\n\r\n        GGoogleTool.init()\r\n        GAppDM.account_server=GGameDM.auth\r\n        //是否自动登陆\r\n        GAppDM.auto_login=true\r\n        //内网测试版本\r\n        GAppDM.quick_test=false\r\n        // 是否检测更新 发版一定改成true\r\n        GAppDM.checkUpdate =  true\r\n\r\n\r\n        // 服务器停机更新\r\n        if(GGameDM.isServerUpdate){\r\n\r\n            GPageMgr.openPage(\"Page_Maintain\");\r\n            return \r\n        }\r\n\r\n\r\n        if(GAppDM.quick_test)\r\n        {\r\n            // GAppDM.account_server={host:\"119.3.92.190\",port:6001}\r\n            //GAppDM.account_server={host:\"192.168.1.102\",port:6001}\r\n            GAppDM.account_server={host:\"123.60.12.239\",port:6001}\r\n        }\r\n        \r\n        // 设置back 监听\r\n        cc['yk']['onBackPressed'] = this.onBackPressed.bind(this)\r\n    \r\n        if(this.serverListHandler())\r\n        {\r\n            GAppDM.isShowServerList = true;\r\n            GPageMgr.openPage(\"Page_ServerList\");\r\n        }\r\n        else\r\n        {\r\n             // 获取地址\r\n            GAccountHttp.init(\"auth\",GAppDM.account_server.host,GAppDM.account_server.port)\r\n            GPageMgr.openPage(\"Page_Start\")\r\n        }\r\n    }\r\n    serverListHandler()\r\n    {\r\n        let isShowServerList =  cc.sys.localStorage.getItem(\"isShowServerList\");\r\n        if(isShowServerList==null)\r\n        {\r\n            isShowServerList = false;\r\n            cc.sys.localStorage.setItem(\"isShowServerList\",isShowServerList)\r\n        }\r\n        else\r\n        {\r\n            isShowServerList = JSON.parse(isShowServerList);\r\n        }\r\n        if(isShowServerList)\r\n        {\r\n           return this.getServerConfig();\r\n        }\r\n        this.getServerConfig();\r\n        return   isShowServerList;\r\n    }\r\n    async getServerConfig()\r\n    {\r\n        let isget = await loginService.getServerConfig();\r\n        if(isget && GGameDM.server_list.length>0)\r\n        {\r\n            return true;\r\n        }else\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private lastBackTime = null\r\n    onBackPressed(){\r\n        console.log('onback pressed vvvvvvvvvvv')\r\n        let curData =  Date.now()\r\n        if(this.lastBackTime == null){\r\n            this.lastBackTime =curData\r\n        }\r\n\r\n        \r\n        this.checkBackApp(curData)\r\n    }\r\n\r\n    checkBackApp(curData){\r\n           // 间隔小于1s 退出\r\n        if(curData != this.lastBackTime&&(curData-this.lastBackTime)/1000<2){\r\n            GNativeTool.doBackClose()\r\n        }else{\r\n            GHelper.showTip('再次返回退出应用')\r\n            this.lastBackTime = curData\r\n        }\r\n    }\r\n\r\n    //==================== 后台管理=======================\r\n    private backTime = null\r\n    // 需要重新登录的时间 秒\r\n    private reLoginTime = 5*60\r\n    // 屏幕进入前台后台\r\n    initSceenState()\r\n    {\r\n        cc.game.on(cc.game.EVENT_HIDE, ()=>{\r\n           cc.log(\"游戏进入后台\");\r\n           GMsgCenter.send('Game_Hide')\r\n           this.backTime = Date.now()\r\n              \r\n        });\r\n        cc.game.on(cc.game.EVENT_SHOW, ()=>{\r\n            cc.log(\"重新返回游戏\");\r\n            if( this.backTime == null){\r\n                console.log('未进入过后台 返回')\r\n                return\r\n            }\r\n            var hideTime =  Date.now() - this.backTime\r\n            GMsgCenter.send('Game_Show',hideTime)\r\n\r\n            if(hideTime/1000 > this.reLoginTime){\r\n\r\n                console.log('超时 登录重新加载')\r\n                // 需要重新登录\r\n                GPageMgr.closeAll()\r\n\r\n                this.getGameConfig()\r\n            }\r\n            \r\n            this.backTime = null\r\n\r\n        });\r\n    }\r\n\r\n}","\r\n\r\nimport { LocationModel } from '../../model/LocationModel';\r\nimport { ykUtils } from '../../utils/YkUtils';\r\nimport { GGameDM } from '../DataModel/GameDataModel';\r\n\r\n// 高德地图\r\nexport class GaoDeMapTool{\r\n    public static locationRes:LocationModel = {code:-1,errorMsg:'未初始化'}\r\n    public static timeOutCb = null\r\n\r\n   \r\n\r\n    public static async getLocation(force=false): Promise<LocationModel>{\r\n\r\n        var promise = new Promise<LocationModel>(resolve => {\r\n            if(cc.sys.isBrowser || GGameDM.isReviewVersion){\r\n                this.locationRes = {code:1,longitude:115.7,latitude:117.4,errorMsg:''}\r\n                resolve(GaoDeMapTool.locationRes);\r\n                return \r\n            }\r\n\r\n\r\n            \r\n\r\n\r\n            // 检测存储\r\n            console.log('检测存储',force,GaoDeMapTool.locationRes.code)\r\n            if(!force&&GaoDeMapTool.locationRes.code==-1){\r\n                let data = ykUtils.getData('LOCATIONH_RES')\r\n                console.log('存储数据',data)\r\n                if(data){\r\n                    GaoDeMapTool.locationRes = JSON.parse(data)\r\n                    console.error('地址返回 存储的',GaoDeMapTool.locationRes)\r\n                    // 需要检测时效\r\n                    resolve(GaoDeMapTool.locationRes);\r\n\r\n                    return\r\n                }\r\n            }\r\n\r\n            if((!force&&GaoDeMapTool.locationRes.code>0)||cc.sys.isBrowser){\r\n\r\n                cc.error('地址返回 已有的',GaoDeMapTool.locationRes.code)\r\n                cc.error('地址返回 已有的',GaoDeMapTool.locationRes.errorMsg)\r\n                resolve(GaoDeMapTool.locationRes);\r\n                return \r\n            }\r\n\r\n\r\n\r\n            cc['yk']['locationCb'] = async (res)=>{\r\n                cc['yk']['locationCb'] = null\r\n                console.log('定位回调: ',res)\r\n                \r\n                GaoDeMapTool.locationRes = JSON.parse(res)\r\n                GaoDeMapTool.locationRes.getTime = await ykUtils.getServerTime()\r\n                if( GaoDeMapTool.locationRes.code==1){\r\n                    ykUtils.saveData('LOCATIONH_RES',JSON.stringify(GaoDeMapTool.locationRes))\r\n                }\r\n                resolve(GaoDeMapTool.locationRes);\r\n                console.log('地址返回 请求的')\r\n            }\r\n\r\n            if(cc.sys.os == cc.sys.OS_ANDROID) \r\n            {\r\n                jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"getLocation\",\"()V\")\r\n            }\r\n            else if(cc.sys.os == cc.sys.OS_IOS) \r\n            {\r\n                //   jsb.reflection.callStaticMethod(\"WechatLogin\", \"getAppId\")\r\n                console.log('定位',\"getLocation\")\r\n                jsb.reflection.callStaticMethod(\"AppController\", \"getLocation\");\r\n            }\r\n        })\r\n        return promise;\r\n    }\r\n\r\n    // 手机如果没有获取到\r\n    public static asyncGetLoaction(){\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export class Global {\r\n\r\n    static tableData = \r\n    {\r\n        selfRank:-1,  // 当前排名\r\n        tableId:0, // 当前桌子id\r\n    }\r\n    \r\n  \r\n}\r\n","import { GGameDM } from './../../DataModel/GameDataModel';\r\nimport {core} from \"../../Core/Base\"\r\nimport {IProtoFilter} from \"./IProtoFilter\"\r\n//import * as protobufjs from \"./protobuf\"\r\n\r\nexport class GoogleProtoFilter extends IProtoFilter\r\n{\r\n    _proto=null\r\n    init(callback:Function)\r\n    {\r\n        let _init=()=>\r\n        {\r\n            let path = \"Proto/hallmsg\"\r\n            // protobuf.load(path, (err, data)=>{\r\n            //     this._proto = data\r\n            //     if(callback) \r\n            //     {\r\n            //         callback(!err)\r\n            //     }\r\n            // })\r\n        }\r\n        if(cc.sys.isBrowser)\r\n        {\r\n            _init()\r\n            return\r\n        }\r\n        _init()\r\n    }\r\n    encode(data)\r\n    { \r\n        let cmd = data.cmd\r\n        data.cmd = undefined\r\n        //消息公共头\r\n        let ClientMsgHead = this._proto.lookupType(\"ClientMsgHead\")\r\n        let clientHead_content = {\r\n            msgname : cmd+\"Req\",\r\n            svr_id  : \"\",\r\n            service_address : 0,\r\n            msgtype : 1,\r\n        }\r\n\r\n        let message = ClientMsgHead.create(clientHead_content)\r\n        let clientHead = ClientMsgHead.encode(message).finish()\r\n\r\n        let msg_class = this._proto.lookupType(cmd+\"Req\")\r\n        message = msg_class.create(data)\r\n        let body = msg_class.encode(message).finish();\r\n\r\n        //拼接消息\r\n        let headLen = clientHead.length\r\n        let c = core.convertIntToUInt8Array(headLen)\r\n        clientHead = core.arraybuffer2array(clientHead.buffer)\r\n        body = core.arraybuffer2array(body.buffer)\r\n        message = c.concat(clientHead, body)\r\n        message = core.array2arraybuffer(message)\r\n        return message\r\n    }\r\n    decode(data,callback) \r\n    {\r\n        core.blobToArrayBuffer(data,(d)=>\r\n        {\r\n            let dd = this._decode(d)\r\n            if(dd.errcode == undefined) \r\n            {\r\n                // 做个默认处理\r\n                dd.errcode = 0\r\n            }\r\n\r\n            if(callback) \r\n            {\r\n                callback(dd)\r\n            }\r\n        })\r\n    }\r\n\r\n    _decode(arrayBuffer) \r\n    {\r\n        var data = core.arraybuffer2array(arrayBuffer)\r\n        var len = data.length\r\n        if(len<2) {\r\n            cc.error(\"proto is too short!\")\r\n            return null\r\n        }\r\n\r\n        var headLenArray = core.getArrayFromArray(data,0,2)\r\n        var headLen = core.convertUInt8ArrayToInt(headLenArray)\r\n        if(headLen<=0) \r\n        {\r\n            cc.error(\"proto head len is too short!\")\r\n            return \r\n        }\r\n\r\n        var ClientMsgHead = this._proto.lookupType(\"ClientMsgHead\");\r\n        var clientHeadArray = core.getArrayFromArray(data,2,headLen)\r\n        var clientHead = ClientMsgHead.decode(clientHeadArray)\r\n        if(!clientHead) {\r\n            cc.error(\"proto head decode wrong!\")\r\n            return null\r\n        }\r\n\r\n        var name = clientHead.msgname\r\n        cc.log(\"clientHead.msgname\",clientHead.msgname)\r\n        if(!name) {\r\n            cc.error(\"proto head decode null name!\")\r\n            return null\r\n        }\r\n\r\n        var builder = this._proto.lookupType(name);\r\n        if(!builder) {\r\n            cc.error(\"proto head name not in proto(!\"+name+\")\")\r\n            return null\r\n        }\r\n\r\n        var bodyArray = core.getArrayFromArray(data,2+headLen)\r\n        var body = builder.decode(bodyArray)//builder.builder.deserializeBinary(bodyArray)\r\n        if(!body) {\r\n            cc.error(\"proto body decode wrong!\")\r\n            return null\r\n        }\r\n\r\n        var suffix = name.substring(name.length-3)\r\n        var name = name.substring(0,name.length-3)\r\n        if(suffix==\"Ntc\") {\r\n            name = name + \"_\" + suffix.toLowerCase()\r\n        }\r\n        body.builder = builder.builder_name\r\n        body.cmd = name\r\n        return body\r\n    }\r\n}","import { GUserMgr } from \"../../Logic/UserManager\"\r\nimport { GOrderHttp } from \"../../Net/OrderHttp\"\r\nimport { GPageMgr } from \"../View/Page/PageManager\"\r\nimport { GHelper } from \"./Helper\"\r\n\r\nexport let GGoogleTool:GoogleTool=null\r\nwindow[\"google\"]={}\r\nclass GoogleAccount\r\n{\r\n    nickname=\"\"\r\n    id=\"\"\r\n    token=\"\"\r\n    logo=\"\"\r\n    email=\"\"\r\n}\r\n\r\ntype FLoginCB=(account:GoogleAccount,err:string)=> void\r\ntype FEndRewardFSADCB=(rewardType:string,rewardAmount:number,err:string)=> void\r\ntype FPaySuccess=(order_id:string,purchase_token:string)=> void\r\ntype FAdNumCB=(num:number)=> void\r\n\r\nexport let google = window[\"google\"]\r\nclass GoogleTool\r\n{\r\n    protected _native_plugin = \"com/eryi/google/GoogleService\"\r\n    protected _empty_params = \"()V\"\r\n    protected _one_string_param  = \"(Ljava/lang/String;)V\"\r\n    protected _two_string_params = \"(Ljava/lang/String;Ljava/lang/String;)V\"\r\n    protected _login_cb:FLoginCB=null\r\n    protected _endrewardfsad_cb:FEndRewardFSADCB=null\r\n    protected _pay_cb:FPaySuccess=null\r\n    protected _onad_num:FAdNumCB=null\r\n    init()\r\n    {\r\n        google.onLogin=this.onLogin.bind(this)\r\n        google.onEndRewardFSAD=this.onEndRewardFSAD.bind(this)\r\n        google.onPurchasesUpdated=this.onPurchasesUpdated.bind(this)\r\n        google.onVerify=this.onVerify.bind(this)\r\n        google.onLaunchBillingFlow=this.onLaunchBillingFlow.bind(this)\r\n        google.onAdNum=this.onAdNum.bind(this)\r\n    }\r\n    login(cb:FLoginCB)\r\n    {\r\n        if(cc.sys.isBrowser || cc.sys.os != cc.sys.OS_ANDROID) \r\n        {\r\n            return\r\n        }\r\n        this._login_cb=cb\r\n        jsb.reflection.callStaticMethod(this._native_plugin, \"login\",this._empty_params)\r\n    }\r\n    onLogin(jsonStr:string)\r\n    {\r\n        if(!jsonStr)\r\n        {\r\n            if(this._login_cb)\r\n            {\r\n                this._login_cb(null,\"error\")\r\n            }\r\n            return\r\n        }\r\n        let account:GoogleAccount = JSON.parse(jsonStr)\r\n        if(this._login_cb)\r\n        {\r\n            this._login_cb(account,account[\"err\"])\r\n        }\r\n    }\r\n    showRewardFSAD(cb:FEndRewardFSADCB)\r\n    {\r\n        if(cc.sys.isBrowser || cc.sys.os != cc.sys.OS_ANDROID) \r\n        {\r\n            return\r\n        }\r\n        this._endrewardfsad_cb=cb\r\n        jsb.reflection.callStaticMethod(this._native_plugin, \"showRewardFSAD\",this._empty_params)\r\n    }\r\n    onEndRewardFSAD(res:string)\r\n    {\r\n        let json = JSON.parse(res)\r\n        if(this._endrewardfsad_cb)\r\n        {\r\n            this._endrewardfsad_cb(json.type,json.amount,json.err)\r\n        }\r\n    }\r\n    /**\r\n     * 购买商品\r\n     * @param goods_id 商品的key\r\n     * @param order_id 自家服务器的order_id\r\n     * @returns \r\n     */\r\n    buy(goods_id:string,order_id:string,cb?:FPaySuccess)\r\n    {\r\n        if(cc.sys.isBrowser || cc.sys.os != cc.sys.OS_ANDROID) \r\n        {\r\n            return\r\n        }\r\n        this._pay_cb=cb\r\n        jsb.reflection.callStaticMethod(this._native_plugin, \"buy\",this._two_string_params,goods_id,order_id)\r\n    }\r\n    consume(purchase_token:string)\r\n    {\r\n        if(cc.sys.isBrowser || cc.sys.os != cc.sys.OS_ANDROID) \r\n        {\r\n            return\r\n        }\r\n        jsb.reflection.callStaticMethod(this._native_plugin, \"consume\",this._one_string_param,purchase_token)\r\n    }\r\n    onPurchasesUpdated(code:string)\r\n    {\r\n\r\n    }\r\n    async onVerify(order_id:string,purchase_token:string)\r\n    {\r\n        let jsonData = await GOrderHttp.request(\"PayComplete\",{\r\n            order_id:order_id,\r\n            money:-1\r\n        })\r\n        if(jsonData.errcode)\r\n        {\r\n            GHelper.showTip(JSON.stringify(jsonData.errcode))\r\n            return\r\n        }\r\n        let crystal = jsonData.crystal\r\n        let vip_exp = jsonData.vip_exp\r\n\r\n        //let dt = crystal - GUserMgr.self_user.crystal\r\n        //GUserMgr.self_user.crystal = crystal\r\n        GUserMgr.self_user.vip_exp = vip_exp\r\n        GPageMgr.refreshPage(\"Page_Main\")\r\n        //GHelper.showTip(\"充值成功，获得 \"+dt+\" 砖石!\")\r\n        this.consume(purchase_token)\r\n        \r\n        if(this._pay_cb)\r\n        {\r\n            this._pay_cb(order_id,purchase_token)\r\n        }\r\n    }\r\n    onLaunchBillingFlow(code:string,goods_id:string,order_id:string)\r\n    {\r\n\r\n    }\r\n    getAdNum(cb:FAdNumCB)\r\n    {\r\n        if(cc.sys.isBrowser || cc.sys.os != cc.sys.OS_ANDROID) \r\n        {\r\n            return\r\n        }\r\n        this._onad_num=cb\r\n        jsb.reflection.callStaticMethod(this._native_plugin, \"adNum\",this._empty_params)\r\n    }\r\n    onAdNum(res:string)\r\n    {\r\n        let json = JSON.parse(res)\r\n        if(this._onad_num)\r\n        {\r\n            this._onad_num(parseInt(json.num))\r\n        }\r\n    }\r\n}\r\nGGoogleTool = new GoogleTool()","// author: http://lamyoung.com/\r\n\r\nconst { ccclass, property, executeInEditMode, requireComponent, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@executeInEditMode\r\n@requireComponent(cc.RenderComponent)\r\n@menu('i18n:MAIN_MENU.component.renderers/Gradient')\r\nexport default class Gradient extends cc.Component {\r\n\r\n    @property\r\n    private _colors: cc.Color[] = [];\r\n    @property({ type: [cc.Color] })\r\n    public get colors() {\r\n        return this._colors;\r\n    }\r\n    public set colors(colors) {\r\n        this._colors = colors;\r\n        this._updateColors();\r\n    }\r\n\r\n    onEnable() {\r\n        cc.director.once(cc.Director.EVENT_AFTER_DRAW, this._updateColors, this);\r\n    }\r\n\r\n    onDisable() {\r\n        cc.director.off(cc.Director.EVENT_AFTER_DRAW, this._updateColors, this);\r\n        this.node['_renderFlag'] |= cc['RenderFlow'].FLAG_COLOR;\r\n    }\r\n\r\n    private _updateColors() {\r\n        const cmp = this.getComponent(cc.RenderComponent);\r\n        if (!cmp) return;\r\n        const _assembler = cmp['_assembler'];\r\n        if (!(_assembler instanceof cc['Assembler2D'])) return;\r\n        const uintVerts = _assembler._renderData.uintVDatas[0];\r\n        if (!uintVerts) return;\r\n        const color = this.node.color;\r\n        const floatsPerVert = _assembler.floatsPerVert;\r\n        const colorOffset = _assembler.colorOffset;\r\n        let count = 0;\r\n        for (let i = colorOffset, l = uintVerts.length; i < l; i += floatsPerVert) {\r\n            uintVerts[i] = (this.colors[count++] || color)['_val'];\r\n        }\r\n    }\r\n\r\n\r\n}","import { SimpleWebServer } from '../Framework/Net/SimpleWebServer';\r\n\r\nexport let GHallHttp:HallHttp=null\r\nexport class HallHttp extends SimpleWebServer\r\n{\r\n}\r\nGHallHttp=new HallHttp()","// 模拟一个TS版的HashMap(由于是泛型实现, 这里的HashMap<K,V>中的K和V可以是任意强类型)\r\n\r\n/* 使用示例\r\nlet hashmap: HashMap<string, number> = new HashMap();\r\nhashmap.add(\"test\", 123);\r\nconsole.log(hashmap.get(\"test\"));\r\nhashmap.remove(\"test\");\r\n\r\n// 遍历方法1\r\nhashmap.forEachKeyValue((data: KeyValue<string, number>): any => {\r\n    console.log(\"key = \" + data.key + \", \" + \"value = \" + data.value);\r\n    //return \"continue\";\r\n});\r\n\r\n// 遍历方法2\r\nhashmap.forEach((key: string, value: number): any => {\r\n    console.log(\"key = \" + key + \", \" + \"value = \" + value);\r\n    //return \"break\";\r\n});\r\n*/\r\n\r\n/**\r\n * HashMap 键值接口\r\n */\r\nexport interface KeyValue<K, V> {\r\n    key: K,\r\n    value: V\r\n}\r\n\r\n/**\r\n * HashMap 泛型实现\r\n */\r\nexport class HashMap<K, V>{\r\n\r\n    private _list: KeyValue<K, V>[] = [];\r\n\r\n    constructor() {\r\n        this.clear();\r\n    }\r\n\r\n    //通过key获取索引\r\n    private _getIndexByKey(key: K): number {\r\n        let count: number = this._list.length;\r\n        for (let index: number = 0; index < count; ++index) {\r\n            const element: KeyValue<K, V> = this._list[index];\r\n            if (element.key === key) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * 添加键值\r\n     * @param key 键\r\n     * @param value 值\r\n     * @param replace 是否替换值(默认:true)\r\n     */\r\n    public add(key: K, value: V, replace: boolean = true): void {\r\n        let data: KeyValue<K, V> = { key: key, value: value };\r\n        let index: number = this._getIndexByKey(key);\r\n        if (index !== -1 && replace) {\r\n            //已存在：刷新值\r\n            this._list[index] = data;\r\n        }\r\n        else {\r\n            //不存在：添加值\r\n            this._list.push(data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除键值\r\n     * @param key 键\r\n     * @returns 返回键对应的值\r\n     */\r\n    public remove(key: K): V {\r\n        let index: number = this._getIndexByKey(key);\r\n        if (index !== -1) {\r\n            let data: KeyValue<K, V> = this._list[index];\r\n            this._list.splice(index, 1);\r\n            return data.value;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 是否存在指定键\r\n     * @param key 键\r\n     */\r\n    public has(key: K): boolean {\r\n        let index: number = this._getIndexByKey(key);\r\n        return index !== -1;\r\n    }\r\n\r\n    /**\r\n     * 通过 key 获取键值 value\r\n     * @param key 键\r\n     * @returns 返回键对应的值\r\n     */\r\n    public get(key: K): V {\r\n        let index: number = this._getIndexByKey(key);\r\n        if (index !== -1) {\r\n            let data: KeyValue<K, V> = this._list[index];\r\n            return data.value;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 返回数据个数\r\n     * @returns \r\n     */\r\n    public get length(): number {\r\n        return this._list.length;\r\n    }\r\n\r\n    /**\r\n     * 根据索引获取value\r\n     * @param callback:\r\n     */\r\n   public getValueByIndex(index:number): any{\r\n        let count: number = this._list.length;\r\n        if(index < 0 || index >= count){\r\n            return null;\r\n        }\r\n        return  this._list[index];\r\n    }\r\n\r\n    /**\r\n     * 遍历列表\r\n     * @param callback 回调函数: callback(data, index)\r\n     */\r\n    public forEachKeyValue(callback: (data: KeyValue<K, V>, i?: number) => any) {\r\n        let count: number = this._list.length;\r\n        for (let index: number = 0; index < count; ++index) {\r\n            const element: KeyValue<K, V> = this._list[index];\r\n            let ret = callback(element, index);\r\n            if (ret === \"continue\") continue;\r\n            else if (ret === \"break\") break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 遍历列表\r\n     * @param callback 回调函数: callback(k, v, index)\r\n     */\r\n    public forEach(callback: (key: K, value: V, i?: number) => any) {\r\n        let count: number = this._list.length;\r\n        for (let index: number = 0; index < count; ++index) {\r\n            const element: KeyValue<K, V> = this._list[index];\r\n            let ret = callback(element.key, element.value, index);\r\n            if (ret === \"continue\") continue;\r\n            else if (ret === \"break\") break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清空全部\r\n     */\r\n    public clear(): void {\r\n        this._list.splice(0, this._list.length);\r\n        // this._list = [];\r\n    }\r\n}","import { MutualEmotion } from '../Extention/MutualEmotion';\r\nimport {core} from \"../Core/Base\"\r\nimport {GGameDM} from \"../DataModel/GameDataModel\"\r\nimport {GLocalizationDataModel} from \"../DataModel/LocalizationDataModel\"\r\nimport {GTipLabel} from \"../Extention/TipLabel\"\r\nimport {GMd5} from \"../Core/Md5\"\r\nimport { GTipRunning } from \"../Extention/TipRunning\";\r\nimport { GResTool } from './ResTool';\r\nimport { layerMgr } from '../../manager/LayerManager';\r\nimport { MD5 } from '../../utils/MD5';\r\n\r\nexport class GHelper\r\n{\r\n    /*\r\n    a = texture || string || spriteFrame\r\n    GHelper.createSprite(a)\r\n    GHelper.createSprite(a,\"\")\r\n    GHelper.createSprite(a,\"\",rect)\r\n    GHelper.createSprite(a,\"\",callback)\r\n    GHelper.createSprite(a,\"\",rect,callback)\r\n    */\r\n    static createSprite(obj?,callback?,rect?,suffix?)\r\n    {\r\n        if(!obj)\r\n        {\r\n            return GHelper.createNode(cc.Sprite)\r\n        }\r\n        suffix = suffix || \"\"\r\n        let sp:cc.Sprite = GHelper.createNode(cc.Sprite)\r\n        let t = typeof obj\r\n        if(t==\"string\")\r\n        {\r\n            let _onReadysf=(sf)=>\r\n            {\r\n                if(!sf)\r\n                {\r\n                    return\r\n                }\r\n                let w = sp.node.width\r\n                let h = sp.node.height\r\n                sp.spriteFrame = sf\r\n                if(w>0&&h>0)\r\n                {\r\n                    sp.node.width = w\r\n                    sp.node.height = h\r\n                }\r\n                if(callback)\r\n                {\r\n                    callback(sp)\r\n                }\r\n            }\r\n            let _sf=GResTool.getRes(obj)\r\n            if(_sf)\r\n            {\r\n                _onReadysf(_sf)\r\n            }\r\n            else\r\n            {\r\n                let name:string = obj+suffix\r\n                if(name[0]==\"#\")\r\n                {\r\n                    //name.replace(\"#\",\"\")\r\n                }\r\n                let params=\r\n                {\r\n                    path:obj,\r\n                    rect:rect,\r\n                    name:name,\r\n                }\r\n                GHelper.createSpriteFrame(params,function(sf)\r\n                {\r\n                    if(sf == null){\r\n                        return\r\n                    }\r\n                    _onReadysf(sf)\r\n                })\r\n            }\r\n        }\r\n        else if(t==\"object\")\r\n        {\r\n            let classname = cc.js.getClassName(obj)\r\n            if(classname==\"cc.Texture2D\")\r\n            {\r\n                let sf = null\r\n                if(rect)\r\n                {\r\n                    sf = new cc.SpriteFrame(obj,rect)\r\n                }\r\n                else\r\n                {\r\n                    sf = new cc.SpriteFrame(obj)\r\n                }\r\n                let w = sp.node.width\r\n                let h = sp.node.height\r\n                sp.spriteFrame = sf\r\n                if(w>0&&h>0)\r\n                {\r\n                    sp.node.width = w\r\n                    sp.node.height = h\r\n                }\r\n            }\r\n            else if(classname==\"cc.SpriteFrame\")\r\n            {\r\n                sp.spriteFrame = obj\r\n            }\r\n            else\r\n            {\r\n                GHelper.createSpriteFrame(obj,function(sf)\r\n                {\r\n                    if(!sf)\r\n                    {\r\n                        return\r\n                    }\r\n                    let w = sp.node.width\r\n                    let h = sp.node.height\r\n                    sp.spriteFrame = sf\r\n                    if(w>0&&h>0)\r\n                    {\r\n                        sp.node.width = w\r\n                        sp.node.height = h\r\n                    }\r\n                })\r\n            }\r\n            if(callback)\r\n            {\r\n                callback(sp)\r\n            }\r\n        }\r\n        return sp\r\n    }\r\n\r\n    static createTexture(filepath,cb) \r\n    {\r\n        if(filepath.indexOf(\"http\")>=0)\r\n        {\r\n            cc.loader.load({url:filepath,type:\"png\"},(err,txt)=>\r\n            //cc.loader.loadRes(filepath,(err,txt)=>\r\n            {\r\n                if(err)\r\n                {\r\n                    cc.error(err.message)\r\n                }\r\n                if(cb)\r\n                {\r\n                    cb(txt)\r\n                }\r\n            })\r\n            return\r\n        }\r\n        else if(filepath[0] !== \"#\")\r\n        {\r\n            filepath = \"resources/\"+filepath+\".png\"\r\n            filepath = cc.url.raw(filepath)\r\n        }\r\n        else\r\n        {\r\n            filepath = filepath.replace(\"#\",\"\")\r\n            if(!jsb.fileUtils.isAbsolutePath(filepath))\r\n            {\r\n                filepath = jsb.fileUtils.getWritablePath()+filepath\r\n            }\r\n        }\r\n        cc.loader.loadRes(filepath,cc.Texture2D,(err,txt)=>\r\n        {\r\n            if(cb)\r\n            {\r\n                cb(txt)\r\n            }\r\n        })\r\n    }\r\n    /*\r\n    {\r\n        texture:null,\r\n        path:null,\r\n        rect:null,\r\n        name:\"\"\r\n    }\r\n    */\r\n    static createSpriteFrame(params,cb)\r\n    {\r\n        if(core.isString(params))\r\n        {\r\n            params = {path:params}\r\n        }\r\n        params.name = params.name || params.path\r\n        params.name = params.name.replace(\".png\",\"\")\r\n        params.name = params.name.replace(\".jpg\",\"\")\r\n        if(params.texture)//是否有texture\r\n        {\r\n            let sf = null\r\n            if(params.rect)\r\n            {\r\n                sf = new cc.SpriteFrame(params.texture,params.rect)\r\n            }\r\n            else\r\n            {\r\n                sf = new cc.SpriteFrame(params.texture)\r\n            }\r\n            if(cb)\r\n            {\r\n                cb(sf)\r\n            }\r\n            return\r\n        }\r\n        else if(params.path)//最常见的路径加载\r\n        {\r\n            //如果名字和路径不同，则先加载为texture之后再加载，以免同一个图又不同的spriteframe对象\r\n            if(params.path!==params.name)\r\n            {\r\n                GHelper.createTexture(params.path,function(tex)\r\n                {\r\n                    if(tex)\r\n                    {\r\n                        cc.log(\"params.path=\"+params.path)\r\n                    }\r\n                    else\r\n                    {\r\n                        if(cb)\r\n                        {\r\n                            cb(null)\r\n                        }\r\n                        return\r\n                    }\r\n                    params.texture = tex\r\n                    GHelper.createSpriteFrame(params,cb)\r\n                })\r\n                return\r\n            }\r\n            cc.loader.loadRes(params.path, cc.SpriteFrame, function(err, sf)\r\n            {\r\n                if(err)\r\n                {\r\n                    cc.error(err)\r\n                    cb()\r\n                    return\r\n                }\r\n                // cc.spriteFrameCache.addSpriteFrame(sf,params.name)\r\n                if(params.rect)\r\n                {\r\n                    sf.setRect(params.rect)\r\n                }\r\n                if(cb)\r\n                {\r\n                    cb(sf)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    static createNode<T extends cc.Component>(type: {new(): T}):T\r\n    {\r\n        let node = new cc.Node()\r\n        return node.addComponent(type)\r\n    }\r\n    /**\r\n     * 创建动画\r\n     * @param pathOrFrames 文件夹路径，plist路径，SpriteFrame集合\r\n     * @param wrapMode 循环模式\r\n     * @param rate 间隔时间\r\n     * @param func 回调\r\n     */\r\n    static createAnimation(pathOrFrames:string|Array<cc.SpriteFrame>,wrapMode?,rate?,func?):cc.Animation\r\n    {\r\n        wrapMode = wrapMode || cc.WrapMode.Normal\r\n        rate = rate || 10\r\n        let sp_n = this.createNode(cc.Sprite)\r\n        let animation:cc.Animation = sp_n.node.addComponent(cc.Animation)\r\n        if(core.isString(pathOrFrames))\r\n        {\r\n            let path = <string>pathOrFrames\r\n            if(path.indexOf(\".plist\")>=0)\r\n            {\r\n                cc.loader.loadRes(path.substr(0,path.indexOf(\".plist\")),cc.SpriteAtlas,(err,atlas:cc.SpriteAtlas)=>\r\n                {\r\n                    let frames = atlas.getSpriteFrames()\r\n                })\r\n            }\r\n            else\r\n            {\r\n                cc.loader.loadResDir(path,cc.SpriteFrame,(err,resource,urls)=>\r\n                {\r\n                    let spriteFrames=<[cc.SpriteFrame]>resource\r\n                    animation.node.setContentSize(spriteFrames[0].getOriginalSize())\r\n                    spriteFrames.sort((a,b)=>\r\n                    {\r\n                        let a_index = parseInt(a.name.substring(a.name.indexOf(\"_\")+1))\r\n                        let b_index = parseInt(b.name.substring(b.name.indexOf(\"_\")+1))\r\n                        return a_index-b_index\r\n                    })\r\n                    let clip = cc.AnimationClip.createWithSpriteFrames(spriteFrames, rate)\r\n                    clip.name = 'run'\r\n                    clip.wrapMode = wrapMode\r\n\r\n                    animation.addClip(clip)\r\n                    animation.play('run')\r\n                    animation.on(\"finished\",()=>\r\n                    {\r\n                        let need_del = true\r\n                        if(func)\r\n                        {\r\n                            need_del = func()\r\n                        }\r\n                        if(need_del!=false)\r\n                        {\r\n                            animation.node.removeFromParent()\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else\r\n        {\r\n            let frames = <[cc.SpriteFrame]>pathOrFrames\r\n            animation.node.setContentSize(frames[0].getOriginalSize())\r\n            let clip = cc.AnimationClip.createWithSpriteFrames(frames, rate)\r\n            clip.name = 'run'\r\n            clip.wrapMode = wrapMode\r\n\r\n            animation.addClip(clip)\r\n            animation.play('run')\r\n            animation.on(\"finished\",()=>\r\n            {\r\n                let need_del = true\r\n                if(func)\r\n                {\r\n                    need_del = func()\r\n                }\r\n                if(need_del!=false)\r\n                {\r\n                    animation.node.removeFromParent()\r\n                }\r\n            })\r\n        }\r\n        return animation\r\n    }\r\n    static createMutual(index,from,pos,to_target)\r\n    {\r\n        let me = GHelper.createNode(MutualEmotion)\r\n        me.node.parent = to_target\r\n        me.fly(index,from,pos)\r\n    }\r\n\r\n    /**\r\n     * 获取本地时间，严格上尽量用下面的获取服务器时间\r\n     * 毫秒\r\n     * @param format 格式\r\n     */\r\n    static getLocalTime(format?:string)\r\n    {\r\n        let d = new Date()\r\n        if(format===undefined)\r\n        {\r\n            return d.getTime()\r\n        }\r\n        return core.format(d,format)\r\n    }\r\n\r\n    static convertShortTime(time)\r\n    {\r\n        time = parseInt(time)\r\n        let dt = new Date(time)\r\n        let now = new Date()\r\n        if(dt.getFullYear()!=now.getFullYear())\r\n        {\r\n            return dt.getFullYear()+\"/\"+(dt.getMonth()+1)+\"/\"+dt.getDate()+\" \"+dt.getHours()+\":\"+dt.getMinutes()\r\n        }\r\n        if(dt.getDate()!=now.getDate()\r\n            ||dt.getMonth()!=now.getMonth())\r\n        {\r\n            return (dt.getMonth()+1)+\"/\"+dt.getDate()+\" \"+dt.getHours()+\":\"+dt.getMinutes()\r\n        }\r\n        return dt.getHours()+\":\"+dt.getMinutes()\r\n    }\r\n    static convertTime(time)\r\n    {\r\n        time = parseInt(time)\r\n        let dt = new Date(time)\r\n        return (dt.getMonth()+1)+\"-\"+dt.getDate()+\" \"+dt.getHours()+\":\"+(dt.getMinutes()<10?(\"0\"+dt.getMinutes()):dt.getMinutes())\r\n    }\r\n    //获取服务器的时间\r\n    static getServerTime(format?:string)\r\n    {\r\n        let mill = GGameDM.diffServerTime + new Date().getTime()\r\n        if(typeof format===\"undefined\")\r\n        {\r\n            return mill\r\n        }\r\n        let d = new Date(mill)\r\n        return core.format(d,format)\r\n    }\r\n\r\n    static random (min?:number, max?:number) \r\n    {\r\n        if (min==undefined) \r\n        {\r\n            return Math.random()\r\n        }\r\n        if (!max) {\r\n            max = min\r\n            min = 0\r\n        }\r\n        return Math.floor(Math.random() * (max - min)) + min\r\n    }\r\n\r\n    //屏幕中间小黑条提示\r\n    //传入的msg多语言如果找不到的话，直接显示那个词语\r\n    static showTip(msg,time?,pos?)\r\n    {\r\n        let str = GLocalizationDataModel.getStringByKey(msg)\r\n        let noTip = GLocalizationDataModel.getTipStr()\r\n        if(str != noTip)\r\n        {\r\n            msg = str\r\n        }\r\n        GTipLabel.show(msg,time,pos)\r\n    }\r\n    \r\n    static clearTip()\r\n    {\r\n        GTipLabel.clear()\r\n    }\r\n\r\n    static getUniqueDeviceCode()\r\n    {\r\n        let jsj = null \r\n        if( cc.sys.isNative&&cc.sys.os == cc.sys.OS_ANDROID )\r\n        {\r\n            jsj = jsb.reflection \r\n        }\r\n        if(jsj)\r\n        {\r\n            //return jsj.callStaticMethod(\"org/cocos2dx/utils/PSNative\", \"getOpenUDID\",\"()Ljava/lang/String;\")\r\n        }\r\n        return \"1233210\"\r\n    }\r\n    static showRunningTip()\r\n    {\r\n        GTipRunning.node.active = true\r\n    }\r\n    static clearRunningTip()\r\n    {\r\n        GTipRunning.node.active = false\r\n    }\r\n\r\n    // 获取地理位置\r\n    static getLocation() \r\n    {\r\n        return \"\"\r\n    }\r\n\r\n    static saveData(data)\r\n    {\r\n        core.foreach(data,function(key,value)\r\n        {\r\n            cc.sys.localStorage.setItem(key,value)\r\n        })\r\n    }\r\n    static clearData()\r\n    {\r\n        var needRemove = []\r\n        for(var i=0;i<cc.sys.localStorage.length;i++){\r\n            let key =  cc.sys.localStorage.key(i)\r\n            if(key!=\"isShowServerList\")\r\n            {\r\n                needRemove.push(key)\r\n            }\r\n        }\r\n        console.log('clearData',needRemove)\r\n        needRemove.forEach((element)=>{\r\n            \r\n            if(element!= \"HotUpdateSearchPaths\"){\r\n                console.log('clearData remove',element)\r\n                cc.sys.localStorage.removeItem(element)\r\n            }\r\n        })\r\n\r\n        // let husp = cc.sys.localStorage.getItem(\"HotUpdateSearchPaths\")\r\n        // cc.sys.localStorage.clear()\r\n        // cc.sys.localStorage.setItem(\"HotUpdateSearchPaths\",husp)\r\n    }\r\n\r\n    static createFont(path,font:typeof cc.Font,cb)\r\n    {\r\n        cc.loader.loadRes(path,font,function(err,font)\r\n        {\r\n            if(cb)\r\n            {\r\n                cb(font)\r\n            }\r\n        })\r\n    }\r\n\r\n    static getMD5=function(str)\r\n    {\r\n        return GMd5.convertMd5(str)\r\n    }\r\n\r\n    static getUTF8(str)\r\n    {\r\n        return GMd5.convertUTF8(str)\r\n    }\r\n\r\n\r\n    static utf8ToUnicode(strUtf8):string \r\n    {\r\n        let bstr = \"\"\r\n        let nTotalChars = strUtf8.length // total chars to be processed.\r\n        let nOffset = 0 // processing point on strUtf8\r\n        let nRemainingBytes = nTotalChars // how many bytes left to be converted\r\n        let nOutputPosition = 0\r\n        let iCode, iCode1, iCode2 // the value of the unicode\r\n\r\n        while (nOffset < nTotalChars) \r\n        {\r\n            iCode = strUtf8.charCodeAt(nOffset)\r\n            if ((iCode & 0x80) == 0) // 1 byte.\r\n            {\r\n                if (nRemainingBytes < 1) // not enough data\r\n                {\r\n                    break\r\n                }\r\n                bstr += String.fromCharCode(iCode & 0x7F)\r\n                nOffset++\r\n                nRemainingBytes -= 1\r\n            }\r\n            else if ((iCode & 0xE0) == 0xC0) // 2 bytes\r\n            {\r\n                iCode1 = strUtf8.charCodeAt(nOffset + 1)\r\n                if (nRemainingBytes < 2 || // not enough data\r\n                        (iCode1 & 0xC0) != 0x80) // invalid pattern\r\n                {\r\n                    break\r\n                }\r\n                bstr += String.fromCharCode(((iCode & 0x3F) << 6) | (iCode1 & 0x3F));\r\n                nOffset += 2\r\n                nRemainingBytes -= 2\r\n            } \r\n            else if ((iCode & 0xF0) == 0xE0) // 3 bytes\r\n            {\r\n                iCode1 = strUtf8.charCodeAt(nOffset + 1)\r\n                iCode2 = strUtf8.charCodeAt(nOffset + 2)\r\n                if (nRemainingBytes < 3 || // not enough data\r\n                        (iCode1 & 0xC0) != 0x80 || // invalid pattern\r\n                        (iCode2 & 0xC0) != 0x80) \r\n                {\r\n                    break\r\n                }\r\n                bstr += String.fromCharCode(((iCode & 0x0F) << 12)\r\n                        | ((iCode1 & 0x3F) << 6) | (iCode2 & 0x3F))\r\n                nOffset += 3\r\n                nRemainingBytes -= 3\r\n            } \r\n            else\r\n            {\r\n                // 4 or more bytes -- unsupported\r\n                break\r\n            }\r\n        }\r\n        if (nRemainingBytes != 0) \r\n        { \r\n            // bad UTF8 string.\r\n            return \"\"\r\n        }\r\n        return bstr\r\n    }\r\n\r\n    static getStoragePath():string\r\n    {\r\n        return jsb.fileUtils.getWritablePath()\r\n    }\r\n\r\n    static makeDir=function (path)\r\n    {\r\n        let folders=path.split(\"/\")\r\n        if (folders==null)\r\n        {\r\n            return\r\n        }\r\n        let dir=\"\"\r\n        for(let i=0;i<folders.length-1;i++)\r\n        {\r\n            dir=dir+folders[i]+\"/\"\r\n            jsb.fileUtils.createDirectory(dir)\r\n        }\r\n    }\r\n\r\n    //num代表多少汉字长度\r\n    static getShortStr(str,num=5)\r\n    {\r\n        if(!str)\r\n        {\r\n            return \"\"\r\n        }\r\n        num*=2\r\n        let len = 0\r\n        for(let i=0;i<str.length;++i)\r\n        {\r\n            len = i + 1\r\n            if(str.charCodeAt(i)>255)\r\n            {\r\n                num-=2\r\n            }\r\n            else\r\n            {\r\n                num-=1\r\n            }\r\n            if(num<=0)\r\n            {\r\n                break\r\n            }\r\n        }\r\n        if(len==str.length)\r\n        {\r\n            return str\r\n        }\r\n        return str.substring(0,len)+\"...\"\r\n    }\r\n    static shuffle(v:Array<any>)\r\n    {\r\n        for(let j, x, i = v.length; i; j = Math.random() * i, x = v[--i], v[i] = v[j], v[j] = x)\r\n        return v\r\n    }\r\n    static max(v:Array<number>)\r\n    {\r\n        if(v.length<=0)\r\n        {\r\n            return 0\r\n        }\r\n        let max = v[0]\r\n        for(let i=1;i<v.length;++i)\r\n        {\r\n            if(max<v[i])\r\n            {\r\n                max = v[i]\r\n            }\r\n        }\r\n        return max\r\n    }\r\n    static httpRequest(url:string,ok_cb?,error_cb?,responseType?:XMLHttpRequestResponseType)\r\n    {\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = ()=>\r\n        {\r\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) \r\n            {\r\n                if(ok_cb) \r\n                {\r\n                    ok_cb(xhr)\r\n                }\r\n            }\r\n        }\r\n        xhr.ontimeout = ()=>\r\n        {\r\n            if(error_cb)\r\n            {\r\n                error_cb(\"timeout\")\r\n            }\r\n        }\r\n        xhr.onerror = (err)=>\r\n        {\r\n            if(error_cb)\r\n            {\r\n                error_cb(err)\r\n            }\r\n            error_cb(err)\r\n        }\r\n        xhr.responseType =  responseType||\"json\"\r\n        xhr.open(\"GET\", url, true)\r\n        xhr.send()\r\n    }\r\n    /**\r\n     * \r\n     * @param url 请求地址\r\n     * @param data 数据\r\n     */\r\n    static httpPost(url:string,data?:any):Promise<any>\r\n    {\r\n        return new Promise((resolve,reject)=>{\r\n            try{\r\n                let xhr = new XMLHttpRequest()\r\n                //xhr.withCredentials=true\r\n                xhr.onreadystatechange = (ev)=>\r\n                {\r\n                    if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400))\r\n                    {\r\n                        let jsonData = null\r\n                        try\r\n                        {\r\n                            if(xhr.response)\r\n                            {\r\n                                jsonData=JSON.parse(xhr.response)\r\n                            }\r\n                            else\r\n                            {\r\n                                jsonData={}\r\n                            }\r\n                        }\r\n                        catch(err)\r\n                        {\r\n                            resolve({errcode:err})\r\n                            return\r\n                        }\r\n                        resolve(jsonData)\r\n                    }\r\n\r\n                }\r\n                xhr.onerror=(err)=>\r\n                {\r\n                    console.log(\"err url=\"+url)\r\n                    resolve({errcode:err})\r\n                }\r\n                xhr.ontimeout=(err)=>\r\n                {\r\n                    console.log(\"timeout url=\"+url)\r\n                    resolve({errcode:err})\r\n                }\r\n                xhr.open(\"post\", url, true)\r\n                xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n                if(JSON.stringify(data) !='{}'){\r\n                    GHelper.signature(data)\r\n                }\r\n                console.log(\"req:\"+url)\r\n                console.log(\"req msg:\"+JSON.stringify(data))\r\n                xhr.send(JSON.stringify(data||{}))\r\n            }\r\n            catch(err)\r\n            {\r\n                console.log(\"catch url=\"+url)\r\n                console.error(err)\r\n                resolve({errcode:err})\r\n            }\r\n        })\r\n    }\r\n    // static captureScreenshot(filename: string,callback): void \r\n    // {\r\n    //     if (cc.sys.isBrowser) \r\n    //     {\r\n    //         var canvas: HTMLCanvasElement = <HTMLCanvasElement>document.getElementById(\"gameCanvas\");\r\n    //         var base64: string = canvas.toDataURL(\"image/png\")\r\n    //         var href: string = base64.replace(/^data:image[^;]*/, \"data:image/octet-stream\");\r\n    //         var aLink: HTMLAnchorElement = document.createElement('a')\r\n    //         aLink['download'] = filename\r\n    //         aLink.href = href\r\n    //         var evt = document.createEvent(\"HTMLEvents\")\r\n    //         evt.initEvent(\"click\", false, false)\r\n    //         aLink.dispatchEvent(evt)\r\n    //     }\r\n    //     else \r\n    //     {\r\n    //         var size: cc.Size = cc.view.getVisibleSize()\r\n    //         var texture = new cc.RenderTexture()\r\n    //         texture.initWithSize(size.width, size.height, gl.DEPTH24_STENCIL8_OES)\r\n    //         texture.begin()\r\n    //         cc.director.getScene()._sgNode.visit()\r\n    //         texture.end()\r\n    //         texture.saveToFile(filename, cc.ImageFormat.JPG,false,(tex,path)=>\r\n    //         {\r\n    //             if(callback)\r\n    //             {\r\n    //                 callback(tex,path)\r\n    //             }\r\n    //         })\r\n    //     }\r\n    // }\r\n    static getAnimationClip(node:cc.Node,clipName?)\r\n    {\r\n        let rs = {ani:<cc.Animation>null,clip:<cc.AnimationClip>null}\r\n        let ani = node.getComponent(cc.Animation)\r\n        rs.ani = ani\r\n        if(ani)\r\n        {\r\n            if(!clipName)\r\n            {\r\n                rs.clip = ani.defaultClip\r\n                return rs\r\n            }\r\n            let clips = ani.getClips()\r\n            for(let index in clips)\r\n            {\r\n                let cp = clips[index]\r\n                if(cp.name==clipName)\r\n                {\r\n                    rs.clip = cp\r\n                    return rs\r\n                }\r\n            }\r\n        }\r\n        return rs\r\n    }\r\n    /**\r\n     * 抖动\r\n     * @param node 抖动节点\r\n     * @param shake_num 抖动次数\r\n     */\r\n    static shake(node:cc.Node,shake_num?)\r\n    {\r\n        shake_num=shake_num||5\r\n        let base = node.position\r\n        let shake_pos=\r\n        [\r\n            cc.v2(base.x+10,base.y),\r\n            cc.v2(base.x+10,base.y+10),\r\n            cc.v2(base.x,base.y+10),\r\n            cc.v2(base.x,base.y)\r\n        ]\r\n        let one_shake_actions=[]\r\n        for(let i=0;i<shake_pos.length;++i)\r\n        {\r\n            one_shake_actions.push(cc.moveTo(0.03,shake_pos[i]))\r\n        }\r\n        let one_shake_action = cc.sequence(one_shake_actions)\r\n        let actions=[\r\n            cc.repeat(one_shake_action,shake_num),\r\n            cc.callFunc(()=>\r\n            {\r\n                node.position = base\r\n            })\r\n        ]\r\n        node.runAction(cc.sequence(actions))\r\n    }\r\n\r\n    public static saveImage() {\r\n        let camera = cc.director.getScene().getComponentInChildren(cc.Camera);\r\n        camera.cullingMask = 0xffffffff;\r\n        let texture = new cc.RenderTexture();\r\n        // texture.initWithSize(node.width, node.height);\r\n        texture.initWithSize(cc.winSize.width, cc.winSize.height, (cc.game as any)._renderContext.STENCIL_INDEX8);\r\n\r\n        let Width = 0;\r\n        let Height = 0;\r\n//        if (targetNode == null) {\r\n            Width = cc.winSize.width;\r\n            Height = cc.winSize.height;\r\n        // } else {\r\n        //     Width = targetNode.width;\r\n        //     Height = targetNode.height;\r\n        // }\r\n\r\n        camera.targetTexture = texture;\r\n        camera.render(null);\r\n        camera.targetTexture = null;\r\n        let data = texture.readPixels();\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        data = this.filpYImage(data, width, height)\r\n        let fileName = \"result_share.jpg\";\r\n\r\n        let fullPath = jsb.fileUtils.getWritablePath() + fileName;\r\n        if (jsb.fileUtils.isFileExist(fullPath)) {\r\n            jsb.fileUtils.removeFile(fullPath);\r\n        }\r\n\r\n        return jsb['saveImageData'](data, Width, Height, fullPath);\r\n    }\r\n\r\n    public static wxShareShot(sType: number, targetNode: cc.Node = null) {\r\n        let camera = cc.director.getScene().getComponentInChildren(cc.Camera);\r\n        camera.cullingMask = 0xffffffff;\r\n        let texture = new cc.RenderTexture();\r\n        // texture.initWithSize(node.width, node.height);\r\n        let size = cc.view.getFrameSize()\r\n        let ratio = cc.view.getDevicePixelRatio()\r\n        size.width*=ratio\r\n        size.height*=ratio\r\n        \r\n        texture.initWithSize(size.width, size.height, (cc.game as any)._renderContext.STENCIL_INDEX8);\r\n\r\n        camera.targetTexture = texture;\r\n        let presscale=1\r\n        let prey = 0\r\n        if(targetNode)\r\n        {\r\n            presscale = targetNode.scale\r\n            prey = targetNode.y\r\n            let reallyscall = cc.winSize.width/targetNode.width\r\n            targetNode.scale=reallyscall\r\n            targetNode.y=0\r\n        }\r\n\r\n        camera.render(targetNode)\r\n        if(targetNode)\r\n        {\r\n            targetNode.scale=presscale\r\n            targetNode.y=prey\r\n        }\r\n        camera.targetTexture = null\r\n        let data = texture.readPixels()\r\n        let width = size.width\r\n        let height = size.height\r\n        if(targetNode)\r\n        {\r\n            height=Math.floor((size.width/targetNode.width)*targetNode.height)\r\n            if(height>size.height)\r\n            {\r\n                height=size.height\r\n            }\r\n            let y = (size.height-height)/2\r\n            data = texture.readPixels(data,0,y,width,height)\r\n        }\r\n        data = this.filpYImage(data, width, height)\r\n\r\n        //let data = texture.readPixels();\r\n        // let width = texture.width;\r\n        // let height = texture.height;\r\n        // data = this.filpYImage(data, width, height)\r\n        let fileName = \"result_share.jpg\";\r\n\r\n        let fullPath = jsb.fileUtils.getWritablePath() + fileName;\r\n        if (jsb.fileUtils.isFileExist(fullPath)) {\r\n            jsb.fileUtils.removeFile(fullPath);\r\n        }\r\n\r\n        let success = jsb['saveImageData'](data, width, height, fullPath);\r\n        if (success) {\r\n            if(cc.sys.os == cc.sys.OS_ANDROID){  \r\n                jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"shareScreenShot\",\"(Ljava/lang/String;I)V\",fullPath,sType)\r\n            }\r\n            if (cc.sys.os == cc.sys.OS_IOS) {\r\n                jsb.reflection.callStaticMethod(\"AppController\", \"shareScreenShot:andType:\" , fullPath, sType);\r\n            }\r\n            texture.destroy();\r\n        }\r\n    }\r\n\r\n    public static filpYImage(data, width, height) \r\n    {\r\n        var picData = new Uint8Array(width * height * 4)\r\n        var rowBytes = width * 4\r\n        for (var row = 0; row < height; row++) \r\n        {\r\n            var srow = height - 1 - row\r\n            var start = srow * width * 4\r\n            var reStart = row * width * 4\r\n            \r\n            for (var i = 0; i < rowBytes; i++) \r\n            {\r\n                picData[reStart + i] = data[start + i]\r\n            }\r\n        }\r\n        return picData\r\n    }\r\n\r\n    /**\r\n     * 截图\r\n     * @param targetNode  截图目标节点，如果为null则表示截全屏\r\n     * @returns 返回截屏图片的node\r\n     */\r\n     public static screenShot(targetNode: cc.Node = null) {\r\n        //获取当前场景Camera\r\n        let camera = cc.director.getScene().getComponentInChildren(cc.Camera);\r\n        //创建新的texture\r\n        let texture = new cc.RenderTexture();\r\n        texture.initWithSize(cc.winSize.width, cc.winSize.height, (cc.game as any)._renderContext.STENCIL_INDEX8);\r\n        //创建新的spriteFrame\r\n        let spriteFrame = new cc.SpriteFrame();\r\n        if (targetNode == null) {\r\n            spriteFrame.setTexture(texture);\r\n        } else {\r\n            let nodeX = cc.winSize.width / 2 + targetNode.x - targetNode.width / 2;\r\n            let nodeY = cc.winSize.height / 2 + targetNode.y - targetNode.height / 2;\r\n            let nodeWidth = targetNode.width;\r\n            let nodeHeight = targetNode.height;\r\n            //只显示node部分的图片\r\n            spriteFrame.setTexture(texture, new cc.Rect(nodeX, nodeY, nodeWidth, nodeHeight));\r\n        }\r\n        //创建新的node\r\n        let node = new cc.Node();\r\n        let sprite = node.addComponent(cc.Sprite);\r\n        sprite.spriteFrame = spriteFrame;\r\n        //截图是反的，这里将截图scaleY取反，这样就是正的了\r\n        sprite.node.scaleY = - Math.abs(sprite.node.scaleY);\r\n        //手动渲染camera\r\n        camera.cullingMask = 0xffffffff;\r\n        camera.targetTexture = texture;\r\n        camera.render();\r\n        camera.targetTexture = null;\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 签名数据\r\n     */\r\n    public static signature(data:any){\r\n        let time = Date.now()\r\n        let keys = []\r\n        for(var k in data){\r\n            keys.push(k) \r\n        }\r\n        // ===============\r\n        keys.sort()\r\n        let s = ''\r\n        for(var v of keys){\r\n            s = s+data[v]\r\n        }\r\n        // ==========进行加密\r\n        s+=time\r\n        s+= 'asbs$#?ffffttttpp'\r\n        data.sign =  new MD5().hex_md5(s);\r\n        data.time = time\r\n    }\r\n}","const { ccclass, property } = cc._decorator;\r\n \r\nenum Direction {\r\n    LEFT_TO_RIGHT = 1,\r\n    RIGHT_TO_LEFT,\r\n}\r\n \r\n@ccclass\r\nexport default class HorseRaceLamp extends cc.Component {\r\n \r\n    @property(cc.RichText)\r\n    label: cc.RichText = null;\r\n \r\n    @property(cc.Mask)\r\n    maskNode: cc.Mask = null;\r\n \r\n    @property({\r\n        tooltip:\"每秒移动多少像素\",\r\n    })\r\n    m_speed: number = 100;\r\n \r\n    @property\r\n    text: string = 'hello';\r\n \r\n    m_xLeftEnd: number = 0;\r\n    m_xRightEnd: number = 0;\r\n \r\n    m_yPos: number = 0;\r\n \r\n    @property({\r\n        tooltip:\"文字滚动的方向, 1是从左到右, 2是从右到左\",\r\n    })\r\n    m_direction: number = Direction.LEFT_TO_RIGHT;\r\n \r\n \r\n \r\n    start() {\r\n        // init logic\r\n \r\n        this.label.string = this.initTemplate(this.text);\r\n        this.m_xRightEnd = 0//this.node.x + this.maskNode.node.width * this.maskNode.node.anchorX;\r\n        this.m_xLeftEnd = -cc.winSize.width//this.node.x - this.maskNode.node.width * this.maskNode.node.anchorX;\r\n \r\n        let contentSize = this.label.node.getContentSize();\r\n        \r\n        let xPos:number = 0;\r\n        if(this.m_direction === Direction.LEFT_TO_RIGHT){\r\n            xPos = this.m_xLeftEnd - contentSize.width;\r\n        }else{\r\n            xPos = this.m_xRightEnd;\r\n        }\r\n \r\n        this.label.node.x = xPos;\r\n        this.label.node.y = this.m_yPos;\r\n    }\r\n \r\n    update(dt) {\r\n        if (this.m_direction === Direction.LEFT_TO_RIGHT) {\r\n            let contentSize = this.label.node.getContentSize();\r\n            if (this.label.node.x >= this.m_xRightEnd) { \r\n                this.label.node.x = this.m_xLeftEnd - contentSize.width;\r\n            }\r\n \r\n            this.label.node.x += this.m_speed * dt;\r\n            \r\n        }else{\r\n            let contentSize = this.label.node.getContentSize();\r\n            if (this.label.node.x <= this.m_xLeftEnd - contentSize.width) { \r\n                this.label.node.x = this.m_xRightEnd;\r\n            }\r\n \r\n            this.label.node.x -= this.m_speed * dt;\r\n        }\r\n    }\r\n\r\n    initTemplate(str) {\r\n        let text = '<color=#00ff00>' + str + '</c>';\r\n        return text\r\n    }\r\n}","import { GGameDM } from './DataModel/GameDataModel';\r\nimport { TipRunning } from './Extention/TipRunning';\r\nimport {GSettingDM} from \"./DataModel/SettingDataModel\"\r\nimport {GPageMgr, PageManager} from \"./View/Page/PageManager\"\r\nimport {TipLabel} from \"./Extention/TipLabel\"\r\nimport { GHelper } from './Logic/Helper';\r\nimport { loginService } from '../Service/LoginService';\r\nimport { layerMgr } from '../manager/LayerManager';\r\nimport { ykUtils } from '../utils/YkUtils';\r\n\r\nexport class IGame extends cc.Component {\r\n    private reGetInterval = 0\r\n    private reloadingIndex = 0\r\n    onLoad() \r\n    {\r\n        cc['yk'] = {}\r\n        GSettingDM.init()\r\n       \r\n        let pageNode = new cc.Node()\r\n        pageNode.addComponent(PageManager)\r\n        pageNode.parent = this.node\r\n        //初始化提示条\r\n        let tipNode = new cc.Node()\r\n        tipNode.addComponent(TipLabel)\r\n        tipNode.parent = this.node\r\n\r\n        //初始化提示条\r\n        let tipRunningNode = new cc.Node()\r\n        tipRunningNode.addComponent(TipRunning)\r\n        tipRunningNode.parent = this.node\r\n\r\n        GPageMgr.registerKeyPath(\"Page\",\"View/Page/Layout/\")\r\n\r\n        layerMgr.showNetLoading(true,'正在加载配置中')\r\n        this.getGameConfig()\r\n        this.reGetInterval =  setInterval(()=>{\r\n            this.reloadingIndex+=1\r\n            this.getGameConfig()\r\n        },2000)\r\n    }\r\n\r\n\r\n    async getGameConfig(){\r\n        try{\r\n            let isGet = await loginService.getGameConfig()\r\n            if(isGet){\r\n                layerMgr.showNetLoading(false)\r\n                this.onPreInitDone()\r\n            }else{\r\n                layerMgr.showNetLoading(true,'正在加载配置中 尝试次数+'+this.reloadingIndex)\r\n            }\r\n        }catch(error){\r\n            console.log('req error')\r\n        }\r\n    }\r\n\r\n    onPreInitDone()\r\n    {\r\n        if(this.reGetInterval){\r\n            clearInterval(this.reGetInterval)\r\n            this.reGetInterval = null\r\n        }\r\n        layerMgr.showNetLoading(false)\r\n    }\r\n}","export class IProtoFilter\r\n{\r\n    init(fun:Function){}\r\n    encode(data){ return \"\"}\r\n    decode(data,callback){}\r\n}","import { resMgr } from \"../../../manager/ResourceManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nexport class CardInfo {\r\n    id: number = 0;\r\n    x: number = 0;\r\n    y: number = 0;\r\n    scale: number = 1;\r\n    mark: number = 0;\r\n    select: boolean = false;\r\n    delay: number = 0;\r\n}\r\n\r\n@ccclass\r\nexport default class ItemCard extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    imgCard: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    imgLight: cc.Sprite = null;\r\n\r\n    @property(cc.Node)\r\n    imgShadow: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    imgCardBack: cc.Node = null;\r\n\r\n    public info: CardInfo = null;\r\n\r\n    init(info) {\r\n        if (this.info != info) {\r\n            this.info = info;\r\n        } else {\r\n            this.initTable();\r\n        }\r\n    }\r\n\r\n    update (dt) {\r\n        if (!this.info) {\r\n            return;\r\n        }\r\n\r\n        this.imgShadow.opacity = this.info.select ? 128 : 0;\r\n\r\n        if (this.info.delay > 0) {\r\n            this.info.delay -= dt;\r\n            if (this.info.delay <= 0) {\r\n                this.info.delay = 0;\r\n            }\r\n            return;\r\n        }\r\n    }\r\n\r\n    initTable() {\r\n        if (!this.info) {\r\n            return;\r\n        }\r\n\r\n        this.imgCardBack.active = this.info.id == 0;\r\n        resMgr.loadImage(\"image/card/\" + this.info.id, (res) => {\r\n            cc.isValid(this.imgCard) && (this.imgCard.spriteFrame = res);\r\n        })\r\n    }\r\n}\r\n","import { RoomInfo } from \"../../../data/data\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ItemRoom extends cc.Component {\r\n    \r\n    @property(cc.Label)\r\n    labelTitle: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelScore: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelTime: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelCount: cc.Label = null;\r\n\r\n    private info: RoomInfo = null;\r\n\r\n    init(info: RoomInfo) {\r\n        this.info = info;\r\n        this.refreshUI();\r\n    }\r\n\r\n    update (dt) {\r\n    }\r\n\r\n    refreshUI() {\r\n        if (!this.info) {\r\n            return;\r\n        }\r\n\r\n        this.labelTitle.string = String(this.info.config.name);\r\n        this.labelScore.string = String(this.info.config.entry_cost);\r\n        this.labelCount.string = this.info.count_play + \"/\" + this.info.count_match;\r\n        let date = new Date(this.info.config.start_time);\r\n        let hour = date.getHours();\r\n        let minute = date.getMinutes();\r\n        this.labelTime.string = (hour < 10 ? '0' + hour : hour) + \":\" + (minute < 10 ? '0' + minute : minute);\r\n    }\r\n\r\n    onClickSelect() {\r\n        // gameCtrl.joinRoom(this.info.id, (msg) => {\r\n        //     if (msg) {\r\n        //         gameCtrl.room_id = this.info.id;\r\n        //         sceneMgr.toGameScene();\r\n        //     }\r\n        // });\r\n    }\r\n}\r\n","import { GHallHttp } from \"../Net/HallHttp\"\r\n\r\nexport enum EItemType\r\n{\r\n    Common,\r\n    Object\r\n}\r\n\r\nexport class ItemItem\r\n{\r\n    id=-1\r\n    type=EItemType.Common\r\n    coin=0\r\n    name=\"\"\r\n    icon=\"\"\r\n    des=\"\"\r\n    //是否可以赠送\r\n    can_give=0\r\n    //是否可以兑换\r\n    can_exchange=0\r\n\r\n    verifi_club = 0\r\n}\r\n// export enum EBagItemState\r\n// {\r\n//     None,\r\n//     // Using,//使用中\r\n//     // Used//使用完毕\r\n//     Exchangeing,//兑换中\r\n//     ExOk,//兑换成功\r\n//     TransOk,//已转赠\r\n//     CoinPointOk// 已兑换竞技点\r\n// }\r\n\r\nexport enum EBagItemState\r\n{\r\n    None,\r\n    Exchanging,//兑换中\r\n    ExOk,//兑换成功\r\n    TransOk,//已转增\r\n    ExRewardCoin,\r\n    ExShipped,//已发货\r\n    past,//已过期\r\n    ExClub,//俱乐部已扫描\r\n    ExClubOk,//俱乐部已兑换,并且已结算\r\n}\r\nexport class BagItemItem\r\n{\r\n    //实例id user_id+\"_\"+item.id+\"_\"+random\r\n    id=\"\"\r\n    item_id=0\r\n    start_nickname:\"\"\r\n    start_userid=-1\r\n\r\n    give_nickname:\"\"\r\n    give_userid=-1\r\n\r\n    //state=EBagItemState.None\r\n    /**\r\n     * 数量\r\n     */\r\n    count:number=1\r\n    create_time=-1\r\n    give_time=-1\r\n    state=EBagItemState.None\r\n    to_nickname=\"\"\r\n    to_userid=-1\r\n    ok_time = 1\r\n    apply_time =1\r\n\r\n    give_check = -1\r\n\r\n}\r\nexport let GItemCfg:ItemConfig=null\r\nclass ItemConfig\r\n{\r\n    protected _items:ItemItem[]=[]\r\n    get items()\r\n    {\r\n        return this._items\r\n    }\r\n    getItemById(item_id:number)\r\n    {\r\n        for(let i=0;i<this._items.length;++i)\r\n        {\r\n            let item = this._items[i]\r\n            if(item.id==item_id)\r\n            {\r\n                return item\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    protected _exitems:BagItemItem[]=[]\r\n    get exitems()\r\n    {\r\n        return this._exitems\r\n    }\r\n    // getexItemById(item_id:number)\r\n    // {\r\n    //     for(let i=0;i<this._exitems.length;++i)\r\n    //     {\r\n    //         let item = this._exitems[i]\r\n    //         if(item.id==item_id)\r\n    //         {\r\n    //             return item\r\n    //         }\r\n    //     }\r\n    //     return null\r\n    // }\r\n\r\n    protected _bagitems:BagItemItem[]=[]\r\n    get bagItems()\r\n    {\r\n        return this._bagitems\r\n    }\r\n    getBagItemById(item_id:number):BagItemItem\r\n    {\r\n        if(!this._bagitems)\r\n        {\r\n            return null\r\n        }\r\n        for(let i=0;i<this._bagitems.length;++i)\r\n        {\r\n            if(this._bagitems[i].item_id==item_id)\r\n            {\r\n                return this._bagitems[i]\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    removeById(id: string) {\r\n        if(!this._bagitems)\r\n        {\r\n            return null\r\n        }\r\n        for(let i=0;i<this._bagitems.length;++i)\r\n        {\r\n            if(this._bagitems[i].id==id)\r\n            {\r\n                this._bagitems.splice(i, 1);\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    get exItems() {\r\n        return this._exitems;\r\n    }\r\n\r\n    async init()\r\n    {\r\n        let rs = await GHallHttp.request(\"bagitems\")\r\n        this._items=rs.items||{}\r\n        this._bagitems=rs.bagitems||[]\r\n        this._exitems=rs.exitems||[]\r\n    }\r\n}\r\nGItemCfg=new ItemConfig()","import { TaskConfig, TASK_TYPE } from \"../../../data/data\";\r\nimport { GHelper } from \"../../../Framework/Logic/Helper\";\r\nimport { GPageMgr } from \"../../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr, TaskStatus } from \"../../../Logic/UserManager\";\r\nimport { resMgr } from \"../../../manager/ResourceManager\";\r\nimport { GHallHttp } from \"../../../Net/HallHttp\";\r\nimport Page_Main from \"../../Page/Page_Main\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ItemTask extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    imgIcon: cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    labelName: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelDesc: cc.Label = null;\r\n\r\n    @property(cc.Button)\r\n    btnGoto: cc.Button = null;\r\n\r\n    @property(cc.Label)\r\n    labelGoto: cc.Label = null;\r\n\r\n    @property(cc.Button)\r\n    btnGet: cc.Button = null;\r\n\r\n    @property(cc.Label)\r\n    labelReward: cc.Label = null;\r\n\r\n    @property(cc.String)\r\n    taskname=\"\"\r\n\r\n    start() {\r\n        this.refresh()\r\n    }\r\n\r\n    refresh()\r\n    {\r\n        let selfuser = GUserMgr.self_user\r\n        let task:TaskStatus = null\r\n        if(selfuser.taskstatus)\r\n        {\r\n            task = selfuser.taskstatus[this.taskname]\r\n        }\r\n        if(!task||!task.ticket||task.ticket<=0)\r\n        {\r\n            this.btnGet.node.active = false\r\n            this.btnGoto.node.active = true    \r\n        }\r\n        else\r\n        {\r\n            this.btnGet.node.active = true\r\n            this.btnGoto.node.active = false\r\n        }\r\n    }\r\n    onClickGoto() {\r\n        if(this.taskname==\"bind\")\r\n        {\r\n            GPageMgr.openPage(\"Page_Bind\",this.refresh.bind(this))\r\n        }\r\n        else if(this.taskname==\"daymatch\")\r\n        {\r\n            GPageMgr.closePage(\"Page_Sign\")\r\n            let page = <Page_Main>GPageMgr.getPage(\"Page_Main\")\r\n            if(page)\r\n            {\r\n                page.onToggleMatch()\r\n            }\r\n        }\r\n        else if(this.taskname==\"bebinded\")\r\n        {\r\n            GPageMgr.openPage(\"Page_Invite\")\r\n        }\r\n    }\r\n\r\n    async onClickGet() {\r\n        let res = await GHallHttp.request(\"gettaskticket\",{task:this.taskname})\r\n        if(res.errcode)\r\n        {\r\n            GHelper.showTip(res.errcode.des)\r\n            return\r\n        }\r\n        GUserMgr.addOneUser(res.user)\r\n        let ticket = res.ticket\r\n        GHelper.showTip(\"恭喜您获得实物参赛券x\"+ticket)\r\n\r\n        GUserMgr.self_user.taskstatus[this.taskname].ticket=0\r\n        \r\n        this.refresh()\r\n    }\r\n}\r\n","import {Page} from \"../View/Page/Page\"\r\nimport {GPageMgr} from \"../View/Page/PageManager\"\r\n\r\nconst {ccclass, property} = cc._decorator\r\n\r\n@ccclass\r\nexport class JoyStick extends cc.Component\r\n{\r\n    @property({type:cc.Node})\r\n    node_bg: cc.Node=null\r\n\r\n    @property({type:cc.Node})\r\n    node_tip: cc.Node=null\r\n    _radius:number=0\r\n    _battle_page:Page\r\n    _fun_callback:Function\r\n    onLoad()\r\n    {\r\n        this._battle_page = GPageMgr.getPage(\"Page_Battle\")\r\n        this._radius = this.node_tip.x\r\n        this.node_tip.active = false\r\n        this.node_bg.on(cc.Node.EventType.TOUCH_START, this.onTouchEvent, this)\r\n        this.node_bg.on(cc.Node.EventType.TOUCH_MOVE,this.onTouchEvent,this)\r\n        this.node_bg.on(cc.Node.EventType.TOUCH_END, this.onTouchEvent, this)\r\n        this.node_bg.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEvent, this)\r\n    }\r\n    onTouchEvent(eventType)\r\n    {\r\n        let location = this.node_bg.convertToNodeSpace(eventType.touch.getLocation())\r\n        location.x-=this.node_bg.width/2\r\n        location.y-=this.node_bg.height/2\r\n        let toward = cc.v2(location.x,location.y).normalize()\r\n        let pos:cc.Vec2\r\n        let angle = 0\r\n        if(location.x==0)\r\n        {\r\n            if(location.y>0)\r\n            {\r\n                pos.x = 0\r\n                pos.y = 1\r\n                angle = 90\r\n            }\r\n            else\r\n            {\r\n                pos.x = 0\r\n                pos.y = -1\r\n                angle = -90\r\n            }\r\n        }\r\n        else\r\n        {\r\n            pos.x = toward.x*this._radius\r\n            pos.y = toward.y*this._radius\r\n            angle = -Math.atan2(location.y,location.x) *180/Math.PI\r\n        }\r\n        this.node_tip.angle = angle\r\n        this.node_tip.x = pos.x\r\n        this.node_tip.y = pos.y\r\n        if(eventType.type == \"touchstart\")\r\n        {\r\n            this.node_tip.active = true\r\n        }\r\n        else if(eventType.type == \"touchmove\")\r\n        {\r\n            if(this._fun_callback)\r\n            {\r\n                this._fun_callback(\"move\",toward)\r\n            }\r\n        }\r\n        else if(eventType.type == \"touchend\")\r\n        {\r\n            this.node_tip.active = false\r\n            if(this._fun_callback)\r\n            {\r\n                this._fun_callback(\"stop\")\r\n            }\r\n        }\r\n        else if(eventType.type == \"touchcancel\")\r\n        {\r\n            this.node_tip.active = false\r\n            if(this._fun_callback)\r\n            {\r\n                this._fun_callback(\"stop\")\r\n            }\r\n        }\r\n        return true\r\n    }\r\n    registerCallBack(fun:Function)\r\n    {\r\n        this._fun_callback = fun\r\n    }\r\n}","import {core} from \"../../Core/Base\"\r\nimport {IProtoFilter} from \"./IProtoFilter\"\r\n\r\nexport class JsonProtoFilter extends IProtoFilter\r\n{\r\n    init(callback:Function)\r\n    {\r\n        if(callback)\r\n        {\r\n            callback(true)\r\n        }\r\n    }\r\n    encode(data)\r\n    {\r\n        if(!core.isString(data))\r\n        {\r\n            data = JSON.stringify(data) \r\n        }\r\n        return data\r\n    }\r\n    decode(data,callback)\r\n    {\r\n        if(core.isString(data))\r\n        {\r\n            data = JSON.parse(data)\r\n        }\r\n        if(callback)\r\n        {\r\n            callback(data)\r\n        } \r\n    }\r\n}","import { ItemInfo, PropConfig } from \"../data/data\";\r\nimport { resMgr } from \"./ResourceManager\";\r\n\r\nimport { GPageMgr } from \"../Framework/View/Page/PageManager\";\r\nexport let  layerMgr: LayerManager = null\r\n\r\n\r\nclass LayerManager {\r\n    private layers: { [key: string]: cc.Node } = {};\r\n    private loading: boolean = false;\r\n    private beginTimeOut = null\r\n    private closeTimeOut = null\r\n    private qzCloseTimeOut = null //强制清理\r\n\r\n    constructor() {\r\n    }\r\n\r\n    loadPrefab(name: string, callback?: (node: cc.Node) => void) {\r\n        resMgr.loadPrefab(name, (res) => {\r\n            let node = this.layers[name];\r\n\r\n            if (!cc.isValid(node)) {\r\n                node = cc.instantiate(res);\r\n                this.layers[name] = node;\r\n            }\r\n\r\n            callback && callback(node);\r\n        })\r\n    }\r\n\r\n    showPersist(name: string, ...args) {\r\n        console.log(\"show persist: \" + name);\r\n        this.loadPrefab(name, (node) => {\r\n            node.parent =  cc.director.getScene();\r\n            node.active = true;\r\n            node.setSiblingIndex(-1);\r\n            node.emit(\"init\", ...args);\r\n\r\n            if (!cc.game.isPersistRootNode(node)) {\r\n                cc.game.addPersistRootNode(node);\r\n            }\r\n        })\r\n    }\r\n\r\n    showLayer(name: string, ...args) {\r\n        console.log(\"show layer: \" + name);\r\n        this.loadPrefab(name, (node) => {\r\n            node.parent = cc.Canvas.instance.node;\r\n            node.active = true;\r\n            node.setSiblingIndex(-1);\r\n            node.emit(\"init\", ...args);\r\n        })\r\n    }\r\n\r\n    showLoading() {\r\n        this.loading = true;\r\n        this.loadPrefab(\"loading\", (node) => {\r\n            node.parent = cc.Canvas.instance.node;\r\n            node.active = this.loading;\r\n            node.setSiblingIndex(-1);\r\n        })\r\n    }\r\n\r\n    hideLoading() {\r\n        this.loading = false;\r\n        this.layers[\"loading\"] && (this.layers[\"loading\"].active = this.loading);\r\n    }\r\n\r\n\r\n\r\n    private loadingIdx = 0\r\n    private beginTime = 0\r\n\r\n\r\n\r\n    showNetLoading(isShow,showLabel:string='',timeOut = 5000){\r\n        console.log('showNetLoading',isShow)\r\n        \r\n\r\n        var clearQzgb = ()=>{\r\n            if(this.qzCloseTimeOut){\r\n                clearTimeout(this.qzCloseTimeOut)\r\n                this.qzCloseTimeOut = null\r\n            }\r\n        }\r\n\r\n        var qzGbTimeOut = ()=>{\r\n            this.qzCloseTimeOut = setTimeout(()=>{\r\n                clearQzgb()\r\n                GPageMgr.closePage('Page_Loading')\r\n                console.log('showNetLoading close Page 4')\r\n            },timeOut)\r\n        }\r\n\r\n       \r\n        // 0.5秒未响应 开始弹出\r\n        if(isShow){\r\n            // this.loadingIdx +=1\r\n    \r\n            if(!this.beginTimeOut){\r\n                this.beginTimeOut = setTimeout(async ()=>{\r\n                    this.beginTime = new Date().getTime()\r\n                    if(this.closeTimeOut){\r\n                        // 说明界面还在显示\r\n                        clearTimeout(this.closeTimeOut)\r\n                        this.closeTimeOut = null\r\n                        this.beginTimeOut = null\r\n                    }else{\r\n                        console.log('showNetLoading open page')\r\n                        let page = await GPageMgr.openPage('Page_Loading')\r\n                        page['node']['zIndex'] = 1000 \r\n                        cc.find(\"netlabel\",page['node']).getComponent(cc.Label).string = showLabel\r\n                        if(this.beginTimeOut == null){\r\n                            GPageMgr.closePage('Page_Loading')\r\n                            console.log('showNetLoading close Page 0')\r\n                        }\r\n                        this.beginTimeOut = null\r\n                    }\r\n                    clearQzgb()\r\n                    //五秒后强制关闭\r\n                    qzGbTimeOut()\r\n                },500)\r\n            }\r\n        }else{\r\n            clearQzgb()\r\n            if(this.beginTimeOut){\r\n                clearTimeout(this.beginTimeOut)\r\n                this.beginTimeOut = null\r\n                console.log('showNetLoading close Page 1')\r\n                GPageMgr.closePage('Page_Loading')\r\n        \r\n            }else{\r\n                let endTime = new Date().getTime()\r\n                if(endTime-this.beginTime>0.3*1000){\r\n                    console.log('showNetLoading close Page 2')\r\n                    GPageMgr.closePage('Page_Loading')\r\n                }else{\r\n                    this.closeTimeOut = setTimeout(()=>{\r\n                        console.log('showNetLoading close Page 3')\r\n                        GPageMgr.closePage('Page_Loading')\r\n                        this.closeTimeOut = null\r\n                    },300)\r\n                }\r\n          \r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    showToast(toast: string | string[]) {\r\n        this.showPersist(\"toast\", toast);\r\n    }\r\n\r\n    showTips(tips: string, buttons?: {label: string, video?, callback?}[]) {\r\n        this.showLayer(\"tips_layer\", tips, buttons);\r\n    }\r\n\r\n    showReward(rewards: ItemInfo[]) {\r\n        // this.showLayer(LAYER.REWARD_LAYER, rewards);\r\n        // let toasts = configMgr.getItemsDesc(rewards)\r\n        // this.showToast(toasts);\r\n    }\r\n\r\n    showPropGet(id: number, count: number, pos: cc.Vec3, callback?: Function) {\r\n        //this.showLayer(LAYER.PROP_GET, id, count, pos, callback);\r\n    }\r\n\r\n    showPropCost(id: number, count: number, pos: cc.Vec3, callback?: Function) {\r\n        //this.showLayer(LAYER.PROP_COST, id, count, pos, callback);\r\n    }\r\n\r\n    showRewardProp(id: number, count: number, posStart: cc.Vec3, posEnd: cc.Vec3) {\r\n        //this.showLayer(LAYER.REWARD_PROP, id, count, posStart, posEnd);\r\n    }\r\n\r\n    showNotEnough(id: number, count: number) {\r\n        // let config = configMgr.getConfig(PropConfig, id);\r\n        // this.showToast(config.name + \"数量不足\");\r\n        // this.showLayer(LAYER.SHOP_LAYER);\r\n        //this.showLayer(LAYER.PROP_FILL, id, count);\r\n    }\r\n\r\n    showWebview(url: string) {\r\n        //this.showLayer(LAYER.WEBVIEW_LAYER, url);\r\n    }\r\n\r\n    showVideo(url: string) {\r\n        //this.showLayer(LAYER.VIDEO_LAYER, url);\r\n    }\r\n}\r\n\r\nlayerMgr = new LayerManager();","const { ccclass, property } = cc._decorator;\r\n\r\n//行信息\r\nclass ItemInfo {\r\n    data: any;\r\n    type: number;\r\n    height: number;\r\n    top: number;\r\n    bottom: number;\r\n}\r\n\r\n//节点池\r\nclass NodePool {\r\n    height: number;\r\n    pool = new cc.NodePool();\r\n}\r\n\r\n@ccclass\r\nexport default class ListView extends cc.Component {\r\n\r\n    sv: cc.ScrollView;\r\n\r\n    //类型和节点池按下标对应,下标代表行的类型\r\n    @property([cc.Prefab])\r\n    pfb_types: cc.Prefab[] = [];\r\n    np_types: NodePool[] = [];\r\n\r\n    bindItemFunc: Function;\r\n    getItemTypeFunc: Function;\r\n\r\n    //内容上下Padding\r\n    contentPaddingTop: number = 0;\r\n    contentPaddingBottom: number = 0;\r\n\r\n    //数据和行信息按下标对应\r\n    datas: any[];\r\n    itemInfos: ItemInfo[];\r\n    private _scrollEventTarget: any = null;                 // 滚动事件接收对象\r\n\r\n    onDestroy(){\r\n        this.clear();\r\n    }\r\n    onLoad() {\r\n        this.sv = this.node.getComponent(cc.ScrollView);\r\n\r\n        for (let type = 0; type < this.pfb_types.length; type++) {\r\n            let np = new NodePool();\r\n            this.np_types[type] = np;\r\n\r\n            let node = this.createItemNodeFromPool(type);\r\n            np.height = node.height;\r\n            this.recycleItemNodeToPool(type, node);\r\n        }\r\n\r\n        this.node.on(\"scrolling\", (sv: cc.ScrollView) => this.updateDisplay(), this);\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._onSVEventTouchCancel, this);\r\n\r\n\r\n       \r\n        if (this.sv.vertical) {\r\n            this.sv.node.on(\"scroll-to-top\", this._onSVEventScrollToTop, this);                         // 滚动视图滚动到顶部边界事件\r\n            this.sv.node.on(\"scroll-to-bottom\", this._onSVEventScrollToBottom, this);                   // 滚动视图滚动到底部边界事件\r\n            this.sv.node.on(\"bounce-top\", this._onSVEventBounceTop, this);                              // 滚动视图滚动到顶部边界并且开始回弹时发出的事件\r\n            this.sv.node.on(\"bounce-bottom\", this._onSVEventBounceBottom, this);                        // 滚动视图滚动到底部边界并且开始回弹时发出的事件\r\n        }\r\n\r\n        \r\n        if (this.sv.horizontal) {\r\n            this.sv.node.on(\"scroll-to-left\", this._onSVEventScrollToLeft, this);                       // 滚动视图滚动到左边边界事件\r\n            this.sv.node.on(\"scroll-to-right\", this._onSVEventScrollToRight, this);                     // 滚动视图滚动到右边边界事件\r\n            this.sv.node.on(\"bounce-left\", this._onSVEventBounceLeft, this);                            // 滚动视图滚动到左边边界并且开始回弹时发出的事件\r\n            this.sv.node.on(\"bounce-right\", this._onSVEventBounceRight, this);                          // 滚动视图滚动到右边边界并且开始回弹时发出的事件\r\n        }\r\n    }\r\n\r\n    \r\n    /**\r\n     * 绑定滚动事件接收对象\r\n     */\r\n    bindScrollEventTarget(target: any): void {\r\n        if (!target) return;\r\n        this._scrollEventTarget = target;\r\n    }\r\n    \r\n   \r\n\r\n       /**\r\n     * 滚动视图滚动到顶部边界事件\r\n     */\r\n    private _onSVEventTouchCancel(arg: cc.ScrollView): void {\r\n\r\n        if (!this._scrollEventTarget) return;\r\n\r\n        if (typeof this._scrollEventTarget.onSVEventTouchCancel === \"function\") {\r\n            this._scrollEventTarget.onSVEventTouchCancel(arg);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 滚动视图滚动到顶部边界事件\r\n     */\r\n    private _onSVEventScrollToTop(arg: cc.ScrollView): void {\r\n        if (!this._scrollEventTarget) return;\r\n\r\n        if (typeof this._scrollEventTarget.onSVEventScrollToTop === \"function\") {\r\n            this._scrollEventTarget.onSVEventScrollToTop(arg);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 滚动视图滚动到底部边界事件\r\n     */\r\n    private _onSVEventScrollToBottom(arg: cc.ScrollView): void {\r\n        if (!this._scrollEventTarget) return;\r\n\r\n        if (typeof this._scrollEventTarget.onSVEventScrollToBottom === \"function\") {\r\n            this._scrollEventTarget.onSVEventScrollToBottom(arg);\r\n        }\r\n    }\r\n\r\n\r\n        /**\r\n     * 滚动视图滚动到顶部边界并且开始回弹时发出的事件\r\n     */\r\n    private _onSVEventBounceTop(arg: cc.ScrollView): void {\r\n        if (!this._scrollEventTarget) return;\r\n\r\n        if (typeof this._scrollEventTarget.onSVEventBounceTop === \"function\") {\r\n            this._scrollEventTarget.onSVEventBounceTop(arg);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 滚动视图滚动到底部边界并且开始回弹时发出的事件\r\n     */\r\n    private _onSVEventBounceBottom(arg: cc.ScrollView): void {\r\n        if (!this._scrollEventTarget) return;\r\n\r\n        if (typeof this._scrollEventTarget.onSVEventBounceBottom === \"function\") {\r\n            this._scrollEventTarget.onSVEventBounceBottom(arg);\r\n        }\r\n    }\r\n\r\n        /**\r\n     * 滚动视图滚动到左边边界事件\r\n     */\r\n    private _onSVEventScrollToLeft(arg: cc.ScrollView): void {\r\n        if (!this._scrollEventTarget) return;\r\n\r\n        if (typeof this._scrollEventTarget.onSVEventScrollToBottom === \"function\") {\r\n            this._scrollEventTarget.onSVEventScrollToLeft(arg);\r\n        }\r\n    }\r\n\r\n        /**\r\n     * 滚动视图滚动到右边边界事件\r\n     */\r\n    private _onSVEventScrollToRight(arg: cc.ScrollView): void {\r\n        if (!this._scrollEventTarget) return;\r\n\r\n        if (typeof this._scrollEventTarget.onSVEventScrollToBottom === \"function\") {\r\n            this._scrollEventTarget.onSVEventScrollToRight(arg);\r\n        }\r\n    }\r\n\r\n        /**\r\n     * 滚动视图滚动到左边边界并且开始回弹时发出的事件\r\n     */\r\n    private _onSVEventBounceLeft(arg: cc.ScrollView): void {\r\n        if (!this._scrollEventTarget) return;\r\n\r\n        if (typeof this._scrollEventTarget.onSVEventBounceLeft === \"function\") {\r\n            this._scrollEventTarget.onSVEventBounceLeft(arg);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 滚动视图滚动到右边边界并且开始回弹时发出的事件\r\n     */\r\n    private _onSVEventBounceRight(arg: cc.ScrollView): void {\r\n        if (!this._scrollEventTarget) return;\r\n\r\n        if (typeof this._scrollEventTarget.onSVEventBounceRight === \"function\") {\r\n            this._scrollEventTarget.onSVEventBounceRight(arg);\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    /**\r\n     * 适配 widget(当前帧立即生效)\r\n     * @param node          要适配的节点\r\n     * @param bTransChild   是否遍历适配子节点(默认 false)\r\n     */\r\n    private _adaptWidget(node: cc.Node, bTransChild?: boolean): void {\r\n        if (!node) return;\r\n\r\n        let widget: cc.Widget = node.getComponent(cc.Widget);\r\n        if (widget) {\r\n            let enabled: boolean = widget.enabled;\r\n            widget.enabled = true;\r\n            widget.updateAlignment();\r\n            widget.enabled = enabled;\r\n        }\r\n\r\n        if (bTransChild) {\r\n            for (let i = 0; i < node.children.length; ++i) {\r\n                this._adaptWidget(node.children[i], bTransChild);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private createItemNodeFromPool(type: number) {\r\n        let pool = this.np_types[type].pool;\r\n        if (pool.size() > 0) {\r\n            let mtd = pool.get();\r\n            return mtd;\r\n        } else {\r\n            let node = cc.instantiate(this.pfb_types[type]);\r\n            node.setAnchorPoint(0, 1);\r\n            node.x = 0;\r\n            return node;\r\n        }\r\n    }\r\n    _itemNodeName = \"\";\r\n    private recycleItemNodeToPool(type: number, itemNode: cc.Node) \r\n    {\r\n        \r\n        if(this._itemNodeName==\"\")\r\n        {\r\n            this._itemNodeName = itemNode['_nodeWWName'];\r\n        }\r\n        this.np_types[type].pool.put(itemNode);\r\n    }\r\n\r\n    public updateDisplay() {\r\n        if (!this.itemInfos || this.itemInfos.length == 0) return;\r\n\r\n        const maxScrollY = this.sv.getMaxScrollOffset().y;\r\n        var scrollY = this.sv.getScrollOffset().y;\r\n        if (scrollY < 0) scrollY = 0;\r\n        else if (scrollY > maxScrollY) scrollY = maxScrollY;\r\n\r\n        \r\n        if (this._scrollEventTarget &&  this._scrollEventTarget.onSVEventScrolling &&\r\n            typeof this._scrollEventTarget.onSVEventScrolling === \"function\") {\r\n            this._scrollEventTarget.onSVEventScrolling(this.sv);\r\n        }\r\n\r\n        let startIndex = null, endIndex = null;\r\n        for (let i = 0; i < this.itemInfos.length; i++) {\r\n            const info = this.itemInfos[i];\r\n            if (startIndex == null && info.bottom >= scrollY) {\r\n                startIndex = i;\r\n            } else if (endIndex == null && info.bottom >= scrollY + this.node.height) {\r\n                endIndex = i;\r\n            }\r\n            if (startIndex != null && endIndex != null) break; //确定了边界，跳出\r\n        }\r\n        if (startIndex == null) startIndex = 0;\r\n        if (endIndex == null) endIndex = this.itemInfos.length - 1;\r\n\r\n        //回收节点\r\n        this.recycleContentItemNodes(false, startIndex, endIndex);\r\n\r\n        //添加需要显示的节点\r\n        for (let i = startIndex; i <= endIndex; i++) {\r\n            const iStr = i.toString();\r\n            if (this.sv.content.getChildByName(iStr)) continue; //当前在显示了\r\n\r\n            const info = this.itemInfos[i];\r\n            const node = this.createItemNodeFromPool(info.type);\r\n\r\n\r\n            // node['_nodeWWName'] = node.name\r\n\r\n            if(this._itemNodeName==\"\")\r\n            {\r\n                node['_nodeWWName'] = node.name\r\n            }else\r\n            {\r\n                node['_nodeWWName'] = this._itemNodeName\r\n            }\r\n            node.y = -info.top;\r\n            this.sv.content.addChild(node, 1, iStr);\r\n            this.bindItemFunc(node, info.data, i, this.itemInfos);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 回收不需要显示的节点,倒序\r\n     * @param isForce true 全部回收，不管要不要显示\r\n     * 当isForce=false,需要携带下面两个参数\r\n     * @param startIndex 显示的起始坐标\r\n     * @param endIndex 显示的结束坐标\r\n     */\r\n    private recycleContentItemNodes(isForce: boolean, startIndex?: number, endIndex?: number) {\r\n        let children = this.sv.content.children;\r\n        for (let i = children.length - 1; i >= 0; i--) {\r\n            const node = children[i];\r\n            const index = this.getIndexByItemNode(node);\r\n\r\n            if(node.name == \"listLoding\"){  //大厅房间列表，loading提示语不复用\r\n                continue;\r\n            }\r\n            if (isForce || index < startIndex || index > endIndex) { //强制或越界\r\n                this.recycleItemNodeToPool(this.itemInfos[index].type, node);\r\n            }\r\n        }\r\n    }\r\n\r\n    public init<T>(bindItemFunc: (item: cc.Node, data: T, index: number, result: any[]) => void,\r\n        getItemTypeFunc?: (data: T, index: number, result: any[]) => void) {\r\n        this.bindItemFunc = bindItemFunc;\r\n        this.getItemTypeFunc = getItemTypeFunc;\r\n        this._itemNodeName = \"\";\r\n    }\r\n\r\n    public setContentPadding(top: number, bottom: number) {\r\n        this.contentPaddingTop = top;\r\n        this.contentPaddingBottom = bottom;\r\n    }\r\n\r\n    public notifyDataSetChanged(datas: any[]) {\r\n        this.recycleContentItemNodes(true);\r\n\r\n        this.datas = datas;\r\n        this.itemInfos = [];\r\n        this.computeContentHeight();\r\n        this.updateDisplay();\r\n    }\r\n\r\n    public notifyDataRefresh() {\r\n       \r\n        let allNode =  this.sv.content.children\r\n        for(var v of allNode){\r\n            if(v['_nodeWWName']){\r\n                if(v.getComponent(v['_nodeWWName'])['refreshData']){\r\n                    v.getComponent(v['_nodeWWName'])['refreshData']()\r\n                }\r\n            }\r\n        }\r\n        // allNode[0].getComponent()\r\n        // console.log(allNode[1]['_nodeWWName'])\r\n    }\r\n\r\n    private computeContentHeight() {\r\n        var totalHeight = this.contentPaddingTop;\r\n        for (let i = 0; i < this.datas.length; i++) {\r\n            const info = new ItemInfo();\r\n            info.data = this.datas[i];\r\n            info.type = this.getItemTypeByData(info.data, i, this.datas);\r\n            info.height = this.np_types[info.type].height;\r\n            info.top = totalHeight;\r\n            info.bottom = info.top + info.height;\r\n            this.itemInfos[i] = info;\r\n\r\n            totalHeight = info.bottom;\r\n        }\r\n        totalHeight += this.contentPaddingBottom;\r\n        \r\n        if(totalHeight <  this.sv.content.parent.height){\r\n            totalHeight =  this.sv.content.parent.height;\r\n        }\r\n        this.sv.content.height = totalHeight;\r\n    }\r\n\r\n    private getItemTypeByData(data: any, index: number, result: any[]) {\r\n        if (this.getItemTypeFunc) return this.getItemTypeFunc(data, index, result);\r\n        return 0;\r\n    }\r\n\r\n    public clear() {\r\n        this.itemInfos = null;\r\n        this.datas = null;\r\n        if(cc.isValid(this.sv,true)){\r\n            this.sv.content.destroyAllChildren();\r\n            this.sv.content.removeAllChildren(true);\r\n            this.sv.content.height = 0;\r\n        }\r\n        this.np_types.forEach(np => np.pool.clear());\r\n    }\r\n\r\n    public getIndexByItemNode(itemNode: cc.Node) {\r\n        return parseInt(itemNode.name);\r\n    }\r\n}\r\n","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { resMgr } from \"../../manager/ResourceManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nexport class PreloadInfo {\r\n    bundle: string;\r\n    total: number;\r\n    finish: number;\r\n    complete: boolean;\r\n\r\n    constructor(bundle: string) {\r\n        this.bundle = bundle;\r\n        this.total = 0;\r\n        this.finish = 0;\r\n        this.complete = false;\r\n    }\r\n}\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends Page {\r\n\r\n    @property(cc.Sprite)\r\n    imgBg: cc.Sprite = null;\r\n\r\n    @property(cc.Node)\r\n    nodeLoading: cc.Node = null;\r\n\r\n    @property(cc.ProgressBar)\r\n    progressBar: cc.ProgressBar = null;\r\n\r\n    @property(cc.Label)\r\n    labelProgress: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    imgTips: cc.Node = null;\r\n\r\n    private scene_loaded: number = 0;\r\n    private scene_total: number = 0;\r\n    private preloads: PreloadInfo[] = [];\r\n\r\n    preload(bundle: string) {\r\n        let info = new PreloadInfo(bundle);\r\n\r\n        resMgr.preload(bundle, (finish, total) => {\r\n            info.finish = finish;\r\n            info.total = total;\r\n        }, (err) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                console.log(\"preload \", bundle, \" success\");\r\n                info.complete = true;\r\n            }\r\n        })\r\n\r\n        this.preloads.push(info);\r\n    }\r\n\r\n    onReady() {\r\n        this.progressBar.progress = 0;\r\n        this.labelProgress.string = Math.floor(this.progressBar.progress) + \"%\";\r\n\r\n        // sceneMgr.preloadScene(sceneMgr.getNextScene(), (completed, total) => {\r\n        //     this.scene_loaded = completed;\r\n        //     this.scene_total = total;\r\n        // }, () => {\r\n        //     this.scene_loaded = this.scene_total;\r\n        // });\r\n    }\r\n\r\n    update(dt) {\r\n        // let loaded = this.scene_loaded + configMgr.count_loaded;\r\n        // let total = this.scene_total + configMgr.count_total;\r\n\r\n        // this.preloads.forEach(info => {\r\n        //     loaded += info.finish;\r\n        //     total += info.total;\r\n        // })\r\n\r\n        // let progress = total ? loaded / total : 0;\r\n\r\n        // if (this.progressBar.progress < progress) {\r\n        //     this.progressBar.progress += dt * 2;\r\n        //     if (this.progressBar.progress >= progress) {\r\n        //         this.progressBar.progress = progress;\r\n        //     }\r\n\r\n        //     if (this.progressBar.progress >= 1) {\r\n        //         if (configMgr.count_loaded > 0 && configMgr.count_loaded == configMgr.count_total) {\r\n        //             //sceneMgr.loadScene();\r\n        //         } else {\r\n        //             this.progressBar.progress = 0.99;\r\n        //         }\r\n        //     }\r\n\r\n        //     this.labelProgress.string = Math.floor(this.progressBar.progress * 100) + \"%\";\r\n        // }\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingScene extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    loadingLayer: cc.Node = null;\r\n\r\n    onReady() {\r\n    }\r\n\r\n    onShow() {\r\n    }\r\n\r\n    onHide() {\r\n    }\r\n}\r\n","export let GLocalizationDataModel={\r\n    _cfg:{},\r\n    _curLan:\"cn\",\r\n    _noTip:\"Key Not Found!\",\r\n    init:function(lan:string,all)\r\n    {\r\n        this.add(all)\r\n        this._curLan = lan\r\n    },\r\n    add:function(add)\r\n    {\r\n        let self = this\r\n        for(let key in add)\r\n        {\r\n            self._cfg[key] = add[key]\r\n        }\r\n    },\r\n    getStringByKey:function(key):string\r\n    {\r\n        let item = this._cfg[key]\r\n        if(!item)\r\n        {\r\n            return this._noTip\r\n        }\r\n        return item[this._curLan]\r\n    },\r\n    getTipStr:function():string\r\n    {\r\n        return this._noTip\r\n    }\r\n}","import { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { eventMgr } from \"../../manager/EventManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoginLayer extends Page {\r\n\r\n    @property(cc.Node)\r\n    nodeWaiting: cc.Node = null;\r\n    \r\n    @property(cc.Button)\r\n    btnLogin: cc.Button = null;\r\n\r\n    @property(cc.Button)\r\n    btnRegister: cc.Button = null;\r\n\r\n    @property(cc.Button)\r\n    btnAccount: cc.Button = null;\r\n\r\n    onReady() {\r\n        this.nodeWaiting.active = true;\r\n        // loginCtrl.getConfig((msg) => {\r\n        //     this.nodeWaiting.active = false;\r\n        //     if (msg && !msg.error) {\r\n        //         if (loginCtrl.auto_login && loginCtrl.token) {\r\n        //             loginCtrl.auto_login = false;\r\n        //             this.nodeWaiting.active = true;\r\n        //             loginCtrl.tokenLogin(loginCtrl.token, (msg) => {\r\n        //                 this.nodeWaiting.active = false;\r\n        //                 if (msg && !msg.error) {\r\n        //                     loginCtrl.connectToServer();\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    initTable() {\r\n    }\r\n\r\n    onClickLogin() {\r\n       GHelper.showTip(\"暂不支持一键登录\");\r\n    }\r\n\r\n    onClickRegister() {\r\n        GPageMgr.openPage(\"Page_Register\")\r\n    }\r\n\r\n    onClickAccountLogin() {\r\n        GPageMgr.openPage(\"Page_AccountLogin\")\r\n    }\r\n}\r\n","import { InviteeInfo } from \"../data/data\";\r\n\r\nexport class LoginModel {\r\n    public uid: number = 0;\r\n    public account: string = \"\";\r\n    public password: string = \"\";\r\n    public token: string = \"\";\r\n    public phone: string = \"\";\r\n    public idcard_name: string = \"\";\r\n    public idcard_number: string = \"\";\r\n    public inviter: number = 0;\r\n    public invitees: InviteeInfo[] = [];\r\n    public daily_login: number = 0;\r\n    public count_login: number = 0;\r\n}","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoginScene extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    loginLayer: cc.Node = null;\r\n\r\n    @property(cc.Prefab)\r\n    prefabRegister: cc.Prefab = null;\r\n\r\n    @property(cc.Prefab)\r\n    prefabAccountLogin: cc.Prefab = null;\r\n\r\n    @property(cc.Prefab)\r\n    prefabCodeLogin: cc.Prefab = null;\r\n\r\n    @property(cc.Prefab)\r\n    prefabResetPassword: cc.Prefab = null;\r\n\r\n    private registerLayer: cc.Node = null;\r\n    private accountLoginLayer: cc.Node = null;\r\n    private codeLoginLayer: cc.Node = null;\r\n    private resetPasswordLayer: cc.Node = null;\r\n\r\n    onReady() {\r\n        this.registerLayer = cc.instantiate(this.prefabRegister);\r\n        this.node.addChild(this.registerLayer);\r\n        this.registerLayer.active = false;\r\n        \r\n        this.accountLoginLayer = cc.instantiate(this.prefabAccountLogin);\r\n        this.node.addChild(this.accountLoginLayer);\r\n        this.accountLoginLayer.active = false;\r\n        \r\n        this.codeLoginLayer = cc.instantiate(this.prefabCodeLogin);\r\n        this.node.addChild(this.codeLoginLayer);\r\n        this.codeLoginLayer.active = true;\r\n        \r\n        this.resetPasswordLayer = cc.instantiate(this.prefabResetPassword);\r\n        this.node.addChild(this.resetPasswordLayer);\r\n        this.resetPasswordLayer.active = false;\r\n    }\r\n    \r\n    onShow() {\r\n\r\n    }\r\n\r\n    onHide() {\r\n    }\r\n\r\n    onShowRegisterLayer() {\r\n        this.registerLayer.active = true;\r\n    }\r\n\r\n    onShowAccountLoginLayer() {\r\n        this.accountLoginLayer.active = true;\r\n    }\r\n\r\n    onShowCodeLoginLayer() {\r\n        this.codeLoginLayer.active = true;\r\n    }\r\n\r\n    onShowResetPasswordLayer() {\r\n        this.resetPasswordLayer.active = true;\r\n    }\r\n}\r\n","import { GGameDM } from '../Framework/DataModel/GameDataModel';\r\nimport { GHelper } from '../Framework/Logic/Helper';\r\nimport {core} from \"../Framework/Core/Base\"\r\nclass LoginService\r\n{\r\n    async getGameConfig():Promise<any>\r\n    {\r\n        console.log('getGameConfig ====')\r\n        let url=\"http://dzgame.obs.cn-east-2.myhuaweicloud.com/texasres/cfg.json\"\r\n        var promise = new Promise<any>(resolve => {\r\n            GHelper.httpRequest(url,(xhr)=>\r\n            {\r\n                \r\n                let json = xhr.response\r\n                GGameDM.review_version = json.review_version\r\n                GGameDM.auth = json.auth\r\n                GGameDM.resUrl = json.res_url||\"\"\r\n                GGameDM.update = json.update\r\n                GGameDM.androidMaxVersion = json.androidMaxVersion\r\n                GGameDM.androidLoadUrl = json.androidLoadUrl\r\n    \r\n                GGameDM.iosMaxVersion = json.iosMaxVersion\r\n                GGameDM.iosLoadUrl = json.iosLoadUrl\r\n\r\n                GGameDM.arrayInvite = json.arrayInvite\r\n                GGameDM.arrayInviteNei = json.arrayInviteNei\r\n\r\n                GGameDM.isServerUpdate = json.isServerUpdate\r\n                resolve(true)\r\n            },(err)=>\r\n            {\r\n                resolve(false)\r\n            })\r\n        })\r\n\r\n        return promise\r\n    }\r\n\r\n    async getServerConfig():Promise<any>\r\n    {\r\n        console.log('getServerConfig ====')\r\n        let url=\"http://dzgame.obs.cn-east-2.myhuaweicloud.com/texasres/config.json\"\r\n        var promise = new Promise<any>(resolve => {\r\n            GHelper.httpRequest(url,(xhr)=>\r\n            {\r\n                let json = xhr.response;\r\n                if(json && json.links)\r\n                {\r\n                    GGameDM.server_list = json.links;\r\n                    GGameDM.pass_word = json.password;\r\n                    GGameDM.match_is_verification = json.verification;\r\n                }else\r\n                {\r\n                    GGameDM.server_list = [];\r\n                    GGameDM.pass_word = \"\";\r\n                }\r\n                resolve(true)\r\n            },(err)=>\r\n            {\r\n                GGameDM.server_list = [];\r\n                GGameDM.pass_word = \"\";\r\n                resolve(false)\r\n            })\r\n        })\r\n\r\n        return promise\r\n    }\r\n}\r\n\r\nexport let loginService=new LoginService()","import {core} from \"../Core/Base\"\r\nimport {GHelper} from \"../Logic/Helper\"\r\n\r\nconst {ccclass, property} = cc._decorator\r\n\r\n@ccclass\r\nexport class LoopScrollList extends cc.Mask\r\n{\r\n    protected _items:any\r\n    protected _width:number=0\r\n    protected _isRecyle:boolean=true\r\n    protected _scrollToIndex:number=0\r\n    protected _item_list : any[]\r\n    protected _item_height:number=36\r\n    protected _item_num: number=0\r\n    protected _item_show_num: number=7\r\n    protected _root:cc.Node\r\n    protected _offsetx:number=0\r\n    protected _offsety:number=0\r\n    protected _next_root:cc.Node\r\n    protected _next_item_list:any[]\r\n    protected _touch_began_y:number=0\r\n    protected _need_update:boolean=false\r\n    protected _prey:number=0\r\n    protected _motion_a:number=0\r\n    protected _motion_v:number=0\r\n    protected _motion_s:number=0\r\n    protected _motion_time:number=0\r\n    protected _touch_state:number=-1 \r\n    protected _touch_moved_y:number=0 \r\n    protected _touch_ended_y:number=0 \r\n    protected _touch_cancelled_y:number=0\r\n    protected _touch_begin_time:number=0\r\n\r\n    static create(items,width:number=0,showNum:number=7,item_height:number=36,isRecyle:boolean=true,scrollToIndex:number=0)\r\n    {\r\n        let lsl = <LoopScrollList>GHelper.createNode(LoopScrollList)\r\n        lsl._items = items\r\n        lsl._width = width\r\n        \r\n        lsl._isRecyle = isRecyle\r\n        lsl._scrollToIndex = scrollToIndex\r\n\r\n        lsl.node.width = width\r\n        lsl._item_show_num = showNum\r\n        lsl._item_height = item_height\r\n        lsl.node.height = lsl._item_height * lsl._item_show_num\r\n\r\n        return lsl\r\n    }\r\n    onLoad()\r\n    {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this._onTouchEvent, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE,this._onTouchEvent,this)\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEvent, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._onTouchEvent, this)\r\n        //根据需要显示的数目来计算layer应该拥有的高度\r\n        \r\n        this._root = new cc.Node()\r\n        this._root.parent = this.node\r\n\r\n        //this.testInit()\r\n        this._init_items(this._items)\r\n        this._gotoFixedPos()\r\n    }\r\n\r\n    getHeight()                                                                                                                                                                                                                                                                    \r\n    {\r\n        return this._item_show_num * this._item_height\r\n    }\r\n    testInit()\r\n    {\r\n        let items = []\r\n        core.foreach(24,function(i)\r\n        {\r\n            items.push({\r\n                text : i + \"点\",\r\n                value : i\r\n            })\r\n        })\r\n        this._init_items(items)\r\n    }\r\n    protected _init_items(items)\r\n    {\r\n        let self = this\r\n        if(!items)\r\n        {\r\n            return\r\n        }\r\n        let num = items.length\r\n        if(num <= 0)\r\n        {\r\n            return\r\n        }\r\n        if(this._isRecyle == true)\r\n        {\r\n            this._next_root = new cc.Node()\r\n            this._next_root.parent = this.node\r\n            this._next_item_list = []\r\n        }\r\n        this._item_list = []\r\n        core.foreach(num,function(i)\r\n        {\r\n            self._addItem(self._root, self._item_list, items[i].text, items[i].value)\r\n            if(self._next_root)\r\n            {\r\n                self._addItem(self._next_root, self._next_item_list, items[i].text, items[i].value)\r\n            }\r\n        })\r\n        this.initPos()\r\n    }\r\n    protected _addItem(node, list, text, value)\r\n    {\r\n        if(!text)\r\n        {\r\n            return\r\n        }\r\n        let ttfConfig = \r\n        { \r\n            fontFilePath:\"fonts/FMBChina.ttf\",\r\n            fontSize:24\r\n        }\r\n        let text_item = <any>GHelper.createNode(cc.Label)\r\n        text_item.node.color = cc.color(255, 255, 255,255)\r\n        text_item.index = list.length\r\n        text_item.value = value\r\n        text_item.string = text\r\n        list.push(text_item)\r\n        text_item.node.parent = node\r\n        text_item.node.x = this._offsetx\r\n        text_item.node.y = - this._item_height * text_item.index + this._offsety\r\n    }\r\n\r\n    initPos()\r\n    {\r\n        let self = this\r\n        let num = this._item_list.length\r\n        let centerIndex = Math.ceil(num / 2)\r\n        core.foreach(this._item_list,function(index, item){\r\n            item.node.setPosition(cc.v2(self._offsetx, - self._item_height *(index - centerIndex) + self._offsety))\r\n        })\r\n        this._root.x = 0\r\n        this._root.y = 0\r\n        if(this._next_item_list)\r\n        {\r\n            core.foreach(this._next_item_list,function(index, item)\r\n            {\r\n                item.node.x = self._offsetx\r\n                item.node.y = - self._item_height *(index - centerIndex) + self._offsety\r\n            })\r\n            this._next_root.x = 0\r\n            //this._next_root.y = - this._item_height * num\r\n            // 默认向下对齐\r\n        }\r\n        if(this._scrollToIndex>=0)\r\n        {\r\n            this._touch_began_y = 0\r\n            this._prey = this._root.y\r\n            this.onTouchEvent(\"touchmove\",0,-(centerIndex-this._scrollToIndex)*this._item_height,true)\r\n        }\r\n    }\r\n\r\n    protected _autoScroll(v)\r\n    {\r\n        // 速度，秒为单位\r\n        this._motion_a = Math.abs(v / 1.5)\r\n        this._need_update = true\r\n        this._motion_v = v\r\n        this._motion_time = GHelper.getServerTime()\r\n        this._motion_s = 0\r\n    }\r\n\r\n    protected _gotoFixedPos()\r\n    {\r\n        let y = this._root.y\r\n        let abs_y = Math.abs(y)\r\n        abs_y = Math.floor(abs_y / this._item_height + 0.49) * this._item_height\r\n        this._touch_began_y = y\r\n        this._prey = y\r\n        if(y < 0)\r\n        {\r\n            y = - abs_y\r\n        }\r\n        else\r\n        {\r\n            y = abs_y\r\n        }\r\n        this._prey = this._root.y\r\n        this.onTouchEvent(\"touchmove\", 0, y,true)\r\n    }\r\n\r\n    getSelectedValue()\r\n    {\r\n        let y = this._root.y\r\n        let dtnum = Math.floor(Math.abs(y) / this._item_height + 0.49)\r\n        if(y < 0)\r\n        {\r\n            dtnum = - dtnum\r\n        }\r\n        let num = this._item_list.length\r\n        let centerIndex = Math.ceil(num / 2)\r\n        let index = centerIndex + dtnum\r\n        if(index >= num)\r\n        {\r\n            index = index - num\r\n        }\r\n        else if(index < 0)\r\n        {\r\n            index = index + num\r\n        }\r\n        return this._item_list[index].value\r\n    }\r\n\r\n// S=vt-(at^2)/2  匀减速运动的距离计算公式\r\n    update(dt)\r\n    {\r\n        if(!this._need_update)\r\n        {\r\n            return\r\n        }\r\n        let v = Math.abs(this._motion_v)\r\n        let t =(GHelper.getServerTime() - this._motion_time) / 1000\r\n        let a = this._motion_a\r\n\r\n        if(t <= 3)\r\n        {\r\n            a = this._motion_a\r\n        }\r\n        else if(t < 4)\r\n        {\r\n            a = this._motion_a / 4\r\n        }\r\n        else\r\n        {\r\n            a = this._motion_a / 8\r\n        }\r\n\r\n        let s = v * t - a * t * t / 2\r\n        this._motion_s = s\r\n        if(this._motion_v < 0)\r\n        {\r\n            // 向下减速运动\r\n            s = - s\r\n        }\r\n        this._motion_time = GHelper.getServerTime()\r\n        this._motion_s = 0\r\n        this._touch_began_y = 0\r\n\r\n        v = v - a * t\r\n        if(v < 0)\r\n        {\r\n            this._gotoFixedPos()\r\n            this._need_update = false\r\n            return\r\n        }\r\n        if(this._motion_v > 0)\r\n        {\r\n            this._motion_v = v\r\n        }\r\n        else\r\n        {\r\n            this._motion_v = - v\r\n        }\r\n        this._prey = this._root.y\r\n        this.onTouchEvent(\"touchmove\", 0, s,true)\r\n    }\r\n    protected _onTouchEvent(event:cc.Event.EventTouch)\r\n    {\r\n        let pos = event.getLocation()\r\n        this.onTouchEvent(event.type,pos.x,pos.y,false)\r\n    }\r\n    onTouchEvent(eventType, x?:number, y?:number,custom?:boolean)\r\n    {\r\n        let isCustom = custom || false\r\n        if(!isCustom)\r\n        {\r\n            let pos = eventType.getLocation()\r\n            y = pos.y\r\n            x = pos.x\r\n        }\r\n        else\r\n        {\r\n            eventType = {type:eventType}\r\n        }\r\n        let posx = 0\r\n        let posy = 0\r\n        if(eventType == \"touchstart\")\r\n        {\r\n            this._need_update = false\r\n            this._touch_state = 0\r\n            this._touch_began_y = y\r\n            this._prey = this._root.y\r\n            this._touch_begin_time = GHelper.getServerTime()\r\n            return true\r\n        }\r\n        else if(eventType == \"touchmove\")\r\n        {\r\n            this._touch_state = 1\r\n            this._touch_moved_y = y\r\n        }\r\n        else if(eventType == \"touchend\")\r\n        {\r\n            this._touch_state = 2\r\n            this._touch_ended_y = y\r\n        }\r\n        else if(eventType == \"touchcancel\")\r\n        {\r\n            this._touch_state = 3\r\n            this._touch_cancelled_y = y\r\n        }\r\n\r\n        let dty = y - this._touch_began_y\r\n        let rooty = this._prey + dty\r\n        this._root.y = rooty\r\n        if(this._next_root)\r\n        {\r\n            let num = this._item_list.length\r\n            let centerIndex = Math.ceil(num / 2)\r\n            let next_root_y = 0\r\n            if(rooty >= 0)\r\n            {\r\n                // 向下对齐\r\n                next_root_y = - this._item_height * num + rooty\r\n            }\r\n            else\r\n            {\r\n                // 向上对齐\r\n                next_root_y = this._item_height * num + rooty\r\n            }\r\n            this._next_root.y = next_root_y\r\n            // 纠正循环--产生交换操作\r\n            if(rooty >= 0 && next_root_y >= 0// 都在上方\r\n                || rooty < 0 && next_root_y < 0)\r\n            {\r\n                // 都在下方\r\n                let temp_item_list = this._item_list\r\n                this._item_list = this._next_item_list\r\n                this._next_item_list = temp_item_list\r\n\r\n                let temp_root = this._root\r\n                this._root = this._next_root\r\n                this._next_root = temp_root\r\n                // 初始化数据，因为新的root已经产生\r\n                this._touch_began_y = y\r\n                this._prey = this._root.y\r\n                // 重复刚才的事件操作，目的是实现真正的交换\r\n                this.onTouchEvent(eventType, x, y,true)\r\n            }\r\n        }\r\n        if(this._touch_state == 2 || this._touch_state == 3)\r\n        {\r\n            let dt = GHelper.getServerTime() - this._touch_begin_time\r\n            let s = y - this._touch_began_y\r\n            if(Math.abs(s) <= 5 || dt <= 0)\r\n            {\r\n                this._gotoFixedPos()\r\n                return true\r\n            }\r\n            let v = s/(dt / 1000)\r\n            // 计算速度用秒为单位\r\n            if(v > 100)\r\n            {\r\n                this._autoScroll(v)\r\n            }\r\n            else if(v<-100)\r\n            {\r\n                this._autoScroll(v)\r\n            }\r\n            else if(v>0)\r\n            {\r\n                this._autoScroll(this._item_height-s)\r\n            }\r\n            else\r\n            {\r\n                this._autoScroll(-(this._item_height+s))\r\n            }\r\n        }\r\n        if(!this._isRecyle)\r\n        {\r\n            let num = this._item_list.length\r\n            let centerIndex = Math.ceil(num / 2)\r\n            let minY = -(num - (centerIndex+1)) * this._item_height\r\n            let maxY = centerIndex * this._item_height\r\n            let curY = this._root.y\r\n            if(curY >= minY && curY <= maxY)\r\n            {\r\n                return true\r\n            }\r\n            if(curY < minY)\r\n            {\r\n                curY = minY\r\n            }\r\n            if(curY > maxY)\r\n            {\r\n                curY = maxY\r\n            }\r\n            this._root.y = curY\r\n            this._need_update = false\r\n        }\r\n        return true\r\n    }\r\n}","export class MD5 {\r\n    private hexcase: number = 0;\r\n    private b64pad: string = \"\";\r\n\r\n    public hex_md5(s: string): string {\r\n        return this.rstr2hex(this.rstr_md5(this.str2rstr_utf8(s)));\r\n    }\r\n    public b64_md5(s: string) {\r\n        return this.rstr2b64(this.rstr_md5(this.str2rstr_utf8(s)));\r\n    }\r\n    private any_md5(s, e) {\r\n        return this.rstr2any(this.rstr_md5(this.str2rstr_utf8(s)), e);\r\n    }\r\n    private hex_hmac_md5(k, d) {\r\n        return this.rstr2hex(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d)));\r\n    }\r\n    private b64_hmac_md5(k, d) {\r\n        return this.rstr2b64(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d)));\r\n    }\r\n    private any_hmac_md5(k, d, e) {\r\n        return this.rstr2any(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d)), e);\r\n    }\r\n\r\n    private rstr_md5(s) {\r\n        return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));\r\n    }\r\n\r\n    private rstr_hmac_md5(key: string, data: string): string {\r\n        var bkey = this.rstr2binl(key);\r\n        if (bkey.length > 16) bkey = this.binl_md5(bkey, key.length * 8);\r\n\r\n        var ipad = Array(16),\r\n        opad = Array(16);\r\n        for (var i = 0; i < 16; i++) {\r\n            ipad[i] = bkey[i] ^ 0x36363636;\r\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\r\n        }\r\n\r\n        var hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);\r\n        return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));\r\n    }\r\n\r\n    private rstr2hex(input: string): string {\r\n        try {\r\n            this.hexcase;\r\n        } catch(e) {\r\n            this.hexcase = 0;\r\n        }\r\n        var hex_tab = this.hexcase ? \"0123456789ABCDEF\": \"0123456789abcdef\";\r\n        var output = \"\";\r\n        var x;\r\n        for (var i = 0; i < input.length; i++) {\r\n            x = input.charCodeAt(i);\r\n            output += hex_tab.charAt((x >>> 4) & 0x0F) + hex_tab.charAt(x & 0x0F);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    private rstr2b64(input: string): string {\r\n        try {\r\n            this.b64pad;\r\n        } catch(e) {\r\n            this.b64pad = '';\r\n        }\r\n        var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n        var output = \"\";\r\n        var len = input.length;\r\n        for (var i = 0; i < len; i += 3) {\r\n            var triplet = (input.charCodeAt(i) << 16) | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0) | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\r\n            for (var j = 0; j < 4; j++) {\r\n                if (i * 8 + j * 6 > input.length * 8) output += this.b64pad;\r\n                else output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n\r\n    private rstr2any(input: string, encoding: string): string {\r\n        var divisor = encoding.length;\r\n        var i, j, q, x, quotient;\r\n\r\n        var dividend = Array(Math.ceil(input.length / 2));\r\n        for (i = 0; i < dividend.length; i++) {\r\n            dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\r\n        }\r\n\r\n        var full_length = Math.ceil(input.length * 8 / (Math.log(encoding.length) / Math.log(2)));\r\n        var remainders = Array(full_length);\r\n        for (j = 0; j < full_length; j++) {\r\n            quotient = Array();\r\n            x = 0;\r\n            for (i = 0; i < dividend.length; i++) {\r\n                x = (x << 16) + dividend[i];\r\n                q = Math.floor(x / divisor);\r\n                x -= q * divisor;\r\n                if (quotient.length > 0 || q > 0) quotient[quotient.length] = q;\r\n            }\r\n            remainders[j] = x;\r\n            dividend = quotient;\r\n        }\r\n\r\n        var output = \"\";\r\n        for (i = remainders.length - 1; i >= 0; i--) output += encoding.charAt(remainders[i]);\r\n\r\n        return output;\r\n    }\r\n\r\n    private str2rstr_utf8(input: string): string {\r\n        var output = \"\";\r\n        var i = -1;\r\n        var x, y;\r\n\r\n        while (++i < input.length) {\r\n            x = input.charCodeAt(i);\r\n            y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\r\n            if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\r\n                x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\r\n                i++;\r\n            }\r\n\r\n            if (x <= 0x7F) output += String.fromCharCode(x);\r\n            else if (x <= 0x7FF) output += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F), 0x80 | (x & 0x3F));\r\n            else if (x <= 0xFFFF) output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F), 0x80 | ((x >>> 6) & 0x3F), 0x80 | (x & 0x3F));\r\n            else if (x <= 0x1FFFFF) output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07), 0x80 | ((x >>> 12) & 0x3F), 0x80 | ((x >>> 6) & 0x3F), 0x80 | (x & 0x3F));\r\n        }\r\n        return output;\r\n    }\r\n\r\n    private str2rstr_utf16le(input: string): string {\r\n        var output = \"\";\r\n        for (var i = 0; i < input.length; i++) output += String.fromCharCode(input.charCodeAt(i) & 0xFF, (input.charCodeAt(i) >>> 8) & 0xFF);\r\n        return output;\r\n    }\r\n\r\n    private str2rstr_utf16be(input: string): string {\r\n        var output = \"\";\r\n        for (var i = 0; i < input.length; i++) output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF, input.charCodeAt(i) & 0xFF);\r\n        return output;\r\n    }\r\n\r\n    private rstr2binl(input: string): Array<number> {\r\n        var output = Array(input.length >> 2);\r\n        for (var i = 0; i < output.length; i++) output[i] = 0;\r\n        for (var i = 0; i < input.length * 8; i += 8) output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\r\n        return output;\r\n    }\r\n\r\n    private binl2rstr(input: Array<number>): string {\r\n        var output = \"\";\r\n        for (var i = 0; i < input.length * 32; i += 8) output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\r\n        return output;\r\n    }\r\n\r\n    private binl_md5(x: Array<number>, len: number): Array<number> {\r\n        x[len >> 5] |= 0x80 << ((len) % 32);\r\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\r\n\r\n        var a = 1732584193;\r\n        var b = -271733879;\r\n        var c = -1732584194;\r\n        var d = 271733878;\r\n\r\n        for (var i = 0; i < x.length; i += 16) {\r\n            var olda = a;\r\n            var oldb = b;\r\n            var oldc = c;\r\n            var oldd = d;\r\n\r\n            a = this.md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\r\n            d = this.md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\r\n            c = this.md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\r\n            b = this.md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\r\n            a = this.md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\r\n            d = this.md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\r\n            c = this.md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\r\n            b = this.md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\r\n            a = this.md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\r\n            d = this.md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\r\n            c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);\r\n            b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\r\n            a = this.md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\r\n            d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\r\n            c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\r\n            b = this.md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\r\n\r\n            a = this.md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\r\n            d = this.md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\r\n            c = this.md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\r\n            b = this.md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\r\n            a = this.md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\r\n            d = this.md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\r\n            c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\r\n            b = this.md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\r\n            a = this.md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\r\n            d = this.md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\r\n            c = this.md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\r\n            b = this.md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\r\n            a = this.md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\r\n            d = this.md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\r\n            c = this.md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\r\n            b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\r\n\r\n            a = this.md5_hh(a, b, c, d, x[i + 5], 4, -378558);\r\n            d = this.md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\r\n            c = this.md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\r\n            b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\r\n            a = this.md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\r\n            d = this.md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\r\n            c = this.md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\r\n            b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\r\n            a = this.md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\r\n            d = this.md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\r\n            c = this.md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\r\n            b = this.md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\r\n            a = this.md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\r\n            d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\r\n            c = this.md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\r\n            b = this.md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\r\n\r\n            a = this.md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\r\n            d = this.md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\r\n            c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\r\n            b = this.md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\r\n            a = this.md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\r\n            d = this.md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\r\n            c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\r\n            b = this.md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\r\n            a = this.md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\r\n            d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\r\n            c = this.md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\r\n            b = this.md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\r\n            a = this.md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\r\n            d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\r\n            c = this.md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\r\n            b = this.md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\r\n\r\n            a = this.safe_add(a, olda);\r\n            b = this.safe_add(b, oldb);\r\n            c = this.safe_add(c, oldc);\r\n            d = this.safe_add(d, oldd);\r\n        }\r\n        return Array(a, b, c, d);\r\n    }\r\n\r\n    private md5_cmn(q: number, a: number, b: number, x: number, s: number, t: number): number {\r\n        return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);\r\n    }\r\n    private md5_ff(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\r\n        return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n    }\r\n    private md5_gg(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\r\n        return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n    }\r\n    private md5_hh(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\r\n        return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);\r\n    }\r\n    private md5_ii(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\r\n        return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n    }\r\n\r\n    private safe_add(x: number, y: number): number {\r\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n        return (msw << 16) | (lsw & 0xFFFF);\r\n    }\r\n\r\n    private bit_rol(num: number, cnt: number): number {\r\n        return (num << cnt) | (num >>> (32 - cnt));\r\n    }\r\n}","import {GHelper} from \"../Logic/Helper\"\r\n\r\nexport class MFAnimation extends cc.Component\r\n{\r\n    //多个动画信息，一个角色有多个动画\r\n    private _animations:any\r\n    //动画，由多个部分组成，每个bone就是一个sprite\r\n    private _widgetBones:cc.Sprite[]\r\n    //当前的动画名称\r\n    private _curAnimationName:string=\"\"\r\n    //是否循环\r\n    private _isloop:boolean=false\r\n    //当前时间\r\n    private _curTime:number=0\r\n    //帧间隔时间\r\n    private _interval:number=0.2\r\n    public set interval(value)//可以动态修改间隔时间\r\n    {\r\n        this._interval = value\r\n    }\r\n    //当前帧的索引\r\n    private _curFrameIndex:number=-1\r\n    //是否正在播放\r\n    private _isPlaying:boolean=false\r\n    private _lastFrameCallback:Function\r\n\r\n    static create()\r\n    {\r\n        let mfa = <MFAnimation>GHelper.createNode(MFAnimation)\r\n        return mfa\r\n    }\r\n    init(animationName,startIndex,endIndex)\r\n    {\r\n        this._animations[animationName] =\r\n        {\r\n            name:animationName,//动画名称\r\n            startIndex:startIndex,//开始帧\r\n            endIndex:endIndex,//结束帧\r\n            widgets:[],//部件\r\n            widgetInfos:[],//部件描述信息\r\n            widgetIndex:[]//部件名称对应的索引号，方便按照部件名称去索引，算是优化手段\r\n        }   \r\n    }\r\n    // use this for initialization\r\n    onLoad() \r\n    {\r\n\r\n    }\r\n\r\n    play(name,loop)\r\n    {\r\n        this._curAnimationName = name\r\n        this._isloop = loop || false\r\n        this._curTime = 0.0\r\n        this._curFrameIndex = -1\r\n        this._isPlaying = true\r\n    }\r\n    stop()\r\n    {\r\n        this._isPlaying = false\r\n    }\r\n    // called every frame, uncomment this function to activate update callback\r\n    update (dt) \r\n    {\r\n        if(!this._isPlaying)\r\n        {\r\n            return\r\n        }\r\n        let animationInfo = this._animations[this._curAnimationName]\r\n        if (!animationInfo)\r\n        {\r\n            return\r\n        }\r\n        this._curTime += dt\r\n        let index = Math.floor(this._curTime / this._interval)\r\n        if (this._curFrameIndex==index)\r\n        {\r\n            return\r\n        }\r\n        this._curFrameIndex = index\r\n        let framesCount = animationInfo.widgets.length\r\n        if (framesCount<=0)\r\n        {\r\n            this.stop()\r\n            return\r\n        }\r\n\r\n        let size = this._widgetBones.length//身体的部位数量\r\n        let frameCount = animationInfo.widgets[0].length//动画的帧长度，每个部件动画要求一样长所以就直接取第一个部件的帧数\r\n        index = index % frameCount//计算出下一帧\r\n\r\n        //\r\n        if (index > 0 && this._curTime>this._interval*frameCount)\r\n        {\r\n            this._curTime -= this._interval*frameCount\r\n            if (this._lastFrameCallback)\r\n            {\r\n                this._lastFrameCallback()\r\n            }\r\n            if (!this._isloop)\r\n            {\r\n                this.stop()\r\n                return\r\n            }\r\n        }\r\n\r\n        //初始化或者补充身体的部件bone\r\n        while (size < framesCount)\r\n        {\r\n            let sprite = GHelper.createSprite()\r\n            this._widgetBones.push(sprite)\r\n            size = this._widgetBones.length\r\n            sprite.node.parent = this.node\r\n        }\r\n\r\n        for (let i = 0; i < framesCount; ++i)\r\n        {\r\n            let sprite = this._widgetBones[i]//遍历每个部位\r\n\r\n            let widgetFrames = animationInfo.widgets[i]\r\n            if(!widgetFrames)\r\n            {\r\n                //可能已经被删除了毕竟有removeWidget函数存在\r\n                continue\r\n            }\r\n            let spriteFrame = widgetFrames[index]\r\n            if (spriteFrame)\r\n            {\r\n                sprite.node.active = true\r\n                sprite.spriteFrame = spriteFrame\r\n                sprite.node.setPosition(spriteFrame.getOffset())\r\n            }\r\n            else//当前帧的当前部件没有图\r\n            {\r\n                sprite.node.active = false\r\n            }\r\n        }\r\n        //没有装扮的部分全部隐藏掉\r\n        for (let i = framesCount; i < size;++i)\r\n        {\r\n            this._widgetBones[i].node.active = false\r\n        }\r\n    }\r\n    isAnimationExist(animationName)\r\n    {\r\n        if(this._animations[animationName])\r\n        {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    addWidget(animationName, widgetInfo)\r\n    {\r\n        let self = this\r\n        let animationInfo = this._animations[animationName]\r\n        if (!animationInfo)\r\n        {\r\n            return false\r\n        }\r\n        //单动画结构\r\n        let widgetIndex = animationInfo.widgetIndex[widgetInfo.name]\r\n        if (!widgetIndex)//之前这个部件不存在\r\n        {\r\n            animationInfo.widgetInfos.push(widgetInfo)\r\n            animationInfo.widgets.push([])\r\n            widgetIndex = animationInfo.widgets.length - 1\r\n            animationInfo.widgetIndex[widgetInfo.name] = widgetIndex\r\n        }\r\n        animationInfo.widgets[widgetIndex] = []\r\n        cc.loader.loadRes(widgetInfo.atlas, cc.SpriteAtlas, function(err, atlas){\r\n            for (let i = 0; i <= (animationInfo.endIndex - animationInfo.startIndex); ++i)\r\n            {\r\n                let name = widgetInfo.path+self._formatNumName(i + animationInfo.startIndex)\r\n                name = name.replace(/\\//g,\"-\")\r\n                let sf = atlas.getSpriteFrame(name)\r\n                animationInfo.widgets[widgetIndex].push(sf)\r\n            }\r\n        })\r\n        return true;\r\n    }\r\n    removeWidget(widgetName, animationName)\r\n    {\r\n        if (animationName)//指定删除\r\n        {\r\n            let animationInfo = this._animations[animationName];\r\n            if (!animationInfo)\r\n            {\r\n                return\r\n            }\r\n            let widgetIndex = animationInfo.widgetIndex[widgetName]\r\n            if (!widgetIndex)\r\n            {\r\n                return\r\n            }\r\n            animationInfo.widgets[widgetIndex] = null\r\n        }\r\n        else//全部删除\r\n        {\r\n            for(let animationName in this._animations)\r\n            {\r\n                let animationInfo = this._animations[animationName]\r\n                if (!animationInfo.widgetIndex[widgetName])\r\n                {\r\n                    return\r\n                }\r\n                let index = animationInfo.widgetIndex[widgetName]\r\n                animationInfo.framess[index] = null\r\n            }\r\n        }\r\n    }\r\n    setLastFrameCallFunc(callback)\r\n    {\r\n        this._lastFrameCallback = callback\r\n    }\r\n    clearFrameEventCallFunc()\r\n    {\r\n        this._lastFrameCallback = null\r\n    }\r\n    //1=\"001\",13=\"013\",123=\"123\"\r\n    _formatNumName(index)\r\n    {\r\n        if(index<10)\r\n        {\r\n            return \"00\"+index\r\n        }\r\n        if(index<100)\r\n        {\r\n            return \"0\"+index\r\n        }\r\n        return \"\"+index\r\n    }\r\n}","import { resMgr } from \"../../manager/ResourceManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainScene extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    mainLayer: cc.Node = null;\r\n\r\n    onShow() {\r\n        resMgr.preload(\"prefab\");\r\n    }\r\n\r\n    onHide() {\r\n    }\r\n}\r\n","import { EMatchState } from \"../Config/_ini_\"\r\nimport { PlayerInfo } from \"../DataModel/CardTableDataModel\"\r\nimport { GTexasTableDM, TexasRecordTableInfo, TexasSeatInfo, TexasTableInfo } from \"../DataModel/TexasTableDataModel\"\r\nimport { GHelper } from \"../Framework/Logic/Helper\"\r\nimport { GUserMgr, UserMatchInfo } from \"../Logic/UserManager\"\r\nimport { RecordModel } from \"../model/RecordModel\"\r\nimport { GHallHttp } from \"../Net/HallHttp\"\r\nimport { GMsgCenter } from \"../utils/MessageCenter\"\r\nimport { BagItemItem, GItemCfg, ItemItem } from \"./ItemService\"\r\n\r\nexport enum EMatchLoopType\r\n{\r\n    //不循环\r\n    None,\r\n    //每日循环\r\n    Day,\r\n    //每周循环\r\n    Week\r\n}\r\nexport class MatchItemInfo\r\n{\r\n    id=0\r\n    count=0\r\n}\r\nexport class MatchModel\r\n{\r\n    id=0\r\n    /**\r\n     * 所属俱乐部id，小于等于0为全局的\r\n     */\r\n    club_id=-1\r\n    show_region=\"\"\r\n    name=\"\"\r\n    des=\"\"\r\n    icon=\"\"\r\n    blind_id=0\r\n    looptype=EMatchLoopType.None\r\n    coin=0\r\n    //报名开始时间\r\n    singup_starttime=0\r\n    //报名结束时间\r\n    singup_endtime=0\r\n    //游戏正式开始的时间\r\n    match_starttime=0\r\n    min_user=9\r\n    max_user=999\r\n    signup_cost:MatchItemInfo[]=[]\r\n    reward:MatchItemInfo[]=[]\r\n    reenter_cost:MatchItemInfo[]=[]\r\n    reenter_blind_index=-1\r\n    reenter_count=0\r\n    /**\r\n     * 是否动态奖励\r\n     */\r\n    dynamic_reward=0\r\n\r\n    gg_reward_begin_people_num:number = 0\r\n    gg_reward_begin_coin_num:number = 0\r\n}\r\n\r\nexport class MatchPlayer extends PlayerInfo\r\n{\r\n    reenter_time=0\r\n    table_id=-1\r\n    rank=-1\r\n    /**\r\n     * 被淘汰的时间\r\n     */\r\n    drop_time=-1\r\n    identified=false\r\n    //上一居结尾的时候的分数\r\n    pre_point=0\r\n    cur_rank=1\r\n}\r\nexport class MatchInsModel\r\n{\r\n    //instance_id match_id+\"_\"+time\r\n    id=\"\"\r\n    match_id=0\r\n    /**\r\n     * 所属俱乐部id，小于等于0为全局的\r\n     */\r\n    club_id=-1\r\n    /**\r\n     * 这个是用来记录的，开赛的时候在赋值，\r\n     */\r\n    match:MatchModel=null\r\n    start_time=0\r\n    end_time=0\r\n    signup_end_time=0\r\n    players:{[user_id:number]:MatchPlayer}={}\r\n    player_num=0\r\n    blind_index=0//当前的盲注级别\r\n    state=EMatchState.Waiting\r\n    //自行维护\r\n    rankplayers:MatchPlayer[]=[]\r\n}\r\nexport class BlindItem\r\n{\r\n    level=0\r\n    small_blind=0\r\n    big_blind=0\r\n    ante=0\r\n    seconds=0\r\n}\r\nexport class BlindModel\r\n{\r\n    id=0\r\n    items=new Array<BlindItem>()\r\n}\r\n/**\r\n * 记录用户的参赛信息和情况\r\n */\r\nexport class ExtUserMatchInfo extends UserMatchInfo\r\n{\r\n    match:{id:number,state:EMatchState,icon:string,name:string,start_time:number,player_num:number,reward:MatchItemInfo[]}\r\n}\r\nexport class MultiDynamicReward\r\n{\r\n    min:number=0\r\n    max:number=0\r\n    rate:number[]=[]\r\n}\r\nclass MatchService\r\n{\r\n    mutireward:MultiDynamicReward[]=[\r\n        {\r\n            min:1,\r\n            max:10,\r\n            rate:[100.0000]\r\n        },\r\n        {\r\n            min:11,\r\n            max:20,\r\n            rate:[60.0000,40.0000]\r\n        },\r\n        {\r\n            min:21,\r\n            max:30,\r\n            rate:[50.0000,30.0000,20.0000]\r\n        },\r\n        {\r\n            min:31,\r\n            max:40,\r\n            rate:[45.0000,30.0000,15.0000,10.0000]\r\n        },\r\n        {\r\n            min:41,\r\n            max:50,\r\n            rate:[37.5000,23.1800,16.1400,12.5100,10.6700]\r\n        },\r\n        {\r\n            min:51,\r\n            max:60,\r\n            rate:[37.5000,23.2000,15.2000,10.5000,7.7000,5.9000]\r\n        },\r\n        {\r\n            min:61,\r\n            max:70,\r\n            rate:[35.0000,21.6290,14.3410,10.1520,7.6430,6.0970,5.1380]\r\n        },\r\n        {\r\n            min:71,\r\n            max:80,\r\n            rate:[34.0000,21.037,13.848,9.694,7.184,5.618,4.624,3.995]\r\n        },\r\n        {\r\n            min:81,\r\n            max:90,\r\n            rate:[32.0000,19.7770,13.8440,10.0840,7.4190,5.5420,4.4450,3.7050,3.1840]\r\n        },\r\n        {\r\n            min:91,\r\n            max:120,\r\n            rate:[30.0000,18.5420,13.2020,9.5900,7.1040,5.3630,4.1250,3.2310,2.5760,2.0890,2.0890,2.0890]\r\n        },\r\n        {\r\n            min:121,\r\n            max:150,\r\n            rate:[28.0000,17.3060,12.4920,9.1790,6.8620,5.2170,4.0330,3.1680,2.5290,2.0500,2.0500,2.0500,1.6880,1.6880,1.6880]\r\n        },\r\n        {\r\n            min:151,\r\n            max:180,\r\n            rate:[27.0000,16.6860,12.0110,8.8030,6.5660,4.9830,3.8460,3.0170,2.4060,1.9490,1.9490,1.9490,1.6040,1.6040,1.6040,1.3410,1.3410,1.3410]\r\n        },\r\n        {\r\n            min:181,\r\n            max:210,\r\n            rate:[26.0000,16.0610,11.5970,8.5170,6.3630,4.8350,3.7350,2.9330,2.3400,1.8970,1.8970,1.8970,1.5620,1.5620,1.5620,1.3060,1.3060,1.3060,1.1080]\r\n        },\r\n        {\r\n            min:211,\r\n            max:240,\r\n            rate:[25.0000,15.4520,11.2460,8.3170,6.2470,4.7650,3.6900,2.9000,2.3130,1.7820,1.7820,1.7820,1.5370,1.5370,1.5370,1.2790,1.2790,1.2790,10.790,10.790,10.790,0.9230]\r\n        },\r\n        {\r\n            min:241,\r\n            max:270,\r\n            rate:[24.5000,15.1380,10.9370,8.0490,6.0300,4.5950,3.5600,2.8030,2.2420,1.8210,1.8210,1.8210,1.5020,1.5020,1.5020,1.2580,1.2580,1.2580,1.0700,1.0700,1.0700,0.9230,0.9230,0.9230,0.8080]\r\n        },\r\n        {\r\n            min:271,\r\n            max:300,\r\n            rate:[24.0000,14.8320,10.7620,7.9400,5.9550,4.5380,3.5120,2.7600,2.2020,1.7830,1.7830,1.7830,1.4650,1.4650,1.4650,1.2210,1.2210,1.2210,1.0320,1.0320,1.0320,0.8850,0.8850,0.8850,0.7690,0.7690,0.7690,0.6780]\r\n        },\r\n        {\r\n            min:301,\r\n            max:330,\r\n            rate:[23.5000,14.5300,10.5530,7.7950,5.8520,4.4630,3.4570,2.7180,2.1690,1.7570,1.7570,1.7570,1.4440,1.4440,1.4440,1.2040,1.2040,1.2040,1.0180,1.0180,1.0180,0.8730,0.8730,0.8730,0.7590,0.7590,0.7590,0.6690,0.6690,0.6690,0.5970]\r\n        },\r\n        {\r\n            min:331,\r\n            max:360,\r\n            rate:[23.0000,14.2190,10.3730,7.6940,5.7960,4.4330,3.4400,2.7080,2.1620,1.7490,1.7490,1.7490,1.4350,1.4350,1.4350,1.1930,1.1930,1.1930,1.0050,1.0050,1.0050,0.8580,0.8580,0.8580,0.7420,0.7420,0.7420,0.6500,0.6500,0.6500,0.5760,0.5760,0.5760,0.5170]\r\n        },\r\n        {\r\n            min:361,\r\n            max:450,\r\n            rate:[22.0000,13.5950,9.9340,7.3760,5.5620,4.2570,3.3060,2.6040,2.0800,1.6840,1.6840,1.6840,1.3820,1.3820,1.3820,1.1500,1.1500,1.1500,0.9690,0.9690,0.9690,0.8270,0.8270,0.8270,0.7150,0.7150,0.7150,0.6260,0.6260,0.6260,0.5550,0.5550,0.5550,0.4980,0.4980,0.4980,0.4520,0.4520,0.4520,0.4520,0.4520,0.4520,0.4520,0.4520,0.4520]\r\n        },\r\n        {\r\n            min:451,\r\n            max:540,\r\n            rate:[21.5000,13.2930,9.7110,7.1990,5.4140,4.1300,3.1950,2.5070,1.9950,1.6090,1.6090,1.6090,1.3160,1.3160,1.3160,1.0900,1.0900,1.0900,0.9150,0.9150,0.9150,0.7780,0.7780,0.7780,0.6700,0.6700,0.6700,0.5850,0.5850,0.5850,0.5170,0.5170,0.5170,0.4630,0.4630,0.4630,0.4190,0.4190,0.4190,0.4190,0.4190,0.4190,0.4190,0.4190,0.4190,0.3840]\r\n        },\r\n        {\r\n            min:541,\r\n            max:630,\r\n            rate:[21.0000,12.9890,9.4980,7.0480,5.3030,4.0450,3.1280,2.4520,1.9480,1.5680,1.5680,1.5680,1.2780,1.2780,1.2780,1.0550,1.0550,1.0550,0.8820,1.0550,1.0550,0.7470,0.7470,0.7470,0.6400,0.6400,0.6400,0.5550,0.5550,0.5550,0.4880,0.4880,0.4880,0.4340,0.4340,0.4340,0.3900,0.3900,0.3900,0.3900,0.3900,0.3900,0.3900,0.3900,0.3900,0.3550,0.3270]\r\n        },\r\n        {\r\n            min:631,\r\n            max:720,\r\n            rate:[20.5000,12.6850,9.3040,6.9190,5.2150,3.9830,3.0820,2.4160,1.9180,1.5420,1.5420,1.5420,1.2550,1.2550,1.2550,1.0340,1.0340,1.0340,0.8620,0.8620,0.8620,0.7270,0.7270,0.7270,0.6210,0.6210,0.6210,0.5360,0.5360,0.5360,0.4680,0.4680,0.4680,0.4140,0.4140,0.4140,0.3700,0.3700,0.3700,0.3700,0.3700,0.3700,0.3700,0.3700,0.3700,0.3340,0.3050,0.2800]\r\n        },\r\n        {\r\n            min:721,\r\n            max:810,\r\n            rate:[20.0000,12.3300,9.0900,6.7750,5.1170,3.9150,3.0330,2.3790,1.8890,1.5180,1.5180,1.5180,1.2350,1.2350,1.2350,1.0170,1.0170,1.0170,0.8470,0.8470,0.8470,0.7140,0.7140,0.7140,0.6090,0.6090,0.6090,0.5250,0.5250,0.5250,0.4580,0.4580,0.4580,0.4040,0.4040,0.4040,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3240,0.2950,0.2710,0.2490]\r\n        },\r\n        {\r\n            min:811,\r\n            max:900,\r\n            rate:[19.5000,12.0500,8.8760,6.6240,5.0080,3.8350,2.9740,2.3350,1.8560,1.4930,1.4930,1.4930,1.2150,1.2150,1.2150,1.0010,1.0010,1.0010,0.8340,0.8340,0.8340,0.7030,0.7030,0.7030,0.5990,0.5990,0.5990,0.5160,0.5160,0.5160,0.4500,0.4500,0.4500,0.3970,0.3970,0.3970,0.3540,0.3540,0.3540,0.3540,0.3540,0.3540,0.3540,0.3540,0.3540,0.3190,0.2900,0.2670,0.2460,0.2260]\r\n        },\r\n        {\r\n            min:901,\r\n            max:990,\r\n            rate:[19.0000,11.7520,8.6740,6.4900,4.9170,3.7720,2.9290,2.3030,1.8320,1.4750,1.4750,1.4750,1.2020,1.2020,1.2020,0.9910,0.9910,0.9910,0.8260,0.8260,0.8260,0.6960,0.6960,0.6960,0.5930,0.5930,0.5930,0.5110,0.5110,0.5110,0.4450,0.4450,0.4450,0.3920,0.3920,0.3920,0.3490,0.3490,0.3490,0.3490,0.3490,0.3490,0.3490,0.3490,0.3490,0.3140,0.2860,0.2630,0.2420,0.2230,0.2050]\r\n        },\r\n        {\r\n            min:991,\r\n            max:1080,\r\n            rate:[18.5000,11.4380,8.5000,6.3900,4.8590,3.7380,2.9090,2.2900,1.8240,1.4700,1.4700,1.4700,1.1980,1.1980,1.1980,0.9870,0.9870,0.9870,0.8220,0.8220,0.8220,0.6920,0.6920,0.6920,0.5890,0.5890,0.5890,0.5070,0.5070,0.5070,0.4410,0.4410,0.4410,0.3880,0.3880,0.3880,0.3450,0.3450,0.3450,0.3450,0.3450,0.3450,0.3450,0.3450,0.3450,0.3100,0.2810,0.2570,0.2360,0.2170,0.2000,0.1840]\r\n        },\r\n        {\r\n            min:1081,\r\n            max:1170,\r\n            rate:[18.2500,11.2720,8.3760,6.3000,4.7970,3.6960,2.8810,2.2710,1.8100,1.4590,1.4590,1.4590,1.1890,1.1890,1.1890,0.9800,0.9800,0.9800,0.8160,0.8160,0.8160,0.6870,0.6870,0.6870,0.5840,0.5840,0.5840,0.5020,0.5020,0.5020,0.4360,0.4360,0.4360,0.3820,0.3820,0.3820,0.3380,0.3380,0.3380,0.3380,0.3380,0.3380,0.3380,0.3380,0.3380,0.3020,0.2730,0.2490,0.2290,0.2110,0.1940,0.1780,0.1640]\r\n        },\r\n        {\r\n            min:1171,\r\n            max:1350,\r\n            rate:[17.7500,11.0000,8.0730,6.1000,4.6550,3.5830,2.7900,2.1980,1.7520,1.4120,1.4120,1.4120,1.1510,1.1510,1.1510,0.9490,0.9490,0.9490,0.7910,0.7910,0.7910,0.6660,0.6660,0.6660,0.5670,0.5670,0.5670,0.4880,0.4880,0.4880,0.4240,0.4240,0.4240,0.3730,0.3730,0.3730,0.3310,0.3310,0.3310,0.3310,0.3310,0.3310,0.3310,0.3310,0.3310,0.2970,0.2690,0.2460,0.2260,0.2080,0.1910,1.1760,0.1320,0.1490,0.1490]\r\n        },\r\n        {\r\n            min:1351,\r\n            max:1530,\r\n            rate:[17.2500,10.7000,7.8410,5.9610,4.5380,3.4950,2.7230,2.1460,1.7110,1.3800,1.3800,1.3800,1.1250,1.1250,1.1250,0.9270,0.9270,0.9270,0.7730,0.7730,0.7730,0.6510,0.6510,0.6510,0.5540,0.5540,0.5540,0.4770,0.4770,0.4770,0.4150,0.4150,0.4150,0.3650,0.3650,0.3650,0.3240,0.3240,0.3240,0.3240,0.3240,0.3240,0.3240,0.3240,0.3240,0.2910,0.2640,0.2410,0.2220,0.2040,0.1880,0.1730,0.1590,0.1460,0.1460,0.1340,0.1340]\r\n        },\r\n        {\r\n            min:1531,\r\n            max:1710,\r\n            rate:[16.7500,10.3760,7.8300,5.9500,4.5300,3.4800,2.7100,2.1300,1.7000,1.3700,1.3700,1.3700,1.1200,1.1200,1.1200,0.9260,0.9260,0.9260,0.7720,0.7720,0.7720,0.6500,0.6500,0.6500,0.5510,0.5510,0.5510,0.4720,0.4720,0.4720,0.4080,0.4080,0.4080,0.3560,0.3560,0.3560,0.3140,0.3140,0.3140,0.3140,0.3140,0.3140,0.3140,0.3140,0.3140,0.2800,0.2520,0.2290,0.2100,0.1930,0.1780,0.1640,0.1510,0.1390,0.1390,0.1280,0.1280,0.1180,0.1180]\r\n        },\r\n        {\r\n            min:1711,\r\n            max:1890,\r\n            rate:[16.2500,10.0990,7.5260,5.7020,4.3680,3.3820,2.6470,2.0930,1.6730,1.3510,1.3510,1.3510,1.1020,1.1020,1.1020,0.9080,0.9080,0.9080,0.7560,0.7560,0.7560,0.6360,0.6360,0.6360,0.5400,0.5400,0.5400,0.4630,0.4630,0.4630,0.4010,0.4010,0.4010,0.3500,0.3500,0.3500,0.3090,0.3090,0.3090,0.3090,0.3090,0.3090,0.3090,0.3090,0.3090,0.2750,0.2470,0.2240,0.2050,0.1880,0.1730,0.1590,0.1590,0.1460,0.1460,0.1340,0.1340,0.1230,0.1230,0.1130,0.1130]\r\n        },\r\n        {\r\n            min:1891,\r\n            max:2070,\r\n            rate:[15.7500,9.9360,7.3100,5.5490,4.2570,3.3010,2.5870,2.0490,1.6390,1.3250,1.3250,1.3250,1.0820,1.0820,1.0820,0.8920,0.8920,0.8920,0.7430,0.7430,0.7430,0.6250,0.6250,0.6250,0.5310,0.5310,0.5310,0.4550,0.4550,0.4550,0.3940,0.3940,0.3940,0.3440,0.3440,0.3440,0.3040,0.3040,0.3040,0.3040,0.3040,0.3040,0.3040,0.3040,0.3040,0.2710,0.2440,0.2210,0.2020,0.1860,0.1710,0.1570,0.1570,0.1440,0.1440,0.1320,0.1320,0.1210,0.1210,0.1210,0.1110,0.1110,0.1110]\r\n        },\r\n        {\r\n            min:2071,\r\n            max:2250,\r\n            rate:[15.2500,9.4540,7.1240,5.4400,4.1960,3.2680,2.5700,2.0410,1.6370,1.3200,1.3200,1.3200,1.0810,1.0810,1.0810,0.8910,0.8910,0.8910,0.7420,0.7420,0.7420,0.6240,0.6240,0.6240,0.5290,0.5290,0.5290,0.4530,0.4530,0.4530,0.3910,0.3910,0.3910,0.3400,0.3400,0.3400,0.2990,0.2990,0.2990,0.2990,0.2990,0.2990,0.2990,0.2990,0.2990,0.2650,0.2370,0.2140,0.1950,0.1790,0.1640,0.1500,0.1500,0.1380,0.1380,0.1380,0.1270,0.1270,0.1270,0.1170,0.1170,0.1170,0.1080,0.1080,0.1080]\r\n        },\r\n        {\r\n            min:2251,\r\n            max:2500,\r\n            rate:[14.7500,9.2800,6.9590,5.3590,4.1630,3.2500,2.5600,2.0400,1.6530,1.3100,1.3100,1.3100,1.0800,1.0800,1.0800,0.8900,0.8900,0.8900,0.7400,0.7400,0.7400,0.6220,0.6220,0.6220,0.5240,0.5240,0.5240,0.4500,0.4500,0.4500,0.3860,0.3860,0.3860,0.3340,0.3340,0.3340,0.2910,0.2910,0.2910,0.2910,0.2910,0.2910,0.2910,0.2910,0.2910,0.2550,0.2260,0.2010,0.1810,0.1640,0.1500,0.1380,0.1380,0.1380,0.1270,0.1270,0.1270,0.1170,0.1170,0.1170,0.1080,0.1080,0.1080,0.1080,0.0990,0.0990,0.0990,0.0990]\r\n        },\r\n        {\r\n            min:2501,\r\n            max:2750,\r\n            rate:[14.5000,9.0260,6.8720,5.3060,4.1270,3.2350,2.5560,2.0350,1.6340,1.3000,1.3000,1.3000,1.0700,1.0700,1.0700,0.8800,0.8800,0.8800,0.7300,0.7300,0.7300,0.6120,0.6120,0.6120,0.5150,0.5150,0.5150,0.4370,0.4370,0.4370,0.3730,0.3730,0.3730,0.3210,0.3210,0.3210,0.2780,0.2780,0.2780,0.2780,0.2780,0.2780,0.2780,0.2780,0.2780,0.2430,0.2140,0.1900,0.1700,0.1530,0.1390,0.1270,0.1270,0.1270,0.1270,0.1170,0.1170,0.1170,0.1170,0.1080,0.1080,0.1080,0.1080,0.0990,0.0990,0.0990,0.0990,0.0910,0.0910,0.0910,0.0910]\r\n        },\r\n        {\r\n            min:2751,\r\n            max:3000,\r\n            rate:[14.2500,8.8070,6.7540,5.2320,4.1080,3.2210,2.5430,2.0210,1.6260,1.2900,1.2900,1.2900,1.0600,1.0600,1.0600,0.8710,0.8710,0.8710,0.7210,0.7210,0.7210,0.6020,0.6020,0.6020,0.5060,0.5060,0.5060,0.4290,0.4290,0.4290,0.3660,0.3660,0.3660,0.3150,0.3150,0.3150,0.2730,0.2730,0.2730,0.2730,0.2730,0.2730,0.2730,0.2730,0.2730,0.2390,0.2100,0.1860,0.1660,0.1500,0.1360,0.1240,0.1240,0.1240,0.1240,0.1140,0.1140,0.1140,0.1140,0.1050,0.1050,0.1050,0.1050,0.0970,0.0970,0.0970,0.0970,0.0970,0.0890,0.0890,0.0890,0.0890,0.0890]\r\n        }\r\n    ]\r\n    mutireward2:MultiDynamicReward[]=[\r\n        {\r\n            min:1,\r\n            max:3,\r\n            rate:[100.0000]\r\n        },\r\n        {\r\n            min:4,\r\n            max:6,\r\n            rate:[60.00,40.00]\r\n        },\r\n        {\r\n            min:7,\r\n            max:10,\r\n            rate:[50.00,30.00,20.00]\r\n        },\r\n        {\r\n            min:11,\r\n            max:20,\r\n            rate:[45.0000,30.0000,15.0000,10.0000]\r\n        },\r\n        {\r\n            min:21,\r\n            max:30,\r\n            rate:[37.5000,23.1800,16.1400,12.5100,10.6700]\r\n        },\r\n        {\r\n            min:31,\r\n            max:40,\r\n            rate:[37.5000,23.2000,15.2000,10.5000,7.7000,5.9000]\r\n        },\r\n        {\r\n            min:41,\r\n            max:60,\r\n            rate:[35.0000,21.6290,14.3410,10.1520,7.6430,6.0970,5.1380]\r\n        },\r\n        {\r\n            min:61,\r\n            max:80,\r\n            rate:[34.0000,21.037,13.848,9.694,7.184,5.618,4.624,3.995]\r\n        },\r\n        {\r\n            min:81,\r\n            max:90,\r\n            rate:[32.0000,19.7770,13.8440,10.0840,7.4190,5.5420,4.4450,3.7050,3.1840]\r\n        },\r\n        {\r\n            min:91,\r\n            max:120,\r\n            rate:[30.0000,18.5420,13.2020,9.5900,7.1040,5.3630,4.1250,3.2310,2.5760,2.0890,2.0890,2.0890\r\n                ]\r\n        },\r\n        {\r\n            min:121,\r\n            max:150,\r\n            rate:[28.0000,17.3060,12.4920,9.1790,6.8620,5.2170,4.0330,3.1680,2.5290,2.0500,2.0500,2.0500,1.6880,1.6880,1.6880]\r\n        },\r\n        {\r\n            min:151,\r\n            max:180,\r\n            rate:[27.0000,16.6860,12.0110,8.8030,6.5660,4.9830,3.8460,3.0170,2.4060,1.9490,1.9490,1.9490,1.6040,1.6040,1.6040,1.3410,1.3410,1.3410]\r\n        },\r\n        {\r\n            min:181,\r\n            max:210,\r\n            rate:[26.0000,16.0610,11.5970,8.5170,6.3630,4.8350,3.7350,2.9330,2.3400,1.8970,1.8970,1.8970,1.5620,1.5620,1.5620,1.3060,1.3060,1.3060,1.1080]\r\n        },\r\n        {\r\n            min:211,\r\n            max:240,\r\n            rate:[25.0000,15.4520,11.2460,8.3170,6.2470,4.7650,3.6900,2.9000,2.3130,1.7820,1.7820,1.7820,1.5370,1.5370,1.5370,1.2790,1.2790,1.2790,10.790,10.790,10.790,0.9230\r\n                ]\r\n        },\r\n        {\r\n            min:241,\r\n            max:270,\r\n            rate:[24.5000,15.1380,10.9370,8.0490,6.0300,4.5950,3.5600,2.8030,2.2420,1.8210,1.8210,1.8210,1.5020,1.5020,1.5020,1.2580,1.2580,1.2580,1.0700,1.0700,1.0700,0.9230,0.9230,0.9230,0.8080\r\n                ]\r\n        },\r\n        {\r\n            min:271,\r\n            max:300,\r\n            rate:[24.0000,14.8320,10.7620,7.9400,5.9550,4.5380,3.5120,2.7600,2.2020,1.7830,1.7830,1.7830,1.4650,1.4650,1.4650,1.2210,1.2210,1.2210,1.0320,1.0320,1.0320,0.8850,0.8850,0.8850,0.7690,0.7690,0.7690,0.6780\r\n                ]\r\n        },\r\n        {\r\n            min:301,\r\n            max:330,\r\n            rate:[23.5000,14.5300,10.5530,7.7950,5.8520,4.4630,3.4570,2.7180,2.1690,1.7570,1.7570,1.7570,1.4440,1.4440,1.4440,1.2040,1.2040,1.2040,1.0180,1.0180,1.0180,0.8730,0.8730,0.8730,0.7590,0.7590,0.7590,0.6690,0.6690,0.6690,0.5970\r\n                ]\r\n        },\r\n        {\r\n            min:331,\r\n            max:360,\r\n            rate:[23.0000,14.2190,10.3730,7.6940,5.7960,4.4330,3.4400,2.7080,201620,1.7490,1.7490,1.7490,1.4350,1.4350,1.4350,1.1930,1.1930,1.1930,1.0050,1.0050,1.0050,0.8580,0.8580,0.8580,0.7420,0.7420,0.7420,0.6500,0.6500,0.6500,0.5760,0.5760,0.5760,0.5170\r\n                ]\r\n        },\r\n        {\r\n            min:361,\r\n            max:450,\r\n            rate:[22.0000,13.5950,9.9340,7.3760,5.5620,4.2570,3.3060,2.6040,2.0800,1.6840,1.6840,1.6840,1.3820,1.3820,1.3820,1.1500,1.1500,1.1500,0.9690,0.9690,0.9690,0.8270,0.8270,0.8270,0.7150,0.7150,0.7150,0.6260,0.6260,0.6260,0.5550,0.5550,0.5550,0.4980,0.4980,0.4980,0.4520,0.4520,0.4520,0.4520,0.4520,0.4520,0.4520,0.4520,0.4520\r\n                ]\r\n        },\r\n        {\r\n            min:451,\r\n            max:540,\r\n            rate:[21.5000,13.2930,9.7110,7.1990,5.4140,4.1300,3.1950,2.5070,1.9950,1.6090,1.6090,1.6090,1.3160,1.3160,1.3160,1.0900,1.0900,1.0900,0.9150,0.9150,0.9150,0.7780,0.7780,0.7780,0.6700,0.6700,0.6700,0.5850,0.5850,0.5850,0.5170,0.5170,0.5170,0.4630,0.4630,0.4630,0.4190,0.4190,0.4190,0.4190,0.4190,0.4190,0.4190,0.4190,0.4190,0.3840]\r\n        },\r\n        {\r\n            min:541,\r\n            max:630,\r\n            rate:[21.0000,12.9890,9.4980,7.0480,5.3030,4.0450,3.1280,2.4520,1.9480,1.5680,1.5680,1.5680,1.2780,1.2780,1.2780,1.0550,1.0550,1.0550,0.8820,1.0550,1.0550,0.7470,0.7470,0.7470,0.6400,0.6400,0.6400,0.5550,0.5550,0.5550,0.4880,0.4880,0.4880,0.4340,0.4340,0.4340,0.3900,0.3900,0.3900,0.3900,0.3900,0.3900,0.3900,0.3900,0.3900,0.3550,0.3270\r\n                ]\r\n        },\r\n        {\r\n            min:631,\r\n            max:720,\r\n            rate:[20.5000,12.6850,9.3040,6.9190,5.2150,3.9830,3.0820,2.4160,1.9180,1.5420,1.5420,1.5420,1.2550,1.2550,1.2550,1.0340,1.0340,1.0340,0.8620,0.8620,0.8620,0.7270,0.7270,0.7270,0.6210,0.6210,0.6210,0.5360,0.5360,0.5360,0.4680,0.4680,0.4680,0.4140,0.4140,0.4140,0.3700,0.3700,0.3700,0.3700,0.3700,0.3700,0.3700,0.3700,0.3700,0.3340,0.3050,0.2800\r\n                ]\r\n        },\r\n        {\r\n            min:721,\r\n            max:810,\r\n            rate:[20.0000,12.3300,9.0900,6.7750,5.1170,3.9150,3.0330,2.3790,1.8890,1.5180,1.5180,1.5180,1.2350,1.2350,1.2350,1.0170,1.0170,1.0170,0.8470,0.8470,0.8470,0.7140,0.7140,0.7140,0.6090,0.6090,0.6090,0.5250,0.5250,0.5250,0.4580,0.4580,0.4580,0.4040,0.4040,0.4040,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3600,0.3240,0.2950,0.2710,0.2490\r\n                ]\r\n        },\r\n        {\r\n            min:811,\r\n            max:900,\r\n            rate:[19.5000,12.0500,8.8760,6.6240,5.0080,3.8350,2.9740,2.3350,1.8560,1.4930,1.4930,1.4930,1.2150,1.2150,1.2150,1.0010,1.0010,1.0010,0.8340,0.8340,0.8340,0.7030,0.7030,0.7030,0.5990,0.5990,0.5990,0.5160,0.5160,0.5160,0.4500,0.4500,0.4500,0.3970,0.3970,0.3970,0.3540,0.3540,0.3540,0.3540,0.3540,0.3540,0.3540,0.3540,0.3540,0.3190,0.2900,0.2670,0.2460,0.2260\r\n                ]\r\n        },\r\n        {\r\n            min:901,\r\n            max:990,\r\n            rate:[19.0000,11.7520,8.6740,6.4900,4.9170,3.7720,2.9290,2.3030,1.8320,1.4750,1.4750,1.4750,1.2020,1.2020,1.2020,0.9910,0.9910,0.9910,0.8260,0.8260,0.8260,0.6960,0.6960,0.6960,0.5930,0.5930,0.5930,0.5110,0.5110,0.5110,0.4450,0.4450,0.4450,0.3920,0.3920,0.3920,0.3490,0.3490,0.3490,0.3490,0.3490,0.3490,0.3490,0.3490,0.3490,0.3140,0.2860,0.2630,0.2420,0.2230,0.2050\r\n                ]\r\n        },\r\n        {\r\n            min:991,\r\n            max:1080,\r\n            rate:[18.5000,11.4380,8.5000,6.3900,4.8590,3.7380,2.9090,2.2900,1.8240,1.4700,1.4700,1.4700,1.1980,1.1980,1.1980,0.9870,0.9870,0.9870,0.8220,0.8220,0.8220,0.6920,0.6920,0.6920,0.5890,0.5890,0.5890,0.5070,0.5070,0.5070,0.4410,0.4410,0.4410,0.3880,0.3880,0.3880,0.3450,0.3450,0.3450,0.3450,0.3450,0.3450,0.3450,0.3450,0.3450,0.3100,0.2810,0.2570,0.2360,0.2170,0.2000,0.1840\r\n            ]\r\n        },\r\n        {\r\n            min:1081,\r\n            max:1170,\r\n            rate:[18.2500,11.2720,8.3760,6.3000,4.7970,3.6960,2.8810,2.2710,1.8100,1.4590,1.4590,1.4590,1.1890,1.1890,1.1890,0.9800,0.9800,0.9800,0.8160,0.8160,0.8160,0.6870,0.6870,0.6870,0.5840,0.5840,0.5840,0.5020,0.5020,0.5020,0.4360,0.4360,0.4360,0.3820,0.3820,0.3820,0.3380,0.3380,0.3380,0.3380,0.3380,0.3380,0.3380,0.3380,0.3380,0.3020,0.2730,0.2490,0.2290,0.2110,0.1940,0.1780,0.1640\r\n                ]\r\n        },\r\n        {\r\n            min:1171,\r\n            max:1350,\r\n            rate:[17.7500,11.0000,8.0730,6.1000,4.6550,3.5830,2.7900,2.1980,1.7520,1.4120,1.4120,1.4120,1.1510,1.1510,1.1510,0.9490,0.9490,0.9490,0.7910,0.7910,0.7910,0.6660,0.6660,0.6660,0.5670,0.5670,0.5670,0.4880,0.4880,0.4880,0.4240,0.4240,0.4240,0.3730,0.3730,0.3730,0.3310,0.3310,0.3310,0.3310,0.3310,0.3310,0.3310,0.3310,0.3310,0.2970,0.2690,0.2460,0.2260,0.2080,0.1910,1.1760,0.1320,0.1490,0.1490\r\n                ]\r\n        },\r\n        {\r\n            min:1351,\r\n            max:1530,\r\n            rate:[17.2500,10.7000,7.8410,5.9610,4.5380,3.4950,2.7230,2.1460,1.7110,1.3800,1.3800,1.3800,1.1250,1.1250,1.1250,0.9270,0.9270,0.9270,0.7730,0.7730,0.7730,0.6510,0.6510,0.6510,0.5540,0.5540,0.5540,0.4770,0.4770,0.4770,0.4150,0.4150,0.4150,0.3650,0.3650,0.3650,0.3240,0.3240,0.3240,0.3240,0.3240,0.3240,0.3240,0.3240,0.3240,0.2910,0.2640,0.2410,0.2220,0.2040,0.1880,0.1730,0.1590,0.1460,0.1460,0.1340,0.1340\r\n                ]\r\n        },\r\n        {\r\n            min:1531,\r\n            max:1710,\r\n            rate:[16.7500,10.3760,7.8300,5.9500,4.5300,3.4800,2.7100,2.1300,1.7000,1.3700,1.3700,1.3700,1.1200,1.1200,1.1200,0.9260,0.9260,0.9260,0.7720,0.7720,0.7720,0.6500,0.6500,0.6500,0.5510,0.5510,0.5510,0.4720,0.4720,0.4720,0.4080,0.4080,0.4080,0.3560,0.3560,0.3560,0.3140,0.3140,0.3140,0.3140,0.3140,0.3140,0.3140,0.3140,0.3140,0.2800,0.2520,0.2290,0.2100,0.1930,0.1780,0.1640,0.1510,0.1390,0.1390,0.1280,0.1280,0.1180,0.1180\r\n                ]\r\n        },\r\n        {\r\n            min:1711,\r\n            max:1890,\r\n            rate:[16.2500,10.0990,7.5260,5.7020,4.3680,3.3820,2.6470,2.0930,1.6730,1.3510,1.3510,1.3510,1.1020,1.1020,1.1020,0.9080,0.9080,0.9080,0.7560,0.7560,0.7560,0.6360,0.6360,0.6360,0.5400,0.5400,0.5400,0.4630,0.4630,0.4630,0.4010,0.4010,0.4010,0.3500,0.3500,0.3500,0.3090,0.3090,0.3090,0.3090,0.3090,0.3090,0.3090,0.3090,0.3090,0.2750,0.2470,0.2240,0.2050,0.1880,0.1730,0.1590,0.1590,0.1460,0.1460,0.1340,0.1340,0.1230,0.1230,0.1130,0.1130\r\n                ]\r\n        },\r\n        {\r\n            min:1891,\r\n            max:2070,\r\n            rate:[15.7500,9.9360,7.3100,5.5490,4.2570,3.3010,2.5870,2.0490,1.6390,1.3250,1.3250,1.3250,1.0820,1.0820,1.0820,0.8920,0.8920,0.8920,0.7430,0.7430,0.7430,0.6250,0.6250,0.6250,0.5310,0.5310,0.5310,0.4550,0.4550,0.4550,0.3940,0.3940,0.3940,0.3440,0.3440,0.3440,0.3040,0.3040,0.3040,0.3040,0.3040,0.3040,0.3040,0.3040,0.3040,0.2710,0.2440,0.2210,0.2020,0.1860,0.1710,0.1570,0.1570,0.1440,0.1440,0.1320,0.1320,0.1210,0.1210,0.1210,0.1110,0.1110,0.1110\r\n                ]\r\n        },\r\n        {\r\n            min:2071,\r\n            max:2250,\r\n            rate:[15.2500,9.4540,7.1240,5.4400,4.1960,3.2680,2.5700,2.0410,1.6370,1.3200,1.3200,1.3200,1.0810,1.0810,1.0810,0.8910,0.8910,0.8910,0.7420,0.7420,0.7420,0.6240,0.6240,0.6240,0.5290,0.5290,0.5290,0.4530,0.4530,0.4530,0.3910,0.3910,0.3910,0.3400,0.3400,0.3400,0.2990,0.2990,0.2990,0.2990,0.2990,0.2990,0.2990,0.2990,0.2990,0.2650,0.2370,0.2140,0.1950,0.1790,0.1640,0.1500,0.1500,0.1380,0.1380,0.1380,0.1270,0.1270,0.1270,0.1170,0.1170,0.1170,0.1080,0.1080,0.1080\r\n                ]\r\n        },\r\n        {\r\n            min:2251,\r\n            max:2500,\r\n            rate:[14.7500,9.2800,6.9590,5.3590,4.1630,3.2500,2.5600,2.0400,1.6530,1.3100,1.3100,1.3100,1.0800,1.0800,1.0800,0.8900,0.8900,0.8900,0.7400,0.7400,0.7400,0.6220,0.6220,0.6220,0.5240,0.5240,0.5240,0.4500,0.4500,0.4500,0.3860,0.3860,0.3860,0.3340,0.3340,0.3340,0.2910,0.2910,0.2910,0.2910,0.2910,0.2910,0.2910,0.2910,0.2910,0.2550,0.2260,0.2010,0.1810,0.1640,0.1500,0.1380,0.1380,0.1380,0.1270,0.1270,0.1270,0.1170,0.1170,0.1170,0.1080,0.1080,0.1080,0.1080,0.0990,0.0990,0.0990,0.0990\r\n                ]\r\n        },\r\n        {\r\n            min:2501,\r\n            max:2750,\r\n            rate:[14.5000,9.0260,6.8720,5.3060,4.1270,3.2350,2.5560,2.0350,1.6340,1.3000,1.3000,1.3000,1.0700,1.0700,1.0700,0.8800,0.8800,0.8800,0.7300,0.7300,0.7300,0.6120,0.6120,0.6120,0.5150,0.5150,0.5150,0.4370,0.4370,0.4370,0.3730,0.3730,0.3730,0.3210,0.3210,0.3210,0.2780,0.2780,0.2780,0.2780,0.2780,0.2780,0.2780,0.2780,0.2780,0.2430,0.2140,0.1900,0.1700,0.1530,0.1390,0.1270,0.1270,0.1270,0.1270,0.1170,0.1170,0.1170,0.1170,0.1080,0.1080,0.1080,0.1080,0.0990,0.0990,0.0990,0.0990,0.0910,0.0910,0.0910,0.0910\r\n                ]\r\n        },\r\n        {\r\n            min:2751,\r\n            max:3000,\r\n            rate:[14.2500,8.8070,6.7540,5.2320,4.1080,3.2210,2.5430,2.0210,1.6260,1.2900,1.2900,1.2900,1.0600,1.0600,1.0600,0.8710,0.8710,0.8710,0.7210,0.7210,0.7210,0.6020,0.6020,0.6020,0.5060,0.5060,0.5060,0.4290,0.4290,0.4290,0.3660,0.3660,0.3660,0.3150,0.3150,0.3150,0.2730,0.2730,0.2730,0.2730,0.2730,0.2730,0.2730,0.2730,0.2730,0.2390,0.2100,0.1860,0.1660,0.1500,0.1360,0.1240,0.1240,0.1240,0.1240,0.1140,0.1140,0.1140,0.1140,0.1050,0.1050,0.1050,0.1050,0.0970,0.0970,0.0970,0.0970,0.0970,0.0890,0.0890,0.0890,0.0890,0.0890\r\n                ]\r\n        }\r\n    ]\r\n    protected _focusmatchins:MatchInsModel[]=[]\r\n    get focusmatchins()\r\n    {\r\n        return this._focusmatchins\r\n    }\r\n    protected _blinds:{[blind_id:number]:BlindModel}={}\r\n    \r\n\tsetMatchInsM(value:MatchInsModel)\r\n\t{\r\n        let index = this._allmatchins.findIndex((mim)=>mim.id==value.id)\r\n        if(index>=0)\r\n        {\r\n            this._allmatchins[index]=value\r\n        }\r\n        if(value.match)\r\n        {\r\n            return\r\n        }\r\n        for(let i=0;i<this._allmatchins.length;++i)\r\n        {\r\n            if(this._allmatchins[i].id==value.id)\r\n            {\r\n                for(let j=0;j<this._allmatches.length;++j)\r\n                {\r\n                    let m = this._allmatches[j]\r\n                    if(m.id==value.match_id)\r\n                    {\r\n                        value.match=m\r\n                        break\r\n                    }\r\n                }\r\n                break\r\n            }\r\n        }\r\n\t}\r\n    trySignup(ins_id:string)\r\n    {\r\n        let matchIns = this.getMatchInsById(ins_id)\r\n        if(!matchIns||!matchIns.match)\r\n        {\r\n            return false\r\n        }\r\n        let mm = matchIns.match\r\n        let need_coin = 0\r\n        let need_item:ItemItem=null\r\n        let need_item_count=0\r\n        for(let i=0;i<mm.signup_cost.length;++i)\r\n        {\r\n            let item = mm.signup_cost[i]\r\n            if(item.id==-99)\r\n            {\r\n                need_coin=item.count\r\n            }\r\n            else\r\n            {\r\n                need_item=GItemCfg.getItemById(item.id)\r\n                need_item_count=item.count\r\n            }\r\n        }\r\n        //优先扣道具\r\n        if(need_item)\r\n        {\r\n            let bagItems = GItemCfg.bagItems\r\n            if(bagItems)\r\n            {\r\n                let allneeds:BagItemItem[]=[]\r\n                for(let i=0;i<bagItems.length;++i)\r\n                {\r\n                    if(bagItems[i].item_id==need_item.id)\r\n                    {\r\n                        allneeds.push(bagItems[i])\r\n                    }\r\n                }\r\n                //try\r\n                let tryItems=allneeds.concat()\r\n                let tryNeedCount=need_item_count\r\n                while(tryNeedCount>0&&tryItems.length>0)\r\n                {\r\n                    let item = tryItems.shift()\r\n                    if(tryNeedCount<=item.count)\r\n                    {\r\n                        tryNeedCount=0\r\n                        break\r\n                    }\r\n                    else\r\n                    {\r\n                        tryNeedCount-=item.count\r\n                    }\r\n                }\r\n                need_coin=tryNeedCount*need_item.coin\r\n                if(GUserMgr.self_user.coin+GUserMgr.self_user.reward_coin<need_coin)\r\n                {\r\n                    return false\r\n                }\r\n            }\r\n        }\r\n        //-99金币\r\n        if(need_coin>GUserMgr.self_user.coin+GUserMgr.self_user.reward_coin)\r\n        {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    getSelfPlayer(ins_id:string)\r\n    {\r\n        let mim = this.getMatchInsById(ins_id)\r\n        return mim?.players[GUserMgr.self_user_id]\r\n    }\r\n    getPlayers(ins_id:string)\r\n    {\r\n        let mim = this.getMatchInsById(ins_id)\r\n        return mim?.players\r\n    }\r\n    setPlayers(ins_id:string,value:{[user_id:number]:MatchPlayer})\r\n    {\r\n        let mim = this.getMatchInsById(ins_id)\r\n        if(!mim)\r\n        {\r\n            return\r\n        }\r\n        mim.players=value\r\n    }\r\n    protected _mymatchinfos:{[ins_id:string]:ExtUserMatchInfo}={}\r\n    get myMatchInfos()\r\n    {\r\n        return this._mymatchinfos\r\n    }\r\n    async init()\r\n    {\r\n        return new Promise((resolve)=>\r\n        {\r\n            let i=3\r\n            let _tryEnd=()=>\r\n            {\r\n                --i\r\n                if(i==0)\r\n                {\r\n                    resolve(true)\r\n                }\r\n            }\r\n            GHallHttp.request(\"allblinds\").then((res)=>\r\n            {\r\n                if(res.blinds)\r\n                {\r\n                    for(let i=0;i<res.blinds.length;++i)\r\n                    {\r\n                        let bm:BlindModel = res.blinds[i]\r\n                        this._blinds[bm.id]=bm\r\n                    }\r\n                }\r\n                _tryEnd()\r\n            })\r\n            \r\n            this.getAllMatches().then(()=>\r\n            {\r\n                _tryEnd()\r\n            })\r\n            GHallHttp.request(\"FocusIns\").then((res)=>\r\n            {\r\n                this._focusmatchins=res.matchinses||[]\r\n                _tryEnd()\r\n            })\r\n        })\r\n    }\r\n    getBlind()\r\n    {\r\n        return this._blinds\r\n    }\r\n    getBlindModel(id:number)\r\n    {\r\n        return this._blinds[id]\r\n    }\r\n    getBlindItem(id:number,index:number)\r\n    {\r\n        let bm = this.getBlindModel(id)\r\n        if(!bm)\r\n        {\r\n            return null\r\n        }\r\n        return bm.items[index]\r\n    }\r\n    canSignup(table_id:number)\r\n    {\r\n        let tableinfo = GTexasTableDM.getTableInfo(table_id)  // 桌子不存在 不能报名\r\n        if(!tableinfo)\r\n        {\r\n            return false\r\n        }\r\n        let matchInsM = this.getMatchInsById(tableinfo.match_insid)// 比赛不存在 不能报名\r\n        if(!matchInsM)\r\n        {\r\n            return false\r\n        }\r\n        \r\n        if(tableinfo.blind_index>=matchInsM.match.reenter_blind_index) // 当前级别 不能超过可以报名最大级别\r\n        {\r\n            return false\r\n        }\r\n        let seatinfo = GTexasTableDM.getSelfSeatInfo(tableinfo.id) //  已经有自己的座位信息不能报名\r\n        if(seatinfo)\r\n        {\r\n            return false\r\n        }\r\n        let signups = GUserMgr.self_user.matchinfos||{}\r\n        //\r\n        if(!signups[matchInsM.id])\r\n        {\r\n            return true\r\n        }\r\n        //还没开赛\r\n        if(matchInsM.state!=EMatchState.Playing)\r\n        {\r\n            return false\r\n        }\r\n        if(matchInsM.match.reenter_count<=0) // 可报名次数\r\n        {\r\n            return false\r\n        }\r\n        matchInsM.players=matchInsM.players||[]\r\n        let player = matchInsM.players[GUserMgr.self_user_id]\r\n        if(!player)\r\n        {\r\n            return true\r\n        }\r\n        if(player.reenter_time<matchInsM.match.reenter_count)\r\n        {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    onSignup(umi:UserMatchInfo,player:MatchPlayer)\r\n    {\r\n        GUserMgr.self_user.matchinfos=GUserMgr.self_user.matchinfos||{}\r\n        GUserMgr.self_user.matchinfos[umi.ins_id]=umi\r\n        let m = this.getMatchInsById(umi.ins_id)\r\n        if(!m)\r\n        {\r\n            return\r\n        }\r\n        m.players=m.players||{}\r\n        m.players[GUserMgr.self_user_id]=player\r\n    }\r\n    protected _allmatches:MatchModel[]=null\r\n    protected _allmatchins:MatchInsModel[]=null\r\n    getMatchInsById(ins_id:string)\r\n    {\r\n        if(!this._allmatchins)\r\n        {\r\n            return null\r\n        }\r\n        for(let i=0;i<this._allmatchins.length;++i)\r\n        {\r\n            if(this._allmatchins[i].id==ins_id)\r\n            {\r\n                return this._allmatchins[i]\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    getMatchById(id:number)\r\n    {\r\n        for(let i=0;i<this._allmatches.length;++i)\r\n        {\r\n            let m = this._allmatches[i]\r\n            if(m.id==id)\r\n            {\r\n                return m\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    async getAllMatches(need_refresh=true)\r\n    {\r\n        if(need_refresh)\r\n        {\r\n            let res = await GHallHttp.request(\"allmatches\")\r\n            this._allmatches=res.matches\r\n            this._allmatchins=res.matchins\r\n        }\r\n        else\r\n        {\r\n            this._allmatches=this._allmatches||[]\r\n            this._allmatchins=this._allmatchins||[]\r\n        }\r\n        for(let i=0;i<this._allmatchins.length;++i)\r\n        {\r\n            let mi = this._allmatchins[i]\r\n            if(mi.match)\r\n            {\r\n                continue\r\n            }\r\n            for(let j=0;j<this._allmatches.length;++j)\r\n            {\r\n                let m = this._allmatches[j]\r\n                if(m.id==mi.match_id)\r\n                {\r\n                    mi.match=m\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            matches:this._allmatches,\r\n            matchins:this._allmatchins\r\n        }\r\n    }\r\n    async initMyMatches()\r\n    {\r\n        let res = await GHallHttp.request(\"getmymatches\")\r\n        this._mymatchinfos = res.matchinfos\r\n    }\r\n    onUpgradeBlind(table_id:number,blind_index:number,deadline:number)\r\n    {\r\n        let ti = GTexasTableDM.getTableInfo(table_id)\r\n        if(!ti)\r\n        {\r\n            return\r\n        }\r\n        // ti.blind_index=blind_index\r\n        // ti.blind_deadline=deadline\r\n        let matchInsM = this.getMatchInsById(ti.match_insid)\r\n        if(!matchInsM)\r\n        {\r\n            return\r\n        }\r\n        matchInsM.blind_index=blind_index\r\n    }\r\n    protected _match_records:{[ins_id:string]:TexasRecordTableInfo[]}={}\r\n    async initRecords(ins_id:string)\r\n    {\r\n        let res = await GHallHttp.request(\"GetRecords\",{ins_id})\r\n        this._match_records[ins_id]=res.records\r\n    }\r\n    addRecord(ins_id:string,record:TexasRecordTableInfo)\r\n    {\r\n        let hasself=false\r\n        for(let key in record.userrecords)\r\n        {\r\n            if(record.userrecords[key].playerinfo.id==GUserMgr.self_user_id)\r\n            {\r\n                hasself=true\r\n                break\r\n            }\r\n        }\r\n        if(!hasself)\r\n        {\r\n            return\r\n        }\r\n        this._match_records[ins_id]=this._match_records[ins_id]||[]\r\n        this._match_records[ins_id].push(record)\r\n    }\r\n    getMatchRecords(ins_id:string)\r\n    {\r\n        return this._match_records[ins_id]\r\n    }\r\n    getCurBlindItem(table_id:number)\r\n    {\r\n        let ti = GTexasTableDM.getTableInfo(table_id)\r\n        if(!ti)\r\n        {\r\n            return null\r\n        }\r\n        let matchins = this.getMatchInsById(ti.match_insid)\r\n        if(!matchins||!matchins.match)\r\n        {\r\n            return null\r\n        }\r\n        let bi = this.getBlindItem(matchins.match.blind_id,ti.blind_index)\r\n        return bi\r\n    }\r\n}\r\nexport let GMatchSer=new MatchService()","export enum MATERIAL {\r\n    SPRITE = \"2d-sprite\",\r\n    GRAY_SPRITE = \"2d-gray-sprite\",\r\n    UNLIT = \"unlit\",\r\n    SPINE = \"2d-spine\",\r\n    CLEAR = \"clear-stencil\"\r\n}\r\n\r\nclass MaterialManager {\r\n    constructor() {\r\n    }\r\n\r\n    getMaterial(name: MATERIAL): cc.Material {\r\n        switch(name) {\r\n            case MATERIAL.SPRITE:\r\n            case MATERIAL.GRAY_SPRITE:\r\n            case MATERIAL.UNLIT:\r\n            case MATERIAL.SPINE:\r\n            case MATERIAL.CLEAR: {\r\n                return cc.Material.getBuiltinMaterial(name);\r\n            }\r\n        }\r\n    }\r\n\r\n    setGray(node: cc.Node | cc.Sprite, gray: boolean = true) {\r\n        if (node instanceof cc.Sprite) {\r\n            node.setMaterial(0, matMgr.getMaterial(gray ? MATERIAL.GRAY_SPRITE : MATERIAL.SPRITE));\r\n        } else if (node instanceof cc.Node) {\r\n            let sprites = node.getComponentsInChildren(cc.Sprite);\r\n            for (let sprite of sprites) {\r\n                sprite.setMaterial(0, matMgr.getMaterial(gray ? MATERIAL.GRAY_SPRITE : MATERIAL.SPRITE));\r\n            }\r\n        }\r\n    }\r\n\r\n    initVertices(sprite: cc.Sprite, count_x: number = 2, count_y: number = 2) {\r\n        let uv = sprite.spriteFrame[\"uv\"];\r\n        let rect = sprite.spriteFrame.getRect();\r\n        let vertices = {\r\n            nu: [],\r\n            nv: [],\r\n            triangles: [],\r\n            x: [],\r\n            y: []\r\n        }\r\n\r\n        let points = [cc.v2(uv[0], uv[1]), cc.v2(uv[2], uv[3]), cc.v2(uv[4], uv[5]), cc.v2(uv[6], uv[7])];\r\n        let vector_x = points[1].sub(points[0]);\r\n        let vector_y = points[2].sub(points[0]);\r\n        for (let y = 0; y < count_y; y++) {\r\n            for (let x = 0; x < count_x; x++) {\r\n                let offset_x = x / (count_x - 1);\r\n                let offset_y = y / (count_y - 1);\r\n                let pos = points[0].add(vector_x.mul(offset_x)).add(vector_y.mul(offset_y));\r\n\r\n                vertices.nu.push(pos.x);\r\n                vertices.nv.push(pos.y);\r\n                vertices.x.push(offset_x * rect.width);\r\n                vertices.y.push((1 - offset_y) * rect.height);\r\n            }\r\n        }\r\n\r\n        for (let x = 0; x < count_x - 1; x++) {\r\n            for (let y = 0; y < count_y - 1; y++) {\r\n                let p0 = x + y * count_x;\r\n                let p1 = p0 + 1;\r\n                let p2 = p0 + count_x;\r\n                let p3 = p2 + 1;\r\n                vertices.triangles.push(p0, p1, p2);\r\n                vertices.triangles.push(p1, p2, p3);\r\n            }\r\n        }\r\n\r\n        sprite.type = cc.Sprite.Type.MESH;\r\n        (sprite as any).spriteFrame.vertices = vertices;\r\n        (sprite as any).setVertsDirty();\r\n    }\r\n\r\n    updateVerticesX() {\r\n        \r\n    }\r\n}\r\n\r\nexport const matMgr: MaterialManager = new MaterialManager();","/**\r\n* jQuery MD5 hash algorithm function\r\n* \r\n* <code>\r\n* Calculate the md5 hash of a String \r\n* String $.md5 ( String str )\r\n* </code>\r\n* \r\n* Calculates the MD5 hash of str using the 禄 RSA Data Security, Inc. MD5 Message-Digest Algorithm, and returns that hash. \r\n* MD5 (Message-Digest algorithm 5) is a widely-used cryptographic hash function with a 128-bit hash value. MD5 has been employed in a wide variety of security applications, and is also commonly used to check the integrity of data. The generated hash is also non-reversable. Data cannot be retrieved from the message digest, the digest uniquely identifies the data.\r\n* MD5 was developed by Professor Ronald L. Rivest in 1994. Its 128 bit (16 byte) message digest makes it a faster implementation than SHA-1.\r\n* This script is used to process a variable length message into a fixed-length output of 128 bits using the MD5 algorithm. It is fully compatible with UTF-8 encoding. It is very useful when u want to transfer encrypted passwords over the internet. If you plan using UTF-8 encoding in your project don't forget to set the page encoding to UTF-8 (Content-Type meta tag). \r\n* This function orginally get from the WebToolkit and rewrite for using as the jQuery plugin.\r\n* \r\n* Example\r\n* Code\r\n* <code>\r\n* $.md5(\"I'm Persian.\"); \r\n* </code>\r\n* Result\r\n* <code>\r\n* \"b8c901d0f02223f9761016cfff9d68df\"\r\n* </code>\r\n* \r\n* @alias Muhammad Hussein Fattahizadeh < muhammad [AT] semnanweb [DOT] com >\r\n* @link http://www.semnanweb.com/jquery-plugin/md5.html\r\n* @see http://www.webtoolkit.info/\r\n* @license http://www.gnu.org/licenses/gpl.html [GNU General Public License]\r\n* @param {jQuery} {md5:function(string))\r\n* @return string\r\n*/\r\n\r\nlet rotateLeft = function (lValue, iShiftBits)\r\n{\r\n    return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));\r\n}\r\n\r\nlet addUnsigned = function (lX, lY)\r\n{\r\n    let lX4, lY4, lX8, lY8, lResult;\r\n    lX8 = (lX & 0x80000000);\r\n    lY8 = (lY & 0x80000000);\r\n    lX4 = (lX & 0x40000000);\r\n    lY4 = (lY & 0x40000000);\r\n    lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);\r\n    if (lX4 & lY4) return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\r\n    if (lX4 | lY4)\r\n    {\r\n        if (lResult & 0x40000000) return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\r\n        else return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\r\n    } else\r\n    {\r\n        return (lResult ^ lX8 ^ lY8);\r\n    }\r\n}\r\n\r\nlet F = function (x, y, z)\r\n{\r\n    return (x & y) | ((~x) & z);\r\n}\r\n\r\nlet G = function (x, y, z)\r\n{\r\n    return (x & z) | (y & (~z));\r\n}\r\n\r\nlet H = function (x, y, z)\r\n{\r\n    return (x ^ y ^ z);\r\n}\r\n\r\nlet I = function (x, y, z)\r\n{\r\n    return (y ^ (x | (~z)));\r\n}\r\n\r\nlet FF = function (a, b, c, d, x, s, ac)\r\n{\r\n    a = addUnsigned(a, addUnsigned(addUnsigned(F(b, c, d), x), ac));\r\n    return addUnsigned(rotateLeft(a, s), b);\r\n};\r\n\r\nlet GG = function (a, b, c, d, x, s, ac)\r\n{\r\n    a = addUnsigned(a, addUnsigned(addUnsigned(G(b, c, d), x), ac));\r\n    return addUnsigned(rotateLeft(a, s), b);\r\n};\r\n\r\nlet HH = function (a, b, c, d, x, s, ac)\r\n{\r\n    a = addUnsigned(a, addUnsigned(addUnsigned(H(b, c, d), x), ac));\r\n    return addUnsigned(rotateLeft(a, s), b);\r\n};\r\n\r\nlet II = function (a, b, c, d, x, s, ac)\r\n{\r\n    a = addUnsigned(a, addUnsigned(addUnsigned(I(b, c, d), x), ac));\r\n    return addUnsigned(rotateLeft(a, s), b);\r\n};\r\n\r\nlet convertToWordArray = function (string)\r\n{\r\n    let lWordCount;\r\n    let lMessageLength = string.length;\r\n    let lNumberOfWordsTempOne = lMessageLength + 8;\r\n    let lNumberOfWordsTempTwo = (lNumberOfWordsTempOne - (lNumberOfWordsTempOne % 64)) / 64;\r\n    let lNumberOfWords = (lNumberOfWordsTempTwo + 1) * 16;\r\n    let lWordArray = Array(lNumberOfWords - 1);\r\n    let lBytePosition = 0;\r\n    let lByteCount = 0;\r\n    while (lByteCount < lMessageLength)\r\n    {\r\n        lWordCount = (lByteCount - (lByteCount % 4)) / 4;\r\n        lBytePosition = (lByteCount % 4) * 8;\r\n        lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount) << lBytePosition));\r\n        lByteCount++;\r\n    }\r\n    lWordCount = (lByteCount - (lByteCount % 4)) / 4;\r\n    lBytePosition = (lByteCount % 4) * 8;\r\n    lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);\r\n    lWordArray[lNumberOfWords - 2] = lMessageLength << 3;\r\n    lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\r\n    return lWordArray;\r\n};\r\n\r\nlet wordToHex = function (lValue)\r\n{\r\n    let WordToHexValue = \"\", WordToHexValueTemp = \"\", lByte, lCount;\r\n    for (lCount = 0; lCount <= 3; lCount++)\r\n    {\r\n        lByte = (lValue >>> (lCount * 8)) & 255;\r\n        WordToHexValueTemp = \"0\" + lByte.toString(16);\r\n        WordToHexValue = WordToHexValue + WordToHexValueTemp.substr(WordToHexValueTemp.length - 2, 2);\r\n    }\r\n    return WordToHexValue;\r\n};\r\n\r\nlet uTF8Encode = function (string)\r\n{\r\n    string = string.replace(/\\x0d\\x0a/g, \"\\x0a\");\r\n    let output = \"\";\r\n    for (let n = 0; n < string.length; n++)\r\n    {\r\n        let c = string.charCodeAt(n);\r\n        if (c < 128)\r\n        {\r\n            output += String.fromCharCode(c);\r\n        } else if ((c > 127) && (c < 2048))\r\n        {\r\n            output += String.fromCharCode((c >> 6) | 192);\r\n            output += String.fromCharCode((c & 63) | 128);\r\n        } else\r\n        {\r\n            output += String.fromCharCode((c >> 12) | 224);\r\n            output += String.fromCharCode(((c >> 6) & 63) | 128);\r\n            output += String.fromCharCode((c & 63) | 128);\r\n        }\r\n    }\r\n    return output;\r\n};\r\n\r\nexport let GMd5 = \r\n{\r\n    convertMd5(string)\r\n    {\r\n        let x = Array();\r\n        let k, AA, BB, CC, DD, a, b, c, d;\r\n        let S11 = 7, S12 = 12, S13 = 17, S14 = 22;\r\n        let S21 = 5, S22 = 9, S23 = 14, S24 = 20;\r\n        let S31 = 4, S32 = 11, S33 = 16, S34 = 23;\r\n        let S41 = 6, S42 = 10, S43 = 15, S44 = 21;\r\n        string = uTF8Encode(string);\r\n        x = convertToWordArray(string);\r\n        a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;\r\n        for (k = 0; k < x.length; k += 16)\r\n        {\r\n            AA = a; BB = b; CC = c; DD = d;\r\n            a = FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);\r\n            d = FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);\r\n            c = FF(c, d, a, b, x[k + 2], S13, 0x242070DB);\r\n            b = FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);\r\n            a = FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);\r\n            d = FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);\r\n            c = FF(c, d, a, b, x[k + 6], S13, 0xA8304613);\r\n            b = FF(b, c, d, a, x[k + 7], S14, 0xFD469501);\r\n            a = FF(a, b, c, d, x[k + 8], S11, 0x698098D8);\r\n            d = FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);\r\n            c = FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);\r\n            b = FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);\r\n            a = FF(a, b, c, d, x[k + 12], S11, 0x6B901122);\r\n            d = FF(d, a, b, c, x[k + 13], S12, 0xFD987193);\r\n            c = FF(c, d, a, b, x[k + 14], S13, 0xA679438E);\r\n            b = FF(b, c, d, a, x[k + 15], S14, 0x49B40821);\r\n            a = GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);\r\n            d = GG(d, a, b, c, x[k + 6], S22, 0xC040B340);\r\n            c = GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);\r\n            b = GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);\r\n            a = GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);\r\n            d = GG(d, a, b, c, x[k + 10], S22, 0x2441453);\r\n            c = GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);\r\n            b = GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);\r\n            a = GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);\r\n            d = GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);\r\n            c = GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);\r\n            b = GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);\r\n            a = GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);\r\n            d = GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);\r\n            c = GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);\r\n            b = GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);\r\n            a = HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);\r\n            d = HH(d, a, b, c, x[k + 8], S32, 0x8771F681);\r\n            c = HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);\r\n            b = HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);\r\n            a = HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);\r\n            d = HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);\r\n            c = HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);\r\n            b = HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);\r\n            a = HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);\r\n            d = HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);\r\n            c = HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);\r\n            b = HH(b, c, d, a, x[k + 6], S34, 0x4881D05);\r\n            a = HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);\r\n            d = HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);\r\n            c = HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);\r\n            b = HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);\r\n            a = II(a, b, c, d, x[k + 0], S41, 0xF4292244);\r\n            d = II(d, a, b, c, x[k + 7], S42, 0x432AFF97);\r\n            c = II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);\r\n            b = II(b, c, d, a, x[k + 5], S44, 0xFC93A039);\r\n            a = II(a, b, c, d, x[k + 12], S41, 0x655B59C3);\r\n            d = II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);\r\n            c = II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);\r\n            b = II(b, c, d, a, x[k + 1], S44, 0x85845DD1);\r\n            a = II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);\r\n            d = II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);\r\n            c = II(c, d, a, b, x[k + 6], S43, 0xA3014314);\r\n            b = II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);\r\n            a = II(a, b, c, d, x[k + 4], S41, 0xF7537E82);\r\n            d = II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);\r\n            c = II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);\r\n            b = II(b, c, d, a, x[k + 9], S44, 0xEB86D391);\r\n            a = addUnsigned(a, AA);\r\n            b = addUnsigned(b, BB);\r\n            c = addUnsigned(c, CC);\r\n            d = addUnsigned(d, DD);\r\n        }\r\n        let tempValue = wordToHex(a) + wordToHex(b) + wordToHex(c) + wordToHex(d);\r\n        return tempValue.toLowerCase();\r\n    },\r\n    convertUTF8(string)\r\n    {\r\n        return uTF8Encode(string)\r\n    }\r\n}","class msgItem {\r\n    callback: Function = null;\r\n    object : cc.Object = null;\r\n}\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class MessageCenter extends cc.Component {\r\n\r\n    private _Que: any = null;\r\n    private static instance: MessageCenter;\r\n\r\n    public static getInstance(): MessageCenter {\r\n        if (!this.instance) {\r\n            this.instance = new MessageCenter();\r\n        }\r\n        return this.instance;\r\n    };\r\n\r\n    /**\r\n     * 注册消息\r\n     * @param msg 消息名称\r\n     * @param callback 回调函数\r\n     * @param object 注册消息的对象\r\n     */\r\n    public register(msg: string, callback: Function, object: cc.Object) {\r\n        if (!object || !(object instanceof cc.Object)) {\r\n            console.log(\"请传入正确的注册对象\");\r\n            return;\r\n        }\r\n        if (this._Que === null) {\r\n            this._Que = {};\r\n        }\r\n        if (!this._Que[msg]) {\r\n            this._Que[msg] = [];\r\n        }\r\n        \r\n        if(this.isObjectHasRegister(msg,object)){\r\n            console.log(\"该对象已经注册过该消息： \" + msg);\r\n            return;\r\n        }\r\n        console.log(\"添加注册 msg = \" + msg);\r\n        let item: msgItem = new msgItem();\r\n        item.callback = callback;\r\n        item.object = object;\r\n        \r\n        this._Que[msg].push(item);\r\n    };\r\n\r\n    /**\r\n     *判断当前对象是否已注册过该消息\r\n     * @param msg 消息名称\r\n     * @param object 消息对象节点\r\n     */\r\n    public isObjectHasRegister(msg: string,  object: cc.Object){\r\n        let item:msgItem[] = this._Que[msg];\r\n        let len = item.length;\r\n        for (let i = len - 1; i >= 0; i--) {\r\n            if (item[i].object === object) {\r\n               return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 移除对象消息\r\n     * @param msg 移除消息名称\r\n     * @param object 移除消息对象节点\r\n     */\r\n    public unregister(msg: string, object: cc.Object) {\r\n        if (this._Que === null) {\r\n            console.log(\"_Que未初始化\");\r\n            return;\r\n        }\r\n        if (!this._Que[msg]) {\r\n            console.log(\"未注册该消息\" + msg);\r\n            return;\r\n        }\r\n        let item:msgItem[] = this._Que[msg];\r\n        let len = item.length;\r\n\r\n        for (let i = len - 1; i >= 0; i--) {\r\n            if (item[i].object === object) {\r\n                item.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param msg 发送消息名称\r\n     * @param params\r\n     */\r\n    public send(msg: string, params: any = null) {\r\n        if (this._Que === null) {\r\n            console.log(\"_Que未初始化\");\r\n            return;\r\n        }\r\n        if (!this._Que[msg]) {\r\n            console.log(\"未注册该消息\" + msg);\r\n            return;\r\n        }\r\n        let callbacks = this._Que[msg];\r\n        let len = callbacks.length;\r\n        console.log(\"send ===> \" + msg + \",个数：\" + len);\r\n        for (let i = len - 1; i >= 0; i--) {\r\n            callbacks[i].callback(params);\r\n        }\r\n    };\r\n\r\n}\r\n\r\nexport let GMsgCenter=MessageCenter.getInstance()","\r\nimport Bridge_android from \"./Bridge_android\"\r\nimport Bridge_ios from \"./Bridge_ios\"\r\nimport Bridge_h5 from \"./Bridge_h5\"\r\n\r\n\r\nexport enum NATIVE_CALL_TYPE {\r\n    ImgToSystemGallery = 1001,                //保存图片\r\n    CrashPush = 1002,                         // 错误上传bugly\r\n   \r\n}\r\n\r\nexport default class MultiPlatform {\r\n    private static _instance: MultiPlatform ;\r\n    private _platform:any = null;\r\n    constructor() \r\n    {\r\n        if (cc.sys.isNative) \r\n        {\r\n            if (cc.sys.OS_ANDROID == cc.sys.os) \r\n            {\r\n                this._platform = new Bridge_android();\r\n            }\r\n            else if (cc.sys.OS_IOS == cc.sys.os) \r\n            {\r\n                this._platform = new Bridge_ios();\r\n            }\r\n        }\r\n        else if (cc.sys.isBrowser) \r\n        {\r\n            this._platform = new Bridge_h5();\r\n        }\r\n    }\r\n\r\n\r\n \r\n    capCamera = null;\r\n    initCamera(_capCamera)\r\n    {\r\n       this.capCamera = _capCamera;\r\n    }\r\n    flipCapImageData(data:any,_width:any,_height:any)\r\n    {\r\n        let mtd_arr = [];\r\n        for(let i=0;i<_width*_height;i++)\r\n        {\r\n            mtd_arr[mtd_arr.length] = \r\n            [\r\n                data[i*4+0],\r\n                data[i*4+1],\r\n                data[i*4+2],\r\n                data[i*4+3]\r\n            ]\r\n        }\r\n        mtd_arr.reverse();\r\n        let width_array = [];\r\n        for(var i=0;i<_height;i++)\r\n        {\r\n            let smd = [];\r\n             for(var d=0;d<_width;d++)\r\n             {\r\n                smd[smd.length] = mtd_arr[i*_width+d]\r\n             }\r\n             smd.reverse()\r\n             width_array[width_array.length] = smd;\r\n        }\r\n        let jds = new Uint8Array(_width*_height*4);\r\n        let index=  0;\r\n        for(let i=0;i<_height;i++)\r\n        {\r\n            for(let d=0;d<_width;d++)\r\n            {\r\n                for(let m=0;m<4;m++)\r\n                {\r\n                    jds[index] = width_array[i][d][m];\r\n                    index++;\r\n                }\r\n            }\r\n        }\r\n        return jds;\r\n    }\r\n    filpYImage(data, width, height) \r\n    {\r\n        let picData = new Uint8Array(width * height * 4);\r\n        let rowBytes = width * 4;\r\n        for (let row = 0; row < height; row++) {\r\n            let srow = height - 1 - row;\r\n            let start = srow * width * 4;\r\n            let reStart = row * width * 4;\r\n            // save the piexls data\r\n            for (let i = 0; i < rowBytes; i++) {\r\n                picData[reStart + i] = data[start + i];\r\n            }\r\n        }\r\n        return picData;\r\n    }\r\n\r\n\r\n    catScreenNodeSave(capNode: cc.Node ,callFunc:any)\r\n    {\r\n        if(!cc.sys.isNative)\r\n        {\r\n            callFunc(false)\r\n            return\r\n        }\r\n        let _texture = new cc.RenderTexture();\r\n        _texture.initWithSize(cc.visibleRect.width, cc.visibleRect.height,cc.Texture2D.PIXEL_FORMAT_RGBA8888);\r\n        this.capCamera.targetTexture = _texture;\r\n        let _width = _texture.width;\r\n        let _height = _texture.height; \r\n        let self = this;\r\n        setTimeout(() => \r\n        {\r\n            let size = capNode.getContentSize();\r\n            let pixels = new Uint8Array(size.width * size.height * 4);\r\n            let x = Math.floor(_texture.width / 2 - capNode.width / 2)  ;\r\n            let y = Math.floor(_texture.height / 2 - capNode.height / 2);\r\n            _width = Math.floor(capNode.width);\r\n            _height = Math.floor(capNode.height);\r\n            let data = _texture.readPixels(pixels, x, y, _width, _height);\r\n            let tagData = self.flipCapImageData(data,_width,_height);\r\n            let write_path = jsb.fileUtils.getWritablePath()+\"shares_img.png\";\r\n            if (jsb.fileUtils.isFileExist(write_path)) \r\n            {\r\n                jsb.fileUtils.removeFile(write_path);\r\n            }\r\n            if(jsb.saveImageData(tagData,_width,_height,write_path))\r\n            {\r\n                callFunc && callFunc(true,write_path);\r\n            }else\r\n            {\r\n                callFunc && callFunc(false,\"\");\r\n            }\r\n        }\r\n        ,50);\r\n    }\r\n\r\n    // 通过截图保存图片 + 分享微信\r\n    capScreenShareWx(sType: number, capNode: cc.Node ,callFunc:any)\r\n    {\r\n        MultiPlatform.getInstance().catScreenNodeSave(capNode,(isSucces,imgPath)=>\r\n        {\r\n            if(isSucces)\r\n            {\r\n                if(cc.sys.os == cc.sys.OS_ANDROID)\r\n                {  \r\n                   jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"shareScreenShot\",\"(Ljava/lang/String;I)V\",imgPath,sType)\r\n                }\r\n                else if (cc.sys.os == cc.sys.OS_IOS) \r\n                {\r\n                  jsb.reflection.callStaticMethod(\"AppController\", \"shareScreenShot:andType:\" , imgPath, sType);\r\n                }\r\n            }else\r\n            {\r\n                callFunc && callFunc(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n    /**\r\n     * 通过截图保存图片 + 保存到手机相册\r\n     * @param capCamera \r\n     * @param capNode \r\n     * @param callFunc \r\n     */\r\n    capScreen(capNode,callFunc)\r\n    {\r\n        let self = this;\r\n        MultiPlatform.getInstance().catScreenNodeSave(capNode,(isSucces,imgPath)=>\r\n        {\r\n            if(isSucces)\r\n            {\r\n                callFunc && callFunc(self.saveImgToSystemGallery(imgPath));\r\n                 \r\n            }else\r\n            {\r\n                callFunc && callFunc(false);\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     * 下载远程图片到本地\r\n     */\r\n    getRemoteImgSaveToPhone(remote_url)\r\n    {\r\n        let write_path = jsb.fileUtils.getWritablePath()+\"downimg.png\";\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.onreadystatechange = ()=>\r\n        {\r\n            if(xhr.readyState===4 && xhr.status===200)\r\n            {\r\n                if(xhr.response && cc.sys.isNative)\r\n                {\r\n                    const u8a = new Uint8Array(xhr.response);\r\n                    jsb.fileUtils.writeDataToFile(u8a,write_path);\r\n                    // cc.error(\"保存成功 路径:\"+write_path);\r\n                    return this.saveImgToSystemGallery(write_path);\r\n                }else\r\n                {\r\n                    return false;\r\n                }\r\n            }else if(xhr.readyState===4 && xhr.status!=200)\r\n            {\r\n                return false;\r\n            }\r\n        };\r\n        xhr.responseType = \"arraybuffer\";\r\n        xhr.open(\"GET\",remote_url,true);\r\n        xhr.send();\r\n    }\r\n    handleNativeResultData(callData:any)\r\n    {\r\n        let mdData ;\r\n        if(callData instanceof Object)\r\n        {\r\n            mdData = JSON.parse(JSON.stringify(callData));\r\n        }\r\n        else\r\n        {\r\n             mdData = JSON.parse(callData);\r\n        }\r\n        return callData;\r\n    }\r\n    /**\r\n     * 原生回调 ts\r\n     * @param callData   json 格式的 字符串\r\n     */ \r\n     nativeCallTs(callData:any)\r\n     {\r\n         cc.error(\"TS-------------------------------------------------------\")\r\n        // error(\"走起=\",callData)\r\n        // error(\"type=\",typeof(callData));\r\n        let mdData ;\r\n        if(callData instanceof Object)\r\n        {\r\n            mdData = JSON.parse(JSON.stringify(callData));\r\n        }\r\n        else\r\n        {\r\n             mdData = JSON.parse(callData);\r\n        }\r\n       if(mdData.callId==NATIVE_CALL_TYPE.ImgToSystemGallery) \r\n        {\r\n             \r\n        }\r\n        else\r\n        {\r\n            cc.error(\"原生回调js 数据字符串=\",callData);\r\n            cc.error(\"原生回调js callId=\",mdData.callId);\r\n        }\r\n     }\r\n     /**\r\n      * ts调用原生\r\n      * @param callData \r\n      */\r\n     tsCallNative(callData:any,callback: Function | null = null)\r\n     {\r\n         if(this._platform)\r\n         {\r\n             let backData = this._platform.tsCallNative(callData);\r\n             callback && callback(backData);\r\n         }\r\n     }\r\n     crashBind()\r\n     {\r\n        if (cc.sys.isNative) \r\n        {\r\n            window.__errorHandler = function (file: any, line: any, msg:any ,error: any) \r\n            {\r\n                cc.error(\"js 上传结果：\"+MultiPlatform.getInstance().crashPush(error+\"++++++\"+msg));\r\n            }\r\n        }\r\n            // if (cc.sys.isBrowser) {\r\n            // let __handler;\r\n            // if (window.onerror) {\r\n            // __handler = window.onerror\r\n            // }\r\n            // window.onerror = function (…args) {\r\n            // console.log(‘游戏报错,浏览器’);\r\n            // handleError(…args);\r\n            // if (__handler) {\r\n            // __handler(…args)\r\n            // }\r\n            // }\r\n            // }\r\n     }\r\n     crashPush(msg)\r\n     {\r\n        if(!cc.sys.isNative)\r\n        {\r\n            return\r\n        }\r\n        let resultData = null;\r\n        if (null != this._platform && null != this._platform.crashPush) \r\n        {\r\n            let  sendData = \r\n            {\r\n                callId: NATIVE_CALL_TYPE.CrashPush, \r\n                callData:\r\n                {\r\n                    name:\"js错误上传\",\r\n                    errorMsgTag:msg\r\n                }\r\n            }\r\n            resultData = this._platform.crashPush(sendData); \r\n            if(resultData.callId == NATIVE_CALL_TYPE.CrashPush)\r\n            {\r\n                return resultData.callData.result?true:false;\r\n            }\r\n        }\r\n         return false;\r\n     }\r\n     saveImgToSystemGallery(imgUrl): boolean \r\n     { \r\n         let resultData = null;\r\n        if (null != this._platform && null != this._platform.saveImgToSystemGallery) \r\n        {\r\n            let  sendData = \r\n            {\r\n                callId: NATIVE_CALL_TYPE.ImgToSystemGallery, \r\n                callData:\r\n                {\r\n                    name:\"图片保存\",\r\n                    url:imgUrl\r\n                }\r\n            }\r\n            resultData = this._platform.saveImgToSystemGallery(sendData); \r\n            if(resultData.callId == NATIVE_CALL_TYPE.ImgToSystemGallery)\r\n            {\r\n                return resultData.callData.result?true:false;\r\n            }\r\n\r\n    \r\n        }\r\n         return false;\r\n     }\r\n    setUpdateCall()\r\n    {\r\n        if (null != this._platform) \r\n        {\r\n            this._platform.setUpdateCall(); \r\n          \r\n        }\r\n    }\r\n\r\n    \r\n\r\n    \r\n    public static getInstance(): MultiPlatform {\r\n        if (MultiPlatform._instance == null) {\r\n            MultiPlatform._instance = new MultiPlatform();\r\n        }\r\n        \r\n        window[\"ToTs\"] = MultiPlatform._instance;\r\n        return MultiPlatform._instance;\r\n    }\r\n\r\n\r\n}","import { GAudioTool } from './../Logic/AudioTool';\r\nimport { GHelper } from './../Logic/Helper';\r\nimport { GEmotionDataModel } from './../DataModel/EmotionDataModel';\r\nexport class MutualEmotion extends cc.Component\r\n{\r\n    onLoad()\r\n    {\r\n\r\n    }\r\n    fly(index,from,to)\r\n    {\r\n        from = this.node.parent.convertToNodeSpace(from)\r\n        to = this.node.parent.convertToNodeSpace(to)\r\n        this.node.position = from\r\n        let data = GEmotionDataModel.Mutual[index]\r\n        let fly = data.fly\r\n        let ani = data.ani\r\n        let fly_node = GHelper.createSprite(fly,(sp)=>\r\n        {\r\n            let actions=\r\n            [\r\n                cc.moveTo(0.3,to),\r\n                cc.callFunc(()=>\r\n                {\r\n                    let ani_obj = GHelper.createAnimation(ani,()=>\r\n                    {\r\n                        this.node.removeFromParent()\r\n                    })\r\n                    ani_obj.node.parent = this.node\r\n                    ani_obj.node.x=40\r\n                    ani_obj.node.y=40\r\n                    sp.node.active = false\r\n                })\r\n            ]\r\n            this.node.runAction(cc.sequence(actions))\r\n        })\r\n        fly_node.node.parent = this.node\r\n\r\n        this.node.runAction(cc.sequence(\r\n            cc.delayTime(data.audio_delay),\r\n            cc.callFunc(()=>\r\n            {\r\n                GAudioTool.playVoice(data.audio)\r\n            })\r\n        ))\r\n    }\r\n}","import { GMsgCenter } from \"../../utils/MessageCenter\"\r\n// import  SingleBase from '../../Base/SingleBase'\r\n\r\nexport let GNativeTool:NativeTool = null\r\nclass NativeTool extends cc.Object\r\n{\r\n    protected _native_plugin = \"com/eryi/casino/utils/NativePlugin\"\r\n    protected _one_string_param  = \"(Ljava/lang/String;)V\"\r\n    protected _two_string_params = \"(Ljava/lang/String;Ljava/lang/String;)V\"\r\n    protected _return_one_string = \"()Ljava/lang/String;\"\r\n\r\n    protected _return_boolean  = \"()Z\"\r\n\r\n    protected _empty_params = \"()V\"\r\n    protected _voice_callback = null\r\n    protected _battery_info_callback = null\r\n    constructor()\r\n    {\r\n        super()\r\n        //this._registerBatterCallback()\r\n        GMsgCenter.register(\"identify_success\", ()=>\r\n        {\r\n            this._flag=-1\r\n            console.log(\"rlsb identify_success\")\r\n        }, this)\r\n        GMsgCenter.register(\"identify_failed\", ()=>\r\n        {\r\n            this._flag=-1\r\n            console.log(\"rlsb identify_failed\")\r\n        }, this)\r\n    }\r\n    log(tag:string,msg?:string)\r\n    {\r\n        if(!msg)\r\n        {\r\n            msg = tag\r\n            tag = \"nativetool\"\r\n        }\r\n        if(cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID)\r\n        {\r\n            jsb.reflection.callStaticMethod(this._native_plugin, \"log\",this._two_string_params,tag,msg)\r\n        }\r\n        else if(cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS)\r\n        {\r\n            jsb.reflection.callStaticMethod(\"NativePlugin\", \"log:\",msg)\r\n        }\r\n    }\r\n    protected _registerBatterCallback()\r\n    {\r\n        if(cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID)\r\n        {\r\n            let fun_name = this._convertCallBackName(this.onBatteryCallback.bind(this),\"nt_\")\r\n            jsb.reflection.callStaticMethod(this._native_plugin, \"registerBatteryListener\",this._one_string_param,fun_name)\r\n        }\r\n    }\r\n    setBatteryCallback(cb)\r\n    {\r\n        this._battery_info_callback = cb\r\n    }\r\n    onBatteryCallback(info)\r\n    {\r\n        if(!this._battery_info_callback)\r\n        {\r\n            return\r\n        }\r\n        if(info.isCharging==\"true\")\r\n        {\r\n            info.isCharging = true\r\n        }\r\n        else\r\n        {\r\n            info.isCharging = false\r\n        }\r\n        this._battery_info_callback(info)\r\n    }\r\n    getBatteryStatus()\r\n    {\r\n        if(cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID)\r\n        {\r\n            jsb.reflection.callStaticMethod(this._native_plugin, \"getBatteryStatus\",this._empty_params)\r\n        }\r\n    }\r\n    copyString(str)\r\n    {\r\n        str = str+\"\"\r\n        if(cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID)\r\n        {\r\n            jsb.reflection.callStaticMethod(this._native_plugin, \"copyString\",this._two_string_params,\"成功复制\",str)\r\n        }\r\n        else if(cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS)\r\n        {\r\n            jsb.reflection.callStaticMethod(\"NativePlugin\", \"copyString:\",str)\r\n        }\r\n    }\r\n    getUDID()\r\n    {\r\n        var udId = \"\"\r\n        if(cc.sys.isNative && cc.sys.os == cc.sys.OS_ANDROID) \r\n        {\r\n            udId = jsb.reflection.callStaticMethod(this._native_plugin, \"getUDID\",this._return_one_string)\r\n        } \r\n        else if(cc.sys.isNative&&cc.sys.os == cc.sys.OS_IOS) \r\n        {\r\n            udId = jsb.reflection.callStaticMethod(\"NativePlugin\", \"getUDID\",\"\")\r\n        } \r\n        else \r\n        {\r\n            udId = \"1233210\"\r\n        }\r\n        return udId\r\n    }\r\n    beginVoiceRecord(callback)\r\n    {\r\n        this._voice_callback = callback\r\n        if(cc.sys.os == cc.sys.OS_ANDROID)\r\n        {\r\n            let fun_name = this._convertCallBackName(this._on_record_callback.bind(this),\"nt_record\")\r\n            jsb.reflection.callStaticMethod(this._native_plugin, \"beginRecord\",this._one_string_param,fun_name)\r\n        } \r\n        else if(cc.sys.os == cc.sys.OS_IOS) \r\n        {\r\n            let fun_name = this._convertCallBackName(this._on_record_callback.bind(this),\"nt_record\")\r\n            jsb.reflection.callStaticMethod(\"VoiceRecord\", \"registerScriptCallback:\",fun_name)\r\n            jsb.reflection.callStaticMethod(\"VoiceRecord\", \"beginRecord\",\"\")\r\n        }\r\n    }\r\n        \r\n    endVoiceRecord()\r\n    {\r\n        if(cc.sys.os == cc.sys.OS_ANDROID)\r\n        {\r\n            jsb.reflection.callStaticMethod(this._native_plugin, \"endRecord\",this._empty_params)\r\n        }\r\n        else if(cc.sys.os == cc.sys.OS_IOS)\r\n        {\r\n            jsb.reflection.callStaticMethod(\"VoiceRecord\", \"endRecord\",\"\")\r\n        }\r\n    }\r\n    \r\n    cancelRecord()\r\n    {\r\n        if(cc.sys.os == cc.sys.OS_ANDROID)\r\n        {\r\n            jsb.reflection.callStaticMethod(this._native_plugin, \"cancelRecord\",this._empty_params)\r\n        }\r\n        else if(cc.sys.os == cc.sys.OS_IOS)\r\n        {\r\n            jsb.reflection.callStaticMethod(\"VoiceRecord\", \"cancelRecord\",\"\")\r\n        }\r\n    }\r\n    \r\n    protected _on_record_callback(result)\r\n    {\r\n        if(result.code==\"2\")\r\n        {\r\n            if(this._voice_callback)\r\n            {\r\n                this._voice_callback(result.url)\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(this._voice_callback)\r\n            {\r\n                this._voice_callback()\r\n            }\r\n        }\r\n    }\r\n    protected _convertCallBackName(fun, name) \r\n    {\r\n        var funName = \"\"\r\n        if (name)\r\n        {\r\n            console[name] = function(params)\r\n            {\r\n                fun(params)\r\n            }\r\n            funName = \"console.\" + name\r\n        } \r\n        else \r\n        {\r\n            (<any>console).nativeToJsCallback = function(params)\r\n            {\r\n                fun(params)\r\n            }\r\n            funName = \"console.nativeToJsCallback\"\r\n        }\r\n        return funName\r\n    }\r\n    protected _flag=-1\r\n    protected _preslsb_time=-1\r\n    \r\n    callRlsb(name:string,no:string,user_id:string)\r\n    {\r\n        console.log(\"rlsb flag=\"+this._flag)\r\n        if(this._flag!=-1)\r\n        {\r\n            //return\r\n        }\r\n        let now = Date.now()\r\n        //两秒之内只能调一次，不用flag是因为不做不到成败\r\n        if(now-this._preslsb_time<2000)\r\n        {\r\n            return\r\n        }\r\n        this._preslsb_time=now\r\n        //调用sdk人脸识别\r\n        if (!cc.sys.isNative) {\r\n            return\r\n        }\r\n        this._flag=1\r\n        if (cc.sys.os==cc.sys.OS_IOS) {\r\n            jsb.reflection.callStaticMethod(\"AppController\", \"CallCameraWithName:andCardID:andUserID:\", name, no, user_id+\"\");\r\n        }\r\n        else if (cc.sys.os==cc.sys.OS_ANDROID) {\r\n            jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"CallCamera\", \"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\", name, no, user_id+\"\");\r\n        }\r\n    }\r\n\r\n    getMaxVersion(){\r\n        if (cc.sys.os==cc.sys.OS_ANDROID) {\r\n            return jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"getMaxVersion\", this._return_one_string);\r\n        }else  if (cc.sys.os==cc.sys.OS_IOS) {\r\n            return jsb.reflection.callStaticMethod(\"AppController\", \"getMaxVersion\");\r\n        }\r\n    }\r\n\r\n    openUrl(url:string){\r\n        if (cc.sys.os==cc.sys.OS_ANDROID) {\r\n            jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"openUrl\", this._one_string_param,url);\r\n        }else if(cc.sys.os==cc.sys.OS_IOS) {\r\n            return jsb.reflection.callStaticMethod(\"AppController\", \"openUrl:\",url);\r\n        }\r\n    }\r\n\r\n    doBackClose(){\r\n        if (cc.sys.os==cc.sys.OS_ANDROID) {\r\n            jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"doBackClose\", this._empty_params);\r\n        }\r\n    }\r\n\r\n    checkLocationPremissionIsOpen(){\r\n        if (cc.sys.os==cc.sys.OS_ANDROID) {\r\n            return jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"checkLocationPremissionIsOpen\", this._return_boolean);\r\n        }\r\n    }\r\n\r\n    reqLocationPremission(){\r\n        if (cc.sys.os==cc.sys.OS_ANDROID) {\r\n            jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"reqLocationPremission\", this._empty_params);\r\n        }\r\n    }\r\n \r\n\r\n\r\n}\r\nGNativeTool = new NativeTool()","import { ETexasSeatState, GTexasTableDM, TexasRecordTableInfo, TexasSeatInfo, TexasTableInfo } from '../DataModel/TexasTableDataModel';\r\nimport { GUserMgr } from '../Logic/UserManager';\r\nimport { SimpleWebSocket } from '../Framework/Net/SimpleWebSocket';\r\nimport { EMatchState, ETableState, ETexasAction } from '../Config/_ini_';\r\nimport { GAppDM } from '../DataModel/AppDataModel';\r\nimport { BlindItem, GMatchSer, MatchPlayer } from '../Service/MatchService';\r\nimport { GPageMgr } from '../Framework/View/Page/PageManager';\r\nimport { GHelper } from '../Framework/Logic/Helper';\r\nimport { GMsgCenter } from '../utils/MessageCenter';\r\nimport { GaoDeMapTool } from '../Framework/Logic/GaoDeMapTool';\r\n\r\nimport { layerMgr } from \"../manager/LayerManager\"\r\nimport { Global } from \"../view/game/Global\";\r\n\r\nexport let GNetGameTexas:NetGameTexas = null\r\nclass NetGameTexas extends SimpleWebSocket\r\n{\r\n    private _ins_id=\"\"\r\n    private _entered=false\r\n    \r\n    constructor()\r\n    {\r\n        super()\r\n        //this._protocol=\"slots\"\r\n    }\r\n    onOpen()\r\n    {\r\n        this._is_open = true\r\n        this.send_texas_login()\r\n        this.openHeartBeat()\r\n    }\r\n\r\n   \r\n    _onCacheMsg()\r\n    {\r\n        if(!this._entered)\r\n        {\r\n            return\r\n        }\r\n        super._onCacheMsg()\r\n    }\r\n    send_texas_login()\r\n    {\r\n        let msg=\r\n        {\r\n            cmd:\"texas_login\",\r\n            account_id:GAppDM.account.id,\r\n            token:GAppDM.token\r\n        }\r\n        this.send(msg)\r\n    }\r\n    close(): void {\r\n        this._need_close = true\r\n        this.pageTable = null\r\n        super.close()\r\n    }\r\n\r\n    receive_texas_login(jsonData)\r\n    {\r\n        super.onOpen()\r\n        this._entered=true\r\n        GUserMgr.init(jsonData.user.id) // 记录自己的userid\r\n        GUserMgr.addOneUser(jsonData.user)\r\n        this._onCacheMsg()\r\n        let msg=\r\n        {\r\n            cmd:\"texas_enter_match\",\r\n            ins_id:this._ins_id\r\n        }\r\n        this.send(msg)\r\n    }\r\n    receive_texas_kickout(jsonData)\r\n    {\r\n        GPageMgr.closePage(\"Page_Game\")\r\n        this.close()\r\n        GHelper.showTip(\"账号在其他地方上线！\")\r\n    }\r\n    send_texas_enter_match(match_id:number,ins_id:string)\r\n    {\r\n        this._ins_id=ins_id\r\n        if(this.isOpen)\r\n        {\r\n            this.close()\r\n        }\r\n        let id = match_id%2\r\n        let server = GAppDM.texas_servers[id]\r\n        if(!server)\r\n        {\r\n            id=0\r\n            server=GAppDM.texas_servers[id]\r\n        }\r\n        this.init(server.host,server.port)\r\n        this.connect()\r\n    }\r\n    receive_texas_enter_match(jsonData)\r\n    {\r\n        // cc.error(\"进入比赛 比赛信息=\",jsonData)\r\n        GMatchSer.setMatchInsM(jsonData.matchInsM)\r\n        GMatchSer.initRecords(jsonData.matchInsM.id)\r\n        this.pageTable?.onEnterMatch()\r\n\r\n\r\n        GMsgCenter.send('refresh_score')\r\n    }\r\n    // 废弃\r\n    receive_texas_enter_match_failed(jsonData)\r\n    {\r\n        if(jsonData.errcode){\r\n            GHelper.showTip(jsonData.errcode.des)\r\n        }\r\n       this.close()\r\n       GPageMgr.closePage(\"Page_Game\")\r\n    }\r\n    /**\r\n     * 同步gps\r\n     */\r\n    async send_texas_gps()\r\n    {\r\n        let lm = await GaoDeMapTool.getLocation(true)\r\n        if(!lm||!lm.latitude||!lm.longitude)\r\n        {\r\n            return\r\n        }\r\n        let msg=\r\n        {\r\n            cmd:\"texas_gps\",\r\n            ins_id:this._ins_id,\r\n            gps:[lm.longitude,lm.latitude]\r\n        }\r\n        this.send(msg)\r\n    }\r\n    receive_texas_enter_table(jsonData)\r\n    {\r\n        let ti:TexasTableInfo = jsonData.table_info\r\n        GTexasTableDM.init(ti)\r\n        if(this._ins_id!=ti.match_insid)\r\n        {\r\n            return\r\n        }\r\n        // if(GPageTable&&GPageTable.tableInfo.match_insid==ti.match_insid)\r\n        // {\r\n        //     console.log(\"reopen cause of enter_table\")\r\n        //     GPageMgr.reOpenPage(\"Page_Game\",ti.id)\r\n        //     return\r\n        // }\r\n        Global.tableData.tableId = ti.id;\r\n        // 刷新桌子与座位的信息\r\n        if(this.pageTable){\r\n            // 刷新桌子信息\r\n            let game = this.pageTable['node'].parent.getComponent('Page')\r\n            game.initGame(ti.id)\r\n            // this.pageTable.initTable(ti.match_insid)\r\n        }else{\r\n            this.onGetPage(ti)\r\n        }\r\n\r\n    }\r\n\r\n    private pageTable\r\n    async onGetPage(ti){\r\n        let page =  await GPageMgr.openPage(\"Page_Game\",ti.id)\r\n        let pageTable = cc.find('Page_Table',page['node']).getComponent('Page')\r\n        this.pageTable = pageTable\r\n    }\r\n\r\n\r\n    receive_texas_enter_table_bc(jsonData)\r\n    {\r\n        let seat:TexasSeatInfo = jsonData.seat\r\n    }\r\n    // 接收到坐下的信息\r\n    receive_texas_sitdown_bc(jsonData)\r\n    {\r\n        GTexasTableDM.onSitdown(jsonData.table_id,jsonData.seat)\r\n        this.pageTable?.onSit(jsonData.table_id,jsonData.seat)\r\n    }\r\n    receive_texas_start_game_bc(jsonData)\r\n    {\r\n        let ti = jsonData.table_info as TexasTableInfo\r\n        GTexasTableDM.init(ti)\r\n        let mins = GMatchSer.getMatchInsById(ti.match_insid)\r\n        if(mins)\r\n        {\r\n            mins.state=EMatchState.Playing\r\n        }\r\n        this.pageTable?.onGameStart(ti.id)\r\n    }\r\n    receive_texas_refresh_table_rank(jsonData)\r\n    {\r\n        if(Global.tableData.tableId == jsonData.table_id && jsonData.tableRankInfo)\r\n        {\r\n            for(var i=0;i<jsonData.tableRankInfo.length;i++)\r\n            {\r\n                let temp = jsonData.tableRankInfo[i];\r\n                if(temp.id==GUserMgr.self_user_id)\r\n                {\r\n                    this.pageTable?.refreshTableRank(temp.cur_rank);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    async receive_texas_beginbet_bc(jsonData)\r\n    {\r\n        let tableinfo = GTexasTableDM.getTableInfo(jsonData.table_id)\r\n        if(!tableinfo)\r\n        {\r\n            return\r\n        }\r\n\r\n        tableinfo.curmaxbet = jsonData.curmaxbet\r\n        tableinfo.dtbet = jsonData.dtbet\r\n        tableinfo.timeout = jsonData.timeout\r\n        tableinfo.turn_user_id = jsonData.turn_user_id\r\n        tableinfo.min_raise_bet = jsonData.min_raise_bet\r\n        this.pageTable?.onBeginBet(tableinfo.id)\r\n    }\r\n    send_texas_bet(table_id:number,bet:number)\r\n    {\r\n        let msg=\r\n        {\r\n            cmd:\"texas_bet\",\r\n            table_id:table_id,\r\n            bet:bet\r\n        }\r\n        this.send(msg)\r\n    }\r\n    receive_texas_bet_bc(jsonData)\r\n    {\r\n        GTexasTableDM.onbet(jsonData.table_id,jsonData.user_id,jsonData.bet,jsonData.curmaxbet,jsonData.dtbet,jsonData.action)\r\n        this.pageTable?.onBet(jsonData.table_id,jsonData.user_id,jsonData.bet)\r\n    }\r\n    receive_texas_dealcard(jsonData)\r\n    {\r\n        GTexasTableDM.onDealCard(jsonData.table_id,jsonData.cards,jsonData.cardtype)\r\n        this.pageTable?.onDealCard(jsonData.table_id)\r\n    }\r\n    receive_texas_dealcard_bc(jsonData)\r\n    {\r\n        GTexasTableDM.onDealCard(jsonData.table_id,jsonData.cards,jsonData.cardtype)\r\n        this.pageTable?.onDealCard(jsonData.table_id)\r\n    }\r\n    receive_texas_game_result_bc(jsonData)\r\n    {\r\n        GTexasTableDM.onResult(jsonData.record)\r\n        this.pageTable?.onGameResult(jsonData.record.table_id)\r\n\r\n      \r\n    }\r\n    receive_texas_upgradeblind_bc(jsonData)\r\n    {\r\n        let table_id=jsonData.table_id\r\n        if(this.pageTable?.tableInfo?.id!=table_id)\r\n        {\r\n            return\r\n        }\r\n        GMatchSer.onUpgradeBlind(table_id,jsonData.blind_index,jsonData.deadline)\r\n        this.pageTable?.onUpgradeBlind()\r\n        let blinditem:BlindItem=jsonData.blinditem\r\n        if(blinditem.big_blind+blinditem.small_blind+blinditem.ante>0)\r\n        {\r\n            GHelper.showTip(`下局升级至,半基础分:${blinditem.small_blind},基础分:${blinditem.big_blind},前置分:${blinditem.ante}`,5)\r\n        }\r\n        else\r\n        {\r\n            GHelper.showTip(`本局结束后将进入休息阶段`,5)\r\n        }\r\n        GMsgCenter.send(\"upgradeblind\")\r\n    }\r\n    receive_texas_idle_bc(jsonData)\r\n    {\r\n        let table_id:number = jsonData.table_id\r\n        let deadline:number = jsonData.deadline\r\n        GTexasTableDM.onIdle(table_id,deadline)\r\n        this.pageTable?.onIdle()\r\n    }\r\n    receive_texas_standup_bc(jsonData)\r\n    {\r\n        GTexasTableDM.onStandup(jsonData.table_id,jsonData.user_id)\r\n        this.pageTable?.onStandUp(jsonData.table_id,jsonData.user_id)\r\n    }\r\n    receive_texas_match_end(jsonData)\r\n    {\r\n        if(jsonData.ins_id==this._ins_id)\r\n        {\r\n            GHelper.showTip(\"比赛已经结束，谢谢参与！\",2,cc.v2(0,630))\r\n            this.close()\r\n        }\r\n    }\r\n    send_texas_auto(table_id:number,auto:boolean)\r\n    {\r\n        let msg=\r\n        {\r\n            cmd:\"texas_auto\",\r\n            table_id:table_id,\r\n            auto:auto\r\n        }\r\n        this.send(msg)\r\n    }\r\n    receive_texas_auto_bc(jsonData)\r\n    {\r\n        let table_id:number = jsonData.table_id\r\n        let user_id:number = jsonData.user_id \r\n        let auto:boolean = jsonData.auto \r\n        GTexasTableDM.onAuto(table_id,user_id,auto)\r\n        this.pageTable?.onAuto(table_id,user_id,auto)\r\n    }\r\n    receive_texas_matchresult_nt(jsonData)\r\n    {\r\n        let ti = GTexasTableDM.getTableInfo(jsonData.table_id)\r\n        if(ti)\r\n        {\r\n            ti.cur_player_num=jsonData.cur_player_num\r\n            ti.total_player_num=jsonData.total_player_num\r\n            let mins = GMatchSer.getMatchInsById(ti.match_insid)\r\n            if(mins)\r\n            {\r\n                mins.players[GUserMgr.self_user_id]=mins.players[GUserMgr.self_user_id]||<any>{}\r\n                mins.players[GUserMgr.self_user_id].rank=jsonData.rank\r\n                mins.players[GUserMgr.self_user_id].cur_rank=jsonData.rank\r\n            }\r\n        }\r\n        GMsgCenter.send(\"match_result\", jsonData)\r\n    }\r\n    /**\r\n     * \r\n     * @param table_id \r\n     * @param showcards 1左，2右，3全部，其他无 \r\n     */\r\n    send_texas_showcard(table_id:number,showcards:number)\r\n    {\r\n        let msg=\r\n        {\r\n            cmd:\"texas_showcard\",\r\n            table_id:table_id,\r\n            showcards:showcards\r\n        }\r\n        this.send(msg)\r\n    }\r\n    receive_texas_showcard_bc(jsonData)\r\n    {\r\n        let table_id=jsonData.table_id\r\n        let user_id=jsonData.user_id\r\n        let showcards=jsonData.showcards\r\n        GTexasTableDM.onShowCards(table_id,user_id,showcards)\r\n        this.pageTable?.onShowCards(table_id,user_id,showcards)\r\n    }\r\n    receive_texas_allallinshow_bc(jsonData)\r\n    {\r\n        let table_id=jsonData.table_id\r\n        let all=jsonData.all\r\n        let ti = GTexasTableDM.getTableInfo(table_id)\r\n        if(ti)\r\n        {\r\n            ti.pots=jsonData.pots\r\n        }\r\n        this.pageTable?.onAllAllInShow(table_id,all)\r\n    }\r\n    send_texas_identified(ins_id:string)\r\n    {\r\n        let msg=\r\n        {\r\n            cmd:\"texas_identified\",\r\n            nickname:GUserMgr.self_user.nickname,\r\n            idcard_no:\"@\"+GUserMgr.self_user.idcard_no,\r\n            ins_id:ins_id\r\n        }\r\n        this.send(msg)\r\n    }\r\n    receive_texas_identified(jsonData)\r\n    {\r\n        let player = GMatchSer.getSelfPlayer(jsonData.ins_id)\r\n        player.identified = true;\r\n        let tabl_id = this.pageTable?.tableInfo.id\r\n        let si = GTexasTableDM.getSeatByUserId(tabl_id,GUserMgr.self_user_id)\r\n        if(si)\r\n        {\r\n            let pi = si.playerinfo as MatchPlayer\r\n            pi.identified=true\r\n        }\r\n    }\r\n    send_texas_watch(ins_id:string,action:number){\r\n        let msg = \r\n        {\r\n            cmd:\"texas_watch\",\r\n            ins_id:ins_id,\r\n            action:action\r\n        }\r\n        this.send(msg)\r\n    }\r\n    // 拆桌通知\r\n    receive_texas_waitcombine_bc(jsonData){\r\n        let table_id=jsonData.table_id\r\n        let ti = GTexasTableDM.getTableInfo(table_id)\r\n        ti.state = ETableState.WaintingCombine\r\n\r\n        // 刷新桌子\r\n        this.pageTable?.clear()\r\n        GHelper.showTip('正在拆桌',2)\r\n    }\r\n    // 等待发牌\r\n    receive_texas_waiting_start_bc(jsonData){\r\n        let table_id=jsonData.table_id\r\n        let ti = GTexasTableDM.getTableInfo(table_id)\r\n        ti.state = ETableState.WaitingStart\r\n\r\n\r\n        this.pageTable?.clear()\r\n        GHelper.showTip('等待其他桌发牌',2)\r\n    }\r\n}\r\nGNetGameTexas = new NetGameTexas()","import {GLocalizationDataModel} from \"./LocalizationDataModel\"\r\nimport {GHelper} from \"../Logic/Helper\"\r\n\r\nexport enum ENetState\r\n{\r\n    None=-1,//游戏开始后还没有开始链接任何网络，否则只能是下面的其中之一\r\n    Connectting,\r\n    ReConnectting,\r\n    Ready,\r\n    Closed,\r\n}\r\nexport let GNetSer:NetService = null\r\nclass NetService\r\n{\r\n    protected _ping : number = 0            //默认ping值\r\n    protected _tip_dt : number = 10         //ping值提示间隔\r\n    protected _tip_last_time : number = 0   //上次提示时间\r\n    protected _tip_num : number = 0         //提示次数\r\n\r\n    protected _dt_server_time : number = 0  //和服务器得时间差\r\n    set dt_server_time(time)\r\n    {\r\n        this._dt_server_time = time\r\n    }\r\n    get dt_server_time()\r\n    {\r\n        return this._dt_server_time\r\n    }\r\n\r\n    protected _ping_cb:Function=null\r\n    protected _tip:string =\"\"\r\n\r\n    protected _curCfg = {host:\"\",port:-1,state:ENetState.None}\r\n    get curCfg()\r\n    {\r\n        return this._curCfg\r\n    }\r\n    set ping(value)\r\n    {\r\n        this._ping = value\r\n        if(this._ping_cb)\r\n        {\r\n            this._ping_cb(this.ping)\r\n        }\r\n        let time = Date.now()\r\n        if( this._ping>=500 && time-this._tip_last_time>=this._tip_dt && this._tip_num<5)//大于500延迟，间隔10秒，连续提示5次\r\n        {\r\n            this._tip_last_time = time\r\n            this._tip_num = this._tip_num + 1\r\n            GHelper.showTip(\"Net_Tips\",3)\r\n        }\r\n        else if(this._ping>=500 && this._tip_num>=5 && time-this._tip_last_time>2*60*60)//两个小时以后重置提醒\r\n        {\r\n            this._tip_dt = 10\r\n            this._tip_last_time = 0\r\n            this._tip_num = 0\r\n            this.ping = this._ping\r\n        }\r\n    }\r\n    set pingCallBack(cb)\r\n    {\r\n        this._ping_cb = cb\r\n    }\r\n    showPing()//显示ping值\r\n    {\r\n\r\n    }\r\n    tip(tip)\r\n    {\r\n        this._tip = tip || \"\"\r\n    }\r\n    //获取网络状态的提示字符串\r\n    get stateTip()\r\n    {\r\n        //当前没有网络状态,仅仅当玩家进入游戏还没有开始连接任何网络的情况下才能出现这种情况\r\n        if(this._curCfg.host==\"\" || this._curCfg.state==ENetState.None)\r\n        {\r\n            return\r\n        }\r\n        let str = \"\"\r\n        if(this._curCfg.state==ENetState.Connectting)\r\n        {\r\n            str += GLocalizationDataModel.getStringByKey(\"ConServerIs\")\r\n        }\r\n        else if(this._curCfg.state==ENetState.Ready)\r\n        {\r\n            str += GLocalizationDataModel.getStringByKey(\"NetIsInReadySerIs\")\r\n        }\r\n        else if(this._curCfg.state==ENetState.Closed)\r\n        {\r\n            str += GLocalizationDataModel.getStringByKey(\"NetHasClosedSerIs\")\r\n        }\r\n        str += this._curCfg.host+\" \"+this._curCfg.port\r\n        return str\r\n    }\r\n}\r\n\r\nGNetSer = new NetService()","class NetworkManager {\r\n    constructor() {\r\n        if (cc.sys.platform == cc.sys.EDITOR_PAGE) {\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\nexport const networkMgr: NetworkManager = new NetworkManager();","import { GHallHttp } from \"../Net/HallHttp\"\r\n\r\nexport class NewsModel\r\n{\r\n    id=0\r\n    title=\"\"\r\n    icon=\"\"\r\n    url=\"\"\r\n    subtitle=\"\"\r\n    info=\"\"\r\n    create_time=0\r\n    type=\"\"//赛事公告\r\n}\r\nclass NewsService\r\n{\r\n    protected _news:NewsModel[]=[]\r\n    get news()\r\n    {\r\n        return this._news\r\n    }\r\n    async init()\r\n    {\r\n        let res = await GHallHttp.request(\"allnews\")\r\n        this._news=res.news||[]\r\n        return this._news\r\n    }\r\n}\r\nexport let GNewsSer=new NewsService()","import { GHelper } from \"../../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../../Framework/View/Page/Page\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NodeLive extends Page {\r\n\r\n    @property(cc.ToggleContainer)\r\n    toggles: cc.ToggleContainer = null;\r\n\r\n    @property(cc.EditBox)\r\n    editSearch: cc.EditBox = null;\r\n\r\n\r\n    start() {\r\n        this.toggles.toggleItems[0].check()\r\n        this.onToggleAll()\r\n    }\r\n\r\n    initTable() {\r\n        for (let item of this.toggles.toggleItems) {\r\n            item.node.getChildByName(\"bg\").active = !item.isChecked;\r\n        }\r\n    }\r\n\r\n    onToggleAll() {\r\n        this.initTable()\r\n    }\r\n\r\n    onToggleLive() {\r\n        this.initTable()\r\n    }\r\n\r\n    onToggleVideo() {\r\n        this.initTable()\r\n    }\r\n\r\n    onClickSearch() {\r\n        let search = this.editSearch.string;\r\n        if (!search) {\r\n            GHelper.showTip(\"请输入搜索关键字\");\r\n            return;\r\n        }\r\n\r\n        GHelper.showTip(\"未搜索到相关内容\");\r\n    }\r\n}\r\n","import { GTexasTableDM } from \"../../../DataModel/TexasTableDataModel\";\r\nimport { Page } from \"../../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../../Framework/View/Page/PageManager\";\r\nimport { GItemCfg } from \"../../../Service/ItemService\";\r\nimport { GMatchSer, MultiDynamicReward } from \"../../../Service/MatchService\";\r\nimport { GMsgCenter } from \"../../../utils/MessageCenter\";\r\nimport { utils } from \"../../../utils/Utils\";\r\nimport Page_Game from \"../../Page/Page_Game\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NodeMatchInfo extends Page {\r\n\r\n    @property(cc.Label)\r\n    labelStartTime: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelCost: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelPlayerMin: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelReward: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelChips: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelSignup: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelReentry: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelDesc: cc.Label = null;\r\n    onLoad()\r\n    {\r\n        GMsgCenter.register(\"getplayers\",this.init.bind(this),this)\r\n    }\r\n    protected onDestroy() {\r\n        GMsgCenter.unregister(\"getplayers\",this)\r\n    }\r\n    protected onEnable()\r\n    {\r\n        this.init()\r\n    }\r\n\r\n    \r\n    init(){\r\n        let page = GPageMgr.getPage(\"Page_Game\") as Page_Game\r\n        if(!page)\r\n        {\r\n            return\r\n        }\r\n        let table_id = page.tableId\r\n        let tableinfo = GTexasTableDM.getTableInfo(table_id)\r\n        let matchInsM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        let matchM = matchInsM.match\r\n        if (!matchM) {\r\n            return\r\n        }\r\n\r\n        this.labelStartTime.string = utils.formatDate(new Date(matchInsM.start_time));\r\n        let func=(info)=>\r\n        {\r\n            if(info.id==-99)\r\n            {\r\n                return info.count+\"游戏点\"\r\n            }\r\n            let item = GItemCfg.getItemById(info.id)\r\n            if(!item)\r\n            {\r\n                return \"\"\r\n            }\r\n            return item.name+\"x\"+info.count\r\n        }\r\n        let str=\"\"\r\n        for(let i=0;i<matchM.signup_cost.length;++i)\r\n        {\r\n            str+=func(matchM.signup_cost[i])\r\n            if(i<matchM.signup_cost.length-1)\r\n            {\r\n                str+=\"/\"\r\n            }\r\n        }\r\n        this.labelCost.string = str\r\n        this.labelPlayerMin.string = matchM.min_user + \"人起开始比赛\"\r\n        let mtLen = page.getComponent('Page_Game').getRewardsLen();\r\n        this.labelReward.string = (mtLen?mtLen:matchM.reward.length) + \"人\"\r\n        this.labelChips.string = utils.formatNumber(matchM.coin, 0)\r\n        this.labelSignup.string = matchInsM.player_num + '人'\r\n        this.labelReentry.string = `前${matchM.reenter_blind_index||0}个盲注级别内可再报名${matchM.reenter_count}次`\r\n        this.labelDesc.string = matchM.des\r\n    }\r\n}\r\n","import { GTexasTableDM } from \"../../../DataModel/TexasTableDataModel\";\r\nimport tableView from \"../../../Framework/TableView/tableView\";\r\nimport { GPageMgr } from \"../../../Framework/View/Page/PageManager\";\r\nimport { GMatchSer } from \"../../../Service/MatchService\";\r\nimport { GMsgCenter } from \"../../../utils/MessageCenter\";\r\nimport { utils } from \"../../../utils/Utils\";\r\nimport Page_Game from \"../../Page/Page_Game\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NodeMatchLevel extends cc.Component {\r\n\r\n    @property(cc.ScrollView)\r\n    scrollview: cc.ScrollView = null;\r\n\r\n    @property(cc.Node)\r\n    layout: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    item: cc.Node = null;\r\n\r\n    @property(tableView)\r\n    tableView: tableView = null;\r\n\r\n    onLoad()\r\n    {\r\n        GMsgCenter.register(\"upgradeblind\",this.init.bind(this),this)\r\n    }\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"upgradeblind\",this)\r\n    }\r\n    protected onEnable(): void {\r\n        this.init()\r\n    }\r\n\r\n    public matchInsM = null\r\n    public cur_index = null\r\n    init() {\r\n        // this.layout.removeAllChildren();\r\n        this.tableView.clear()\r\n        let page = GPageMgr.getPage(\"Page_Game\") as Page_Game\r\n        if(!page)\r\n        {\r\n            return\r\n        }\r\n        let table_id = page.tableId\r\n        let tableinfo = GTexasTableDM.getTableInfo(table_id)\r\n        let matchInsM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        this.matchInsM = matchInsM\r\n\r\n        let bm = GMatchSer.getBlindModel(matchInsM.match.blind_id)\r\n        let cur_index = matchInsM.blind_index\r\n        this.cur_index = cur_index\r\n        this.layout.height = bm.items.length*60\r\n        // for(let i=0;i<bm.items.length;++i)\r\n        // {\r\n        //     let node = cc.instantiate(this.item)\r\n        //     node.setPosition(0, -30 - i*60)\r\n        //     this.layout.addChild(node)\r\n        //     let bi = bm.items[i]\r\n           \r\n        // }\r\n        // this.scrollview.scrollToOffset(new cc.Vec2(0, 60*cur_index))\r\n        this.tableView.delegate = this\r\n        this.tableView.init(bm.items)\r\n        setTimeout(()=>{\r\n            this.tableView.scrollToOffset(new cc.Vec2(0, 60*cur_index))\r\n        },100)\r\n    }\r\n}\r\n","import { GTexasTableDM } from \"../../../DataModel/TexasTableDataModel\";\r\nimport { GPageMgr } from \"../../../Framework/View/Page/PageManager\";\r\nimport { GItemCfg } from \"../../../Service/ItemService\";\r\nimport { GMatchSer, MultiDynamicReward } from \"../../../Service/MatchService\";\r\nimport Page_Game from \"../../Page/Page_Game\";\r\nimport { GTexasRewardTool } from \"../TexasRewardTool\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NodeMatchReward extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    layout: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    item: cc.Node = null\r\n\r\n    @property(cc.Label)\r\n    labelTotal: cc.Label = null\r\n\r\n    onLoad() {\r\n        this.init()\r\n    }\r\n    protected onEnable(): void {\r\n        this.init()\r\n    }\r\n    init() {\r\n        let page = GPageMgr.getPage(\"Page_Game\") as Page_Game\r\n        if(!page)\r\n        {\r\n            return\r\n        }\r\n        let table_id = page.tableId\r\n        let tableinfo = GTexasTableDM.getTableInfo(table_id)\r\n        let matchInsM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        let matchM = matchInsM.match\r\n        if (!matchM) {\r\n            return\r\n        }\r\n        \r\n        let score = 0\r\n        this.layout.removeAllChildren()\r\n       \r\n       \r\n        let mrs:MultiDynamicReward[]=GMatchSer.mutireward\r\n        if(matchInsM.match.dynamic_reward == 4){\r\n            mrs = GMatchSer.mutireward2\r\n        }\r\n        let rewards = GTexasRewardTool.getRewardAll(matchInsM,mrs)\r\n\r\n\r\n        for (let i = 0; i < rewards.length; i++) {\r\n            let node = cc.instantiate(this.item)\r\n            this.layout.addChild(node)\r\n\r\n            let item = rewards[i]\r\n            node.getChildByName(\"label_rank\").getComponent(cc.Label).string = String(i + 1);\r\n            \r\n\r\n            if (item.id == -99) {\r\n                score += item.count\r\n                node.getChildByName(\"label_reward\").getComponent(cc.Label).string = '欢乐点' + \"X\" + item.count\r\n            }\r\n            else\r\n            {\r\n                let itemcfg = GItemCfg.getItemById(item.id)\r\n                node.getChildByName(\"label_reward\").getComponent(cc.Label).string = itemcfg.name + \"X\" + item.count\r\n            }\r\n        }\r\n        this.labelTotal.string = \"总欢乐点：\" + score\r\n    }\r\n}\r\n","import { GTexasTableDM } from \"../../../DataModel/TexasTableDataModel\";\r\nimport tableView from \"../../../Framework/TableView/tableView\";\r\nimport { Page } from \"../../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../../Logic/UserManager\";\r\nimport { GHallHttp } from \"../../../Net/HallHttp\";\r\nimport { GMatchSer, MatchPlayer } from \"../../../Service/MatchService\";\r\n// import ListView from \"../../../utils/ListView\";\r\nimport { GMsgCenter } from \"../../../utils/MessageCenter\";\r\nimport { utils } from \"../../../utils/Utils\";\r\nimport Page_Game from \"../../Page/Page_Game\";\r\nimport Page_MatchInfo from \"../../Page/Page_MatchInfo\";\r\nimport Widget_ScoreItem from \"../../Widget/Widget_ScoreItem\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NodeMatchScore extends Page {\r\n\r\n    // @property(cc.ScrollView)\r\n    // scrollview: cc.ScrollView = null;\r\n\r\n    @property(cc.Node)\r\n    layout: cc.Node = null;\r\n\r\n    // @property(cc.Node)\r\n    // item: cc.Node = null;\r\n\r\n    @property(tableView)\r\n    tableview :tableView = null;\r\n\r\n    onLoad()\r\n    {\r\n        GMsgCenter.register(\"getplayers\",this.init.bind(this),this)\r\n        GMsgCenter.register(\"upgradeblind\",this.init.bind(this),this)\r\n        GMsgCenter.register(\"refresh_score\", this.refresh.bind(this),this.node)\r\n    }\r\n\r\n\r\n\r\n    start() {\r\n        // this.refresh()\r\n    }\r\n    \r\n    onEnable(){\r\n        this.refresh()\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"getplayers\",this)\r\n        GMsgCenter.unregister(\"upgradeblind\",this)\r\n        GMsgCenter.unregister(\"refresh_score\", this.node)\r\n    }\r\n\r\n    private isGetNext = false\r\n    refresh(){\r\n        if(this.isGetNext){\r\n            return\r\n        }\r\n        this.isGetNext = true\r\n\r\n        this.tableview.clear()\r\n        let page = GPageMgr.getPage(\"Page_Game\") as Page_Game\r\n        if(!page)\r\n        {\r\n            this.isGetNext = false\r\n            return\r\n        }\r\n        let table_id = page.tableId\r\n        let tableinfo = GTexasTableDM.getTableInfo(table_id)\r\n        let matchInsM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        // if(matchInsM.rankplayers == null ||matchInsM.rankplayers.length<=0){\r\n        matchInsM.rankplayers = []\r\n        GHallHttp.request(\"GetMatchPlayers\",{ins_id:tableinfo.match_insid}).then((res)=>\r\n        {\r\n            let players:MatchPlayer[] = matchInsM.rankplayers = res.players||[]\r\n            matchInsM.player_num=res.player_num\r\n            if(tableinfo.total_player_num<matchInsM.player_num)\r\n            {\r\n                tableinfo.total_player_num=matchInsM.player_num\r\n            }\r\n            GMsgCenter.send(\"getplayers\")\r\n            if(cc.isValid(this))\r\n            {\r\n                this.init()\r\n            }\r\n        })\r\n        // }else{\r\n        //     this.init()\r\n        // }\r\n    }\r\n\r\n    init() {\r\n        this.isGetNext = false\r\n        //this.layout.removeAllChildren()\r\n        let page = GPageMgr.getPage(\"Page_Game\") as Page_Game\r\n        if(!page)\r\n        {\r\n            return\r\n        }\r\n        // 刷新详情\r\n        let matchInfoPage = GPageMgr.getPage(\"Page_MatchInfo\") as Page_MatchInfo;\r\n        if(matchInfoPage)\r\n        {\r\n            let gage_MatchInfo = matchInfoPage.getComponent(\"Page_MatchInfo\") as  Page_MatchInfo\r\n            gage_MatchInfo.matchInfo.getComponent(\"Widget_MatchInfo\").onRefresh();\r\n        }\r\n        \r\n        let table_id = page.tableId\r\n        let tableinfo = GTexasTableDM.getTableInfo(table_id)\r\n\r\n        let matchins = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        if(!matchins||!matchins.match)\r\n        {\r\n            return\r\n        }\r\n        \r\n        let players= matchins.rankplayers||[]\r\n        players.sort((p1,p2)=>\r\n        {\r\n            if(p1.point!=p2.point)\r\n            {\r\n                return p2.point-p1.point\r\n            }\r\n            return p1.cur_rank-p2.cur_rank\r\n        })\r\n        let big_blind=tableinfo.big_blind\r\n        if(big_blind<=0)\r\n        {\r\n            let index = tableinfo.blind_index-1\r\n            if (index<0)\r\n            index = 0\r\n            let bm = GMatchSer.getBlindModel(matchins.match.blind_id)\r\n            if(!bm||!bm.items[index])\r\n            {\r\n                return\r\n            }\r\n            big_blind=bm.items[index].big_blind\r\n            if(!big_blind)\r\n            {\r\n                return\r\n            }\r\n        }\r\n        if(big_blind<=0) // 未开赛 记分 显示 负数  修复 \r\n        {\r\n            big_blind = 1;\r\n        }\r\n        let dataList = []\r\n        for (const key in players) {\r\n            dataList.push({type: 0, jsonData: players[key], i: key, big_blind: big_blind})\r\n        }\r\n\r\n        \r\n\r\n        this.tableview.delegate =this\r\n        this.tableview.init(dataList)\r\n        this.tableview.node.on(\"scroll-to-bottom\", this.onSVEventScrollToBottom, this)\r\n\r\n        // this.scrollview.getComponent(ListView).init(this.bindcallfunc.bind(this), this.getItemType.bind(this))\r\n        // this.scrollview.getComponent(ListView).notifyDataSetChanged(dataList)\r\n        // this.scrollview.getComponent(ListView).bindScrollEventTarget(this)\r\n\r\n        // for(let i=0;i<players.length;++i)\r\n        // {\r\n        //     let p = players[i]\r\n        //     let node = cc.instantiate(this.item)\r\n        //     this.layout.addChild(node)\r\n        //     if(p.user_id==GUserMgr.self_user_id)\r\n        //     {\r\n        //         node.getChildByName('img_shadow').active=true\r\n        //     }\r\n        //     else\r\n        //     {\r\n        //         node.getChildByName('img_shadow').active=false\r\n        //     }\r\n        //     node.getChildByName('label_rank').getComponent(cc.Label).string = (i + 1)+\"\"\r\n        //     node.getChildByName('label_score').getComponent(cc.Label).string = utils.formatNumber(p.point)\r\n        //     node.getChildByName('label_blind').getComponent(cc.Label).string = (p.point/big_blind).toFixed(2) + 'BB'\r\n        //     node.getChildByName('label_nickname').getComponent(cc.Label).string = p.nickname\r\n        // }\r\n    }\r\n\r\n   \r\n    onSVEventScrollToBottom() {\r\n        console.log('onSVEventScrollToBottom')\r\n        if(this.isGetNext){\r\n            return\r\n        }\r\n        this.isGetNext = true\r\n        let page = GPageMgr.getPage(\"Page_Game\") as Page_Game\r\n        if(!page)\r\n        {\r\n            return\r\n        }\r\n        let table_id = page.tableId\r\n        let tableinfo = GTexasTableDM.getTableInfo(table_id)\r\n        let matchInsM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n\r\n        if( matchInsM.rankplayers == null || matchInsM.rankplayers.length == 0){\r\n            this.isGetNext = false\r\n            return \r\n        }\r\n\r\n        let hadSaved = matchInsM.rankplayers.length;\r\n\r\n        let big_blind=tableinfo.big_blind\r\n\r\n\r\n\r\n\r\n        // GHallHttp.request(\"GetMatchPlayers\",{ins_id:tableinfo.match_insid}).then((res)=>\r\n        // {\r\n        //     let players:MatchPlayer[] = matchInsM.rankplayers = res.players||[]\r\n        //     matchInsM.player_num=res.player_num\r\n        //     if(tableinfo.total_player_num<matchInsM.player_num)\r\n        //     {\r\n        //         tableinfo.total_player_num=matchInsM.player_num\r\n        //     }\r\n        //     cc.error(\"发22res=\",res)\r\n        //     GMsgCenter.send(\"getplayers\")\r\n        //     if(cc.isValid(this))\r\n        //     {\r\n        //         this.init()\r\n        //     }\r\n        // })\r\n\r\n\r\n        GHallHttp.request(\"GetMatchPlayers\",{ins_id:tableinfo.match_insid, skip: hadSaved}).then(async (res)=>\r\n        {\r\n            if(!res.players || res.players.length<=0)\r\n            {\r\n                this.isGetNext =false\r\n                return;\r\n            }else\r\n            {\r\n\r\n            }\r\n            matchInsM.rankplayers = matchInsM.rankplayers.concat(res.players || []);\r\n            matchInsM.player_num=res.player_num\r\n            // GMsgCenter.send(\"getplayers\")\r\n            console.log('onSVEventScrollToBottom',matchInsM.rankplayers.length)\r\n\r\n            // this.tableview.init(matchInsM.rankplayers)\r\n\r\n           var lastOffset = this.tableview.getScrollOffset()\r\n\r\n           if(big_blind<=0) // 未开赛 记分 显示 负数  修复 \r\n           {\r\n               big_blind = 1;\r\n           }\r\n\r\n            let dataList = []\r\n            for (const key in matchInsM.rankplayers) {\r\n                dataList.push({type: 0, jsonData: matchInsM.rankplayers[key], i: key, big_blind: big_blind})\r\n            }\r\n            await this.tableview.init(dataList)\r\n            this.tableview.scrollToOffset(lastOffset) \r\n            this.isGetNext =false\r\n        })\r\n    }\r\n\r\n    public getItemType(data) {\r\n        return 0\r\n    }\r\n\r\n    public bindcallfunc(node: cc.Node, info, i) {\r\n        node.getComponent(Widget_ScoreItem).setdata(info)\r\n    }\r\n}\r\n","/**\r\n * CocosCreator's global Event/Message Center.\r\n */\r\nexport let GNotificationCenter:NotificationCenter=null\r\nclass NotificationCenter {\r\n    private eventTarget: cc.EventTarget = new cc.EventTarget();\r\n\r\n    /**\r\n     * Listen to a notification\r\n     * @param name \r\n     * @param callback \r\n     */\r\n    public on(name: string, callback: Function, target?: any) {\r\n        this.eventTarget.on(name, callback, target);\r\n    }\r\n\r\n    /**\r\n     * Dispatch a notification\r\n     * @param name \r\n     */\r\n    public emit(name: string, arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) {\r\n        this.eventTarget.emit(name, arg1, arg2, arg3, arg4, arg5);\r\n    }\r\n\r\n    /**\r\n     * Cancel listen\r\n     * @param name \r\n     */\r\n    public off(name: string, callback?: Function, target?: any) {\r\n        this.eventTarget.off(name, callback, target);\r\n    }\r\n}\r\nGNotificationCenter=new NotificationCenter()\r\n\r\n","import { BaseAd } from \"./BaseAd\";\r\n\r\nclass OppoAd extends BaseAd{\r\n    private bannerAd = null;\r\n    private videoAd = null;\r\n    private videoSuccess: Function = null;\r\n    private videoFail: Function = null;\r\n    private nativeAd = null;\r\n    private nativeSuccess: Function = null;\r\n    private nativeFail: Function = null;\r\n\r\n    constructor() {\r\n        super(\"oppo\");\r\n    }\r\n\r\n    login(success?: Function, fail?: Function) {\r\n        qg.login({\r\n            success: (res) => {\r\n                let code = res.data.token;\r\n                qg.getUserInfo({\r\n                    success: (res) => {\r\n                        if (res.data) {\r\n                            success && success({\r\n                                nickname: res.data.nickName,\r\n                                avatar: res.data.smallAvatar,\r\n                                gender: res.data.gender,\r\n                                platform: this.platform,\r\n                                code: code\r\n                            })\r\n                        } else {\r\n                            fail && fail();\r\n                        }\r\n                    },\r\n                    fail: (err) => {\r\n                        console.log(\"获取用户信息失败\" + JSON.stringify(err));\r\n                        fail && fail();\r\n                    }\r\n                })\r\n            },\r\n            fail: (err) => {\r\n                console.log(\"登录失败\" + JSON.stringify(err));\r\n                fail && fail();\r\n            }\r\n        })\r\n    }\r\n\r\n    share() {\r\n        qg.share();\r\n    }\r\n\r\n    createBannerAd() {\r\n        if (!this.banner_id) {\r\n            return;\r\n        }\r\n\r\n        if (!this.bannerAd) {\r\n            let sysInfo = qg.getSystemInfoSync();\r\n\r\n            this.bannerAd = qg.createBannerAd({\r\n                adUnitId: this.banner_id,\r\n                style: {\r\n                    width: Math.min((sysInfo.pixelRatio * 300), sysInfo.screenWidth),\r\n                }\r\n            });\r\n\r\n            if (!this.bannerAd) {\r\n                return;\r\n            }\r\n\r\n            this.bannerAd.onResize((size) => {\r\n                if (this.bannerAd && this.bannerAd.style) {\r\n                    this.bannerAd.style.top = sysInfo.screenHeight - size.height;\r\n                    this.bannerAd.style.left = sysInfo.screenWidth / 2 - size.width / 2;\r\n                }\r\n            })\r\n\r\n            this.bannerAd.onLoad(() => {\r\n                console.log(\"Banner广告加载成功\");\r\n            });\r\n            this.bannerAd.onError(() => {\r\n                console.log(\"Banner广告加载失败\");\r\n            });\r\n\r\n            this.bannerAd.show()\r\n            .then(() => {\r\n                console.log(\"Banner广告展示完成\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Banner广告加载失败 \", JSON.stringify(err));\r\n            })\r\n        }\r\n    }\r\n\r\n    destroyBannerAd() {\r\n        if (this.bannerAd) {\r\n            this.bannerAd.hide();\r\n            this.bannerAd.destroy();\r\n            this.bannerAd = null;\r\n        }\r\n    }\r\n\r\n    createVideoAd(success?: Function, fail?: Function) {\r\n        if (!this.video_id) {\r\n            success && success();\r\n            return;\r\n        }\r\n\r\n        if (!this.videoAd) {\r\n            this.videoAd = qg.createRewardedVideoAd({\r\n                adUnitId: this.video_id\r\n            });\r\n\r\n            this.videoAd.onLoad(() => {\r\n                console.log(\"激励视频广告加载成功\");\r\n            });\r\n\r\n            this.videoAd.onError(() => {\r\n                console.log(\"激励视频广告加载失败\");\r\n                this.videoFail && this.videoFail();\r\n            })\r\n\r\n            this.videoAd.onClose((res) => {\r\n                if (res && res.isEnded) {\r\n                    console.log(\"激励视频正常播放结束\");\r\n                    this.videoSuccess && this.videoSuccess();\r\n                } else {\r\n                    console.log(\"激励视频播放中途推出\");\r\n                    this.videoFail && this.videoFail();\r\n                }\r\n            })\r\n        }\r\n\r\n        this.videoSuccess = success;\r\n        this.videoFail = fail;\r\n        \r\n        this.videoAd.show()\r\n        .catch(() => {\r\n            this.videoAd.load()\r\n            .then(() => {\r\n                this.videoAd.show();\r\n            })\r\n        })\r\n    }\r\n\r\n    createInterstitialAd(callback?: Function) {\r\n        if (!this.interstitial_id) {\r\n            callback && callback();\r\n            return;\r\n        }\r\n\r\n        let interstitialAd = qg.createInterstitialAd({\r\n            adUnitId: this.interstitial_id\r\n        });\r\n        interstitialAd.show();\r\n        interstitialAd.onLoad(() => {\r\n            console.log('插屏广告加载成功');\r\n        });\r\n        interstitialAd.onError(() => {\r\n            console.log('插屏广告加载失败');\r\n        });\r\n        interstitialAd.onClose(() => {\r\n            console.log('插屏广告关闭');\r\n            callback && callback();\r\n        })\r\n    }\r\n\r\n    createNativeAd(success?: Function, fail?: Function) {\r\n        if (!this.native_id) {\r\n            success && success();\r\n            return;\r\n        }\r\n        \r\n        if (!this.nativeAd) {\r\n            this.nativeAd = qg.createNativeAd({\r\n                adUnitId: this.native_id\r\n            });\r\n\r\n            this.nativeAd.onLoad((res) => {\r\n                console.log(\"原生广告加载成功\");\r\n                if (res && res.adList && res.adList.length) {\r\n                    let ad = res.adList[Math.floor(Math.random() * res.adList.length)];\r\n                    this.nativeSuccess && this.nativeSuccess({\r\n                        id: ad.adId,\r\n                        title: ad.title,\r\n                        desc: ad.desc,\r\n                        icon: ad.icon,\r\n                        image: ad.imgUrlList[Math.floor(Math.random() * ad.imgUrlList.length)],\r\n                        logo: ad.logoUrl,\r\n                        tips: ad.clickBtnTxt,\r\n                        mode: 0\r\n                    })\r\n                } else {\r\n                    this.nativeFail && this.nativeFail();\r\n                }\r\n            })\r\n\r\n            this.nativeAd.onError(() => {\r\n                console.log(\"原生广告加载失败\");\r\n                this.nativeFail && this.nativeFail();\r\n            })\r\n        }\r\n\r\n        this.nativeSuccess = success;\r\n        this.nativeFail = fail;\r\n\r\n        this.nativeAd.load();\r\n    }\r\n\r\n    reportAdShow(id: string) {\r\n        if (this.nativeAd) {\r\n            this.nativeAd.reportAdShow({\r\n                adId: id\r\n            })\r\n        }\r\n    }\r\n\r\n    reportAdClick(id: string) {\r\n        if (this.nativeAd) {\r\n            this.nativeAd.reportAdClick({\r\n                adId: id\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const oppoAd: OppoAd = new OppoAd();","import { SimpleWebServer } from '../Framework/Net/SimpleWebServer';\r\n\r\nexport let GOrderHttp:OrderHttp=null\r\nexport class OrderHttp extends SimpleWebServer\r\n{\r\n}\r\nGOrderHttp=new OrderHttp()","import { EOrderFrom } from \"../Framework/Logic/ShopTool\"\r\nimport { GOrderHttp } from \"../Net/OrderHttp\"\r\n\r\nexport class CoinItem\r\n{\r\n    id=\"\"\r\n    title=\"\"\r\n    icon=\"\"\r\n    crystal=0\r\n    coin=0\r\n    popular=false\r\n    best=false\r\n}\r\nexport enum ERechargeType\r\n{\r\n    /**\r\n     * 今日首充\r\n     */\r\n    TodayFst=1,\r\n    /**\r\n     * 本周首充\r\n     */\r\n    WeekFst,\r\n    /**\r\n     * 月首充\r\n     */\r\n    MonthFst,\r\n    /**\r\n     * 月卡\r\n     */\r\n    MonthCard,\r\n    /**\r\n     * 终身卡\r\n     */\r\n    ForeverCard,\r\n    /**\r\n     * 普通充值\r\n     */\r\n    Common\r\n}\r\nexport class ProductItem\r\n{\r\n    id:string\r\n    key:string\r\n    title:string\r\n    icon:string\r\n    money:number\r\n    coin:number\r\n    crystal:number\r\n    give_coin:number\r\n    give_crystal:number\r\n    vip_exp:number\r\n}\r\nexport enum EOrderState\r\n{\r\n    Init=0,//初始化\r\n    Cancel,//用户取消\r\n    Verifying,//验证中\r\n    Failed,//验证失败\r\n    Ok//验证成功，订单完成\r\n}\r\nexport class OrderModel\r\n{\r\n    user_id:number=-1\r\n    product_id:string=\"\"//商品id(texas@product@0)\r\n    money:number=-1\r\n    from:EOrderFrom=-1//充值来源\r\n    create_time:number=-1\r\n    state:EOrderState=EOrderState.Init\r\n}\r\nexport let GOrderSer:OrderService=null\r\nclass OrderService\r\n{\r\n    protected _config:{products:Array<ProductItem>,coins:Array<CoinItem>}=null\r\n    get products()\r\n    {\r\n        return this._config.products\r\n    }\r\n    get coins():Array<CoinItem>\r\n    {\r\n        return this._config.coins\r\n    }\r\n    async init()\r\n    {\r\n        let jsonData = await GOrderHttp.request(\"getconfig\")\r\n        this._config=jsonData.config\r\n        this._config.products.sort((a,b)=>\r\n        {\r\n            return a.money-b.money\r\n        })\r\n    }\r\n    async getNewOrder()\r\n    {\r\n        let jsonData = await GOrderHttp.request(\"getneworder\",{from:EOrderFrom.Alipay})\r\n        return jsonData.order\r\n    }\r\n    async getOrderInfo(product_id)\r\n    {\r\n        let jsonData = await GOrderHttp.request(\"getOrderInfo\",{from:EOrderFrom.Alipay, product_id:product_id})\r\n        return jsonData.order_info\r\n    }\r\n    getProduct(product_id):ProductItem\r\n    {\r\n        if(!this._config.products)\r\n        {\r\n            return null\r\n        }\r\n        return this._config.products[product_id]\r\n    }\r\n    getCoin(coin_id):CoinItem\r\n    {\r\n        if(!this._config.coins)\r\n        {\r\n            return null\r\n        }\r\n        return this._config.coins[coin_id]\r\n    }\r\n}\r\nGOrderSer = new OrderService()","import {core} from \"../../Core/Base\"\r\nimport { GHelper } from \"../../Logic/Helper\";\r\n\r\nconst {ccclass, property} = cc._decorator\r\n\r\nexport let GPageMgr:PageManager=null\r\n\r\n@ccclass\r\nexport class PageManager extends cc.Component\r\n{\r\n    protected _key_path={}\r\n    protected _pages:{[page_name:string]:cc.Component}={}\r\n\r\n    private maxZindex = 1000\r\n\r\n\r\n    // use this for initialization\r\n    onLoad() \r\n    {\r\n        GPageMgr = this\r\n        this.registerKeyPath(\"Page\",\"Platform/Viea/Page/Layout/\")\r\n    }\r\n    cachePage(pageName)\r\n    {\r\n        let prefix = pageName.substring(0,pageName.indexOf(\"_\"))\r\n        cc.loader.loadRes(this._key_path[prefix]+pageName, (err, prefab) =>{})\r\n    }\r\n    registerKeyPath(key,path)\r\n    {\r\n        this._key_path[key] = path\r\n    }\r\n    getPage(pageName)\r\n    {\r\n        return this._pages[pageName]\r\n    }\r\n    isPageOpened(pageName)\r\n    {\r\n        let page = this.getPage(pageName)\r\n        if(page)\r\n        {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    protected _reopening=false\r\n    reOpenPage(pg,param?)\r\n    {\r\n        if(this._reopening)\r\n        {\r\n            return\r\n        }\r\n        this._reopening=true\r\n        let pageName=pg\r\n        if(!core.isString(pg))\r\n        {\r\n            pageName=pg.name\r\n        }\r\n        let page = this._pages[pageName]\r\n        delete this._pages[pageName]\r\n        this.openPage(pg,param).then((newone)=>\r\n        {\r\n            if(newone&&page)\r\n            {\r\n                page.node.removeFromParent()\r\n            }\r\n            this._reopening=false\r\n        })\r\n    }\r\n    openPageHide(pg,param?):Promise<cc.Component|null>\r\n    {\r\n        return new Promise((resolve,reject)=>\r\n        {\r\n            let pageName=pg\r\n            if(!core.isString(pg))\r\n            {\r\n                pageName=pg.name\r\n            }\r\n            let page = this.getPage(pageName) \r\n            if(page)\r\n            {\r\n                if(page.node.active)\r\n                {\r\n                    page.node.active = false\r\n                }\r\n                resolve(page)\r\n                return\r\n            }\r\n            let prefix = pageName.substring(0,pageName.indexOf(\"_Page\"))\r\n            if(!prefix)\r\n            {\r\n                prefix = \"Page\"\r\n            }\r\n            if(!this._key_path[prefix])\r\n            {\r\n                this._key_path[prefix] = this._key_path[\"default\"]+prefix+\"/View/Page/Layout/\"\r\n            }\r\n            let page_path = this._key_path[prefix]+pageName\r\n            cc.loader.loadRes(page_path, (err, prefab) =>\r\n            {\r\n                if(!err)\r\n                {\r\n                    if(this._pages[pageName])\r\n                    {\r\n                        return\r\n                    }\r\n                    let page_node:cc.Node = cc.instantiate(prefab)\r\n                    page_node.parent=this.node\r\n                    let dty_ipad = (1-GPageMgr.node.scale)*1334/2\r\n                    if(pageName!=\"Page_Game\")\r\n                    {\r\n                        page_node.y-=dty_ipad\r\n                    }\r\n                    this._pages[pageName] = page_node.getComponent(pageName)\r\n                    if (typeof(this._pages[pageName][\"onOpen\"]) != \"undefined\")\r\n                    {\r\n                        this._pages[pageName][\"onOpen\"](param)\r\n                    }\r\n                    let rs = GHelper.getAnimationClip(page_node,\"open\")\r\n                    if(rs.clip)\r\n                    {\r\n                        rs.ani.play(\"open\")\r\n                    }\r\n                    cc.log(\"open page success + \"+pageName)\r\n                    resolve(this._pages[pageName])\r\n                }\r\n                else\r\n                {\r\n                    cc.error(err)\r\n                    resolve(null)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    openPage(pg,param?):Promise<cc.Component|null>\r\n    {\r\n        return new Promise((resolve,reject)=>\r\n        {\r\n            let pageName=pg\r\n            if(!core.isString(pg))\r\n            {\r\n                pageName=pg.name\r\n            }\r\n            let page = this.getPage(pageName) \r\n            if(page)\r\n            {\r\n                if(!page.node.active)\r\n                {\r\n                    page.node.active = true\r\n                }\r\n                resolve(page)\r\n                return\r\n            }\r\n            let prefix = pageName.substring(0,pageName.indexOf(\"_Page\"))\r\n            if(!prefix)\r\n            {\r\n                prefix = \"Page\"\r\n            }\r\n            if(!this._key_path[prefix])\r\n            {\r\n                this._key_path[prefix] = this._key_path[\"default\"]+prefix+\"/View/Page/Layout/\"\r\n            }\r\n            let page_path = this._key_path[prefix]+pageName\r\n            cc.loader.loadRes(page_path, (err, prefab) =>\r\n            {\r\n                if(!err)\r\n                {\r\n                    if(this._pages[pageName])\r\n                    {\r\n                        return\r\n                    }\r\n                    let page_node:cc.Node = cc.instantiate(prefab)\r\n                    page_node.parent=this.node\r\n\r\n                \r\n                    let dty_ipad = (1-GPageMgr.node.scale)*1334/2\r\n                    if(pageName!=\"Page_Game\")\r\n                    {\r\n                        page_node.y-=dty_ipad\r\n                    }\r\n                    this._pages[pageName] = page_node.getComponent(pageName)\r\n                    if (typeof(this._pages[pageName][\"onOpen\"]) != \"undefined\")\r\n                    {\r\n                        this._pages[pageName][\"onOpen\"](param)\r\n                    }\r\n                    let rs = GHelper.getAnimationClip(page_node,\"open\")\r\n                    if(rs.clip)\r\n                    {\r\n                        rs.ani.play(\"open\")\r\n                    }\r\n                    cc.log(\"open page success + \"+pageName+page_node.zIndex)\r\n                    resolve(this._pages[pageName])\r\n                }\r\n                else\r\n                {\r\n                    cc.error(err)\r\n                    resolve(null)\r\n                }\r\n            })\r\n        })\r\n    }\r\n    hidePage(pg)\r\n    {\r\n        let pageName=pg\r\n        if(!core.isString(pg))\r\n        {\r\n            pageName=pg.name\r\n        }\r\n        let page = this.getPage(pageName) \r\n        if(page)\r\n        {\r\n            page.node.active = false\r\n        }\r\n    }\r\n    closePage(pageName)\r\n    {\r\n        let page = this._pages[pageName]\r\n        this._pages[pageName] = null\r\n        delete this._pages[pageName]\r\n        if(!page\r\n            ||!page.node)\r\n        {\r\n            return\r\n        }\r\n        if(page[\"onClose\"])\r\n        {\r\n            page[\"onClose\"]()\r\n        }\r\n        let rs = GHelper.getAnimationClip(page.node,\"close\")\r\n        if(rs.clip)\r\n        {\r\n            rs.ani.play(\"close\")\r\n            page[\"onCloseCompleted\"]=()=>\r\n            {\r\n                page.node.destroy()\r\n            }\r\n        }\r\n        else\r\n        {\r\n            page.node.destroy()\r\n        }\r\n    }\r\n    refreshPage(pageName,params?)\r\n    {\r\n        let page = this.getPage(pageName)\r\n        if(page&&page[\"refresh\"])\r\n        {\r\n            page[\"refresh\"](params)\r\n        }\r\n    }\r\n    closeAll()\r\n    {\r\n        core.foreach(this._pages,function(pageName,page)\r\n        {\r\n            if(!page)\r\n            {\r\n                return\r\n            }\r\n            page[\"onClose\"]&& page[\"onClose\"]()\r\n            page.node.destroy()\r\n        })\r\n        this._pages = {}\r\n    }\r\n}\r\n","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_About extends Page {\r\n\r\n    start() {\r\n    }\r\n\r\n    Btn_Close_OnClick() {\r\n        GPageMgr.closePage(\"Page_About\")\r\n    }\r\n}\r\n","import { EAccountFrom, GAppDM } from \"../../DataModel/AppDataModel\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GAccountHttp } from \"../../Net/AccountHttp\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { GNetGameTexas } from \"../../Net/NetGameTexas\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_AccountLogin extends Page {\r\n\r\n    @property(cc.EditBox)\r\n    editAccount: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editPassword: cc.EditBox = null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleAgree: cc.Toggle = null;\r\n\r\n    start() {\r\n        this.toggleAgree.check();\r\n        GPageMgr.closePage(\"Page_ResetPassword\")\r\n    }\r\n\r\n    async onClickLogin() {\r\n        if (!this.toggleAgree.isChecked) {\r\n            GHelper.showTip(\"请勾选同意用户协议和隐私条款\");\r\n            return;\r\n        }\r\n\r\n        let account = this.editAccount.string\r\n        let password = this.editPassword.string\r\n        let ret = await GAppDM.onLogin(account,password,EAccountFrom.Phone)\r\n        if(ret)\r\n        {\r\n            GPageMgr.openPage(\"Page_Main\")\r\n        }\r\n    }\r\n\r\n    onClickRegister() {\r\n        GPageMgr.closePage(\"Page_AccountLogin\")\r\n        GPageMgr.openPage(\"Page_Register\")\r\n    }\r\n\r\n    onClickCode() {\r\n        GPageMgr.closePage(\"Page_AccountLogin\")\r\n        GPageMgr.openPage(\"Page_CodeLogin\")\r\n    }\r\n\r\n    onClickResetPassword() {\r\n        GPageMgr.closePage(\"Page_AccountLogin\")\r\n        GPageMgr.openPage(\"Page_ResetPassword\")\r\n    }\r\n\r\n    onEditAccount() {\r\n        this.editAccount.string = this.editAccount.string.trim();\r\n    }\r\n\r\n    onEditPassword() {\r\n        this.editPassword.string = this.editPassword.string.trim();\r\n    }\r\n}\r\n","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { ClubModel ,GClubSer} from \"../../Service/ClubService\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\"\r\nimport ListView from \"../../utils/ListView\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n\r\n\r\n@ccclass\r\nexport default class Page_AddClub extends Page {\r\n    @property(cc.Node)\r\n    nodeJoin: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeJoined: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    memberNumber: cc.Label = null;\r\n\r\n    private clubData:ClubModel = null\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    onLoad() {\r\n       \r\n    }\r\n\r\n    onOpen(data:ClubModel){\r\n        this.clubData = data\r\n        for(var k in GUserMgr.self_user.clubs){\r\n            console.log(k,this.clubData.id.toString())\r\n            if(k == this.clubData.id.toString()){\r\n                this.nodeJoined.active = true\r\n                this.nodeJoin.active = false\r\n                break\r\n            }\r\n        }\r\n        this.refreshIsJoined()\r\n\r\n        cc.find('Page_WebView',this.node).getComponent('Page').onOpen(data.url)\r\n    }\r\n\r\n    refreshIsJoined(){\r\n        this.nodeJoined.active = false\r\n        this.nodeJoin.active = true\r\n        for(var k in GUserMgr.self_user.clubs){\r\n            if(k == this.clubData.id.toString()){\r\n                this.nodeJoined.active = true\r\n                this.nodeJoin.active = false\r\n                break\r\n            }\r\n        }\r\n\r\n        this.memberNumber.string = this.clubData.user_count.toString()\r\n    }\r\n\r\n\r\n    async onJoninClubClick(){\r\n        if(!this.clubData){\r\n            return\r\n        }\r\n\r\n        let res = await GClubSer.joinClub(this.clubData.id)\r\n        if(res.errcode){\r\n            this.refreshIsJoined()\r\n        }else{\r\n           GUserMgr.self_user.clubs[this.clubData.id.toString()] = this.clubData.service\r\n           this.clubData.user_count+=1\r\n           this.refreshIsJoined()\r\n        }\r\n    }\r\n\r\n    async onQuitClub(){\r\n        if(!this.clubData){\r\n            return\r\n        }\r\n        let res = await GClubSer.quitClub(this.clubData.id)\r\n        if(res.errcode){\r\n            this.refreshIsJoined()\r\n        }else{\r\n            delete(GUserMgr.self_user.clubs[this.clubData.id.toString()])\r\n            // = this.clubData.service\r\n            this.clubData.user_count-=1\r\n            this.refreshIsJoined()\r\n        }\r\n    }\r\n    protected onDestroy(): void {\r\n    \r\n    }\r\n    onClose(){\r\n        this.delegate.nodeClub.getComponent(ListView).notifyDataRefresh()\r\n    }\r\n    doClose(){\r\n        GPageMgr.closePage(\"Page_AddClub\")\r\n    }\r\n}\r\n","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GMsgCenter, MessageCenter } from \"../../utils/MessageCenter\";\r\nimport Widget_AddressItem from \"../Widget/Widget_AddressItem\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Address extends Page {\r\n\r\n    @property(cc.Prefab)\r\n    pf_address: cc.Prefab = null;\r\n\r\n    @property(cc.ScrollView)\r\n    sv_content: cc.ScrollView = null;\r\n\r\n    protected _wgt_adress:Widget_AddressItem[]=[]\r\n\r\n\r\n\r\n    @property(cc.Button)\r\n    chooiseBt: cc.Button = null;\r\n\r\n\r\n    onOpen(isChooise)\r\n    {\r\n        this.chooiseBt.node.active = isChooise;\r\n    }\r\n    start() {\r\n        this.refresh()\r\n    }\r\n    refresh()\r\n    {\r\n        this.sv_content.content.removeAllChildren()\r\n        let addresses = GUserMgr.self_user.addresses||[]\r\n        for(let i=0;i<addresses.length;++i)\r\n        {\r\n            let ai = addresses[i]\r\n            let item = cc.instantiate(this.pf_address)\r\n            let wai = item.getComponent(Widget_AddressItem)\r\n            this.sv_content.content.addChild(item)\r\n            this._wgt_adress.push(wai)\r\n            wai.init(ai)\r\n        }\r\n    }\r\n    btn_chooise()\r\n    {\r\n        let addresses = GUserMgr.self_user.addresses||[]\r\n        for(let i=0;i<addresses.length;++i)\r\n        {\r\n            let ai = addresses[i]\r\n             if(ai.create_time==GUserMgr.self_user.address_time)\r\n             {\r\n                GMsgCenter.send(\"getOneAddress\",ai)\r\n                break;\r\n             }\r\n        }\r\n\r\n        GPageMgr.closePage(\"Page_Address\")\r\n    }\r\n\r\n    Btn_Return_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_Address\")\r\n    }\r\n    Btn_Add_OnClick(event)\r\n    {\r\n        GPageMgr.openPage(\"Page_EditAddress\")\r\n    }\r\n}\r\n","import { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Bind extends Page {\r\n    @property(cc.EditBox)\r\n    editbox: cc.EditBox = null;\r\n\r\n    @property(cc.Node)\r\n    btnConfirm: cc.Node = null;\r\n\r\n    protected _cb:Function=null\r\n    start() {\r\n        this.init()\r\n    }\r\n    onOpen(cb?:Function)\r\n    {\r\n        this._cb=cb\r\n    }\r\n    init() {\r\n         \r\n        let pre_user_id = GUserMgr.self_user.pre_user_id||-1\r\n        if(pre_user_id>0)\r\n        {\r\n            let user = GUserMgr.getUserByUserId(pre_user_id)\r\n\r\n            if(user)\r\n            {\r\n                this.editbox.string=user.nickname+`(${pre_user_id})`    \r\n            }\r\n            else\r\n            {\r\n                this.editbox.string=pre_user_id+\"\"\r\n                GHallHttp.request(\"getsimpleuser\",{user_id:pre_user_id}).then((res)=>\r\n                {\r\n                    if(res.user)\r\n                    {\r\n                        GUserMgr.addOneUser(res.user)\r\n                        this.editbox.string=res.user.nickname+`(${pre_user_id})`   \r\n                        // this.init()\r\n                    }\r\n                })\r\n            }\r\n            this.editbox.enabled=false\r\n            this.btnConfirm.active = false\r\n        }\r\n        else\r\n        {\r\n            this.editbox.string=\"\"\r\n            this.editbox.enabled=true\r\n            this.btnConfirm.active = true\r\n        }\r\n    }\r\n\r\n    async Btn_Update_OnClick(event) {\r\n        if (GUserMgr.self_user.pre_user_id>0) {\r\n            GHelper.showTip(\"已绑定邀请码，请不要重复绑定！\")\r\n            return\r\n        }\r\n        let str = this.editbox.string.trim()\r\n        // if(str.length!=7)\r\n        // {\r\n        //     GHelper.showTip(\"请输入7位的绑定码！\")\r\n        //     return\r\n        // }\r\n        let code = parseInt(str)\r\n\r\n        let res = await GHallHttp.request(\"updatebind\",{\r\n            code:code\r\n        })\r\n        if(res.errcode)\r\n        {\r\n            GHelper.showTip(res.errcode.des)\r\n            return\r\n        }\r\n        if(res.club_id)\r\n        {\r\n            GUserMgr.self_user.clubs[res.club_id]=Date.now()\r\n        }\r\n        GHelper.showTip(\"绑定成功\")\r\n        GUserMgr.addOneUser(res.user)\r\n        GUserMgr.addOneUser(res.pre_user)\r\n        this.init()\r\n        if(this._cb)\r\n        {\r\n            this._cb()\r\n        }\r\n    }\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_Bind\")\r\n    }\r\n}\r\n","import { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_ChangePassword extends Page {\r\n\r\n    @property(cc.EditBox)\r\n    editPasswordOld: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editPasswordNew: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editPasswordConfirm: cc.EditBox = null;\r\n\r\n    onReady() {\r\n        this.editPasswordNew.node.parent.getChildByName(\"tips\").active = false;\r\n        this.editPasswordConfirm.node.parent.getChildByName(\"tips\").active = false;\r\n    }\r\n\r\n    initTable() {\r\n    }\r\n\r\n    onEditPasswordOld() {\r\n        this.editPasswordOld.string = this.editPasswordOld.string.trim();\r\n    }\r\n\r\n    onEditPasswordNew() {\r\n        this.editPasswordNew.string = this.editPasswordNew.string.trim();\r\n        this.editPasswordNew.node.parent.getChildByName(\"tips\").active = this.editPasswordNew.string && this.editPasswordNew.string.length < 6 || this.editPasswordNew.string.length > 20;\r\n    }\r\n\r\n    onEditPasswordConfirm() {\r\n        this.editPasswordConfirm.string = this.editPasswordConfirm.string.trim();\r\n        this.editPasswordConfirm.node.parent.getChildByName(\"tips\").active = this.editPasswordConfirm.string && this.editPasswordNew.string != this.editPasswordConfirm.string;\r\n    }\r\n\r\n    onClickChangePassword() {\r\n        let password_old = this.editPasswordOld.string;\r\n        let password_new = this.editPasswordNew.string;\r\n        let password_confirm = this.editPasswordConfirm.string;\r\n\r\n        if (!password_old) {\r\n            GHelper.showTip(\"请输入旧密码\");\r\n            return;\r\n        }\r\n\r\n        if (!password_new) {\r\n            GHelper.showTip(\"请输入新密码\");\r\n            return;\r\n        }\r\n\r\n        if (password_new.length < 6) {\r\n            GHelper.showTip(\"您输入的密码长度过短，请重新输入\");\r\n            return;\r\n        }\r\n\r\n        if (password_new != password_confirm) {\r\n            GHelper.showTip(\"两次输入密码不一致\");\r\n            return;\r\n        }\r\n\r\n        // loginCtrl.changePassword(password_old, password_new, (msg) => {\r\n        //     if (msg && !msg.error) {\r\n        //         GHelper.showTip(\"密码修改成功\");\r\n        //         this.hide();\r\n        //     }\r\n        // })\r\n    }\r\n}\r\n","import { GAppDM } from \"../../DataModel/AppDataModel\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_ChangePhone extends Page {\r\n\r\n    @property(cc.EditBox)\r\n    editPhone: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editCode: cc.EditBox = null;\r\n\r\n    @property(cc.Label)\r\n    btnCode: cc.Label = null;\r\n\r\n    onReady() {\r\n        this.editPhone.node.parent.getChildByName(\"tips\").active = false;\r\n    }\r\n\r\n    initTable() {\r\n    }\r\n\r\n    updateLabel() {\r\n        let remain = GAppDM.last_get_code ? GAppDM.last_get_code + 60000 - Date.now() : 0;\r\n        if (remain < 0) {\r\n            remain = 0;\r\n        }\r\n        remain = Math.floor(remain / 1000);\r\n        this.btnCode.string = \"获取验证码\" + (remain ? `(${remain})` : \"\");\r\n    }\r\n\r\n    onClickGetCode() {\r\n        let phone = this.editPhone.string;\r\n        if (phone.length != 11) {\r\n            GHelper.showTip(\"请输入11位手机号\");\r\n        }\r\n\r\n        // loginCtrl.getVerificationCode(phone, \"change_phone\", (msg) => {\r\n        //     if (msg && msg.code) {\r\n        //         // this.editCode.string = msg.code;\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    onEditPhone() {\r\n        this.editPhone.string = this.editPhone.string.replace(/[^0-9]/ig, \"\");\r\n        if (this.editPhone.string) {\r\n            // loginCtrl.checkPhoneNumber(this.editPhone.string, (msg) => {\r\n            //     if (msg && !msg.error) {\r\n            //         this.editPhone.node.parent.getChildByName(\"tips\").active = msg.count > 0;\r\n            //     }\r\n            // })\r\n        }\r\n    }\r\n\r\n    onEditCode() {\r\n        this.editCode.string = this.editCode.string.replace(/[^0-9]/ig, \"\");\r\n    }\r\n\r\n    onClickChangePhoneNumber() {\r\n        let phone = this.editPhone.string;\r\n        let code = this.editCode.string;\r\n\r\n        if (phone.length != 11) {\r\n            GHelper.showTip(\"请输入11位手机号\");\r\n            return;\r\n        }\r\n\r\n        if (!code) {\r\n            GHelper.showTip(\"请输入验证码\");\r\n            return;\r\n        }\r\n\r\n        // loginCtrl.changePhoneNumber(phone, code, (msg) => {\r\n        //     if (msg && !msg.error) {\r\n        //         GHelper.showTip(\"更换手机号成功\");\r\n        //         this.hide();\r\n        //     }\r\n        // })\r\n    }\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_ChangePhone\")\r\n    }\r\n}\r\n","import { GAppDM } from \"../../DataModel/AppDataModel\";\r\nimport { core } from \"../../Framework/Core/Base\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { BagItemItem, EBagItemState, GItemCfg } from \"../../Service/ItemService\";\r\nimport { GMatchSer } from \"../../Service/MatchService\";\r\nimport { GMsgCenter, MessageCenter } from \"../../utils/MessageCenter\";\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\nimport Widget_NumberFrame from \"../Widget/Widget_NumberFrame\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_ChangePoint extends Page {\r\n   \r\n\r\n    @property(cc.Label)\r\n    lab_title_0:cc.Label = null;    // 是否确认兑换\r\n    @property(cc.Label)\r\n    lab_title_1:cc.Label = null;    // 能兑换多少奖励点\r\n    @property(cc.Label)\r\n    lab_title_2:cc.Label = null;    // 当前我得奖励点\r\n\r\n    @property(Widget_NumberFrame)\r\n    numberFrame = null\r\n    private _itemData = null;\r\n    onLoad(): void {\r\n        this.numberFrame.setOnEditEndCb(()=>{\r\n            this.refreshView()\r\n        })\r\n    }\r\n\r\n    bt_close()\r\n    {\r\n        GPageMgr.closePage('Page_ChangePoint');\r\n    }\r\n    async bt_confirm()\r\n    {\r\n        \r\n       if(this._itemData.count == 1){\r\n            let res =  await GHallHttp.request(\"exchangeRewardCoin\",{id:this._itemData.id})\r\n            if(res.errcode)\r\n            {\r\n                GHelper.showTip(JSON.stringify(res.errcode))\r\n                return\r\n            }\r\n           \r\n            GHelper.showTip(\"兑换成功\");\r\n            await GUserMgr.refreshSelfUser()\r\n        \r\n            await GItemCfg.init();\r\n            // GMsgCenter.send(\"update_myprize\");\r\n            GMsgCenter.send('update_myprize',{tag:'Page_MyPrizeDetail',item_id:this._itemData.item_id})\r\n            GMsgCenter.send(\"updateUserInfo\");\r\n\r\n            GPageMgr.closePage(\"Page_ChangePoint\");\r\n       }else{   \r\n            let num = this.numberFrame.getCurNum()\r\n            let res =  await GHallHttp.request(\"exchangeRewardCoinMore\",{item_id:this._itemData.item_id,num:num})\r\n            if(res.errcode)\r\n            {\r\n                GHelper.showTip(JSON.stringify(res.errcode))\r\n                GPageMgr.closePage(\"Page_Change\")\r\n            }\r\n            else\r\n            {\r\n                // 兑换n张 成功n张 请注意查收\r\n                await GUserMgr.refreshSelfUser()\r\n                \r\n                let item_id = this._itemData.item_id\r\n                GPageMgr.openPage(\"Page_Tips\",{\r\n                    tips:\"兑换欢乐点\"+res.allNum+\"张,\"+\"成功\"+res.successNum+'张',\r\n                    buttons:[\r\n                        {\r\n                            label:\"确定\",\r\n                            callback:async ()=>\r\n                            {\r\n                                // 刷新\r\n                               \r\n                                GMsgCenter.send('update_myprize',{tag:'Page_MyPrizeDetail',item_id:item_id})\r\n                               \r\n                                GMsgCenter.send(\"updateUserInfo\");\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n\r\n                GPageMgr.closePage(\"Page_ChangePoint\")\r\n            }\r\n       }\r\n    }\r\n\r\n\r\n\r\n\r\n    refreshView()\r\n    {\r\n        let itemM = GItemCfg.getItemById(this._itemData.item_id)\r\n        let curNum = this.numberFrame.getCurNum()\r\n        this.lab_title_0.string = \"是否确认将\"+curNum+'张 '+itemM.name+\" 兑换成\"\r\n        this.lab_title_1.string = (itemM['coin']*curNum) +\" 欢乐点\"\r\n        this.lab_title_2.string = \"我的欢乐点,剩余(\"+GUserMgr.self_user.reward_coin+\")点\"\r\n    }\r\n\r\n   \r\n    onOpen(itemData:any)\r\n    {\r\n        let itemM = GItemCfg.getItemById(itemData.item_id)\r\n        if(!itemM || !itemM.id || !itemM['coin'])\r\n        {\r\n            GPageMgr.closePage(\"Page_ChangePoint\");\r\n            GHelper.showTip(\"数据异常\")\r\n            return;\r\n        }\r\n        this._itemData = itemData;\r\n        this.numberFrame.setMax(this._itemData.count)\r\n        this.refreshView()\r\n    }\r\n}\r\n","import { GAppDM } from \"../../DataModel/AppDataModel\";\r\nimport { core } from \"../../Framework/Core/Base\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { BagItemItem, EBagItemState, GItemCfg } from \"../../Service/ItemService\";\r\nimport { GMatchSer } from \"../../Service/MatchService\";\r\nimport { GMsgCenter, MessageCenter } from \"../../utils/MessageCenter\";\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\nimport Widget_NumberFrame from \"../Widget/Widget_NumberFrame\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Change extends Page {\r\n    @property(cc.RichText)\r\n    lb_wx: cc.RichText = null;\r\n\r\n    @property(cc.Node)\r\n    qr: cc.Node = null;\r\n\r\n    @property(cc.EditBox)\r\n    editCode: cc.EditBox = null;\r\n\r\n    @property(cc.Node)\r\n    btnCode: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lb_entity: cc.Label = null;\r\n\r\n\r\n    @property(cc.Node)\r\n    kefu: cc.Node = null;\r\n\r\n\r\n    @property(cc.Node)\r\n    commentEdit:cc.Node = null;\r\n\r\n\r\n    @property(cc.Label)\r\n    commentLab: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    addressLab: cc.Label = null;\r\n\r\n    @property(Widget_NumberFrame)\r\n    numberFrame = null\r\n\r\n    commentEidtboxChange()\r\n    {\r\n        if(this.commentEdit.getComponent(cc.EditBox).string==\"\")\r\n        {\r\n            this.commentLab.string = \"无备注\"\r\n        }else\r\n        {\r\n            this.commentLab.string = this.commentEdit.getComponent(cc.EditBox).string.slice(0,10)+\"..\"\r\n        }\r\n    }\r\n    checkCommentEidtBt()\r\n    {\r\n        this.commentEdit.active = !this.commentEdit.active;\r\n        this.commentEidtboxChange();\r\n\r\n    }\r\n    checkAddressChooiseBt()\r\n    {\r\n        GPageMgr.openPage('Page_Address',true);\r\n    }\r\n\r\n    protected _item:BagItemItem=null\r\n\r\n    protected onDestroy(): void {\r\n       \r\n        MessageCenter.getInstance().unregister(\"getOneAddress\", this.node);\r\n    }\r\n\r\n\r\n    onLoad() {\r\n        MessageCenter.getInstance().register(\"getOneAddress\", this.getOneAddress.bind(this), this.node);\r\n        this.commentEdit.active = false;\r\n        this.initKefu();\r\n        this.qr.getComponent('CQRCode').string='str';\r\n        this.lb_wx.string = this.initTemplate(\"小妹\")\r\n    }\r\n\r\n    _chooiseAddress:any  = null;\r\n\r\n    getOneAddress(mmAddressItem)\r\n    {\r\n        this._chooiseAddress = mmAddressItem;\r\n        cc.error(\"兑换页面获得一个地址\",JSON.stringify(this._chooiseAddress)   )\r\n        this.addressLab.string = this._chooiseAddress.name;\r\n\r\n    }\r\n\r\n    async initKefu(){\r\n        let sp = await ykUtils.loadNetSpriteFrame(ykUtils.getKefu())\r\n        if(sp){\r\n            this.kefu.getComponent(cc.Sprite).spriteFrame = sp\r\n        }\r\n    }\r\n\r\n    initTemplate(str) {\r\n        let text = '<color=#00ff00>微信号</c>' + '<color=#EC9630>' + str + '</c>';\r\n        return text\r\n    }\r\n    \r\n    onClickClose() {\r\n        GPageMgr.closePage(\"Page_Change\")\r\n    }\r\n\r\n    onEditCode() {\r\n        this.editCode.string = this.editCode.string.replace(/[^0-9]/ig, \"\");\r\n    }\r\n\r\n    async onGetCode() {\r\n        let remain = GAppDM.last_get_code ? GAppDM.last_get_code + 60000 - Date.now() : 0\r\n        if (remain > 0) {\r\n            return\r\n        }\r\n        let res = await GHallHttp.request(\"getphonecode\")\r\n        if(res.errcode)\r\n        {\r\n            GHelper.showTip(JSON.stringify(res.errcode))\r\n        }\r\n        else\r\n        {\r\n            GHelper.showTip(\"验证码获取成功，请注意查收\")\r\n            GAppDM.last_get_code=Date.now()\r\n        }\r\n    }\r\n\r\n    async onClickOk() {\r\n        // let code = this.editCode.string\r\n        // if (code.length <= 0) {\r\n        //     GHelper.showTip(\"请输入正确的验证码\")\r\n        //     return\r\n        // }\r\n\r\n        // let count = this.numberFrame.getCurNum()\r\n\r\n        if(this._item.count == 1){\r\n            let commentStr = this.commentEdit.getComponent(cc.EditBox).string;\r\n            let addressStr = this._chooiseAddress?JSON.stringify(this._chooiseAddress):\"\";\r\n            let res = await GHallHttp.request(\"exchangeitem\", {id: this._item.id,comment:commentStr,address:addressStr});\r\n            if(res.errcode)\r\n            {\r\n                GHelper.showTip(JSON.stringify(res.errcode))\r\n            }\r\n            else\r\n            {\r\n                GHelper.showTip(\"兑换成功，请注意查收\")\r\n                GItemCfg.removeById(this._item.id)\r\n    \r\n                GItemCfg.exItems.push(res.exitem)\r\n    \r\n                \r\n                GAppDM.last_get_code=Date.now()\r\n                GMsgCenter.send('update_myprize',{tag:'Page_MyPrizeDetail',item_id:this._item.item_id})\r\n                GPageMgr.closePage(\"Page_Change\")\r\n            }\r\n        }else{\r\n            let num = this.numberFrame.getCurNum()\r\n            let res = await GHallHttp.request(\"exchangeItemMore\", {item_id:this._item.item_id,num:num});\r\n\r\n            if(res.errcode)\r\n            {\r\n                GHelper.showTip(JSON.stringify(res.errcode))\r\n                GPageMgr.closePage(\"Page_Change\")\r\n            }\r\n            else\r\n            {\r\n                // 兑换n张 成功n张 请注意查收\r\n\r\n                let item_id = this._item.item_id\r\n                GPageMgr.openPage(\"Page_Tips\",{\r\n                    tips:\"兑换\"+res.allNum+\"张,\"+\"成功\"+res.successNum+'张',\r\n                    buttons:[\r\n                        {\r\n                            label:\"确定\",\r\n                            callback:async ()=>\r\n                            {\r\n                                // 刷新\r\n                                GMsgCenter.send('update_myprize',{tag:'Page_MyPrizeDetail',item_id:item_id})\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n\r\n                GPageMgr.closePage(\"Page_Change\")\r\n            }\r\n        }\r\n    }\r\n\r\n    protected update(dt: number){\r\n        let remain = GAppDM.last_get_code ? GAppDM.last_get_code + 60000 - Date.now() : 0\r\n        if (remain < 0) {\r\n            remain = 0\r\n        }\r\n        remain = Math.floor(remain / 1000)\r\n        this.btnCode.getComponent(cc.Label).string = \"获取验证码\" + (remain ? `(${remain})` : \"\")\r\n    }\r\n\r\n    onOpen(item:BagItemItem)\r\n    {\r\n        console.log(\"test\")\r\n        this._item=item\r\n        let itemscfg = GItemCfg.getItemById(this._item.item_id)\r\n        if(itemscfg){\r\n            this.lb_entity.string =  itemscfg.name;\r\n        }\r\n        // this.lb_entity.string =  GItemCfg.getItemById(this._item.item_id).name;\r\n        let count = this._item.count\r\n        this.numberFrame.setMax(count)\r\n    }\r\n}\r\n","import { ChargeConfig } from \"../../data/data\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_ChargeConfirm extends cc.Component {\r\n    \r\n    @property(cc.Label)\r\n    labelPrice: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelName: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelCount: cc.Label = null;\r\n\r\n    private id: number = 1;\r\n    private count: number = 1;\r\n\r\n    init(id: number) {\r\n        this.id = id;\r\n    }\r\n\r\n    onShow() {\r\n        this.count = 1;\r\n    }\r\n\r\n    initTable() {\r\n        // let config = configMgr.getConfig(ChargeConfig, this.id);\r\n        // this.labelPrice.string = \"¥\" + config.price * this.count;\r\n        // this.labelName.string = config.name;\r\n        // this.labelCount.string = String(this.count);\r\n    }\r\n\r\n    onClickSub() {\r\n        this.count -= 1;\r\n        if (this.count < 1) {\r\n            this.count = 1;\r\n        }\r\n        this.initTable();\r\n    }\r\n\r\n    onClickAdd() {\r\n        this.count += 1;\r\n        if (this.count > 10) {\r\n            this.count = 10;\r\n        }\r\n        this.initTable();\r\n    }\r\n\r\n    onClickCharge() {\r\n        // shopCtrl.createOrder(this.id, this.count, (msg) => {\r\n        //     if (msg && msg.order_id) {\r\n        //         this.hide();\r\n        //         layerMgr.showLayer(LAYER.CHARGE_RESULT_LAYER, msg.order_id);\r\n        //     }\r\n        // })\r\n    }\r\n}\r\n","import { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_ChargeResult extends Page {\r\n\r\n    private order_id: number = 0;\r\n\r\n    init(id: number) {\r\n        this.order_id = id;\r\n    }\r\n\r\n    onShow() {\r\n    }\r\n\r\n    initTable() {\r\n    }\r\n\r\n    onClickConfirm() {\r\n        // shopCtrl.getOrderInfo(this.order_id, (msg) => {\r\n        //     if (msg) {\r\n        //         if (msg.status == 1) {\r\n        //             GHelper.showTip('支付成功')\r\n        //             GPageMgr.closePage(\"Page_ChargeResult\")\r\n        //             propCtrl.getUserProps();\r\n        //         } else {\r\n        //             GHelper.showTip('支付结果可能延迟，请确认已完成支付')\r\n        //         }\r\n        //     } else {\r\n        //         GHelper.showTip('获取支付结果失败')\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    onClickRecharge() {\r\n        GPageMgr.closePage(\"Page_ChargeResult\")\r\n    }\r\n}\r\n","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { layerMgr } from \"../../manager/LayerManager\";\r\nimport { GOrderSer } from \"../../Service/OrderService\";\r\nimport ListView from \"../../utils/ListView\";\r\nimport Widget_ProductItem from \"../Widget/Widget_ProductItem\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Charge extends Page {\r\n    \r\n    @property(cc.Label)\r\n    labelScore: cc.Label = null;\r\n\r\n    @property(cc.ScrollView)\r\n    sv_score: cc.ScrollView = null;\r\n\r\n    start() {\r\n        this.labelScore.string = GUserMgr.self_user.coin+\"\"\r\n        this.initProducts()\r\n    }\r\n\r\n    onClickCharge(event: cc.Event.EventCustom, data: string) {\r\n        let id = Number(data);\r\n        GPageMgr.openPage(\"Page_ChargeConfirm\",id)\r\n    }\r\n    \r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_Charge\")\r\n    }\r\n\r\n    initProducts() {\r\n        let products = GOrderSer.products;\r\n        let dataList = []\r\n        for (const key in products) {\r\n            dataList.push({type: 0, product: products[key]})\r\n        }\r\n\r\n        this.sv_score.getComponent(ListView).init(this.bindcallfunc.bind(this), this.getItemType.bind(this));\r\n        this.sv_score.getComponent(ListView).notifyDataSetChanged(dataList)\r\n    }\r\n\r\n    public getItemType() {\r\n        return 0\r\n    }\r\n\r\n    public bindcallfunc(node: cc.Node, info, i) {\r\n        node.getComponent(Widget_ProductItem).setdata(info)\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\n\r\n@ccclass\r\nexport default class Page_ClubDetail extends Page {\r\n\r\n\r\n    onLoad() {\r\n\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        \r\n    }\r\n\r\n    initDetail (data){\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport ListView from \"../../utils/ListView\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport Widget_ClubItem from \"../Widget/Widget_ClubItem\";\r\nimport Widget_CupItem from \"../Widget/Widget_CupItem\";\r\nimport Widget_CitySearchCupItem from \"../Widget/Widget_CitySearchCupItem\";\r\n\r\nimport { ClubModel ,GClubSer} from \"../../Service/ClubService\";\r\nimport { GMatchSer, MatchInsModel, MatchModel } from \"../../Service/MatchService\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Club extends Page {\r\n\r\n    @property(cc.Label)\r\n    area: cc.Label = null;\r\n\r\n    @property(cc.EditBox)\r\n    edit: cc.EditBox = null;\r\n\r\n    @property(cc.ToggleContainer)\r\n    toggles: cc.ToggleContainer = null;\r\n\r\n    @property(cc.Node)\r\n    nodeClub: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeCup: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeSearch: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    filtrate:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeTogs:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    inputLabel:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeCitySearch:cc.Node = null;\r\n\r\n    private filtrateCity:string = ''\r\n\r\n    private cubAll:any[] = []\r\n\r\n    protected _allMatchData:{matches:MatchModel[],matchins:MatchInsModel[]}={matches:null,matchins:null}\r\n\r\n    onLoad() {\r\n        GMsgCenter.register(\"detail\", this.detailInfo.bind(this), this);\r\n        GMsgCenter.register(\"detailBack\", this.detailBack.bind(this), this);\r\n\r\n        // GMsgCenter.register(\"club_join\", this.doClubJoin.bind(this), this);\r\n        GMsgCenter.register(\"club_detail\", this.doClubDetail.bind(this), this);\r\n\r\n        GMsgCenter.register(\"filtrate_club_search\", this.filtrateSearch.bind(this), this);\r\n    }\r\n\r\n    refreshData(){\r\n        console.log('refreshData')\r\n        // 重置状态\r\n        // this.resetSearch()\r\n        this.onClickEditCancel()\r\n        this.toggles.toggleItems[0].check()\r\n        this.detailBack(false)\r\n        this.onToggleClub()\r\n        // \r\n    \r\n    }\r\n\r\n\r\n    async doClubDetail(data:ClubModel){\r\n       let page = await GPageMgr.openPage(\"Page_AddClub\",data) as Page\r\n       page.setDelegate(this)\r\n    }\r\n    \r\n    detailInfo(detailData) {\r\n        let detail = this.node.parent.getChildByName(\"node_cupdetail\");\r\n        let x = detail.getPosition().x;\r\n        detail.setPosition(detail.getPosition().x + cc.winSize.width, detail.getPosition().y);\r\n        detail.active = true;\r\n        this.node.runAction(cc.moveTo(0.2, this.node.x - cc.winSize.width, this.node.y));\r\n        detail.runAction(cc.moveTo(0.2, 0, detail.y));\r\n \r\n        detail.getComponent('Page_CupDetail').initDetailData(detailData,this.allClubData.get(detailData[0].club_id))\r\n    }\r\n\r\n    \r\n    detailBack(needAnimal) {\r\n        console.log('needAnimal',needAnimal)\r\n        let animalTime = 0.2\r\n        if(needAnimal == false){\r\n            animalTime = 0\r\n        }\r\n        let detail = this.node.parent.getChildByName(\"node_cupdetail\");\r\n        this.node.runAction(cc.moveTo(animalTime, 0, this.node.y));\r\n        detail.runAction(\r\n            cc.sequence(cc.moveTo(animalTime, cc.winSize.width, detail.y),\r\n            cc.callFunc(()=>{\r\n                detail.active = false\r\n            }))\r\n            );\r\n    }\r\n\r\n\r\n    public getItemType1(data) {\r\n        return 0\r\n    }\r\n\r\n    public getItemType2(data) {\r\n        return 0\r\n    }\r\n   \r\n    public getItemType3(data) {\r\n        return 0\r\n    }\r\n\r\n    public getItemType4(data) {\r\n        return 0\r\n    }\r\n\r\n    public bindcallfunc1(node: cc.Node, info, i) {\r\n        node.getComponent(Widget_ClubItem).setdata(info)\r\n    }\r\n\r\n    public bindcallfunc2(node: cc.Node, info, i) {\r\n        node.getComponent(Widget_CupItem).setdata(info)\r\n    }\r\n\r\n    public bindcallfunc3(node: cc.Node, info, i) {\r\n        node.getComponent(Widget_ClubItem).setdata(info)\r\n    }\r\n\r\n    public bindcallfunc4(node: cc.Node, info, i) {\r\n        node.getComponent(Widget_CitySearchCupItem).setdata(info)\r\n    }\r\n\r\n    allClubData:any =null;\r\n    async start() {\r\n        this.allClubData = new Map();\r\n        let allClub  = await GClubSer.init()\r\n        this.nodeClub.getComponent(ListView).init(this.bindcallfunc1.bind(this), this.getItemType1.bind(this));\r\n        this.refreshClubAll(allClub)\r\n        for(var i=0;i<allClub.length;i++)\r\n        {\r\n            this.allClubData.set(allClub[i]['id'],allClub[i]['title'] )\r\n        }\r\n        // dataList.push({type: 0, clubdata: {}})\r\n        // dataList.push({type: 0, clubdata: {}})\r\n        // dataList.push({type: 0, clubdata: {}})\r\n\r\n      \r\n        // let cupList  = []\r\n        // cupList.push({type: 0, cupdata: {}})\r\n        // cupList.push({type: 0, cupdata: {}})\r\n        // cupList.push({type: 0, cupdata: {}})\r\n\r\n        \r\n        // this.nodeCup.getComponent(ListView).notifyDataSetChanged(cupList)\r\n\r\n        // let searchList  = []\r\n        // searchList.push({type: 0, searchdata: {}})\r\n        // searchList.push({type: 0, searchdata: {}})\r\n        // searchList.push({type: 0, searchdata: {}})\r\n\r\n        this.nodeSearch.getComponent(ListView).init(this.bindcallfunc3.bind(this), this.getItemType3.bind(this));\r\n        // this.nodeSearch.getComponent(ListView).notifyDataSetChanged(searchList)\r\n        this.nodeCitySearch.getComponent(ListView).init(this.bindcallfunc4.bind(this), this.getItemType4.bind(this));\r\n\r\n        this.toggles.toggleItems[0].check()\r\n        this.onToggleClub()\r\n        this.initPageCub()\r\n    }\r\n\r\n    // 刷新赛事\r\n    async initPageCub()\r\n    {\r\n        this.nodeCup.getComponent(ListView).init(this.bindcallfunc2.bind(this), this.getItemType2.bind(this));\r\n        this._allMatchData = await GMatchSer.getAllMatches(false)\r\n\r\n        let resDd = {}\r\n        for(var v of this._allMatchData.matches){\r\n            if(v.club_id>0 && v.match_starttime>Date.now()){\r\n                if(!resDd[v.club_id.toString()]){\r\n                    resDd[v.club_id.toString()] = []\r\n                }\r\n\r\n                resDd[v.club_id.toString()].push(v)\r\n            }\r\n        }\r\n        this.cubAll = []\r\n        \r\n        for(var k in resDd){\r\n            this.cubAll.push([k,resDd[k]])\r\n        }\r\n\r\n\r\n        this.nodeCup.getComponent(ListView).notifyDataSetChanged( this.cubAll)\r\n\r\n    }\r\n    \r\n    async refreshClubAll(allClub){\r\n       \r\n        let dataList = []\r\n        for(var k in allClub){\r\n            dataList.push({type: k, clubdata: allClub[k]})\r\n        }\r\n        \r\n        this.nodeClub.getComponent(ListView).notifyDataSetChanged(dataList)\r\n    }\r\n\r\n\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"detail\", this)\r\n        GMsgCenter.unregister(\"detailBack\", this)\r\n        // GMsgCenter.unregister(\"club_join\",this);\r\n        GMsgCenter.unregister(\"club_detail\", this);\r\n        // GMsgCenter.unregister(\"refresh_clubAll\", this);\r\n        GMsgCenter.unregister(\"filtrate_club_search\",  this);\r\n    }\r\n\r\n    \r\n\r\n    resetSearch(){\r\n        if(!this.filtrate.active){\r\n            cc.find('inputLayout/back_long',this.node).active = false\r\n            cc.find('inputLayout/back_short',this.node).active = true\r\n            this.nodeClub.getComponent(ListView).notifyDataRefresh()\r\n            // this.edit.node.x = 59\r\n            this.edit.node.children[0].x= 77\r\n        }\r\n    }\r\n\r\n    onToggleClub() {\r\n        this.nodeClub.active = true;\r\n        this.nodeCup.active = false;\r\n        this.nodeSearch.active = false;\r\n        this.nodeTogs.active = true  \r\n    }\r\n\r\n    onToggleCup() {\r\n        this.nodeClub.active = false;\r\n        this.nodeCup.active = true;\r\n        this.nodeSearch.active = false;\r\n        this.nodeTogs.active = true\r\n    }\r\n\r\n    onClickEditCancel(){\r\n        this.edit.string = ''\r\n        this.filtrate.active = false\r\n        this.filtrateCity = ''\r\n        if(this.toggles.toggleItems[0].isChecked){\r\n            this.onToggleClub()\r\n        }else{\r\n            this.onToggleCup()\r\n        }\r\n\r\n        this.resetSearch()\r\n    }\r\n\r\n    onClickSearch() {\r\n        let str = this.edit.string\r\n        cc.log(str)\r\n    }\r\n\r\n    onEditBegin() {\r\n        cc.log(\"begin\")\r\n        cc.find('inputLayout/back_long',this.node).active = true\r\n        cc.find('inputLayout/back_short',this.node).active = false\r\n        // this.edit.node.x = -60.928\r\n        this.edit.node.children[0].x= -220\r\n    }\r\n\r\n    onEditChanged() {\r\n        cc.log(\"changed\")\r\n        let str = this.edit.string\r\n      \r\n    }\r\n\r\n    onClubEditClick(){\r\n\r\n    }\r\n\r\n    onCLubFiltrateClick(){\r\n        // this.nodeClub.getComponent(ListView).notifyDataRefresh()\r\n        this.filtrate.active = true\r\n        this.onEditBegin()\r\n    }\r\ns\r\n\r\n    onEditEnd() {\r\n        let str = this.edit.string\r\n        if (str.length==0) {\r\n            if(this.toggles.toggleItems[0].isChecked){\r\n                this.onToggleClub()\r\n            }else{\r\n                this.onToggleCup()\r\n            }\r\n            \r\n            this.nodeSearch.active = false;\r\n        }\r\n        else\r\n        {\r\n            this.nodeTogs.active = false;\r\n            this.nodeClub.active = false;\r\n            this.nodeCup.active = false;\r\n            this.nodeSearch.active = true;\r\n           \r\n            // cc.find('inputLayout/back_long',this.node).active = true\r\n            // cc.find('inputLayout/back_short',this.node).active = false\r\n\r\n            this.searchClub(str)\r\n        }\r\n        cc.log(str)\r\n        cc.log(\"end\")\r\n    }\r\n\r\n    async searchClub(title:string){\r\n\r\n        let searchResultListView =   this.nodeSearch\r\n        if(this.filtrate.active){\r\n            searchResultListView =   this.nodeCitySearch\r\n        }\r\n\r\n        searchResultListView.getComponent(ListView).notifyDataSetChanged([])\r\n        // let res = await GClubSer.searchClub({city:this.filtrateCity||'',title:title})\r\n\r\n        let res = await GClubSer.searchClub({city:'',title:title})\r\n        if(!res.clublist){\r\n            return\r\n        }\r\n        let searchList  = []    \r\n        for(var k in res.clublist){\r\n            searchList.push({type: 0, clubdata: res.clublist[k]})\r\n        }\r\n        console.log(searchList.length)\r\n        searchResultListView.getComponent(ListView).notifyDataSetChanged(searchList)\r\n    }\r\n\r\n    filtrateSearch (city){\r\n        this.filtrateCity = city\r\n        this.searchClub(this.edit.string)\r\n    }\r\n\r\n    onEditReturn() {\r\n        cc.log(\"return\")\r\n    }\r\n}\r\n","import { EAccountFrom, GAppDM } from \"../../DataModel/AppDataModel\";\r\nimport { core } from \"../../Framework/Core/Base\";\r\nimport { GaoDeMapTool } from \"../../Framework/Logic/GaoDeMapTool\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GAccountHttp } from \"../../Net/AccountHttp\";\r\n\r\nimport {layerMgr} from \"../../manager/LayerManager\"\r\n\r\nimport {ykUtils} from \"../../utils/YkUtils\"\r\nimport { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_CodeLogin extends Page {\r\n\r\n    @property(cc.EditBox)\r\n    editPhone: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editCode: cc.EditBox = null;\r\n\r\n    @property(cc.Label)\r\n    btnCode: cc.Label = null;\r\n\r\n    @property(cc.Toggle)\r\n    toggleAgree: cc.Toggle = null;\r\n\r\n    @property(cc.Button)\r\n    btn_getCode: cc.Button = null;\r\n\r\n\r\n    @property(cc.Button)\r\n    btn_login: cc.Button = null;\r\n\r\n    developLimit = [2,3,2]\r\n    developData =[0,0,0];\r\n\r\n\r\n    onDevelopChick(event: cc.Event.EventCustom, data: string)\r\n    {\r\n        let touchIndex = parseInt(data);\r\n        if(touchIndex==3)\r\n        {\r\n            this.developData=[0,0,0]\r\n        }\r\n        else\r\n        {\r\n            if(touchIndex-1>=0)\r\n            {\r\n                if(this.developData[touchIndex-1]==this.developLimit[touchIndex-1])\r\n                {\r\n                    this.developData[touchIndex]++;\r\n                    if(this.developData[2]==this.developLimit[2])\r\n                    {\r\n                        // let develpNd =  this.node.getChildByName(\"develop\");\r\n                        // develpNd.active = false;\r\n                        this.developData=[0,0,0]\r\n                        GPageMgr.closePage(\"Page_Start\")\r\n                        GPageMgr.closePage(\"Page_CodeLogin\")\r\n                        GPageMgr.openPage(\"Page_ServerList\")\r\n                        \r\n                    }\r\n                }\r\n            }else\r\n            {\r\n                this.developData[0]++;\r\n            }\r\n        }\r\n    }\r\n\r\n    start() {\r\n        GPageMgr.cachePage(\"Page_Game\")\r\n        GPageMgr.closePage(\"Page_Setting\")\r\n        GPageMgr.closePage(\"Page_Update\")\r\n        GPageMgr.closePage(\"Page_Main\")\r\n        GPageMgr.closePage(\"Page_MatchInfo\")\r\n\r\n        this.btnCode.node.active = false;\r\n        this.btn_getCode.interactable = false;\r\n        this.btn_login.interactable = false;\r\n\r\n  \r\n\r\n        if(GGameDM.isReviewVersion && cc.sys.os==cc.sys.OS_ANDROID){\r\n            this.toggleAgree.uncheck();\r\n        }else{\r\n            this.toggleAgree.check();\r\n        }\r\n       \r\n        try\r\n        {\r\n            if(GAppDM.quick_test)\r\n            {\r\n                this.editPhone.string=\"13808173531\"\r\n            }\r\n            let str = cc.sys.localStorage.getItem(\"login_data\")\r\n            console.log('login_data',str)\r\n            let data = JSON.parse(str)\r\n            if(data)\r\n            {\r\n                if(GAppDM.auto_login)\r\n                {\r\n                    this._onLogin(data.unionid,data.openid)\r\n                }\r\n            }\r\n        }catch(e)\r\n        {\r\n\r\n        }\r\n\r\n        // \r\n        if(GGameDM.isReviewVersion){\r\n            cc.find('content/btn_register',this.node).active = false\r\n        }\r\n\r\n        let develpNd =  this.node.getChildByName(\"develop\");\r\n        develpNd.active = true;\r\n        develpNd.width = cc.winSize.width;\r\n        develpNd.height = cc.winSize.height;\r\n        this.developData = [0,0,0]\r\n    }\r\n\r\n    \r\n    \r\n    phone_code_Change()\r\n    {\r\n        let phone = this.editPhone.string;\r\n        let code = this.editCode.string;\r\n        if(core.isPhoneNo(phone))\r\n        {\r\n            this.btn_getCode.interactable = true;\r\n            this.btn_login.interactable =  !!code;\r\n        }else\r\n        {\r\n            this.btn_getCode.interactable = false;\r\n            this.btn_login.interactable = false;\r\n        } \r\n    }\r\n    \r\n\r\n    initTable() {\r\n    }\r\n\r\n    updateLabel() {\r\n        let remain = GAppDM.last_get_code ? GAppDM.last_get_code + 60000 - Date.now() : 0;\r\n        if (remain < 0) {\r\n            remain = 0;\r\n        }\r\n        remain = Math.floor(remain / 1000);\r\n        this.btnCode.string = \"获取验证码\" + (remain ? `(${remain})` : \"\");\r\n    }\r\n\r\n    async onClickLogin() {\r\n        if (!this.toggleAgree.isChecked) {\r\n            GHelper.showTip(\"请勾选同意用户协议和隐私条款\");\r\n            return\r\n        }\r\n\r\n        let phone = this.editPhone.string;\r\n        let code = this.editCode.string;\r\n        if (!core.isPhoneNo(phone)) {\r\n            GHelper.showTip(\"请输入正确的手机号\");\r\n            return\r\n        }\r\n        if(GAppDM.quick_test&&!code)\r\n        {\r\n            code=\"123456\"\r\n        }\r\n        if (!code) {\r\n            GHelper.showTip(\"请输入验证码\");\r\n            return\r\n        }\r\n        this._onLogin(phone,code)\r\n        return\r\n\r\n\r\n        \r\n    }\r\n    protected async _onLogin(phone:string,code:string)\r\n    {\r\n        layerMgr.showNetLoading(true)\r\n        let ret = await GAppDM.onLogin(phone,code,EAccountFrom.QuickPhone)\r\n        layerMgr.showNetLoading(false)\r\n        if(ret)\r\n        {\r\n            GPageMgr.openPage(\"Page_Main\")\r\n        }\r\n    }\r\n\r\n    onClickGetCode() {\r\n        let phone = this.editPhone.string;\r\n        if (!core.isPhoneNo(phone)) {\r\n            GHelper.showTip(\"请输入正确的手机号\");\r\n            return\r\n        }\r\n\r\n        var codeTime = 60;\r\n        this.btnCode.getComponent(cc.Label).string = '(' +  codeTime + 's' + ')'\r\n        this.schedule(function() {\r\n            codeTime--\r\n            this.btn_getCode.node.active = false;\r\n            this.btnCode.node.active  = true;\r\n            this.btnCode.getComponent(cc.Label).string = '(' +  codeTime + 's' + ')'\r\n            if ( codeTime<=0) {\r\n                codeTime = 0\r\n                this.unscheduleAllCallbacks();\r\n                this.btn_getCode.node.active = true;\r\n                this.btnCode.node.active  = false;\r\n                this.btnCode.getComponent(cc.Label).string = \"获取验证码\";\r\n            }\r\n        }, 1);\r\n\r\n        this.getCode(phone)\r\n    }\r\n\r\n    async getCode(phone){\r\n        let res = await GAccountHttp.request(\"getphonecode\",{phone:phone})\r\n        if(res.errcode)\r\n        {\r\n            GHelper.showTip(JSON.stringify(res.errcode))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    onClickRegister() {\r\n        GPageMgr.openPage(\"Page_Register\")\r\n    }\r\n\r\n    onClickAccount() {\r\n        GPageMgr.openPage(\"Page_AccountLogin\")\r\n    }\r\n\r\n    onClickResetPassword() {\r\n        GPageMgr.openPage(\"Page_ResetPassword\")\r\n    }\r\n\r\n    onEditPhone() {\r\n        this.editPhone.string = this.editPhone.string.replace(/[^0-9]/ig, \"\");\r\n    }\r\n\r\n    onEditCode() {\r\n        this.editCode.string = this.editCode.string.replace(/[^0-9]/ig, \"\");\r\n    }\r\n    Btn_UserAgree_OnClick()\r\n    {\r\n        GPageMgr.openPage(\"Page_WebView\",\"http://www.zdpoker.com/protocol/user\")\r\n    }\r\n    Btn_Privacy_OnClick()\r\n    {\r\n        GPageMgr.openPage(\"Page_WebView\",\"http://www.zdpoker.com/protocol/privacy\")\r\n    }\r\n\r\n     // 开始倒计时\r\n    //  startTimeCutDown(time){\r\n    //     let allTime = time;\r\n    //     let startOsTime = util.os.time();\r\n    //     this.timeNode.getComponent(cc.Label).string = allTime;\r\n    //     let scheduleCallback = function(){\r\n    //         let nowOsTime = util.os.time();\r\n    //         let nowTime = allTime - Math.floor((nowOsTime - startOsTime));\r\n    //         if(nowTime <= 0){\r\n    //             this.stopTimeCutDown();\r\n    //         }\r\n    //         this.timeNode.getComponent(cc.Label).string = nowTime;\r\n    //     }.bind(this);\r\n    //     this.timeNode.active = true;\r\n    //     this.sprShaoDeng.active = true;\r\n    //     this.timeNode.getComponent(cc.Label).schedule(scheduleCallback, 1);\r\n    // }\r\n\r\n    // // 停止倒计时\r\n    // stopTimeCutDown(){\r\n    //     this.timeNode.getComponent(cc.Label).unscheduleAllCallbacks();\r\n    //     this.timeNode.active = false;\r\n    //     this.sprShaoDeng.active = false;\r\n    // }\r\n}\r\n","import { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport ListView from \"../../utils/ListView\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport Widget_CupDetailItem from \"../Widget/Widget_CupDetailItem\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nenum fialterRule{\r\n    'week'=0,\r\n    'day'=1\r\n}\r\n\r\n@ccclass\r\nexport default class Page_CupDetail extends Page {\r\n    @property(cc.Node)\r\n    nodeDetail: cc.Node = null;\r\n\r\n\r\n    @property(cc.Label)\r\n    titleDetail: cc.Label = null;\r\n\r\n    \r\n    @property(cc.Node)\r\n    bootomChoice: cc.Node = null;\r\n\r\n    private isBootomShowIng = false\r\n    private hideY = null\r\n    private isBootonAnimalRuning = false\r\n    private mFialterRule = fialterRule.week\r\n    private allBootomBts = []\r\n    onLoad() {\r\n    }\r\n\r\n    detailInfo() {\r\n    }\r\n\r\n    public getItemType1(data) {\r\n        return 0\r\n    }\r\n\r\n    public bindcallfunc1(node: cc.Node, info, i) {\r\n        node.getComponent(Widget_CupDetailItem).setdata(info)\r\n    }\r\n\r\n    start() {\r\n        // let dataList = []\r\n        // dataList.push({type: 0, clubdata: {}})\r\n        // dataList.push({type: 0, clubdata: {}})\r\n        // dataList.push({type: 0, clubdata: {}})\r\n       \r\n        this.allBootomBts= [\r\n            cc.find('choice1',this.bootomChoice),\r\n            cc.find('choice2',this.bootomChoice)\r\n        ]\r\n        this.setChoice(this.allBootomBts,this.allBootomBts[0])\r\n    }\r\n    initDetailData(detailData,clubName){\r\n        this.titleDetail.string = clubName+\"赛事\";\r\n        this.nodeDetail.getComponent(ListView).init(this.bindcallfunc1.bind(this), this.getItemType1.bind(this));\r\n        this.nodeDetail.getComponent(ListView).notifyDataSetChanged(detailData)\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n    }\r\n\r\n    onClickBack() {\r\n        GMsgCenter.send(\"detailBack\");\r\n    }\r\n\r\n    \r\n    showBootomChoiceBtn(event,eventData){\r\n        if(this.isBootonAnimalRuning){\r\n            return\r\n        }\r\n        this.isBootonAnimalRuning = true\r\n\r\n        var height = 294\r\n        if(!this.hideY){\r\n            this.hideY =  this.bootomChoice.y\r\n        }\r\n        let showY = this.hideY+height\r\n      \r\n        // \r\n        if(eventData==\"hide\" || this.isBootomShowIng == true){\r\n            this.isBootomShowIng = false\r\n            this.bootomChoice.runAction(cc.sequence(\r\n                cc.moveTo(0.2,cc.v2(this.bootomChoice.x,this.hideY)),\r\n                cc.callFunc(()=>{\r\n                    this.bootomChoice.y = this.hideY\r\n                    this.isBootonAnimalRuning = false\r\n                })\r\n            ))\r\n        }else{\r\n            this.isBootomShowIng = true\r\n            this.bootomChoice.runAction(cc.sequence(\r\n                cc.moveTo(0.2,cc.v2(this.bootomChoice.x,showY)),\r\n                cc.callFunc(()=>{\r\n                    this.bootomChoice.y = showY\r\n                    this.isBootonAnimalRuning = false\r\n                })\r\n            ))\r\n        }\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        this.showBootomChoiceBtn(null,'hide')\r\n    }\r\n\r\n    onDateChoice(event){\r\n        let choiceIdx =  this.allBootomBts.indexOf(event.target)\r\n        this.mFialterRule = choiceIdx\r\n\r\n        this.setChoice(this.allBootomBts,event.target)\r\n    }\r\n\r\n    setChoice(btNodes,choiceNode){\r\n        console.log(choiceNode.name)\r\n        btNodes.forEach(element => {\r\n            if(element == choiceNode){\r\n                element.children[0].color = cc.color(224,153,71)\r\n            }else{\r\n                element.children[0].color = cc.color(0,0,0)\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_CustomerService extends Page {\r\n\r\n    @property(cc.Label)\r\n    labelWechat: cc.Label = null;\r\n\r\n    @property(cc.Sprite)\r\n    imgQrcode: cc.Sprite = null;\r\n    \r\n    start() {\r\n        this.initKefu()\r\n    }\r\n\r\n    async initKefu(){\r\n        let sp = await ykUtils.loadNetSpriteFrame(ykUtils.getKefu())\r\n        if(sp){\r\n            cc.find('content/layout/kf',this.node).getComponent(cc.Sprite).spriteFrame = sp\r\n        }\r\n    }\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_CustomerService\")\r\n    }\r\n}\r\n","import { GAppDM } from \"../../DataModel/AppDataModel\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { BagItemItem, GItemCfg } from \"../../Service/ItemService\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport Widget_NumberFrame from \"../Widget/Widget_NumberFrame\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Donate extends Page {\r\n    @property(cc.EditBox)\r\n    dfname: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    dfid: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editCode: cc.EditBox = null;\r\n\r\n    @property(cc.Node)\r\n    btnCode: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lb_entity: cc.Label = null;\r\n\r\n    @property(Widget_NumberFrame)\r\n    numberFrame = null\r\n\r\n    protected _item:BagItemItem=null\r\n\r\n    onClickCancel() {\r\n        GPageMgr.closePage(\"Page_Donate\")\r\n    }\r\n\r\n    onEditCode() {\r\n        this.editCode.string = this.editCode.string.replace(/[^0-9]/ig, \"\");\r\n    }\r\n\r\n    async onGetCode() {\r\n        let remain = GAppDM.last_get_code ? GAppDM.last_get_code + 60000 - Date.now() : 0\r\n        if (remain > 0) {\r\n            return\r\n        }\r\n        let res = await GHallHttp.request(\"getphonecode\")\r\n        if(res.errcode)\r\n        {\r\n            GHelper.showTip(JSON.stringify(res.errcode))\r\n        }\r\n        else\r\n        {\r\n            GHelper.showTip(\"验证码获取成功，请注意查收\")\r\n            GAppDM.last_get_code=Date.now()\r\n        }\r\n    }\r\n\r\n    async onClickOk() {\r\n        let name = this.dfname.string\r\n        if (name.length == 0) {\r\n            GHelper.showTip(\"请输入姓名\")\r\n            return\r\n        }\r\n\r\n        let id = this.dfid.string\r\n        if (id.length == 0) {\r\n            GHelper.showTip(\"请输入ID\")\r\n            return\r\n        }\r\n\r\n        // let code = this.editCode.string\r\n        // if (code.length == 0) {\r\n        //     GHelper.showTip(\"请输入正确的验证码\")\r\n        //     return\r\n        // }\r\n\r\n        if(this._item.count == 1){\r\n            let res = await GHallHttp.request(\"giveitem\", {id: this._item.id, user_id: id, nickname: name});\r\n            if(res.errcode)\r\n            {\r\n                GHelper.showTip(JSON.stringify(res.errcode))\r\n            }\r\n            else\r\n            {\r\n                GHelper.showTip(\"转赠成功，请注意查收\")\r\n    \r\n                GItemCfg.removeById(id)\r\n                GItemCfg.exItems.push(res.giveitem)\r\n    \r\n                GMsgCenter.send('update_myprize',{tag:'Page_MyPrizeDetail',item_id:this._item.item_id})\r\n                GAppDM.last_get_code=Date.now()\r\n                GPageMgr.closePage(\"Page_Donate\")\r\n            }\r\n        }else{\r\n            let num = this.numberFrame.getCurNum()\r\n\r\n            let res = await GHallHttp.request(\"giveItemMore\", {item_id:this._item.item_id,num:num,user_id:id, nickname: name});\r\n            if(res.errcode)\r\n            {\r\n                GHelper.showTip(JSON.stringify(res.errcode))\r\n            }\r\n            else\r\n            {\r\n                let item_id = this._item.item_id\r\n                GPageMgr.openPage(\"Page_Tips\",{\r\n                    tips:\"转赠\"+res.allNum+\"张,\"+\"成功\"+res.successNum+'张',\r\n                    buttons:[\r\n                        {\r\n                            label:\"确定\",\r\n                            callback:async ()=>\r\n                            {\r\n                                // 刷新\r\n                                GMsgCenter.send('update_myprize',{tag:'Page_MyPrizeDetail',item_id:item_id})\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n\r\n                GPageMgr.closePage(\"Page_Donate\")\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n    protected update(dt: number){\r\n        let remain = GAppDM.last_get_code ? GAppDM.last_get_code + 60000 - Date.now() : 0\r\n        if (remain < 0) {\r\n            remain = 0\r\n        }\r\n        remain = Math.floor(remain / 1000)\r\n        this.btnCode.getComponent(cc.Label).string = \"获取验证码\" + (remain ? `(${remain})` : \"\")\r\n    }\r\n\r\n    onOpen(item:BagItemItem)\r\n    {\r\n        console.log(\"test\")\r\n        this._item=item\r\n        let itemscfg = GItemCfg.getItemById(this._item.item_id)\r\n        if(itemscfg){\r\n            this.lb_entity.string =  itemscfg.name;\r\n        }\r\n      \r\n        // this.lbl_itemcount.string = this._count+\"\"\r\n        // let itemM = GItemCfg.getItemById(this._item.item_id)\r\n        // this.lbl_itemname.string = itemM.name\r\n        // GHelper.createSpriteFrame(itemM.icon,(sf)=>\r\n        // {\r\n        //     if(cc.isValid(this.sp_icon))\r\n        //     {\r\n        //         this.sp_icon.spriteFrame=sf\r\n        //     }\r\n        // })\r\n        this.numberFrame.setMax(this._item.count)\r\n    }\r\n}\r\n","import { core } from \"../../Framework/Core/Base\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { AddressItem, GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport Page_Address from \"./Page_Address\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_EditAddress extends Page {\r\n\r\n    @property(cc.EditBox)\r\n    editReceiver: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editPhone: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editAddress: cc.EditBox = null;\r\n\r\n    @property(cc.Button)\r\n    btn_remove: cc.Button = null;\r\n\r\n    @property(cc.Button)\r\n    btn_confirm: cc.Button = null;\r\n    protected _address:AddressItem=null\r\n    onLoad() {\r\n        this.btn_remove.node.active = false\r\n        this.btn_confirm.node.active = false\r\n    }\r\n    onOpen(address:AddressItem)\r\n    {\r\n        this.btn_confirm.node.active = true\r\n        if(!address)\r\n        {\r\n            this.btn_confirm.getComponentInChildren(cc.Label).string=\"添加新地址\"\r\n            return\r\n        }\r\n        this.btn_remove.node.active = true\r\n        this._address=core.clone(address)\r\n        this.editReceiver.string = this._address.name\r\n        this.editPhone.string = this._address.phone\r\n        this.editAddress.string = this._address.address\r\n    }\r\n    onEditReceiver() {\r\n        this.editReceiver.string = this.editReceiver.string.trim()\r\n    }\r\n\r\n    onEditPhone() {\r\n        this.editPhone.string = this.editPhone.string.trim()\r\n    }\r\n\r\n    onEditAddress() {\r\n        this.editAddress.string = this.editAddress.string.trim()\r\n    }\r\n\r\n    async Btn_Adress_OnClick() {\r\n        if(this._address)\r\n        {\r\n            this._address.name=this.editReceiver.string\r\n            this._address.phone=this.editPhone.string\r\n            this._address.address=this.editAddress.string\r\n            let res = await GHallHttp.request(\"updateaddressinfo\",{address:this._address})\r\n            if(res.errcode)\r\n            {\r\n                GHelper.showTip(res.errcode.des)\r\n                return\r\n            }\r\n            GUserMgr.addOneUser(res.user)\r\n        }\r\n        else\r\n        {\r\n            let address = new AddressItem()\r\n            address.name=this.editReceiver.string\r\n            address.phone=this.editPhone.string\r\n            address.address=this.editAddress.string\r\n            address.create_time=Date.now()\r\n            let res = await GHallHttp.request(\"addaddressinfo\",{address:address})\r\n            if(res.errcode)\r\n            {\r\n                GHelper.showTip(res.errcode.des)\r\n                return\r\n            }\r\n            GUserMgr.addOneUser(res.user)\r\n        }\r\n        let page = GPageMgr.getPage(\"Page_Address\") as Page_Address\r\n        page?.refresh()\r\n        GPageMgr.closePage(\"Page_EditAddress\")\r\n    }\r\n    Btn_Return_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_EditAddress\")\r\n    }\r\n    async Btn_Remove_OnClick(event)\r\n    {\r\n        let res = await GHallHttp.request(\"removeaddressinfo\",{create_time:this._address.create_time})\r\n        if(res.errcode)\r\n        {\r\n            GHelper.showTip(res.errcode.des)\r\n            return\r\n        }\r\n        GUserMgr.addOneUser(res.user)\r\n        let page = GPageMgr.getPage(\"Page_Address\") as Page_Address\r\n        page?.refresh()\r\n        GPageMgr.closePage(\"Page_EditAddress\")\r\n    }\r\n}\r\n","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_ExchangeTip extends Page {\r\n    \r\n    @property(cc.Label)\r\n    labelTips: cc.Label = null;\r\n\r\n    private id: number = 0;\r\n\r\n    init(id: number) {\r\n        this.id = id;\r\n        this.initTable();\r\n    }\r\n\r\n    initTable() {\r\n        // let config = configMgr.getConfig(ExchangeConfig, this.id);\r\n        // let prop = configMgr.getConfig(PropConfig, config.prop);\r\n        // this.labelTips.string = `是否使用${config.price}竞技点兑换${prop.name}?`;\r\n    }\r\n\r\n    onClickConfirm(event: cc.Event.EventCustom, data: string) {\r\n        // shopCtrl.requestExchange(this.id, 1, (msg) => {\r\n        //     this.hide();\r\n        //     propCtrl.getUserProps();\r\n        // })\r\n    }\r\n\r\n    onClickCancel() {\r\n        GPageMgr.closePage(\"Page_Exchange\")\r\n    }\r\n}\r\n","import { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { AddressItem, GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { BagItemItem, EBagItemState, GItemCfg } from \"../../Service/ItemService\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Exchange extends Page {\r\n    @property(cc.Node)\r\n    node_chooseaddress:cc.Node=null\r\n\r\n    @property(cc.Node)\r\n    node_addressinfo:cc.Node=null\r\n\r\n    @property(cc.Label)\r\n    lbl_address:cc.Label=null\r\n    @property(cc.Label)\r\n    lbl_name_phone:cc.Label=null\r\n\r\n    @property(cc.Sprite)\r\n    sp_icon:cc.Sprite=null\r\n\r\n    @property(cc.Label)\r\n    lbl_itemname:cc.Label=null\r\n    @property(cc.Label)\r\n    lbl_itemcount:cc.Label=null\r\n\r\n    protected _item:BagItemItem=null\r\n    protected _count=1\r\n    protected _address:AddressItem=null\r\n    onLoad()\r\n    {\r\n        GMsgCenter.register(\"address_changed\",this.init.bind(this),this)\r\n        this.init()\r\n    }\r\n    onDestroy()\r\n    {\r\n        GMsgCenter.unregister(\"address_changed\",this)\r\n    }\r\n    init()\r\n    {\r\n        let address_time = GUserMgr.self_user.address_time||0\r\n        if(address_time<=0)\r\n        {\r\n            this.node_addressinfo.active=false\r\n            this.node_chooseaddress.active=true\r\n            return\r\n        }\r\n        let addresses = GUserMgr.self_user.addresses||[]\r\n        for(let i=0;i<addresses.length;++i)\r\n        {\r\n            if(addresses[i].create_time==address_time)\r\n            {\r\n                this._address=addresses[i]\r\n                break\r\n            }\r\n        }\r\n        if(!this._address)\r\n        {\r\n            this.node_addressinfo.active=false\r\n            this.node_chooseaddress.active=true\r\n        }\r\n        else\r\n        {\r\n            this.lbl_name_phone.string = this._address.name+\" \"+this._address.phone\r\n            this.lbl_address.string = this._address.address\r\n        }\r\n    }\r\n\r\n    onOpen(item:BagItemItem)\r\n    {\r\n        this._item=item\r\n        this.lbl_itemcount.string = this._count+\"\"\r\n        let itemM = GItemCfg.getItemById(this._item.item_id)\r\n        this.lbl_itemname.string = itemM.name\r\n        GHelper.createSpriteFrame(itemM.icon,(sf)=>\r\n        {\r\n            if(cc.isValid(this.sp_icon))\r\n            {\r\n                this.sp_icon.spriteFrame=sf\r\n            }\r\n        })\r\n    }\r\n\r\n    Btn_Address_OnClick(event) {\r\n        GPageMgr.openPage(\"Page_Address\")\r\n    }\r\n\r\n    Btn_Minus_OnClick(event)\r\n    {\r\n        if(this._count<=1)\r\n        {\r\n            return\r\n        }\r\n        --this._count\r\n        this.lbl_itemcount.string = this._count+\"\"\r\n    }\r\n\r\n    Btn_Add_OnClick(event)\r\n    {\r\n        if(this._count>=this._item.count)\r\n        {\r\n            return\r\n        }\r\n        ++this._count\r\n        this.lbl_itemcount.string = this._count+\"\"\r\n    }\r\n\r\n    Btn_Return_OnClick(event) {\r\n        GPageMgr.closePage(\"Page_Exchange\")\r\n    }\r\n\r\n    Btn_Exchange_OnClick(event)\r\n    {\r\n        if(!this._address)\r\n        {\r\n            GHelper.showTip(\"请先选择地址\")\r\n            return\r\n        }\r\n        GHallHttp.request(\"useitem\",{addressinfo:this._address,bag_id:this._item.id,count:this._count}).then((rs)=>\r\n        {\r\n            //this._item.state=EBagItemState.Using\r\n            GMsgCenter.send(\"item_changed\")\r\n            GPageMgr.closePage(\"Page_Exchange\")\r\n        })\r\n    }\r\n}","import { resMgr } from \"../../manager/ResourceManager\";\r\nimport { GTexasTableDM } from \"../../DataModel/TexasTableDataModel\";\r\nimport { GSettingDM } from \"../../Framework/DataModel/SettingDataModel\";\r\nimport { GNetGameTexas } from \"../../Net/NetGameTexas\";\r\nimport { GMsgCenter, MessageCenter } from \"../../utils/MessageCenter\";\r\nimport Card from \"../game/play/Card\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport Page_Table from \"./Page_Table\";\r\nimport { GPageMatchList } from \"./Page_MatchList\";\r\nimport HorseRaceLamp from \"../game/HorseRaceLamp\";\r\nimport { GMatchSer, MultiDynamicReward } from \"../../Service/MatchService\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GItemCfg } from \"../../Service/ItemService\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { HashMap } from \"../../utils/HashMap\";\r\nimport { EMatchState } from \"../../Config/_ini_\";\r\nimport { ykUtils } from \"../../utils/YkUtils\"\r\nimport MultiPlatform from '../../platform/MultiPlatform';\r\nimport { layerMgr } from \"../../manager/LayerManager\"\r\n\r\n\r\nimport { matMgr } from \"../../../script/manager/MaterialManager\"\r\nimport { GAudioTool } from \"../../Framework/Logic/AudioTool\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Game extends Page {\r\n\r\n    @property(cc.Sprite)\r\n    imgBg: cc.Sprite = null;\r\n\r\n    @property(cc.Node)\r\n    nodeMenu: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeType: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeSetting: cc.Node = null;\r\n\r\n    @property(cc.Prefab)\r\n    card: cc.Prefab = null;\r\n    @property(cc.Node)\r\n    card0: cc.Node = null;\r\n    @property(cc.Node)\r\n    card1: cc.Node = null;\r\n    @property(cc.Node)\r\n    card2: cc.Node = null;\r\n    @property(cc.Node)\r\n    card3: cc.Node = null;\r\n    @property(cc.Node)\r\n    card4: cc.Node = null;\r\n\r\n    @property(cc.Toggle)\r\n    item1: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    item2: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    item3: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    item4: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    item5: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    carditem1: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    carditem2: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    carditem3: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    carditem4: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    cardbgitem1: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    cardbgitem2: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    cardbgitem3: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    cardbgitem4: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    switch: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    bb: cc.Toggle = null;\r\n\r\n    @property(cc.Node)\r\n    richtext: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodePoster: cc.Node = null;\r\n    @property(Page_Table)\r\n    pagetable:Page_Table=null\r\n\r\n    @property(cc.Label)\r\n    matchName:cc.Label = null;\r\n\r\n    //m_public = [];\r\n    @property([cc.Label])\r\n    lbl_curs:cc.Label[]=[]\r\n\r\n    @property([cc.Label])\r\n    lbl_chooses:cc.Label[]=[]\r\n\r\n    @property(cc.Toggle)\r\n    tg_pre:cc.Toggle=null\r\n    @property(cc.Toggle)\r\n    tg_aft:cc.Toggle=null\r\n\r\n\r\n    @property(cc.Node)\r\n    success_erweima: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    fail_erweima: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    fail_share_invite_lab: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    fail_share_invite_codeLab: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    success_share_invite_codeLab: cc.Label = null;\r\n\r\n\r\n    protected _table_id=-1\r\n    get tableId()\r\n    {\r\n        return this._table_id\r\n    }\r\n    \r\n\r\n    initGameShare()\r\n    {\r\n        this.loadInviteCode();\r\n        this.fail_share_invite_lab.string = GUserMgr.self_user.nickname+'邀请您加入ZDPK';\r\n        this.fail_share_invite_codeLab.string = GUserMgr.self_user_id+\"\";\r\n        this.success_share_invite_codeLab.string = GUserMgr.self_user_id+\"\";\r\n    }\r\n\r\n    async loadInviteCode(){\r\n        let code =  await ykUtils.loadNetSpriteFrame(ykUtils.PATH.png_kefuCode)\r\n        if(code){\r\n            this.success_erweima.getComponent(cc.Sprite).spriteFrame = code\r\n            this.fail_erweima.getComponent(cc.Sprite).spriteFrame = code\r\n        }\r\n    }\r\n\r\n    public onLoad(): void {\r\n        this.registerGameToggle();\r\n        this.registerCardToggle();\r\n        this.registerCardBgToggle();\r\n        this.initGameBg();\r\n        this.initCardStyle();\r\n        this.showALlTable()\r\n        this.initSwitch()\r\n        this.reloadUI()\r\n        this.initBb()\r\n        \r\n\r\n        cc.debug.setDisplayStats(false);\r\n        GMsgCenter.register(\"match_result\", this.match_result.bind(this), this);\r\n        this._tryIpad()\r\n        this.refreshQuickRaise()\r\n        matMgr.updateVerticesX()\r\n    }   \r\n    private aft1 = [2,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.5,4,4.5,5,6,7,999]\r\n    private aft2 = [20,25,33,40,50,60,66,75,100,120,150,200,250,300,350,400,450,500,999]\r\n\r\n    refreshQuickRaise(choiceNum?)\r\n    {\r\n\r\n        GSettingDM.updateQuickRaisePre();\r\n        let pre=GSettingDM.quick_raise_pre||[2,2.5,2.8,3]\r\n        let aft = ykUtils.clone(this.aft1)\r\n\r\n        if(choiceNum!=null){\r\n            this.lbl_curs[choiceNum].node.parent.getComponent(cc.Toggle).check()\r\n        }\r\n        \r\n        if(this.tg_pre.isChecked)\r\n        {\r\n            //pre.sort((a,b)=>a-b)\r\n            for(let i=0;i<this.lbl_curs.length;++i)\r\n            {\r\n\r\n                if(pre[i] == null){\r\n                    this.lbl_curs[i].node.parent.active = false\r\n                    continue\r\n                }\r\n                this.lbl_curs[i].node.parent.active = true\r\n\r\n                if(pre[i]!=999)\r\n                {\r\n                    this.lbl_curs[i].string=pre[i]+\"X\"\r\n                }\r\n                else\r\n                {\r\n                    this.lbl_curs[i].string=\"All In\"\r\n                }\r\n                let index = aft.indexOf(pre[i])\r\n                if(index>=0)\r\n                {\r\n                    aft.splice(index,1)\r\n                }\r\n            }\r\n            for(let i=0;i<this.lbl_chooses.length&&i<aft.length;++i)\r\n            {\r\n                if(aft[i]!=999)\r\n                {\r\n                    this.lbl_chooses[i].string=aft[i]+\"X\"\r\n                }\r\n                else\r\n                {\r\n                    this.lbl_chooses[i].string=\"All In\"\r\n                }\r\n                this.lbl_chooses[i].node.parent.active=true\r\n            }\r\n            for(let i=aft.length;i<this.lbl_chooses.length;++i)\r\n            {\r\n                this.lbl_chooses[i].node.parent.active=false\r\n            }\r\n        }\r\n        else\r\n        {    \r\n            pre = GSettingDM.quick_raise_aft||[33,50,60,100]\r\n            aft = ykUtils.clone(this.aft2)\r\n            //pre.sort((a,b)=>a-b)\r\n            for(let i=0;i<this.lbl_curs.length;++i)\r\n            {\r\n                if(pre[i] == null){\r\n                    this.lbl_curs[i].node.parent.active = false\r\n                    continue\r\n                }\r\n                this.lbl_curs[i].node.parent.active = true\r\n\r\n\r\n                if(pre[i]!=999)\r\n                {\r\n                    this.lbl_curs[i].string=pre[i]+\"%\"\r\n                }\r\n                else\r\n                {\r\n                    this.lbl_curs[i].string=\"All In\"\r\n                }\r\n                let index = aft.indexOf(pre[i])\r\n                if(index>=0)\r\n                {\r\n                    aft.splice(index,1)\r\n                }\r\n            }\r\n            for(let i=0;i<this.lbl_chooses.length&&i<aft.length;++i)\r\n            {\r\n                if(aft[i]!=999)\r\n                {\r\n                    this.lbl_chooses[i].string=aft[i]+\"%\"\r\n                }\r\n                else\r\n                {\r\n                    this.lbl_chooses[i].string=\"All In\"\r\n                }\r\n                this.lbl_chooses[i].node.parent.active=true\r\n            }\r\n            for(let i=aft.length;i<this.lbl_chooses.length;++i)\r\n            {\r\n                this.lbl_chooses[i].node.parent.active=false\r\n            }\r\n        }\r\n    }\r\n    Btn_QuickRaiseTitle_OnClick()\r\n    {\r\n        for(let i=0;i<this.lbl_curs.length;++i)\r\n        {\r\n            let tg = this.lbl_curs[i].node.parent.getComponent(cc.Toggle)\r\n            if(tg.isChecked)\r\n            {\r\n                tg.uncheck()\r\n                break\r\n            }\r\n        }\r\n        for(let i=0;i<this.lbl_chooses.length;++i)\r\n        {\r\n            let tg = this.lbl_chooses[i].node.parent.getComponent(cc.Toggle)\r\n            if(tg.isChecked)\r\n            {\r\n                tg.uncheck()\r\n                break\r\n            }\r\n        }\r\n        this.refreshQuickRaise()\r\n    }\r\n\r\n\r\n\r\n    Btn_QuickRaiseChoose_OnClick()\r\n    {\r\n        let cur_index = -1\r\n        for(let i=0;i<this.lbl_curs.length;++i)\r\n        {\r\n            let tg = this.lbl_curs[i].node.parent.getComponent(cc.Toggle)\r\n            if(tg.isChecked)\r\n            {\r\n                cur_index=i\r\n                break\r\n            }\r\n        }\r\n        if(cur_index<0)\r\n        {\r\n            return\r\n        }\r\n        let choose_index = -1\r\n        for(let i=0;i<this.lbl_chooses.length;++i)\r\n        {\r\n            let tg = this.lbl_chooses[i].node.parent.getComponent(cc.Toggle)\r\n            if(tg.isChecked)\r\n            {\r\n                choose_index=i\r\n                break\r\n            }\r\n        }\r\n        if(choose_index<0)\r\n        {\r\n            return\r\n        }\r\n        // this.lbl_curs[cur_index].node.parent.getComponent(cc.Toggle).uncheck()\r\n        this.lbl_chooses[choose_index].node.parent.getComponent(cc.Toggle).uncheck()\r\n        let str=this.lbl_chooses[choose_index].string\r\n        str=str.replace(\"X\",\"\")\r\n        str=str.replace(\"%\",\"\")\r\n        let num = 0\r\n        if(str == 'All In'){\r\n            num = 999\r\n        }else{\r\n            num = parseFloat(str)\r\n        }\r\n        \r\n        let curList\r\n        let newList = []\r\n        let aft\r\n        if(this.tg_pre.isChecked)\r\n        {   \r\n            \r\n            GSettingDM.quick_raise_pre[cur_index]=num\r\n            // 检测数组\r\n            curList = GSettingDM.quick_raise_pre\r\n           \r\n            aft = this.aft1\r\n\r\n            // GSettingDM.updateQuickRaisePre()\r\n        }\r\n        else\r\n        {\r\n            GSettingDM.quick_raise_aft[cur_index]=num\r\n            curList = GSettingDM.quick_raise_aft\r\n            // GSettingDM.updateQuickRaiseAft()\r\n            aft = this.aft2\r\n        }\r\n\r\n\r\n\r\n        // for(var i=0;i<curList.length;i++){\r\n        //     if(i<cur_index){\r\n        //         if(curList[i]<num){\r\n        //             newList.push(curList[i])\r\n        //         }else{\r\n        //             // 不改变\r\n        //         }\r\n        //     }else if(i>cur_index){\r\n        //         if(curList[i]>newList[newList.length-1]){\r\n        //              // 不改变\r\n        //              newList.push(curList[i])\r\n        //         }else{\r\n        //             let idx = aft.indexOf(newList[newList.length-1])\r\n        //             if(idx!=-1&&!ykUtils.isEmpty(aft[idx+1])){\r\n        //                 newList.push(aft[idx+1])\r\n                    \r\n        //             }else{\r\n        //                 curList.splice(i,1)\r\n        //             }\r\n        //         }\r\n        //     }else{\r\n           \r\n        //         newList.push(num)\r\n        //     }\r\n        // }\r\n        // console.log('curlist end ',newList)\r\n       \r\n\r\n        // for(var i= 0;i<4;i++){\r\n        //     if(!newList[i]){\r\n        //         let idx = aft.indexOf(newList[newList.length-1])\r\n        //         if(idx!=-1&&!ykUtils.isEmpty(aft[idx+1])){\r\n        //             newList.push(aft[idx+1])\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n\r\n        // if(this.tg_pre.isChecked)\r\n        // {  \r\n        //     GSettingDM.quick_raise_pre = newList\r\n        //  }else{\r\n        //     GSettingDM.quick_raise_aft = newList\r\n        // }\r\n\r\n        \r\n        \r\n\r\n        this.refreshQuickRaise()\r\n    }\r\n    initHorseRace() {\r\n        let tableinfo = GTexasTableDM.getTableInfo(this._table_id)\r\n        let mim = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        this.richtext.getComponent(HorseRaceLamp).text = mim.match.name\r\n    }\r\n    onEventShow()\r\n    {\r\n        console.log(\"游戏进入前台\")\r\n\r\n\r\n        \r\n        // if(!GPageTable||!cc.isValid(this))\r\n        // {\r\n        //     return\r\n        // }\r\n        // if (this._table_id==-1) return\r\n        // console.log(\"reopen for event_show\")\r\n        // GPageMgr.reOpenPage(\"Page_Game\",this._table_id)\r\n        // this._table_id=-1\r\n        return;\r\n    }\r\n    start()\r\n    {\r\n        // cc.game.once(cc.game.EVENT_SHOW, this.onEventShow.bind(this),this);\r\n        this.initGame()\r\n    }\r\n\r\n\r\n\r\n    initGame(_table_id=null){\r\n        if(_table_id!=null){\r\n            this._table_id = _table_id\r\n        }\r\n        \r\n        this.pagetable.initTable(this._table_id)\r\n        let tableinfo = GTexasTableDM.getTableInfo(this._table_id)\r\n        let matchM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        if(matchM.state==EMatchState.Waiting)\r\n        {\r\n            GPageMgr.openPage(\"Page_MatchInfo\",this._table_id)\r\n        }\r\n    }\r\n\r\n\r\n    //reopen不会调用这里\r\n    onClose()\r\n    {\r\n        GNetGameTexas.close()\r\n    }\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"match_result\", this);\r\n        GPageMgr.node.scale=1\r\n        this._table_id=-1\r\n    }\r\n    onOpen(table_id:number)\r\n    {\r\n        this._table_id=table_id\r\n        this.initHorseRace()\r\n    }\r\n\r\n    registerGameToggle() {\r\n        this.item1.node.on('toggle', this.callback, this);\r\n        this.item2.node.on('toggle', this.callback, this);\r\n        this.item3.node.on('toggle', this.callback, this);\r\n        this.item4.node.on('toggle', this.callback, this);\r\n        this.item5.node.on('toggle', this.callback, this);\r\n    }\r\n\r\n    registerCardToggle() {\r\n        this.carditem1.node.on('toggle', this.cardcallback, this);\r\n        this.carditem2.node.on('toggle', this.cardcallback, this);\r\n        this.carditem3.node.on('toggle', this.cardcallback, this);\r\n        this.carditem4.node.on('toggle', this.cardcallback, this);\r\n    }\r\n\r\n    registerCardBgToggle() {\r\n        this.cardbgitem1.node.on('toggle', this.cardbgcallback, this);\r\n        this.cardbgitem2.node.on('toggle', this.cardbgcallback, this);\r\n        this.cardbgitem3.node.on('toggle', this.cardbgcallback, this);\r\n        this.cardbgitem4.node.on('toggle', this.cardbgcallback, this);\r\n    }\r\n\r\n    initGameBg() {\r\n        GSettingDM.select_bg = cc.sys.localStorage.getItem(\"setting_select_bg\")||1\r\n        switch(Number(GSettingDM.select_bg)) {\r\n            case 1:\r\n                this.item1.check();\r\n                break;\r\n            case 2:\r\n                this.item2.check();\r\n                break;\r\n            case 3:\r\n                this.item3.check();\r\n                break;\r\n            case 4:\r\n                this.item4.check();\r\n                break\r\n            case 5:\r\n                this.item5.check();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public initCardStyle() {\r\n        GSettingDM.card_style = cc.sys.localStorage.getItem(\"setting_card_style\")||1\r\n        switch(Number(GSettingDM.card_style)) {\r\n            case 1:\r\n                this.carditem1.check();\r\n                break;\r\n            case 2:\r\n                this.carditem2.check();\r\n                break;\r\n            case 3:\r\n                this.carditem3.check();\r\n                break;\r\n            case 4:\r\n                this.carditem4.check();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public initCardBgStyle() {\r\n        GSettingDM.cardbg_style = cc.sys.localStorage.getItem(\"setting_cardbg_style\")||1\r\n        switch(Number(GSettingDM.cardbg_style)) {\r\n            case 1:\r\n                this.cardbgitem1.check();\r\n                break;\r\n            case 2:\r\n                this.cardbgitem2.check();\r\n                break;\r\n            case 3:\r\n                this.cardbgitem3.check();\r\n                break;\r\n            case 4:\r\n                this.cardbgitem4.check();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    public callback(res) {\r\n        if (res.node.name==\"item1\") {\r\n            cc.sys.localStorage.setItem(\"setting_select_bg\", 1)\r\n            GSettingDM.select_bg = \"1\"\r\n        }\r\n        else if (res.node.name==\"item2\") {\r\n            cc.sys.localStorage.setItem(\"setting_select_bg\", 2)\r\n            GSettingDM.select_bg = \"2\"\r\n        }\r\n        else if (res.node.name==\"item3\") {\r\n            cc.sys.localStorage.setItem(\"setting_select_bg\", 3)\r\n            GSettingDM.select_bg = \"3\"\r\n        }\r\n        else if (res.node.name==\"item4\") {\r\n            cc.sys.localStorage.setItem(\"setting_select_bg\", 4)\r\n            GSettingDM.select_bg = \"4\"\r\n        }\r\n        else if (res.node.name==\"item5\") {\r\n            cc.sys.localStorage.setItem(\"setting_select_bg\", 5)\r\n            GSettingDM.select_bg = \"5\"\r\n        }\r\n        this.reloadUI()\r\n    }\r\n\r\n    public cardcallback(res) {\r\n        if (res.node.name==\"carditem1\") {\r\n            cc.sys.localStorage.setItem(\"setting_card_style\", 1)\r\n            GSettingDM.card_style = \"1\"\r\n        }\r\n        else if (res.node.name==\"carditem2\") {\r\n            cc.sys.localStorage.setItem(\"setting_card_style\", 2)\r\n            GSettingDM.card_style = \"2\"\r\n        } \r\n        else if (res.node.name==\"carditem3\") {\r\n            cc.sys.localStorage.setItem(\"setting_card_style\", 3)\r\n            GSettingDM.card_style = \"3\"\r\n        }\r\n        else if (res.node.name==\"carditem4\") {\r\n            cc.sys.localStorage.setItem(\"setting_card_style\", 4)\r\n            GSettingDM.card_style = \"4\"\r\n        }\r\n        MessageCenter.getInstance().send(\"cardstyle\", GSettingDM.card_style)\r\n    }\r\n\r\n    public cardbgcallback(res) {\r\n        if (res.node.name==\"cardbgitem1\") {\r\n            cc.sys.localStorage.setItem(\"setting_cardbg_style\", 1)\r\n            GSettingDM.cardbg_style = \"1\"\r\n        }\r\n        else if (res.node.name==\"cardbgitem2\") {\r\n            cc.sys.localStorage.setItem(\"setting_cardbg_style\", 2)\r\n            GSettingDM.cardbg_style = \"2\"\r\n        } \r\n        else if (res.node.name==\"cardbgitem3\") {\r\n            cc.sys.localStorage.setItem(\"setting_cardbg_style\", 3)\r\n            GSettingDM.cardbg_style = \"3\"\r\n        }\r\n        else if (res.node.name==\"cardbgitem4\") {\r\n            cc.sys.localStorage.setItem(\"setting_cardbg_style\", 4)\r\n            GSettingDM.cardbg_style = \"4\"\r\n        }\r\n        MessageCenter.getInstance().send(\"cardbgstyle\", GSettingDM.cardbg_style)\r\n    }\r\n\r\n    public showALlTable()\r\n    {\r\n        let tableinfo = GTexasTableDM.getTableInfo(this._table_id)\r\n        if(!tableinfo)\r\n        {\r\n            return\r\n        }\r\n\r\n    }\r\n\r\n    onReady() {\r\n        this.nodeMenu.active = false;\r\n        this.nodeType.parent.active = false;\r\n        this.nodeSetting.parent.active = false;\r\n    }\r\n\r\n    update(dt) {\r\n\r\n    }\r\n\r\n    onShow() {\r\n        this.initTable();\r\n    }\r\n\r\n    reloadUI() {\r\n        GSettingDM.select_bg = cc.sys.localStorage.getItem(\"setting_select_bg\")||1\r\n        resMgr.loadImage(\"image/game/bg/\" + GSettingDM.select_bg, (res) => {\r\n            cc.isValid(this.imgBg) && (this.imgBg.spriteFrame = res);\r\n        })\r\n    }\r\n\r\n    initTable() {\r\n    }\r\n\r\n    onClickPause() {\r\n        GPageMgr.openPage(\"Page_Pause\")\r\n    }\r\n\r\n    onClickSpeed() {\r\n        this.initTable();\r\n    }\r\n\r\n    onClickLeaveRoom() {\r\n        GNetGameTexas.close()\r\n        GAudioTool.resetEffect();\r\n        GPageMgr.closePage(\"Page_Game\")\r\n        GPageMatchList?.refresh()\r\n    }\r\n\r\n    onClickShowMenu() {\r\n        this.nodeMenu.active = true;\r\n    }\r\n\r\n    onClickHideMenu() {\r\n        this.nodeMenu.active = false;\r\n    }\r\n\r\n    onClickShowType() {\r\n        this.nodeMenu.active = false;\r\n        this.nodeType.parent.active = true;\r\n        this.nodeType.parent.getComponent(cc.Button).enabled = false;\r\n        this.nodeType.x = -this.nodeType.width;\r\n\r\n        cc.Tween.stopAllByTarget(this.nodeType);\r\n        cc.tween(this.nodeType)\r\n        .to(0.2, {x: 0})\r\n        .call(() => {\r\n            this.nodeType.parent.getComponent(cc.Button).enabled = true;\r\n        })\r\n        .start();\r\n    }\r\n\r\n    getRewardsLen()\r\n    {\r\n\r\n        let page = GPageMgr.getPage(\"Page_Game\") as Page_Game\r\n        if(!page)\r\n        {\r\n            return\r\n        }\r\n        let table_id = page.tableId\r\n        let tableinfo = GTexasTableDM.getTableInfo(table_id)\r\n        let matchInsM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        let matchM = matchInsM.match\r\n        if (!matchM) {\r\n            return 0;\r\n        }\r\n    \r\n        let rewards = matchM.reward\r\n        if(matchM.dynamic_reward>0)\r\n        {\r\n            rewards=rewards.concat()\r\n            let coin = 0\r\n            for(let i=0;i<matchM.signup_cost.length;++i)\r\n            {\r\n                if(matchM.signup_cost[i].id==-99)\r\n                {\r\n                    coin=matchM.signup_cost[i].count\r\n                    break\r\n                }\r\n            }\r\n            let total_coin = matchInsM.player_num*coin\r\n            let now_coin = 0\r\n            let last_coin=0\r\n            for (let i = 0; i < rewards.length; i++)\r\n            {\r\n                let rd = rewards[i]\r\n                let dcoin=0\r\n                if(rd.id==-99)\r\n                {\r\n                    dcoin=rd.count\r\n                }\r\n                else\r\n                {\r\n                    let item = GItemCfg.getItemById(rd.id)\r\n            \r\n                    if(item==null)\r\n                    {\r\n                        GHelper.showTip(\"比赛奖励不存在id=\"+rd.id)\r\n                        return;\r\n                    }\r\n                    dcoin=item.coin*rd.count\r\n                }\r\n                now_coin+=dcoin\r\n                last_coin=dcoin\r\n            }\r\n            let dtcoin = total_coin-now_coin\r\n            if(dtcoin>0)\r\n            {\r\n                let num = Math.floor(dtcoin/last_coin)\r\n                let left = dtcoin%last_coin\r\n                for(let i=0;i<num;++i)\r\n                {\r\n                    rewards.push(rewards[rewards.length-1])\r\n                }\r\n                if(left>0)\r\n                {\r\n                    if(matchM.dynamic_reward==1)\r\n                    {\r\n                        rewards.push({id:-99,count:left})\r\n                    }\r\n                    else\r\n                    {\r\n                        let signup_coin = coin\r\n                        //1 剩下手数\r\n                        let left_signup_num=Math.floor(left/signup_coin)||1\r\n                        //2 计算出属于哪个区间，病找出这个区间配置\r\n                        let mutireward = GMatchSer.mutireward\r\n                        let mr:MultiDynamicReward = null\r\n                        for(let i=0;i<mutireward.length;++i)\r\n                        {\r\n                            let temp = mutireward[i]\r\n                            if(left_signup_num>=temp.min&&left_signup_num<temp.max)\r\n                            {\r\n                                mr = temp\r\n                                break\r\n                            }\r\n                        }\r\n                        if(!mr)\r\n                        {\r\n                            mr = mutireward[mutireward.length-1]\r\n                        }\r\n                        for(let i=0;i<mr.rate.length;++i)\r\n                        {\r\n                            rewards.push({id:-99,count:Math.floor(left*mr.rate[i]/100)||1})\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return rewards.length;\r\n    }\r\n\r\n    onClickHideType() {\r\n        this.nodeType.parent.getComponent(cc.Button).enabled = false;\r\n        cc.Tween.stopAllByTarget(this.nodeType);\r\n        cc.tween(this.nodeType)\r\n        .to(0.2, {x: -this.nodeType.width})\r\n        .call(() => {\r\n            this.nodeType.parent.active = false;\r\n        })\r\n        .start();\r\n    }\r\n\r\n    initQuickRate() {\r\n        GSettingDM.select_bg = cc.sys.localStorage.getItem(\"setting_select_bg\")||1\r\n        switch(Number(GSettingDM.select_bg)) {\r\n            case 1:\r\n                this.item1.check();\r\n                break;\r\n            case 2:\r\n                this.item2.check();\r\n                break;\r\n            case 3:\r\n                this.item3.check();\r\n                break;\r\n            case 4:\r\n                this.item4.check();\r\n                break\r\n            case 5:\r\n                this.item5.check();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    onClickShowSetting() {\r\n        this.nodeMenu.active = false;\r\n        this.nodeSetting.parent.active = true;\r\n        this.nodeSetting.parent.getComponent(cc.Button).enabled = false;\r\n        this.nodeSetting.y = this.nodeSetting.height;\r\n        this.initGameBg()\r\n        this.initCardStyle()\r\n        this.initCardBgStyle()\r\n\r\n        //this.nodeSetting.parent.getComponent(cc.Button).enabled = true;\r\n        cc.Tween.stopAllByTarget(this.nodeSetting);\r\n        cc.tween(this.nodeSetting)\r\n        .to(0.2, {y: 0})\r\n        .call(() => {\r\n            this.nodeSetting.parent.getComponent(cc.Button).enabled = true;\r\n        })\r\n        .start();\r\n\r\n        this.initBb()\r\n    }\r\n\r\n    onClickHideSetting() {\r\n        this.nodeSetting.parent.getComponent(cc.Button).enabled = false;\r\n        this.nodeSetting.parent.active = false;\r\n\r\n        // cc.Tween.stopAllByTarget(this.nodeSetting);\r\n        // cc.tween(this.nodeSetting)\r\n        // .to(0.2, {y: this.nodeSetting.height})\r\n        // .call(() => {\r\n        //     this.nodeSetting.parent.active = false;\r\n        // })\r\n        // .start();\r\n    }\r\n\r\n    onClickExit() {\r\n        this.onClickLeaveRoom()\r\n    }\r\n\r\n    async onClickDetail() {\r\n        let page = await GPageMgr.openPage(\"Page_MatchInfo\",this._table_id)\r\n        page.node.active = true\r\n    }\r\n\r\n    onClickSignup() {\r\n        GPageMgr.openPage(\"Page_Signup\")\r\n    }\r\n\r\n    onItemClicked() {\r\n\r\n    }\r\n\r\n    initSwitch() {\r\n        if (GSettingDM.soundOn) {\r\n            this.switch.check();\r\n            this.switch.node.getChildByName('Background').active = false;\r\n        }\r\n        else\r\n        {\r\n            this.switch.uncheck();\r\n            this.switch.node.getChildByName('Background').active = true;\r\n        }\r\n    }\r\n\r\n    initBb() {\r\n        if (GSettingDM.bbOn) {\r\n            this.bb.check();\r\n            this.bb.node.getChildByName('Background').active = false;\r\n        }\r\n        else\r\n        {\r\n            this.bb.uncheck();\r\n            this.bb.node.getChildByName('Background').active = true;\r\n        }\r\n    }\r\n    onSwitch() {\r\n        if (this.switch.isChecked) {\r\n            GSettingDM.setSoundOn(true);\r\n            this.switch.node.getChildByName('Background').active = false;\r\n        }\r\n        else\r\n        {\r\n            GSettingDM.setSoundOn(false);\r\n            this.switch.node.getChildByName('Background').active = true;\r\n        }\r\n    }\r\n\r\n    onBb(){\r\n        if (this.bb.isChecked) {\r\n            GSettingDM.setBbOn(true);\r\n            this.bb.node.getChildByName('Background').active = false;\r\n        }\r\n        else\r\n        {\r\n            GSettingDM.setBbOn(false);\r\n            this.bb.node.getChildByName('Background').active = true;\r\n        }\r\n\r\n        cc.find('Page_Table',this.node).getComponent('Page_Table')['refreshNumber']()\r\n    }\r\n\r\n    onCloseResultShare()\r\n    {\r\n        this.nodePoster.active = false;\r\n        this.nodePoster.active = false;\r\n    }\r\n\r\n    onClosePoster() {\r\n        //有奖品\r\n        this.nodePoster.active = false;\r\n    }\r\n\r\n    onClosePosterNo() {\r\n        //没有奖品\r\n        this.nodePoster.active = false;\r\n    }\r\n\r\n    match_result(jsonData) {\r\n        GUserMgr.refreshSelfUser()\r\n        if(this._table_id!=jsonData.table_id)\r\n        {\r\n            return\r\n        }\r\n\r\n        console.log(jsonData)\r\n        this.initGameShare();\r\n        this.nodePoster.active = true;\r\n        this.nodePoster.getChildByName('poster').active = false;\r\n        this.nodePoster.getChildByName('posterno').active = false;\r\n        \r\n\r\n        let tableinfo = GTexasTableDM.getTableInfo(this._table_id)\r\n        let mim = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        this.matchName.string = mim.match.name\r\n        \r\n        //请求更新背包\r\n        GItemCfg.init();\r\n        if (jsonData.reward != null) {\r\n            this.nodePoster.getChildByName('poster').active = true\r\n            let poster = this.nodePoster.getChildByName('poster').getChildByName('poster');\r\n            poster.active = true;\r\n            cc.find('nameLayout/label_name',poster).getComponent(cc.Label).string = GUserMgr.self_user.nickname;\r\n\r\n            let map : HashMap<number, string> = new HashMap();\r\n            map.add(1, \"一\");\r\n            map.add(2, \"二\");\r\n            map.add(3, \"三\");\r\n            map.add(4, \"四\");\r\n            map.add(5, \"五\");\r\n            map.add(6, \"六\");\r\n            map.add(7, \"七\");\r\n            map.add(8, \"八\");\r\n            map.add(9, \"九\");\r\n            map.add(10, \"十\");\r\n\r\n            let suffix: string = \"image/prize/\" + jsonData.rank;\r\n            let path = `${suffix}`;\r\n    \r\n            resMgr.loadImage(path, (res) => {\r\n                cc.isValid(poster.getChildByName('img_reward')) && (poster.getChildByName('img_reward').getComponent(cc.Sprite).spriteFrame = res);\r\n            })\r\n\r\n            if (jsonData.rank > 10) {\r\n                \r\n                cc.find('nameLayout/label_rank',poster).getComponent(cc.Label).string = \"第\" + jsonData.rank + \"名\";\r\n            }\r\n            else\r\n            {\r\n                let ch = map.get(jsonData.rank);\r\n                cc.find('nameLayout/label_rank',poster).getComponent(cc.Label).string = \"第\" + ch + \"名\";\r\n            }\r\n     \r\n\r\n            let matchitem = jsonData.reward;\r\n            if (matchitem.id == -99) {\r\n                poster.getChildByName('label_prize').getComponent(cc.Label).string = '欢乐点' + \"X\" + matchitem.count\r\n                poster.getChildByName('label_tips').getComponent(cc.Label).string = \"恭喜获得第\" + jsonData.rank + \"名，奖励已发送到您卡包\"\r\n            }\r\n            else\r\n            {\r\n                let itemcfg = GItemCfg.getItemById(matchitem.id)\r\n                poster.getChildByName('label_prize').getComponent(cc.Label).string = itemcfg.name + \"(\" + matchitem.count + \")\"\r\n                poster.getChildByName('label_tips').getComponent(cc.Label).string = \"恭喜获得第\" + jsonData.rank + \"名，\" + itemcfg.name + \"已发送到您卡包\"\r\n            }\r\n\r\n            let rankImageStr = jsonData.rank<=2?(\"rewardHb\"+jsonData.rank):\"rewardHb3\";\r\n            resMgr.loadImage(rankImageStr, (res) => {\r\n                let bg = this.nodePoster.getChildByName('poster').getChildByName(\"poster\");\r\n                cc.isValid(bg) && (bg.getComponent(cc.Sprite).spriteFrame = res);\r\n            })\r\n        }\r\n        else\r\n        {\r\n            // 补丁 报名显示\r\n            let cansignup = GMatchSer.canSignup(this._table_id)\r\n            this.node.getChildByName(\"Page_Table\").getComponent(\"Page_Table\").reshSignUp(cansignup);\r\n           \r\n            // 处理淘汰随机背景\r\n            this.nodePoster.getChildByName('posterno').active = true;\r\n            let random = Math.floor (Math.random()*3) + 1\r\n            this.fail_share_invite_codeLab.node.color = random==3?cc.Color.WHITE:cc.Color.BLACK;\r\n            let bgno = \"img_fail_share\" + random;\r\n            resMgr.loadImage(bgno, (res) => {\r\n                let bg = this.nodePoster.getChildByName('posterno').getChildByName('nobg');\r\n                cc.isValid(bg) && (bg.getComponent(cc.Sprite).spriteFrame = res);\r\n            })\r\n        }\r\n    }\r\n\r\n \r\n    onCheckClick(){\r\n        this.onClickHideSetting()\r\n    }\r\n\r\n    onResetClick(){\r\n        // cc.sys.localStorage.setItem(\"setting_card_style\", 1)\r\n        // GSettingDM.card_style = \"1\"\r\n        // cc.sys.localStorage.setItem(\"setting_select_bg\", 1)\r\n        // GSettingDM.select_bg = \"1\"\r\n        // cc.sys.localStorage.setItem(\"setting_cardbg_style\", 1)\r\n        // GSettingDM.cardbg_style = \"1\"\r\n\r\n\r\n        this.item1.check()\r\n        this.carditem1.check()\r\n        this.cardbgitem1.check()\r\n\r\n        this.callback({node:{name:\"item1\"}})\r\n        this.cardcallback({node:{name:\"carditem1\"}})\r\n        this.cardbgcallback({node:{name:\"cardbgitem1\"}})\r\n\r\n        GSettingDM.soundOn = true\r\n        GSettingDM.bbOn = true\r\n        this.initSwitch()\r\n        this.initBb()\r\n\r\n        // GSettingDM.quick_raise_aft = [33,50,60,100]\r\n        // GSettingDM.quick_raise_pre = [2,2.5,2.8,3]\r\n\r\n        this.refreshQuickRaise()\r\n    }\r\n    onClickShare(event: cc.Event.EventCustom, data: string) {\r\n        // let channel = {\r\n        //     \"wechat\": \"分享微信\",\r\n        //     \"friend\": \"分享朋友圈\",\r\n        //     \"qq\": \"分享QQ\",\r\n        //     \"weibo\": \"分享微博\",\r\n        //     \"url\": \"分享链接\"\r\n        // }\r\n        // GHelper.showTip(channel[data]);\r\n        let posterno = this.node.getChildByName('node_poster').getChildByName(\"posterno\");\r\n        let poster = this.node.getChildByName('node_poster').getChildByName(\"poster\");\r\n        let tempNode = posterno.active?posterno:poster;\r\n        // let displayNode = this.nodePoster.getChildByName('posterno').active == true ? this.nodePoster.getChildByName('posterno') : this.nodePoster.getChildByName('poster').getChildByName('poster');\r\n        if (data==\"wechat\") {\r\n            MultiPlatform.getInstance().capScreenShareWx(1,tempNode,null);\r\n        }\r\n        else if (data==\"friend\")\r\n        {\r\n            MultiPlatform.getInstance().capScreenShareWx(2,tempNode,null);\r\n        }else if(data==\"save\")\r\n        {\r\n            MultiPlatform.getInstance().capScreen(tempNode,(isSucces)=>\r\n            {\r\n                GHelper.showTip(isSucces?'保存成功':'保存失败',2,cc.v2(0,630));\r\n            });\r\n        }\r\n    }\r\n    _tryIpad()\r\n    {\r\n        let safeSize = cc.sys.getSafeAreaRect()\r\n        let r_h = safeSize.height/safeSize.width*750\r\n        let ratio = r_h/1334\r\n        if(ratio<1)\r\n        {\r\n            GPageMgr.node.scale=ratio\r\n        }\r\n    }\r\n\r\n}\r\n","import { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { GAdSer } from \"../../Service/AdService\";\r\nimport { GMatchSer } from \"../../Service/MatchService\";\r\nimport { GNewsSer } from \"../../Service/NewsService\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport Widget_HomeAdsItem from \"../Widget/Widget_HomeAdsItem\";\r\nimport Widget_HomeNewsItem from \"../Widget/Widget_HomeNewsItem\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Home extends Page {\r\n\r\n    @property(cc.PageView)\r\n    pv_ads: cc.PageView = null;\r\n\r\n    @property(cc.ScrollView)\r\n    sv_news: cc.ScrollView = null;\r\n\r\n    @property(cc.Prefab)\r\n    pre_newsitem: cc.Prefab = null\r\n\r\n    @property(cc.Prefab)\r\n    pre_iditem: cc.Prefab = null\r\n\r\n    @property(cc.Button)\r\n    btn_exchange: cc.Button = null\r\n\r\n    start() {\r\n        if(GGameDM.isReviewVersion)\r\n        {\r\n            this.btn_exchange.node.parent.active=false\r\n            this.sv_news.node.height+=this.btn_exchange.node.parent.height\r\n        }\r\n        this.initNews()\r\n        this.initAds()\r\n        GMatchSer.init()\r\n        this.checkIsNew()\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        console.log('onEnable')\r\n        this.checkIsNew()\r\n    }\r\n\r\n    async checkIsNew(){\r\n        let res = await GHallHttp.request(\"getfollwers\")\r\n        if(res.newbies&&res.newbies.length>0){\r\n            cc.find('layout_menu/btn_invitee/new1',this.node).active = true\r\n        }else{\r\n            cc.find('layout_menu/btn_invitee/new1',this.node).active = false\r\n        }\r\n    }\r\n\r\n    async initNews()\r\n    {\r\n        await GNewsSer.init()\r\n        let news = GNewsSer.news\r\n        news.sort((a,b)=>\r\n        {\r\n            return b.create_time-a.create_time\r\n        })\r\n        for(let i=0;i<news.length;++i)\r\n        {\r\n            let item = cc.instantiate(this.pre_newsitem)\r\n            item.parent = this.sv_news.content\r\n            let sc = item.getComponent(Widget_HomeNewsItem)\r\n            sc.init(news[i])\r\n        }\r\n        this.sv_news.scrollToTop()\r\n    }\r\n    async initAds()\r\n    {\r\n        await GAdSer.init()\r\n        let ads = GAdSer.ads\r\n        ads.sort((a,b)=>\r\n        {\r\n            return a.create_time-b.create_time\r\n        })\r\n        for(let i=0;i<ads.length;++i)\r\n        {\r\n            let item = cc.instantiate(this.pre_iditem)\r\n            this.pv_ads.addPage(item)\r\n            let sc = item.getComponent(Widget_HomeAdsItem)\r\n            sc.init(ads[i])\r\n        }\r\n        this.pv_ads.scrollToLeft()\r\n    }\r\n    onClickSignupMatch() {\r\n        GPageMgr.openPage(\"Page_MatchSignup\")\r\n    }\r\n\r\n    onClickFocusMatch() {\r\n        GPageMgr.openPage(\"Page_MatchFocus\")\r\n    }\r\n\r\n    onClickExchange() {\r\n        GMsgCenter.send(\"toexchange\")\r\n    }\r\n\r\n    onClickInvitee() {\r\n   \r\n        GPageMgr.openPage(\"Page_Invitee\",()=>{\r\n            this.checkIsNew()\r\n        })\r\n    }\r\n\r\n    onClickSign() {\r\n        // GPageMgr.openPage(\"Page_Sign\")\r\n        if(GGameDM.isServerUpdate){\r\n            GPageMgr.openPage(\"Page_Maintain\");\r\n            return \r\n        }\r\n        GPageMgr.openPage(\"Page_NeiYe\")\r\n    }\r\n\r\n    onClickInvite(){\r\n        // GPageMgr.openPage(\"Page_Sign\")\r\n        // GPageMgr.openPage(\"Page_Invite_Friend\")\r\n    }\r\n}\r\n","import { GHelper } from \"../../../Framework/Logic/Helper\";\r\nimport { GNativeTool } from \"../../../Framework/Logic/NativeTool\";\r\nimport { Page } from \"../../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../../Logic/UserManager\";\r\nimport { GHallHttp } from \"../../../Net/HallHttp\";\r\nimport { GMsgCenter } from \"../../../utils/MessageCenter\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_IDCard extends Page {\r\n    \r\n    @property(cc.EditBox)\r\n    editboxIdcardName: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editboxIdcardNumber: cc.EditBox = null;\r\n\r\n    @property(cc.Node)\r\n    layoutTop: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    layoutMiddle: cc.Node = null;\r\n\r\n    @property(cc.Button)\r\n    btnNext: cc.Button = null;\r\n\r\n    @property(cc.Label)\r\n    label_name1: cc.Label = null;\r\n    @property(cc.Label)\r\n    label_number: cc.Label = null;\r\n\r\n    private step: number = 0;\r\n\r\n    onLoad() {\r\n        GPage_IDCard = this\r\n\r\n        GMsgCenter.register('identify_success',this.VerificationSuccess.bind(this),this)\r\n        this.onShow()\r\n    }\r\n\r\n    onShow() {\r\n        if (GUserMgr.self_user.idcard_name && GUserMgr.self_user.idcard_no) {\r\n            this.step = 3\r\n        } else {\r\n            this.step = 1\r\n        }\r\n        this.initTable()\r\n    }\r\n\r\n    initTable() {\r\n        this.btnNext.node.active = this.step < 3;\r\n        for (let i = 0; i < 3; i++) {\r\n            this.layoutTop.children[i].active = this.step == i + 1;\r\n            this.layoutMiddle.children[i].active = this.step == i + 1;\r\n        }\r\n    }\r\n\r\n    onEditIdcardName() {\r\n        this.editboxIdcardName.string = this.editboxIdcardName.string.trim();\r\n    }\r\n\r\n    onEditIdcardNumber() {\r\n        this.editboxIdcardNumber.string = this.editboxIdcardNumber.string;\r\n    }\r\n\r\n    onBtnBack() {\r\n        GPageMgr.closePage(\"Page_IDCard\")\r\n    }\r\n\r\n    /**\r\n     * 身份证号码校验\r\n     * 身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X\r\n     */\r\n    checkIdCard(idCard){\r\n        var reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\r\n        if(reg.test(idCard)){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async onClickNext() {\r\n\r\n        // this.VerificationSuccess();\r\n        // return;\r\n        if (this.checkIdCard(this.editboxIdcardNumber.string)) {\r\n            // ------------------\r\n            let res = await GHallHttp.request(\"CheckIdCardNo\", {idcard_no: '@'+this.editboxIdcardNumber.string})\r\n            if(res.id!=null){\r\n                // console.log(res)\r\n                GHelper.showTip('该身份证已经绑定了其他账号')\r\n                return\r\n            }\r\n            // ------------------\r\n            GNativeTool.callRlsb(this.editboxIdcardName.string, this.editboxIdcardNumber.string, GUserMgr.self_user_id.toString())\r\n        }\r\n        else{\r\n            GHelper.showTip(\"请输入正确的身份证号码\");\r\n        }\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"identify_success\", this)\r\n    }\r\n\r\n    VerificationSuccess() {\r\n        //验证成功\r\n        GHelper.showTip(\"验证成功\");\r\n        GPageMgr.closePage(\"Page_IDCard\")\r\n        GPageMgr.closePage(\"Page_Person\")\r\n        // this.step = 3\r\n        // this.initTable();\r\n        // GHallHttp.request(\"getuser\").then((rs)=>\r\n        // {\r\n        //     GUserMgr.addOneUser(rs.user);\r\n        //     GMsgCenter.send(\"updateuserinfo\");\r\n        // })\r\n\r\n        let name = this.editboxIdcardName.string;\r\n        let id = this.editboxIdcardNumber.string;\r\n        GHallHttp.request(\"changeid\", {nickname: name, idcard_no: \"@\"+id}).then((rs)=>\r\n        {\r\n            GUserMgr.addOneUser(rs.user);\r\n            GMsgCenter.send(\"updateuserinfo\");\r\n            GMsgCenter.send(\"VerificationSuccess\");\r\n        })\r\n\r\n        // this.label_name1.string = GUserMgr.self_user.idcard_name\r\n        // this.label_number.string = GUserMgr.self_user.idcard_no\r\n    }\r\n}\r\n\r\nlet GPage_IDCard:Page_IDCard = null;\r\n\r\n","import { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr, PageManager } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Invite_Friend extends Page {\r\n    @property(cc.Node)\r\n    nn_page: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    content: cc.Node = null;\r\n\r\n\r\n    onLoad(){\r\n        this.initPage()\r\n    }\r\n\r\n    async initPage(){\r\n        // let pngs = ['hb1','hb2','hb3']\r\n        // for(var i=0;i<3;i++){\r\n        //     let paths = 'image/invite/'+pngs[i]\r\n        //     let spFrame = await ykUtils.loadResourse(paths,cc.SpriteFrame) as cc.SpriteFrame\r\n        //     let page = cc.instantiate(this.nn_page)\r\n        //     page.getComponent(cc.Sprite).spriteFrame = spFrame\r\n\r\n        //     page.active = true\r\n        //     page.y = 0\r\n        //     page.setContentSize(567,1010)\r\n        //     // this.content.addChild(page)\r\n          \r\n        //     cc.find('pageview',this.node).getComponent(cc.PageView).addPage(page)\r\n          \r\n        // }\r\n        \r\n        let allHb = GGameDM.arrayInviteNei\r\n        allHb.forEach(async (element) => {\r\n            let gg = await ykUtils.loadNetSpriteFrame(ykUtils.getPosterNet(element))\r\n            let nn = cc.instantiate(this.nn_page)\r\n            nn.getComponent(cc.Sprite).spriteFrame = gg\r\n            nn.active = true\r\n            nn.y = 0\r\n            cc.find('pageview',this.node).getComponent(cc.PageView).addPage(nn)\r\n        })\r\n    }\r\n\r\n    onShareFriend(){\r\n        GHelper.wxShareShot(1, this.content.getParent());\r\n    }\r\n    onShareFriendCircle(){\r\n        GHelper.wxShareShot(2, this.content.getParent());\r\n    }\r\n\r\n    doClose(){\r\n        GPageMgr.closePage('Page_Invite_Friend')\r\n    }\r\n\r\n}","import { core } from \"../../Framework/Core/Base\";\r\nimport { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport Widget_InviteeItem, { FollowerItem } from \"../Widget/Widget_InviteeItem\";\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Invitee extends Page {\r\n    \r\n    @property(cc.Button)\r\n    btn_invite: cc.Button = null\r\n\r\n    @property(cc.Label)\r\n    labelMoney: cc.Label = null\r\n\r\n    @property(cc.ScrollView)\r\n    scrollview: cc.ScrollView = null\r\n\r\n    @property(cc.Prefab)\r\n    pf_item: cc.Prefab = null\r\n    private cb = null\r\n    start() {\r\n        if(GGameDM.isReviewVersion)\r\n        {\r\n            this.labelMoney.node.parent.active=false\r\n            this.btn_invite.node.active=false\r\n        }\r\n        this.init()\r\n    }\r\n\r\n    onOpen(cb){\r\n        this.cb = cb\r\n    }\r\n    onClose(){\r\n        this.cb&&this.cb()\r\n    }\r\n\r\n    async init() {\r\n        if(GGameDM.isReviewVersion)\r\n        {\r\n            return\r\n        }\r\n        this.labelMoney.string = (GUserMgr.self_user.ticket?GUserMgr.self_user.ticket:0) + \" 张\"\r\n        let res = await GHallHttp.request(\"getfollwers\")\r\n        let followers:FollowerItem[]=res?.followers\r\n        if(!followers)\r\n        {\r\n            return\r\n        }\r\n        for(let i=0;i<followers.length;++i)\r\n        {\r\n            let f = followers[i]\r\n            let node = cc.instantiate(this.pf_item)\r\n            this.scrollview.content.addChild(node)\r\n            let sc = node.getComponent(Widget_InviteeItem)\r\n\r\n            if(res.newbies&&res.newbies.indexOf(f.id)!=-1){\r\n                f.isNew = true\r\n            }\r\n            sc.init(f)\r\n        }\r\n        this.scrollview.scrollToTop()\r\n\r\n        GHallHttp.request(\"readbebindedticket\")\r\n        this.initFenxiao()\r\n    }\r\n\r\n    // 分销系统初始化\r\n    initFenxiao(){\r\n        let fenXiao = cc.find('content/fenxiao',this.node)\r\n        let user = GUserMgr.self_user\r\n        if(user.is_distributor!=1){\r\n            fenXiao.active = false\r\n            return\r\n        }\r\n        fenXiao.active = true\r\n\r\n        user.divide_all =  user.divide_all || 0\r\n\r\n        let allGet = user.divide_all*100\r\n        let curDate = Date.now()\r\n        let today = core.format(curDate,\"YYYY-MM-DD\")\r\n        let divideDetail = user.divide_record||[]\r\n        let todayGet = 0\r\n        divideDetail.forEach((element)=>{\r\n            if(core.format(element.create_time,\"YYYY-MM-DD\")==today){\r\n                todayGet+=element.divide\r\n            }\r\n        })\r\n        todayGet = todayGet*100\r\n\r\n        cc.find('lb_reward1',fenXiao).getComponent(cc.Label).string = '推广奖励: '+allGet\r\n        cc.find('lb_reward2',fenXiao).getComponent(cc.Label).string = '推广奖励(今日)：'+todayGet\r\n    }\r\n\r\n    onClickInvite() {\r\n        GPageMgr.openPage(\"Page_Invite\")\r\n    }\r\n\r\n    onClickWithdraw() {\r\n        \r\n    }\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_Invitee\")\r\n    }\r\n}\r\n","import { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport MultiPlatform from '../../platform/MultiPlatform';\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Invite extends Page {\r\n    @property(cc.Label)\r\n    labelInvite: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    qrcodeNode: cc.Node;\r\n    \r\n    @property(cc.Node)\r\n    content: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    invite_er_wei_ma:cc.Node =null;\r\n\r\n    start() {\r\n        this.labelInvite.string = GUserMgr.self_user_id.toString();\r\n        this.qrcodeNode = this.node.getChildByName(\"qrcode\") as cc.Node;\r\n\r\n        this.loadInviteCode();\r\n    }\r\n\r\n    async loadInviteCode(){\r\n        let code =  await ykUtils.loadNetSpriteFrame(ykUtils.PATH.png_kefuCode)\r\n        if(code){\r\n            this.invite_er_wei_ma.getComponent(cc.Sprite).spriteFrame = code\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 改变二维码显示内容\r\n     * @param str \r\n     */\r\n    changeQRCodeUI(str:String){\r\n        //写入数据\r\n        this.qrcodeNode.getComponent('CQRCode').string=str;\r\n    }\r\n\r\n    \r\n    onClickShare(event: cc.Event.EventCustom, data: string) \r\n    {\r\n        let tempNode = this.node.getChildByName(\"content\");\r\n        if(tempNode==null)\r\n        {\r\n            return;\r\n        }\r\n        if (data==\"wechat\") \r\n        {\r\n            MultiPlatform.getInstance().capScreenShareWx(1,tempNode,null);\r\n        }\r\n        else if (data==\"friend\")\r\n        {\r\n            MultiPlatform.getInstance().capScreenShareWx(2,tempNode,null);\r\n        }else if(data==\"save\")\r\n        {\r\n            MultiPlatform.getInstance().capScreen(tempNode,(isSucces)=>\r\n            {\r\n                GHelper.showTip(isSucces?'保存成功':'保存失败',2,cc.v2(0,630));\r\n            });\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n   \r\n\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_Invite\")\r\n    }\r\n}\r\n","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Loading extends Page {\r\n\r\n    start() {\r\n    }\r\n\r\n    Btn_Close_OnClick() {\r\n        GPageMgr.closePage(\"Page_Loading\")\r\n    }\r\n}\r\n","import { GAppDM } from \"../../DataModel/AppDataModel\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GNetGameTexas } from \"../../Net/NetGameTexas\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Logout extends cc.Component {\r\n\r\n    onLoad(){\r\n        \r\n    }\r\n    onClickConfirm() {\r\n        GNetGameTexas.close()\r\n        GHelper.clearData()\r\n        GPageMgr.closeAll()\r\n        \r\n        if(GAppDM.isShowServerList)\r\n        {\r\n            GPageMgr.openPage(\"Page_ServerList\");\r\n        }\r\n        else\r\n        {\r\n            GPageMgr.openPage(\"Page_CodeLogin\")\r\n        }\r\n    }\r\n\r\n    onClickCancel() {\r\n        GPageMgr.closePage(\"Page_Logout\");\r\n    }\r\n}\r\n","import { Page } from \"../../Framework/View/Page/Page\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Main extends Page {\r\n    // do nothing\r\n}","import { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\n\r\nimport { GNativeTool } from \"../../Framework/Logic/NativeTool\"\r\n\r\nimport { layerMgr } from \"../../manager/LayerManager\"\r\nimport { GaoDeMapTool } from \"../../Framework/Logic/GaoDeMapTool\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\nimport { GItemCfg } from \"../../Service/ItemService\";\r\nimport { GAppDM } from \"../../DataModel/AppDataModel\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Main extends Page {\r\n\r\n    @property(cc.Node)\r\n    nodeHome: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeMatch: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeClub: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodePerson: cc.Node = null;\r\n\r\n    @property(cc.ToggleContainer)\r\n    toggles: cc.ToggleContainer = null;\r\n\r\n    @property(cc.Node)\r\n    nodeHead: cc.Node = null;\r\n\r\n    start() \r\n    {\r\n        //预打开这个界面\r\n        GPageMgr.openPage(\"Page_MatchInfo\")\r\n        GPageMgr.closePage(\"Page_CodeLogin\")\r\n        GPageMgr.closePage(\"Page_AccountLogin\")\r\n        if(GGameDM.isServerUpdate){\r\n            GPageMgr.openPage(\"Page_Maintain\");\r\n            return \r\n        }\r\n\r\n        if(!GGameDM.isReviewVersion){\r\n            GPageMgr.openPage(\"Page_NeiYe\")\r\n        }\r\n       \r\n        this.toggles.toggleItems[0].check();\r\n        this.onToggleHome();\r\n        GMsgCenter.register(\"toexchange\",this.showNodeMatch.bind(this),this)\r\n        if(GGameDM.isReviewVersion)\r\n        {\r\n            this.toggles.toggleItems[2].node.active=false\r\n            this.toggles.node.getComponent(cc.Layout).spacingX=180\r\n            this.toggles.toggleItems[1].getComponentInChildren(cc.Label).string=\"购票\"\r\n            // this.toggles.node.children[0].getChildByName('mark').getChildByName('label').getComponentInChildren(cc.Label).string=\"购票\"\r\n        \r\n            cc.find('toggle_match/mark/label',this.toggles.node).getComponent(cc.Label).string = \"购票\"\r\n        }\r\n        if(cc.sys.isNative)\r\n        {\r\n            if (!GUserMgr.self_user.idcard_no&&!GGameDM.isReviewVersion && GAppDM.account_server.host!=\"123.60.12.239\") {\r\n                GPageMgr.openPage(\"Page_IDCard\");\r\n            }\r\n        }\r\n\r\n        GaoDeMapTool.getLocation(true)\r\n        this.initClubView()\r\n\r\n        ykUtils.getServerTime()\r\n\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n    async initClubView(){\r\n        var chs = cc.find('layout_center',this.node).children\r\n        for(var v of chs){\r\n            if(v.name == 'Page_Home'){\r\n                v.active = true\r\n            }else{\r\n                v.active = false\r\n            }\r\n        }\r\n\r\n     \r\n    }\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"toexchange\",this)\r\n    }\r\n    onToggleHome() {\r\n        // this.nodeHome.active = true\r\n        // this.nodeMatch.active = false\r\n        // this.nodePerson.active = false\r\n        // this.nodeHead.active = false\r\n        // this.hideClubAll()\r\n        this.changeNode('Page_Home')\r\n    }\r\n\r\n    onToggleMatch() {\r\n        // this.nodeHome.active = false\r\n        // this.nodeMatch.active = true\r\n        // this.nodePerson.active = false\r\n        // this.nodeHead.active = false\r\n        // this.hideClubAll()\r\n        this.changeNode('Page_MatchList')\r\n    }\r\n\r\n    onToggleLive() {\r\n        this.nodeHome.active = false\r\n        this.nodeMatch.active = false\r\n        this.nodePerson.active = false\r\n        this.nodeHead.active = false\r\n        this.nodeClub.active = false\r\n    }\r\n\r\n    onToggleClub() {\r\n        // this.nodeHome.active = false\r\n        // this.nodeMatch.active = false\r\n        // this.nodeClub.active = true\r\n        // this.nodePerson.active = false\r\n        // this.nodeHead.active = false;\r\n        this.changeNode('node_club')\r\n    }\r\n\r\n    onTogglePerson() {\r\n        // this.nodeHome.active = false\r\n        // this.nodeMatch.active = false\r\n        // this.nodeHead.active = false\r\n        // this.nodePerson.active = true\r\n        // this.hideClubAll()\r\n        GItemCfg.init();\r\n        this.changeNode('Page_My')\r\n    }\r\n\r\n    changeNode(name){\r\n        var layout_center = cc.find('layout_center',this.node).children\r\n        layout_center.forEach(element => {\r\n            if(element.name == name){\r\n                element.active = true\r\n                element.getComponent('Page')&&element.getComponent('Page')['refreshData']&&element.getComponent('Page')['refreshData']()\r\n            }else{\r\n                element.active = false\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    showNodeHome(...args) {\r\n        this.toggles.toggleItems[0].check();\r\n        this.onToggleHome();\r\n        this.nodeHome.emit(\"init\", ...args);\r\n    }\r\n\r\n    showNodeMatch(...args) {\r\n        this.toggles.toggleItems[1].check();\r\n        this.onToggleMatch();\r\n    }\r\n\r\n    showNodeClub(...args) {\r\n        this.toggles.toggleItems[2].check()\r\n        this.onToggleLive()\r\n    }\r\n\r\n    showNodePerson(...args) {\r\n        this.toggles.toggleItems[3].check()\r\n        this.onTogglePerson()\r\n    }\r\n\r\n    onClickAvatar() {\r\n        this.nodeHead.active = true;\r\n    }\r\n    // \r\n    faceCheckTest(){\r\n        GNativeTool.callRlsb(GUserMgr.self_user.nickname, GUserMgr.self_user.idcard_no.toString(), GUserMgr.self_user_id.toString())\r\n    }\r\n\r\n    shareTest(){\r\n        GHelper.wxShareShot(2, this.node);\r\n    }\r\n}\r\n","import { EMatchState } from \"../../Config/_ini_\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GMatchSer } from \"../../Service/MatchService\";\r\nimport Widget_MatchListItem from \"../Widget/Widget_MatchListItem\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_MatchFocus extends Page {\r\n\r\n    @property(cc.ScrollView)\r\n    sv_list: cc.ScrollView = null;\r\n\r\n    @property(cc.Prefab)\r\n    pf_item: cc.Prefab = null;\r\n\r\n    start() {\r\n        this.init()\r\n    }\r\n    init()\r\n    {\r\n        let focusmatchins = GMatchSer.focusmatchins\r\n        if(!focusmatchins||focusmatchins.length==0)\r\n        {\r\n            return\r\n        }\r\n        for(let i=0;i<focusmatchins.length;++i)\r\n        {\r\n            let insm = focusmatchins[i]\r\n            \r\n            if(!insm.match)\r\n            {\r\n                insm.match=GMatchSer.getMatchById(insm.match_id)\r\n                if(!insm.match)\r\n                {\r\n                    continue\r\n                }\r\n            }\r\n            if(insm.state==EMatchState.Cancel)\r\n            {\r\n                continue\r\n            }\r\n            if(insm.state==EMatchState.End)\r\n            {\r\n                continue\r\n            }\r\n            if(insm.blind_index>=insm.match.reenter_blind_index)\r\n            {\r\n                continue\r\n            }\r\n            let node = cc.instantiate(this.pf_item)\r\n            this.sv_list.content.addChild(node)\r\n            let sc = node.getComponent(Widget_MatchListItem)\r\n            sc.init(insm)\r\n        }\r\n    }\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_MatchFocus\")\r\n    }\r\n}\r\n","import { EMatchState } from \"../../Config/_ini_\";\r\nimport { GTexasTableDM } from \"../../DataModel/TexasTableDataModel\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GMatchSer } from \"../../Service/MatchService\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_MatchInfo extends Page {\r\n\r\n    @property(cc.ToggleContainer)\r\n    toggles: cc.ToggleContainer = null;\r\n\r\n\r\n    @property(cc.Node)\r\n    matchInfo: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeInfo: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeLevel: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeReward: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeScore: cc.Node = null;\r\n    \r\n    @property(cc.Node)\r\n    nodeType: cc.Node = null;\r\n\r\n    protected _init_y=0\r\n    private outPos = -1500\r\n    start() {\r\n\r\n        this.node.zIndex=500\r\n        this.toggles.toggleItems[0].check()\r\n        this.onToggleInfo()\r\n        this.doShow()\r\n    }\r\n \r\n    protected onEnable(): void {\r\n     \r\n        // this.node.runAction(cc.moveTo(0.2,0,this._init_y))\r\n        this.doShow()\r\n    }\r\n\r\n    doShow(){\r\n        cc.find('content/nns',this.node).stopAllActions()\r\n        cc.find('content/nns',this.node).y = this.outPos\r\n        cc.find('content/nns',this.node).runAction(cc.moveTo(0.2,0,0))\r\n    }\r\n    \r\n    hide()\r\n    {\r\n        this.node.stopAllActions()\r\n        if(!this.node.active)\r\n        {\r\n            return\r\n        }\r\n        // this.node.runAction(cc.sequence(\r\n        //     cc.moveTo(0.2,0,-1200),\r\n        //     cc.callFunc(()=>\r\n        //     {\r\n        //         this.node.active=false\r\n        //     })\r\n        // ))\r\n        cc.find('content/nns',this.node).runAction(cc.sequence(\r\n                cc.moveTo(0.2,0,-1500),\r\n                cc.callFunc(()=>\r\n                {\r\n                    this.node.active=false\r\n                })\r\n            ))\r\n    }\r\n    onOpen(table_id:number)\r\n    {\r\n        this._init_y=this.node.y\r\n        if(!table_id)\r\n        {\r\n            // this.node.y=-1200\r\n            this.node.active=false\r\n            return\r\n        }\r\n        let tableinfo = GTexasTableDM.getTableInfo(table_id)\r\n        if(!tableinfo)\r\n        {\r\n            this.node.active=false\r\n            return\r\n        }\r\n        let matchM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        if(!matchM)\r\n        {\r\n            this.node.active=false\r\n            return\r\n        }\r\n        if(matchM.state==EMatchState.Waiting)\r\n        {\r\n            this.node.active=true\r\n            return\r\n        }\r\n        this.node.active=false\r\n    }\r\n    onToggleInfo() {\r\n        this.nodeInfo.active = true;\r\n        this.nodeLevel.active = false;\r\n        this.nodeReward.active = false;\r\n        this.nodeScore.active = false;\r\n        this.nodeType.active = false;\r\n    }\r\n\r\n    onToggleLevel() {\r\n        this.nodeInfo.active = false;\r\n        this.nodeLevel.active = true;\r\n        this.nodeReward.active = false;\r\n        this.nodeScore.active = false;\r\n        this.nodeType.active = false;\r\n    }\r\n\r\n    onToggleReward() {\r\n        this.nodeInfo.active = false;\r\n        this.nodeLevel.active = false;\r\n        this.nodeReward.active = true;\r\n        this.nodeScore.active = false;\r\n        this.nodeType.active = false;\r\n    }\r\n\r\n    onToggleScore() {\r\n        this.nodeInfo.active = false;\r\n        this.nodeLevel.active = false;\r\n        this.nodeReward.active = false;\r\n        this.nodeScore.active = true;\r\n        this.nodeType.active = false;\r\n    }\r\n\r\n    onToggleType() {\r\n        this.nodeInfo.active = false;\r\n        this.nodeLevel.active = false;\r\n        this.nodeReward.active = false;\r\n        this.nodeScore.active = false;\r\n        this.nodeType.active = true;\r\n    }\r\n\r\n    Btn_Bg_Click(event)\r\n    {\r\n        this.hide()\r\n    }\r\n}\r\n","import { EMatchState } from \"../../Config/_ini_\";\r\nimport { core } from \"../../Framework/Core/Base\";\r\nimport { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { GAlipay } from \"../../Framework/View/Page/Alipay\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GItemCfg } from \"../../Service/ItemService\";\r\nimport { GMatchSer, MatchInsModel, MatchModel } from \"../../Service/MatchService\";\r\nimport { GOrderSer } from \"../../Service/OrderService\";\r\nimport ListView from \"../../utils/ListView\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport Widget_ExchangeItem from \"../Widget/Widget_ExchangeItem\";\r\nimport Widget_MatchListItem from \"../Widget/Widget_MatchListItem\";\r\nimport Widget_ProductItem from \"../Widget/Widget_ProductItem\";\r\n\r\nexport let GPageMatchList:Page_MatchList=null\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_MatchList extends Page {\r\n    @property(cc.Label)\r\n    lbl_score: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbl_score1: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    node_btn: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeExchange: cc.Node = null;\r\n\r\n    @property(cc.ToggleContainer)\r\n    toggles: cc.ToggleContainer = null;\r\n\r\n    @property(cc.Label)\r\n    labelToday: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelTomorrow: cc.Label = null;\r\n\r\n    @property(cc.ScrollView)\r\n    sv_match: cc.ScrollView = null;\r\n\r\n    @property(cc.ScrollView)\r\n    sv_score: cc.ScrollView = null;\r\n\r\n    @property(cc.Prefab)\r\n    pf_matchitem: cc.Prefab = null\r\n\r\n    @property(cc.ScrollView)\r\n    scrollviewExchange: cc.ScrollView = null;\r\n\r\n    @property(cc.Node)\r\n    layoutExchange: cc.Node = null;\r\n\r\n    @property(cc.Prefab)\r\n    pf_exchangeitem:cc.Prefab=null\r\n\r\n    protected _all:{matches:MatchModel[],matchins:MatchInsModel[]}={matches:null,matchins:null}\r\n\r\n    @property(cc.ToggleGroup)\r\n    title_toggle:cc.ToggleGroup = null;\r\n    onLoad()\r\n    {\r\n        this.init()\r\n        if(GGameDM.isReviewVersion)\r\n        {\r\n            this.node_btn.active=false\r\n            this.scrollviewExchange.node.height+=this.node_btn.height\r\n            cc.find('shenheEmpty',this.node).active = true\r\n        }else{\r\n            cc.find('shenheEmpty',this.node).active = false\r\n        }\r\n        GMatchSer.getAllMatches(false).then((all)=>\r\n        {\r\n            this._all = all\r\n            this.initTable()\r\n        })\r\n        GMsgCenter.register(\"coinchanged\",this.initExchange.bind(this),this)\r\n        GMsgCenter.register(\"toexchange\",this.toexchange.bind(this),this)\r\n      \r\n    }\r\n    toexchange()\r\n    {\r\n        this.sv_match.node.parent.active = false\r\n        this.sv_score.node.parent.active = false\r\n        this.nodeExchange.active = true\r\n    }\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"coinchanged\",this)\r\n        GMsgCenter.unregister(\"toexchange\",this)\r\n    }\r\n    init() {\r\n        this.lbl_score.string = \"游戏点: \"+GUserMgr.self_user.coin+\"    欢乐点: \"+GUserMgr.self_user.reward_coin+\"    视频点: \"+(GUserMgr.self_user.video_coin||0) +\"\"\r\n        this.lbl_score1.string = this.lbl_score.string;\r\n        this.sv_match.node.parent.active = false\r\n        this.sv_score.node.parent.active = false\r\n        this.nodeExchange.active = false\r\n        if(GGameDM.isReviewVersion)\r\n        {\r\n            this.nodeExchange.active = true\r\n        }\r\n        else\r\n        {\r\n            this.sv_match.node.parent.active = true\r\n        }\r\n        \r\n        let today = new Date();\r\n        let month = today.getMonth() + 1;\r\n        let date = today.getDate();\r\n        this.labelToday.string = `今日赛事（${month < 10 ? \"0\" + month : month}/${date < 10 ? \"0\" + date : date}）`;\r\n        today.setHours(24);\r\n        month = today.getMonth() + 1;\r\n        date = today.getDate();\r\n        this.labelTomorrow.string = `明日赛事（${month < 10 ? \"0\" + month : month}/${date < 10 ? \"0\" + date : date}）`;\r\n    }\r\n    onEnable()\r\n    {\r\n        this.refresh()\r\n        this.initExchange()\r\n    }\r\n    async refresh()\r\n    {\r\n        this._all = await GMatchSer.getAllMatches()\r\n        this.initTable()\r\n        GPageMatchList=this\r\n    }\r\n\r\n    initTable() {\r\n        let today = new Date()\r\n        let month = today.getMonth() + 1\r\n        let date = today.getDate()\r\n        this.labelToday.string = `今日赛事（${month < 10 ? \"0\" + month : month}/${date < 10 ? \"0\" + date : date}）`\r\n        today.setHours(24)\r\n        month = today.getMonth() + 1\r\n        date = today.getDate()\r\n        this.labelTomorrow.string = `明日赛事（${month < 10 ? \"0\" + month : month}/${date < 10 ? \"0\" + date : date}）`\r\n        \r\n        let checkindex = 0\r\n        for (let i=0;i<this.toggles.toggleItems.length;++i) {\r\n            let toggle = this.toggles.toggleItems[i]\r\n            if(toggle.isChecked)\r\n            {\r\n                checkindex=i\r\n            }\r\n            toggle.node.color = toggle.isChecked ? cc.color(255, 255, 255) : cc.color(102, 102, 102);\r\n        }\r\n        this.sv_match.content.removeAllChildren()\r\n        if(this._handle)\r\n        {\r\n            clearInterval(this._handle)\r\n            this._handle=null\r\n        }\r\n        if(GGameDM.isReviewVersion)\r\n        {\r\n            return\r\n        }\r\n        let today_start = core.getStartTime()+GGameDM.diffServerTime\r\n        let tomorrow = today_start+24*60*60*1000\r\n        this._all.matchins.sort((a,b)=>\r\n        {\r\n            return a.start_time-b.start_time\r\n        })\r\n\r\n        this._all.matchins.sort((a,b)=>\r\n        {\r\n            if (GUserMgr.self_user.matchinfos[a.id]!=null && GUserMgr.self_user.matchinfos[b.id]==null) {\r\n                return -1\r\n            }\r\n            if (GUserMgr.self_user.matchinfos[a.id]==null && GUserMgr.self_user.matchinfos[b.id]!=null) {\r\n                return 1\r\n            }\r\n        })\r\n        let i=-1\r\n        let createOne=()=>\r\n        {\r\n            ++i\r\n            if(this._handle&&i>=this._all.matchins.length)\r\n            {\r\n                clearInterval(this._handle)\r\n                this._handle=null\r\n                return\r\n            }\r\n            if(this._all.matchins&&this._all.matchins[i]){\r\n\r\n            }else{\r\n                return\r\n            }\r\n\r\n            let mim = this._all.matchins[i]\r\n            if(!mim||!mim.match)\r\n            {\r\n                return\r\n            }\r\n            if(checkindex==0)\r\n            {\r\n                if(mim.state==EMatchState.Playing)\r\n                {\r\n\r\n                }\r\n                else if(mim.start_time<today_start||mim.start_time>tomorrow)\r\n                {\r\n                    return\r\n                }\r\n            }\r\n            else if(checkindex==1)\r\n            {\r\n                if(mim.start_time<tomorrow)\r\n                {\r\n                    return\r\n                }\r\n            }\r\n            else if(checkindex==2||checkindex==3)\r\n            {\r\n                return\r\n            }\r\n            let item = cc.instantiate(this.pf_matchitem)\r\n            this.sv_match.content.addChild(item)\r\n            let mli = item.getComponent(Widget_MatchListItem)\r\n            mli.init(mim)\r\n        }\r\n        for(let i=0;i<this._all.matchins.length&&i<8;++i)\r\n        {   \r\n            let match = this._all.matchins[i].match\r\n            if(!match||(match.club_id&&match.club_id>0))\r\n            {\r\n                continue\r\n            }\r\n            createOne()\r\n        }\r\n\r\n\r\n\r\n        this._handle=setInterval(createOne,10)\r\n    }\r\n    protected _handle=null\r\n    initExchange()\r\n    {\r\n        if(!GGameDM.isReviewVersion){\r\n            // this.lbl_score.string = GUserMgr.self_user.coin+\"\"\r\n \r\n\r\n         \r\n            this.lbl_score.string = \"游戏点: \"+GUserMgr.self_user.coin+\"  欢乐点: \"+GUserMgr.self_user.reward_coin+\"  视频点: \"+(GUserMgr.self_user.video_coin||0) +\"\"\r\n            this.lbl_score1.string = this.lbl_score.string;\r\n            this.scrollviewExchange.content.removeAllChildren()\r\n            let items = GItemCfg.items\r\n            for(let key in items)\r\n            {\r\n                let item = items[key]\r\n                // if(!item.coin||!item.can_exchange)\r\n                // {\r\n                //     continue\r\n                // }\r\n                if(!item.coin || !item['can_buy'])\r\n                {\r\n                    continue\r\n                }\r\n                let node = cc.instantiate(this.pf_exchangeitem)\r\n                this.scrollviewExchange.content.addChild(node)\r\n                let wei = node.getComponent(Widget_ExchangeItem)\r\n                wei.init(item)\r\n            }\r\n        }\r\n    }\r\n    Btn_Exchange_OnClick() {\r\n        this.sv_match.node.parent.active = false\r\n        this.sv_score.node.parent.active = false\r\n        this.nodeExchange.active = true\r\n    }\r\n\r\n    Btn_Match_OnClick() {\r\n        this.sv_match.node.parent.active = true\r\n        this.sv_score.node.parent.active = false\r\n        this.nodeExchange.active = false\r\n        this.initTable()\r\n    }\r\n    Btn_Score_OnClick(event)\r\n    {\r\n        this.sv_match.node.parent.active = false\r\n        this.sv_score.node.parent.active = true\r\n        this.nodeExchange.active = false\r\n        this.initTable()\r\n        this.initProducts()\r\n    }\r\n\r\n    Tg_All_OnClick(event)\r\n    {\r\n        this.initTable()\r\n    }\r\n\r\n    payMoney(produce_id) {\r\n        let productid = GOrderSer.products[0].id\r\n        GAlipay.alipayEvent(productid);\r\n    }\r\n\r\n    initProducts() {\r\n        let products = GOrderSer.products;\r\n        let dataList = []\r\n        for (const key in products) {\r\n            dataList.push({type: 0, product: products[key]})\r\n        }\r\n\r\n        this.sv_score.getComponent(ListView).init(this.bindcallfunc.bind(this), this.getItemType.bind(this));\r\n        this.sv_score.getComponent(ListView).notifyDataSetChanged(dataList)\r\n\r\n    }\r\n\r\n    public getItemType() {\r\n        return 0\r\n    }\r\n\r\n    public bindcallfunc(node: cc.Node, info, i) {\r\n        node.getComponent(Widget_ProductItem).setdata(info)\r\n    }\r\n}\r\n","\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { EMatchState } from \"../../Config/_ini_\";\r\nimport { GTexasTableDM } from \"../../DataModel/TexasTableDataModel\";\r\n\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GMatchSer } from \"../../Service/MatchService\";\r\nimport { utils } from \"../../utils/Utils\";\r\nimport { EBagItemState, GItemCfg } from \"../../Service/ItemService\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\nimport Widget_SignUpBar from \"../Widget/Widget_SignUpBar\";\r\nconst {ccclass, property} = cc._decorator;\r\n@ccclass\r\nexport default class Page_MatchPay extends Page {\r\n\r\n    \r\n    \r\n    @property(cc.Label)\r\n    title:cc.Label = null;\r\n\r\n    @property(Widget_SignUpBar)\r\n    widget_SignUpBar:Widget_SignUpBar = null;\r\n\r\n    @property(cc.Node)\r\n    upLayout:cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    lb_lackCoin:cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    zhifulabel:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    downLayout:cc.Node = null;\r\n\r\n    private datas:any = null\r\n    private coinUse:{ coin:number,\r\n        reward_coin:number,\r\n        notEnoughNum:number}= null\r\n    onLoad(): void {\r\n        \r\n    }\r\n    onOpen(datas)\r\n    {\r\n        this.datas =datas\r\n        let tableinfo = GTexasTableDM.getTableInfo(datas.table_id)\r\n        if(!tableinfo)\r\n        {\r\n            this.node.active=false\r\n            return\r\n        }\r\n        let user =GUserMgr.self_user\r\n\r\n        let matchInsM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        let signup_cost = matchInsM.match.signup_cost\r\n        this.initTitle(signup_cost)\r\n        //  取出报名基准\r\n        let needCost = 0   //报名实际需要\r\n        let useItem = []   //所有物品\r\n        let itemCoin = 0   //物品使用价值\r\n\r\n        for(let i=0;i<signup_cost.length;++i)\r\n         {\r\n            let item = signup_cost[i]\r\n            if(item.id == -99){\r\n                needCost = item.count\r\n            }else{\r\n                useItem.push({item_id:item.id,count: item.count, itemcfg:GItemCfg.getItemById(item.id),_canUse:0,canUse:0,use:0})\r\n            }\r\n         }\r\n  \r\n        useItem.sort((a,b)=>{\r\n            a.itemcfg.use_weight = a.itemcfg.use_weight ||0\r\n            b.itemcfg.use_weight = b.itemcfg.use_weight ||0\r\n\r\n            return b.itemcfg.use_weight - a.itemcfg.use_weight\r\n        })\r\n\r\n\r\n        let checkIsEnough = (uItems,idx,isNeedReturn = false)=>{\r\n            // ==== 只组合后面的\r\n\r\n            // 调换排序\r\n            if(idx <uItems.length){\r\n                let item = uItems.splice(idx,1)[0]\r\n                if(item){\r\n                   uItems.unshift(item) \r\n                }\r\n            }\r\n           \r\n\r\n\r\n            let ceItemCoin = 0\r\n            for(var i =0;i<uItems.length;i++){\r\n                let ceItem = uItems[i]\r\n                let ceItemNum =ceItem.canUse\r\n\r\n                for(let m=0;m<ceItemNum;m++){\r\n                    if(ceItemCoin<needCost){\r\n                        let rc = ceItemCoin+ceItem.itemcfg.coin\r\n                        if(rc>needCost){\r\n                            // 什么都不做\r\n                        }else{\r\n                            ceItem.canUse = ceItem.canUse-1\r\n                            ceItem.use = ceItem.use+1\r\n                            ceItemCoin = rc\r\n                            if(ceItemCoin == needCost){   \r\n                                break\r\n                            }\r\n                        }\r\n                        \r\n                    }\r\n                }\r\n            }\r\n\r\n            let leftCoin = needCost - ceItemCoin\r\n            let allCoin =  user.coin+user.reward_coin\r\n\r\n            if(leftCoin>allCoin){\r\n                if(isNeedReturn){\r\n                    itemCoin  = ceItemCoin\r\n                    return uItems\r\n                }else{\r\n                    return\r\n                }\r\n                \r\n            }\r\n            itemCoin  = ceItemCoin\r\n            return uItems\r\n        }\r\n\r\n        \r\n        let haveItems = GItemCfg.bagItems\r\n        // 计算用户的物品数量\r\n        haveItems.forEach((element)=>{\r\n            for(var i = 0;i<useItem.length;i++){\r\n                if(useItem[i].item_id == element.item_id && element.give_check !=0){\r\n                    useItem[i].canUse +=1\r\n                    useItem[i]._canUse +=1\r\n                    break\r\n                }\r\n            }\r\n        })\r\n        // // 计算使用费用\r\n        // for(let i=0;i<useItem.length;i++){\r\n        //     // 计算价值的累加\r\n        //    let citem = useItem[i]\r\n        //    let citemNum = citem.canUse\r\n        //    for(let m=0;m<citemNum;m++){\r\n        //         if(itemCoin<needCost){\r\n        //             let rc = itemCoin+citem.itemcfg.coin\r\n        //             if(itemCoin>needCost){\r\n        //                 // 什么都不做\r\n        //             }else{\r\n        //                 citem.canUse = citem.canUse-1\r\n        //                 citem.use = citem.use+1\r\n        //                 itemCoin = rc\r\n        //                 if(itemCoin == needCost){   \r\n        //                     break\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //    }\r\n        // }\r\n        let checkRes\r\n        for(var i=0;i<useItem.length;i++){\r\n            // 开始计算报名\r\n            checkRes = checkIsEnough(ykUtils.clone(useItem),i)\r\n            if(checkRes){\r\n                break\r\n            }\r\n        }\r\n\r\n        \r\n        if(checkRes == null){\r\n            useItem = checkIsEnough(ykUtils.clone(useItem),0,true)\r\n        }else{\r\n            useItem = checkRes\r\n        }\r\n\r\n        useItem.sort((a,b)=>{\r\n            a.itemcfg.use_weight = a.itemcfg.use_weight ||0\r\n            b.itemcfg.use_weight = b.itemcfg.use_weight ||0\r\n\r\n            return b.itemcfg.use_weight - a.itemcfg.use_weight\r\n        })\r\n\r\n        let leftCoin = needCost - itemCoin\r\n        let allCoin =  user.coin+user.reward_coin\r\n\r\n\r\n        let notEnoughNum = 0\r\n\r\n        if(leftCoin>allCoin){\r\n            //   费用不足\r\n            notEnoughNum = leftCoin - allCoin\r\n        }\r\n\r\n        //====================适配界面\r\n        this.initView(signup_cost,useItem,needCost,itemCoin)\r\n\r\n      \r\n    }\r\n    initView(signup_cost, useItem: any[],needCost,itemCoin) {\r\n        let user = GUserMgr.self_user\r\n        let createUseView = (itemCfg,haveNum,useNum)=>{\r\n            let nView = cc.instantiate(this.widget_SignUpBar.node)\r\n            nView.active = true\r\n            let sc = nView.getComponent(Widget_SignUpBar)\r\n            sc.setItem(itemCfg)\r\n            sc.setNum(haveNum,useNum)\r\n            this.upLayout.addChild(nView)\r\n        }   \r\n        for(var v of useItem){\r\n            createUseView(v.itemcfg,v._canUse,v.use)\r\n        }\r\n        let leftCoin = needCost - itemCoin\r\n        let allCoin =  user.coin+user.reward_coin\r\n\r\n        this.coinUse={\r\n            coin :0,\r\n            reward_coin:0,\r\n            notEnoughNum:0\r\n        }\r\n        let coinUse = this.coinUse\r\n        if(leftCoin>allCoin){\r\n            coinUse.notEnoughNum = leftCoin - allCoin\r\n        }\r\n\r\n\r\n        if( coinUse.notEnoughNum>0){\r\n            coinUse.coin = user.coin\r\n            coinUse.reward_coin = user.reward_coin\r\n        }else{\r\n            if(leftCoin>user.coin){\r\n                coinUse.coin = user.coin\r\n                coinUse.reward_coin = leftCoin - user.coin\r\n            }else{\r\n                coinUse.coin = leftCoin\r\n            }\r\n        }\r\n        createUseView('coin',user.coin,coinUse.coin)\r\n        createUseView('rewardCoin',user.reward_coin,coinUse.reward_coin)\r\n        // =============================初始化说明\r\n\r\n        if(coinUse.notEnoughNum>0){\r\n            this.lb_lackCoin.node.active = true\r\n            this.lb_lackCoin.string = '不足'+coinUse.notEnoughNum.toString()+'游戏点'\r\n        }else{\r\n            this.lb_lackCoin.node.active = false\r\n        }\r\n\r\n        let createZhifuLabel =(name,num)=>{\r\n            let view =cc.instantiate(this.zhifulabel)\r\n            view.active = true\r\n            this.downLayout.addChild(view)\r\n            view.getComponent(cc.Label).string = name+'支付'+num+'游戏点'\r\n        }\r\n\r\n        for(var v of useItem){\r\n            if(v.use>0){\r\n                createZhifuLabel(v.itemcfg.name,v.use*v.itemcfg.coin)\r\n            }\r\n        }\r\n        if(coinUse.coin>0){\r\n            createZhifuLabel('游戏点',coinUse.coin)\r\n        }\r\n        if(coinUse.reward_coin>0){\r\n            createZhifuLabel('欢乐点',coinUse.reward_coin)\r\n        } \r\n    }\r\n\r\n    initTitle(signup_cost){\r\n        let str=\"参赛资格:\"\r\n        let func=(info)=>\r\n        {\r\n            if(info.id==-99)\r\n            {\r\n                return info.count+\"游戏点/欢乐点\"\r\n            }\r\n            let item = GItemCfg.getItemById(info.id)\r\n            if(!item)\r\n            {\r\n                return \"\"\r\n            }\r\n            return item.name+\"x\"+info.count\r\n        }\r\n\r\n        for(let i=0;i<signup_cost.length;++i)\r\n        {\r\n            str+=func(signup_cost[i])\r\n            if(i<signup_cost.length-1)\r\n            {\r\n                str+=\"或\"\r\n            }\r\n        }\r\n        this.title.string = str;\r\n    }\r\n\r\n\r\n    onCheckClick(){\r\n        if(!(this.coinUse.notEnoughNum>0)){\r\n            if(this.datas){\r\n                this.datas.callBack()\r\n            }\r\n        }else{\r\n            // 打开 充值页面\r\n            GPageMgr.openPage(\"Page_Charge\")\r\n            // GPageMgr.getPage(\"Page_main\")\r\n        }\r\n\r\n        GPageMgr.closePage(\"Page_MatchPay\")\r\n    }\r\n    \r\n    onCloseClick(){\r\n        GPageMgr.closePage(\"Page_MatchPay\")\r\n    }\r\n\r\n}","import { EMatchState } from \"../../Config/_ini_\";\r\nimport { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GMatchSer } from \"../../Service/MatchService\";\r\nimport Widget_MatchListItemEd from \"../Widget/Widget_MatchListItemEd\";\r\nimport Widget_MatchListItemIng from \"../Widget/Widget_MatchListItemIng\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_MatchSignup extends Page {\r\n\r\n    @property(cc.ToggleContainer)\r\n    toggles: cc.ToggleContainer = null\r\n\r\n    @property(cc.ScrollView)\r\n    sv_ing:cc.ScrollView=null\r\n\r\n    @property(cc.ScrollView)\r\n    sv_ed:cc.ScrollView=null\r\n\r\n    @property(cc.Prefab)\r\n    pf_ing:cc.Prefab=null\r\n\r\n    @property(cc.Prefab)\r\n    pf_ed:cc.Prefab=null\r\n\r\n    start() {\r\n        this.onToggleMatchBegin()\r\n        this.sv_ing.node.active=true\r\n        this.sv_ed.node.active=false\r\n        this.init()\r\n    }\r\n\r\n    async init() {\r\n        if(GGameDM.isReviewVersion)\r\n        {\r\n            return\r\n        }\r\n        await GMatchSer.initMyMatches()\r\n        let all = GMatchSer.myMatchInfos||{}\r\n        for(let key in all)\r\n        {\r\n            let umi = all[key]\r\n            if(!umi.match)\r\n            {\r\n                continue\r\n            }\r\n            if(umi.match.state==EMatchState.Playing)\r\n            {\r\n                let node = cc.instantiate(this.pf_ing)\r\n                this.sv_ing.content.addChild(node)\r\n                let sc = node.getComponent(Widget_MatchListItemIng)\r\n                sc.init(umi)\r\n            }\r\n            else if(umi.match.state==EMatchState.End)\r\n            {\r\n                let node = cc.instantiate(this.pf_ed)\r\n                this.sv_ed.content.addChild(node)\r\n                let sc = node.getComponent(Widget_MatchListItemEd)\r\n                sc.init(umi)\r\n            }\r\n        }\r\n    }\r\n\r\n    onToggleMatchBegin() {\r\n        this.sv_ing.node.active=true\r\n        this.sv_ed.node.active=false\r\n        this.toggles.toggleItems[0].node.getChildByName(\"bg\").active=false\r\n        this.toggles.toggleItems[1].node.getChildByName(\"bg\").active=true\r\n    }\r\n\r\n    onToggleMatchEnd() {\r\n        this.sv_ing.node.active=false\r\n        this.sv_ed.node.active=true\r\n        this.toggles.toggleItems[0].node.getChildByName(\"bg\").active=true\r\n        this.toggles.toggleItems[1].node.getChildByName(\"bg\").active=false\r\n    }\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_MatchSignup\")\r\n    }\r\n}\r\n","import { GAppDM } from \"../../DataModel/AppDataModel\";\r\nimport { core } from \"../../Framework/Core/Base\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport tableView from \"../../Framework/TableView/tableView\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { BagItemItem, EBagItemState, GItemCfg } from \"../../Service/ItemService\";\r\nimport { GMatchSer } from \"../../Service/MatchService\";\r\nimport { GMsgCenter, MessageCenter } from \"../../utils/MessageCenter\";\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\nimport Widget_NumberFrame from \"../Widget/Widget_NumberFrame\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_MyPrizeDetail extends Page {\r\n    @property(tableView)\r\n    sv_content:tableView=null\r\n\r\n    private items:BagItemItem[] = null\r\n    private itemsId = null\r\n\r\n    onLoad(){\r\n        GMsgCenter.register(\"update_myprizeDetail\", this.doRefresh.bind(this),this.node)\r\n    }\r\n\r\n    // 刷新被点击 需要重新加载\r\n    onRefresh(newItems){\r\n        // 通知刷新\r\n        GMsgCenter.send('update_myprize',{tag:'Page_MyPrizeDetail',item_id:this.itemsId})\r\n    }\r\n\r\n    onBackClick(){\r\n        GPageMgr.closePage(\"Page_MyPrizeDetail\")\r\n    }\r\n\r\n    doRefresh(items:BagItemItem[]){\r\n        this.items = items || []\r\n        this.refreshView()\r\n    }\r\n    onOpen(items:BagItemItem[]){\r\n        this.items = items\r\n        this.refreshView()\r\n        this.itemsId = items[0].item_id\r\n    }\r\n\r\n    refreshView(){\r\n        this.sv_content.delegate = this\r\n        this.sv_content.init(this.items)\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"update_myprizeDetail\", this.node)\r\n    }\r\n}","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { EBagItemState, EItemType, GItemCfg } from \"../../Service/ItemService\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport Widget_ChangeItem from \"../Widget/Widget_ChangeItem\";\r\n\r\nimport tableView from \"../../Framework/TableView/tableView\"\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_MyPrizeInfo extends Page {\r\n\r\n    @property(cc.Node)\r\n    comment_server_Nd:cc.Node = null;\r\n\r\n    \r\n    @property(cc.Node)\r\n    comment_server_line:cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    name_item_lab:cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    name_phone_lab:cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    address_lab:cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    comment_client_lab:cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    comment_server_lab:cc.Label = null;\r\n\r\n\r\n\r\n    _itemData:any = null;\r\n\r\n    onOpen(mData)\r\n    {\r\n        this._itemData = mData;\r\n     \r\n        let itemM = GItemCfg.getItemById(mData.item_id)\r\n\r\n        this.name_item_lab.string = itemM.name;\r\n\r\n        if(this._itemData.address)\r\n        {\r\n            this.address_lab.node.active = true;\r\n            let addressStr = this._itemData.address;\r\n          \r\n            let addressData = addressStr.replace(\"\\\\\",\"\");\r\n\r\n           \r\n            let infoData = JSON.parse(addressData);\r\n\r\n            this.name_phone_lab.string = infoData.name+\"  \"+infoData.phone\r\n            this.address_lab.string = infoData.address\r\n        }else\r\n        {\r\n            this.name_phone_lab.string = \"无\"\r\n            this.address_lab.node.active = false;\r\n            this.address_lab.string = \"\";\r\n        }\r\n\r\n        this.comment_client_lab.string = this._itemData.comment_client?this._itemData.comment_client:\"无\"\r\n\r\n        this.comment_server_Nd.active = this.comment_server_line.active = this._itemData.comment_server;\r\n\r\n        this.comment_server_lab.string =  this._itemData.comment_server? this._itemData.comment_server:\"无\"\r\n\r\n \r\n\r\n\r\n    }\r\n\r\n    onLoad() {\r\n       \r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        \r\n    }\r\n\r\n    \r\n    \r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_MyPrizeInfo\")\r\n    }\r\n}\r\n","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { EBagItemState, EItemType, GItemCfg } from \"../../Service/ItemService\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport Widget_ChangeItem from \"../Widget/Widget_ChangeItem\";\r\n\r\nimport tableView from \"../../Framework/TableView/tableView\"\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_MyPrize extends Page {\r\n\r\n    @property(tableView)\r\n    sv_content:tableView=null\r\n\r\n    @property(cc.Prefab)\r\n    pf_item:cc.Prefab=null\r\n\r\n    private groupList = []\r\n    private groupDetailList = {}\r\n    private _checkIndex = \"1\";\r\n\r\n    refreshGroups(){\r\n        this.groupList = []\r\n        this.groupDetailList = {}\r\n    }\r\n\r\n    onLoad() {\r\n        GMsgCenter.register(\"update_myprize\", this.update_myprize.bind(this), this.node);\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"update_myprize\", this.node)\r\n    }\r\n\r\n\r\n    async start() {\r\n        await GItemCfg.init();\r\n        this.init()\r\n    }\r\n\r\n    async update_myprize(refreshData = null){\r\n        // await GUserMgr.refreshSelfUser()\r\n        await GItemCfg.init()\r\n\r\n        this.Tg_Exchange_OnChanged(null,this._checkIndex ,refreshData)\r\n    }\r\n\r\n    async resh()\r\n    {\r\n        // await GUserMgr.refreshSelfUser()\r\n        await GItemCfg.init();\r\n        \r\n        GMsgCenter.send(\"updateUserInfo\");\r\n        this.Tg_Exchange_OnChanged(null,this._checkIndex)\r\n    }\r\n\r\n    init(refreshData=null)\r\n    {\r\n        this.Tg_Exchange_OnChanged(null,'1',refreshData)\r\n    }\r\n \r\n    Tg_Exchange_OnChanged(event, eventdata,refreshData=null)\r\n    {\r\n        this.sv_content.clear()\r\n        var dataList  = []\r\n        var resList = []\r\n\r\n        this._checkIndex = eventdata;\r\n\r\n        // this.sv_content.content.removeAllChildren()\r\n        if (eventdata==\"1\") {\r\n        //     //表示未兑换\r\n            let bagItems = GItemCfg.bagItems\r\n            bagItems.forEach(element => {\r\n                if(element.state==EBagItemState.None || element.state==EBagItemState.TransOk){\r\n                    dataList.push(element)\r\n                }\r\n            });\r\n        }\r\n        else if (eventdata==\"2\") {\r\n        //     //表示已兑换\r\n            let bagItems = GItemCfg.exItems\r\n            bagItems.sort((a,b)=>a.state-b.state)\r\n            bagItems.forEach(element => {\r\n                if(element.state!=EBagItemState.None){\r\n                    dataList.push(element)\r\n                }\r\n            });\r\n        }\r\n        this.refreshGroups()\r\n\r\n        for(var i=0;i<dataList.length;i++){\r\n            resList.unshift(dataList[i])\r\n        }\r\n\r\n        // 对未兑换的进行分组\r\n        if(eventdata==\"1\"){\r\n            let groupRes = {}\r\n            for(var v of resList){\r\n                if(v.give_check ==0){\r\n                    this.groupList.push(v)\r\n                }else{\r\n                    if(!groupRes[v.item_id]){\r\n                        groupRes[v.item_id] = []\r\n                    }\r\n                    groupRes[v.item_id].push(v)\r\n                }\r\n            }\r\n            \r\n            this.groupDetailList = groupRes\r\n            for(var k in groupRes){\r\n                if(groupRes[k].length == 1){\r\n                    this.groupList.push(groupRes[k][0])\r\n                }else{\r\n                    let listData = ykUtils.clone(groupRes[k][0])\r\n                    listData.count = groupRes[k].length\r\n                    this.groupList.push(listData)\r\n                }\r\n            }\r\n\r\n            resList =  this.groupList\r\n        }\r\n\r\n        //===========================\r\n        console.log(resList)\r\n\r\n\r\n        // 将可进行操作的卡 放到前排\r\n        if(eventdata == 2){\r\n            var firstList = []\r\n            var threeList = []\r\n            var oldList = []\r\n            resList.forEach((element)=>{\r\n                if(element.give_check == 0){\r\n                    firstList.push(element)\r\n                }else if(element.state == EBagItemState.Exchanging){\r\n                    threeList.push(element)\r\n                }else{\r\n                    oldList.push(element)\r\n                }\r\n            })\r\n\r\n            resList = firstList.concat(threeList).concat(oldList)\r\n        }\r\n\r\n\r\n        this.sv_content.delegate = this\r\n        this.sv_content.init(resList)\r\n\r\n        if(refreshData && refreshData.tag == 'Page_MyPrizeDetail'){\r\n            GMsgCenter.send(\"update_myprizeDetail\",this.groupDetailList[refreshData.item_id])\r\n        }\r\n\r\n    }\r\n    // 当详细被点击\r\n    onPageDetailClick(item_id){\r\n        GPageMgr.openPage(\"Page_MyPrizeDetail\",this.groupDetailList[item_id])\r\n    }\r\n\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_MyPrize\")\r\n    }\r\n}\r\n","import { GAppDM } from \"../../DataModel/AppDataModel\";\r\nimport { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { Ajust } from \"../../Framework/Extention/Ajust\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { layerMgr } from \"../../manager/LayerManager\";\r\nimport { resMgr } from \"../../manager/ResourceManager\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport { EBagItemState, EItemType, GItemCfg } from \"../../Service/ItemService\";\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_My extends Page {\r\n\r\n    @property(cc.Sprite)\r\n    imgAvatar: cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    labelNickname: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelUid: cc.Label = null;\r\n\r\n    @property(cc.Sprite)\r\n    imgAuth: cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    labelScore: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelCoin: cc.Label = null;\r\n\r\n\r\n    @property(cc.Label)\r\n    labelMoney: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelTicket: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    lbl_version: cc.Label = null\r\n\r\n    @property(cc.Node)\r\n    node_func: cc.Node = null\r\n\r\n    @property(cc.Label)\r\n    label_checkAuth: cc.Label = null\r\n    onLoad() {\r\n        GMsgCenter.register(\"updateUserInfo\", this.updateUserInfo.bind(this), this);\r\n        GMsgCenter.register(\"changelogo\", this.changelogo.bind(this), this)\r\n        GMsgCenter.register(\"VerificationSuccess\", this.verify.bind(this), this)\r\n        let user = GUserMgr.self_user\r\n        let suffix: string = \"image/head/\" + user.logo;\r\n        let path = `${suffix}`;\r\n\r\n        resMgr.loadImage(path, (res) => {\r\n            cc.isValid(this.imgAvatar) && (this.imgAvatar.getComponent(cc.Sprite).spriteFrame = res);\r\n        })\r\n    }\r\n\r\n    changelogo(num) {\r\n        let suffix: string = \"image/head/\" + num;\r\n        let path = `${suffix}`;\r\n\r\n        resMgr.loadImage(path, (res) => {\r\n            cc.isValid(this.imgAvatar) && (this.imgAvatar.getComponent(cc.Sprite).spriteFrame = res);\r\n        })\r\n    }\r\n\r\n    start() {\r\n        if(GGameDM.isReviewVersion)\r\n        {\r\n            this.node_func.active=false\r\n        }\r\n        // let user = GUserMgr.self_user\r\n        // this.labelNickname.string = user.nickname;\r\n        // this.labelUid.string = user.id+\"\"\r\n        // this.labelScore.string = (user.coin||0)+\"\"\r\n        // this.labelMoney.string = (user.reward_coin||0)+\"\"\r\n        // // this.labelTicket.string = (user.ticket||0)+\"\"\r\n        // let auth = !ykUtils.isEmpty(user.nickname)  && !ykUtils.isEmpty(user.idcard_no) ? 1 : 0;\r\n        // GHelper.createSpriteFrame(\"View/Page/Res/main/person/img_auth_\" + auth, (sf) => {\r\n        //     cc.isValid(this.imgAuth) && (this.imgAuth.spriteFrame = sf)\r\n        // })\r\n        // this.lbl_version.string=GGameDM.version//+this.getComponentInChildren(Ajust).info\r\n\r\n        this.updateUserInfo()\r\n      \r\n    }\r\n\r\n\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"updateUserInfo\", this);\r\n        GMsgCenter.unregister(\"changeHead\", this);\r\n        GMsgCenter.unregister(\"VerificationSuccess\", this);\r\n    }\r\n\r\n    public updateUserInfo() {\r\n        let user = GUserMgr.self_user\r\n        this.labelNickname.string = user.nickname\r\n        this.labelScore.string = (user.coin||0)+\"\"\r\n        this.labelMoney.string = (user.reward_coin||0)+\"\"\r\n        this.labelUid.string = user.id+\"\"\r\n\r\n        // 这个值有可能为空\r\n        if(user.video_coin == null){\r\n            user.video_coin = 0\r\n        }\r\n        this.labelCoin.string =user.video_coin+''\r\n\r\n        let auth = !ykUtils.isEmpty(user.nickname)  && !ykUtils.isEmpty(user.idcard_no) ? 1 : 0;\r\n        GHelper.createSpriteFrame(\"View/Page/Res/main/person/img_auth_\" + auth, (sf) => {\r\n            cc.isValid(this.imgAuth) && (this.imgAuth.spriteFrame = sf)\r\n        })\r\n        this.lbl_version.string=GGameDM.version\r\n        if(auth){\r\n            this.label_checkAuth.string = '已认证'\r\n            // cc.find('layout_middle/btn_sign',this.node).getComponent(cc.Button).interactable = false\r\n        }else{\r\n            this.label_checkAuth.string = '未认证'\r\n        }\r\n\r\n         // 初始化我的卡券数量\r\n        let dataList = []\r\n        let bagItems = GItemCfg.bagItems\r\n        bagItems.forEach(element => {\r\n            if(element.state==EBagItemState.None){\r\n                dataList.push(element)\r\n            }\r\n        });\r\n        this.labelTicket.string = dataList.length+\"\"\r\n\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        // let user = GUserMgr.self_user\r\n        // this.labelScore.string = (user.coin||0)+\"\"\r\n        // this.labelMoney.string = (user.money||0)+\"\"\r\n        // // this.labelTicket.string = (user.ticket||0)+\"\"\r\n        // this.labelMoney.string = (user.reward_coin||0)+\"\"\r\n        this.refreshUser()\r\n       \r\n    }\r\n\r\n    async refreshUser(){\r\n        await GUserMgr.refreshSelfUser()\r\n        this.updateUserInfo()\r\n    }   \r\n\r\n    onClickPerson() {\r\n        // let node = GHelper.screenShot(null);\r\n        // node.setPosition(50, 0);\r\n        // node.parent = this.node;\r\n        if(GGameDM.isReviewVersion)\r\n        {\r\n            return\r\n        }\r\n        let user = GUserMgr.self_user\r\n        let auth = user.nickname && user.idcard_no ? 1 : 0;\r\n        //auth = 1;\r\n        if (auth==1) {\r\n            return;\r\n        }\r\n\r\n        GPageMgr.openPage(\"Page_Person\")\r\n    }\r\n\r\n    onClickNotice() {\r\n        GPageMgr.openPage(\"Page_Notice\")\r\n    }\r\n\r\n    onClickSetting() {\r\n        GPageMgr.openPage(\"Page_Setting\")\r\n    }\r\n\r\n    onClickInvite() {\r\n        // GPageMgr.openPage(\"Page_Invite\")\r\n        GPageMgr.openPage(\"Page_NeiYe\")\r\n    }\r\n\r\n    onClickSign() {\r\n        let user = GUserMgr.self_user\r\n        let auth = !ykUtils.isEmpty(user.nickname)  &&  !ykUtils.isEmpty(user.idcard_no)\r\n        if(!auth){\r\n            GPageMgr.openPage(\"Page_IDCard\")\r\n        }else\r\n        {\r\n            GHelper.showTip('已实名认证')\r\n        }\r\n    }\r\n\r\n    onClickCharge() {\r\n        GPageMgr.openPage(\"Page_Charge\")\r\n    }\r\n\r\n    onClickReceivingAddress() {\r\n        GPageMgr.openPage(\"Page_Address\")\r\n    }\r\n\r\n    onClickMyPrize() {\r\n        GPageMgr.openPage(\"Page_MyPrize\")\r\n    }\r\n\r\n    onClickCustomerService() {\r\n        GPageMgr.openPage(\"Page_CustomerService\")\r\n    }\r\n\r\n    onClickInvitationCode() {\r\n        GPageMgr.openPage(\"Page_Bind\")\r\n    }\r\n\r\n    verify() {\r\n        this.updateUserInfo()\r\n    }\r\n}\r\n","import { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr, PageManager } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport MultiPlatform from \"../../platform/MultiPlatform\";\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_NeiYe extends Page {\r\n    @property(cc.Node)\r\n    shareContent: cc.Node = null;\r\n    @property(cc.Node)\r\n    inviteDeminCode: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    labelInvite: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelInviteCode: cc.Label = null;\r\n\r\n    doClose(){\r\n        // console.log(this.name)\r\n        GPageMgr.closePage('Page_NeiYe')\r\n    }\r\n\r\n    \r\n    onLoad(): void {\r\n        let allHb = GGameDM.arrayInvite\r\n        this.loadInviteCode()\r\n\r\n        this.labelInvite.string = GUserMgr.self_user.nickname+'邀请您加入ZDPK'\r\n\r\n        allHb.forEach(async (element) => {\r\n            let gg = await ykUtils.loadNetSpriteFrame(ykUtils.getPosterNet(element))\r\n            if(gg){\r\n                let nn = cc.instantiate(cc.find('smallhb',this.node))\r\n                nn.getComponent(cc.Sprite).spriteFrame = gg\r\n                nn.active = true\r\n                nn.y = 0\r\n                nn.setContentSize(511,910)\r\n                // nn.children[0].getComponent(cc.Label).string = GUserMgr.self_user.id+''\r\n                cc.find('content/pageview',this.node).getComponent(cc.PageView).addPage(nn)\r\n            }\r\n        });\r\n      \r\n        this.labelInviteCode.string = '邀请码:'+GUserMgr.self_user.id+''\r\n    }\r\n\r\n    async loadInviteCode(){\r\n        let code =  await ykUtils.loadNetSpriteFrame(ykUtils.PATH.png_kefuCode)\r\n        if(code){\r\n            let size = this.inviteDeminCode.getContentSize()\r\n            this.inviteDeminCode.getComponent(cc.Sprite).spriteFrame = code\r\n            this.inviteDeminCode.setContentSize(size)\r\n        }\r\n    }\r\n\r\n    onShareFriend()\r\n    {\r\n        MultiPlatform.getInstance().capScreenShareWx(1,this.node.getChildByName(\"content\"),null);\r\n    }\r\n    onShareFriendCircle()\r\n    {   \r\n        MultiPlatform.getInstance().capScreenShareWx(2,this.node.getChildByName(\"content\"),null);\r\n    }\r\n\r\n    onSaveClick(){\r\n\r\n        MultiPlatform.getInstance().capScreen(this.node.getChildByName(\"content\"),(isSucces)=>\r\n        {\r\n            GHelper.showTip(isSucces?'保存成功':'保存失败',2,cc.v2(0,630));\r\n        });\r\n    }\r\n}","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Notice extends Page {\r\n    \r\n    @property(cc.ScrollView)\r\n    scrollview: cc.ScrollView = null;\r\n\r\n    @property(cc.Node)\r\n    layout: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    item: cc.Node = null;\r\n\r\n    start() {\r\n    }\r\n\r\n    Btn_Close_OnClick(event) {\r\n        GPageMgr.closePage(\"Page_Notice\")\r\n    }\r\n}\r\n","import { GAppDM } from \"../../../DataModel/AppDataModel\";\r\nimport { Page } from \"../../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../../Logic/UserManager\";\r\nimport { GHallHttp } from \"../../../Net/HallHttp\";\r\nimport { GHelper } from \"../../../Framework/Logic/Helper\";\r\nimport { GMsgCenter } from \"../../../utils/MessageCenter\";\r\nimport { resMgr } from \"../../../manager/ResourceManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Person extends Page {\r\n    \r\n    @property(cc.Sprite)\r\n    imgAvatar: cc.Sprite = null;\r\n\r\n    @property(cc.EditBox)\r\n    editboxNickname: cc.EditBox = null;\r\n\r\n    @property(cc.Label)\r\n    labelId: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelPhone: cc.Label = null;\r\n\r\n    initTable() {\r\n        this.editboxNickname.string = GUserMgr.self_user.nickname\r\n        this.labelId.string = String(GUserMgr.self_user.id)\r\n        this.labelPhone.string = GAppDM.account.phone\r\n    }\r\n\r\n    onLoad(): void {\r\n        this.editboxNickname.string = GUserMgr.self_user.nickname\r\n        this.labelId.string = String(GUserMgr.self_user.id)\r\n        this.labelPhone.string = GAppDM.account.phone\r\n        let suffix: string = \"image/head/\" + GUserMgr.self_user.logo;\r\n        let path = `${suffix}`;\r\n\r\n        resMgr.loadImage(path, (res) => {\r\n            cc.isValid(this.imgAvatar) && (this.imgAvatar.getComponent(cc.Sprite).spriteFrame = res);\r\n        })\r\n    }\r\n\r\n    onEditNickname() {\r\n        this.editboxNickname.string = this.editboxNickname.string.trim();\r\n    }\r\n\r\n    onClickSave() {\r\n        let nickname = this.editboxNickname.string;\r\n        GHallHttp.request(\"changename\", {nickname: nickname}).then((res)=>\r\n        {\r\n            if (res.errcode==null) {\r\n                GHelper.showTip(\"修改成功\");\r\n                GUserMgr.self_user.nickname = nickname\r\n                GMsgCenter.send(\"updateUserInfo\");\r\n            }\r\n        })\r\n        // GNetGameTexas.changename(nickname, (msg) => {\r\n        //     if (msg && !msg.error) {\r\n        //         eventMgr.dispatchEvent(consts.EVENT.REFRESH_UI);\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    onClickAuth() {\r\n        GPageMgr.openPage(\"Page_IDCard\")\r\n    }\r\n\r\n    onClickBack() {\r\n        GPageMgr.closePage(\"Page_Person\")\r\n    }\r\n}\r\n","import { GAppDM } from \"../../DataModel/AppDataModel\";\r\nimport { core } from \"../../Framework/Core/Base\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { eventMgr } from \"../../manager/EventManager\";\r\nimport { resMgr } from \"../../manager/ResourceManager\";\r\nimport { GAccountHttp } from \"../../Net/AccountHttp\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Register extends Page {\r\n\r\n    @property(cc.EditBox)\r\n    editNickname: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editPassword: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editPasswordConfirm: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editPhone: cc.EditBox = null;\r\n\r\n    @property(cc.Label)\r\n    lbl_phonetip: cc.Label = null;\r\n\r\n    @property(cc.EditBox)\r\n    editCode: cc.EditBox = null;\r\n\r\n    @property(cc.EditBox)\r\n    editInviter: cc.EditBox = null;\r\n\r\n    @property(cc.Label)\r\n    lbl_invitertip: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    btnCode: cc.Label = null;\r\n\r\n    @property(cc.Button)\r\n    btnHead: cc.Button = null;\r\n\r\n    @property(cc.Node)\r\n    headNode: cc.Node = null;\r\n\r\n    @property(cc.Sprite)\r\n    imgAvatar: cc.Sprite = null;\r\n\r\n    @property([cc.Node])\r\n    heads = new Array<cc.Node>()\r\n\r\n    random: number = 6;\r\n\r\n    onLoad() {\r\n        this.headNode.active = false;\r\n        //随机一个头像\r\n        this.random = this.getRandomInt(1, 16);\r\n        let suffix: string = \"image/head/\" + this.random;\r\n        let path = `${suffix}`;\r\n\r\n        resMgr.loadImage(path, (res) => {\r\n            cc.isValid(this.imgAvatar) && (this.imgAvatar.getComponent(cc.Sprite).spriteFrame = res);\r\n        })\r\n    }\r\n\r\n    start() {\r\n        // this.editNickname.node.parent.getChildByName(\"tips\").active = false;\r\n        this.editPassword.node.parent.getChildByName(\"tips\").active = false;\r\n        this.editPasswordConfirm.node.parent.getChildByName(\"tips\").active = false;\r\n        this.lbl_phonetip.node.active = false\r\n        this.lbl_invitertip.node.active = false\r\n    }\r\n\r\n    protected update(dt: number){\r\n        let remain = GAppDM.last_get_code ? GAppDM.last_get_code + 60000 - Date.now() : 0\r\n        if (remain < 0) {\r\n            remain = 0\r\n        }\r\n        remain = Math.floor(remain / 1000)\r\n        this.btnCode.string = \"获取验证码\" + (remain ? `(${remain})` : \"\")\r\n    }\r\n\r\n    onClickLogin() {\r\n        GPageMgr.closePage(\"Page_Register\")\r\n    }\r\n\r\n    async onClickGetCode() {\r\n        let phone = this.editPhone.string\r\n        if (!core.isPhoneNo(phone)) {\r\n            GHelper.showTip(\"请输入正确的手机号\")\r\n            return\r\n        }\r\n        let remain = GAppDM.last_get_code ? GAppDM.last_get_code + 60000 - Date.now() : 0\r\n        if (remain > 0) {\r\n            return\r\n        }\r\n        let res = await GAccountHttp.request(\"getphonecode\",{phone:phone,why:\"register\"})\r\n        if(res.errcode)\r\n        {\r\n            GHelper.showTip(JSON.stringify(res.errcode))\r\n        }\r\n        else\r\n        {\r\n            GHelper.showTip(\"验证码获取成功，请注意查收\")\r\n            GAppDM.last_get_code=Date.now()\r\n        }\r\n    }\r\n\r\n    async onClickRegister() {\r\n        // let nickname = this.editNickname.string;\r\n        let password = this.editPassword.string;\r\n        let password_confirm = this.editPasswordConfirm.string;\r\n        let phone = this.editPhone.string;\r\n        let code = this.editCode.string;\r\n        let inviter = this.editInviter.string;\r\n\r\n        if (!core.isPhoneNo(phone)) {\r\n            GHelper.showTip(\"请输入正确的手机号\");\r\n            return;\r\n        }\r\n\r\n        if (!code) {\r\n            GHelper.showTip(\"请输入验证码\");\r\n            return;\r\n        }\r\n\r\n        if (!password || !password_confirm) {\r\n            GHelper.showTip(\"请输入密码\");\r\n            return;\r\n        }\r\n\r\n        if (password != password_confirm) {\r\n            GHelper.showTip(\"两次输入密码不一致\");\r\n            return;\r\n        }\r\n\r\n        if (password.length < 6) {\r\n            GHelper.showTip(\"您输入的密码长度过短，请重新输入\");\r\n            return;\r\n        }\r\n        let res = await GAccountHttp.request(\"register\",{\r\n            key:phone+\"\",\r\n            code:code,\r\n            password:password,\r\n            from:4,\r\n            invite_code:inviter,\r\n            extra:\r\n            {\r\n                nickname:\"\",\r\n                logo:this.random.toString(),\r\n                sex:1\r\n            }\r\n        })\r\n        if(res.errcode)\r\n        {\r\n            GHelper.showTip(res.errcode.des)\r\n            return\r\n        }\r\n        GHelper.showTip(\"恭喜你注册成功\")\r\n        GPageMgr.closePage(\"Page_Register\")\r\n    }\r\n\r\n    onEditPassword() {\r\n        this.editPassword.string = this.editPassword.string.trim();\r\n        this.editPassword.node.parent.getChildByName(\"tips\").active = this.editPassword.string && this.editPassword.string.length < 6 || this.editPassword.string.length > 20;\r\n    }\r\n\r\n    onEditPasswordConfirm() {\r\n        this.editPasswordConfirm.string = this.editPasswordConfirm.string.trim();\r\n        this.editPasswordConfirm.node.parent.getChildByName(\"tips\").active = this.editPasswordConfirm.string && this.editPassword.string != this.editPasswordConfirm.string;\r\n    }\r\n\r\n    async Edit_Phone_OnEnd() {\r\n        this.editPhone.string = this.editPhone.string.replace(/[^0-9]/ig, \"\");\r\n        if (!core.isPhoneNo(this.editPhone.string)) {\r\n            this.lbl_phonetip.string = \"请输入正确的手机号码\"\r\n            this.lbl_phonetip.node.active=true\r\n            return;\r\n        }\r\n        let res = await GAccountHttp.request(\"checkphoneexist\",{phone:this.editPhone.string})\r\n        if(res.errcode)\r\n        {\r\n            this.lbl_phonetip.string = res.errcode.des\r\n            this.lbl_phonetip.node.active=true\r\n        }\r\n        else\r\n        {\r\n            this.lbl_phonetip.node.active=false\r\n        }\r\n    }\r\n\r\n    onEditCode() {\r\n        this.editCode.string = this.editCode.string.replace(/[^0-9]/ig, \"\");\r\n    }\r\n\r\n    async Edit_Inviter_OnEnd() {\r\n        this.editInviter.string = this.editInviter.string.replace(/[^0-9]/ig, \"\");\r\n        if (this.editInviter.string) {\r\n            let res = await GAccountHttp.request(\"checkinviteexist\",{pre_user_id:this.editInviter.string})\r\n            if(res.errcode)\r\n            {\r\n                this.lbl_invitertip.string = res.errcode.des\r\n                this.lbl_invitertip.node.active=true\r\n            }\r\n            else\r\n            {\r\n                this.lbl_invitertip.node.active=false\r\n            }\r\n        } else {\r\n            this.lbl_invitertip.node.active=false\r\n        }\r\n    }\r\n\r\n    clickHeadCallback(selfTg) {\r\n        let name = selfTg.node.name\r\n        this.random = Number(name.replace(\"head\", \"\"))\r\n        for (let index = 0; index < this.heads.length; index++) {\r\n            const element = this.heads[index]\r\n            element.getComponent(cc.Toggle).uncheck()\r\n        }\r\n\r\n        selfTg.check()\r\n    }\r\n\r\n    onClickClose() {\r\n        this.headNode.active = false\r\n        let suffix: string = \"image/head/\" + this.random;\r\n        let path = `${suffix}`;\r\n\r\n        resMgr.loadImage(path, (res) => {\r\n            cc.isValid(this.imgAvatar) && (this.imgAvatar.getComponent(cc.Sprite).spriteFrame = res);\r\n        })\r\n    }\r\n\r\n    onClickHead() {\r\n        this.headNode.active = true;\r\n        //之前随机的头像带上勾选框\r\n        for (let index = 0; index < this.heads.length; index++) {\r\n            const element = this.heads[index]\r\n            element.on('toggle', this.clickHeadCallback.bind(this), this);\r\n            if (this.random-1 == index) {\r\n                element.getComponent(cc.Toggle).check()\r\n            }\r\n            else\r\n            {\r\n                element.getComponent(cc.Toggle).uncheck()\r\n            }\r\n        }\r\n    }\r\n\r\n    getRandomInt(min, max) {\r\n        return Math.floor(Math.random()*(max - min)) + min\r\n    }\r\n}\r\n","import { GAppDM } from \"../../DataModel/AppDataModel\";\r\nimport { core } from \"../../Framework/Core/Base\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GAccountHttp } from \"../../Net/AccountHttp\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ResetPasswordLayer extends Page {\r\n\r\n    @property(cc.EditBox)\r\n    editPhone: cc.EditBox = null\r\n    @property(cc.Label)\r\n    lbl_phonetip:cc.Label = null\r\n\r\n    @property(cc.EditBox)\r\n    editCode: cc.EditBox = null\r\n\r\n    @property(cc.EditBox)\r\n    editPassword: cc.EditBox = null\r\n\r\n    @property(cc.EditBox)\r\n    editPasswordConfirm: cc.EditBox = null\r\n\r\n    @property(cc.Label)\r\n    btnCode: cc.Label = null;\r\n\r\n    start() {\r\n        this.lbl_phonetip.node.active=false\r\n        this.editPassword.node.parent.getChildByName(\"tips\").active=false\r\n        this.editPasswordConfirm.node.parent.getChildByName(\"tips\").active=false\r\n    }\r\n\r\n    async onClickGetCode() {\r\n        let phone = this.editPhone.string;\r\n        if (!core.isPhoneNo(phone)) {\r\n            GHelper.showTip(\"请输入正确的手机号\")\r\n            return\r\n        }\r\n        let remain = GAppDM.last_get_code ? GAppDM.last_get_code + 60000 - Date.now() : 0\r\n        if (remain > 0) {\r\n            return\r\n        }\r\n        let res = await GAccountHttp.request(\"getphonecode\",{phone:phone,why:\"resetpassword\"})\r\n        if(res.errcode)\r\n        {\r\n            GHelper.showTip(res.errcode.des)\r\n        }\r\n        else\r\n        {\r\n            GHelper.showTip(\"验证码获取成功,请注意查收\")\r\n            GAppDM.last_get_code=Date.now()\r\n        }\r\n    }\r\n    protected update(dt: number){\r\n        let remain = GAppDM.last_get_code ? GAppDM.last_get_code + 60000 - Date.now() : 0\r\n        if (remain < 0) {\r\n            remain = 0\r\n        }\r\n        remain = Math.floor(remain / 1000)\r\n        this.btnCode.string = \"获取验证码\" + (remain ? `(${remain})` : \"\")\r\n    }\r\n\r\n    async onClickResetPassword() {\r\n        let phone = this.editPhone.string;\r\n        let code = this.editCode.string;\r\n        let password = this.editPassword.string;\r\n        let password_confirm = this.editPasswordConfirm.string;\r\n\r\n        if (phone.length != 11) {\r\n            GHelper.showTip(\"请输入11位手机号\");\r\n            return;\r\n        }\r\n\r\n        if (!code) {\r\n            GHelper.showTip(\"请输入验证码\");\r\n            return;\r\n        }\r\n\r\n        if (!password || !password_confirm) {\r\n            GHelper.showTip(\"请输入密码\");\r\n            return;\r\n        }\r\n\r\n        if (password != password_confirm) {\r\n            GHelper.showTip(\"两次输入密码不一致\");\r\n            return;\r\n        }\r\n\r\n        if (password.length < 6) {\r\n            GHelper.showTip(\"您输入的密码长度过短，请重新输入\");\r\n            return;\r\n        }\r\n        let res = await GAccountHttp.request(\"resetpassword\",{key:phone,code:code,password:password,from:4})\r\n        if(res.errcode)\r\n        {\r\n            GHelper.showTip(res.errcode.des)\r\n        }\r\n        else\r\n        {\r\n            GHelper.showTip(\"密码重置成功\")\r\n            GPageMgr.openPage(\"Page_AccountLogin\")\r\n        }\r\n    }\r\n\r\n    async onEditPhone() {\r\n        this.editPhone.string = this.editPhone.string.replace(/[^0-9]/ig, \"\");\r\n        if (!core.isPhoneNo(this.editPhone.string)) {\r\n            this.lbl_phonetip.string = \"请输入正确的手机号码\"\r\n            this.lbl_phonetip.node.active=true\r\n            return;\r\n        }\r\n        let res = await GAccountHttp.request(\"checkphoneexist\",{phone:this.editPhone.string})\r\n        if(res.errcode)\r\n        {\r\n            this.lbl_phonetip.string = \"手机号码不存在\"\r\n            this.lbl_phonetip.node.active=false\r\n        }\r\n        else\r\n        {\r\n            this.lbl_phonetip.node.active=true\r\n        }\r\n    }\r\n\r\n    onEditCode() {\r\n        this.editCode.string = this.editCode.string.replace(/[^0-9]/ig, \"\");\r\n    }\r\n\r\n    onEditPassword() {\r\n        this.editPassword.string = this.editPassword.string.trim();\r\n        this.editPassword.node.parent.getChildByName(\"tips\").active = this.editPassword.string.length < 6 || this.editPassword.string.length > 20;\r\n    }\r\n\r\n    onEditPasswordConfirm() {\r\n        this.editPasswordConfirm.string = this.editPasswordConfirm.string.trim();\r\n        this.editPasswordConfirm.node.parent.getChildByName(\"tips\").active = this.editPasswordConfirm.string && this.editPassword.string != this.editPasswordConfirm.string;\r\n    }\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_ResetPassword\")\r\n    }\r\n}\r\n","import { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport MultiPlatform from '../../platform/MultiPlatform';\r\nimport { GGameDM } from '../../Framework/DataModel/GameDataModel';\r\nimport { GAccountHttp } from '../../Net/AccountHttp';\r\nimport { GAppDM } from '../../DataModel/AppDataModel';\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_ServerList extends Page {\r\n    @property(cc.Prefab)\r\n    item_prefab:cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    contentNode:cc.Node = null;\r\n\r\n\r\n    @property(cc.Node)\r\n    chooiseNd:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    pass_wordNd:cc.Node = null;\r\n\r\n    @property(cc.EditBox)\r\n    pass_word_editbox:cc.EditBox = null;\r\n\r\n    serverData:any = null;\r\n\r\n    start() {\r\n        this.init(GGameDM.server_list);\r\n    }\r\n    init(mdata:any)\r\n    {\r\n        this.serverData = mdata;\r\n        this.contentNode.removeAllChildren();\r\n        for(var i=0;i<this.serverData.length;i++)\r\n        {\r\n            let temp = cc.instantiate(this.item_prefab);\r\n            this.contentNode.addChild(temp);\r\n            temp.getComponent('Widget_serverListItem').init(this.serverData[i],i)\r\n        }\r\n        if(JSON.parse(cc.sys.localStorage.getItem(\"isShowServerList\")))\r\n        {\r\n            this.chooiseNd.active = true;\r\n            this.pass_wordNd.active = false;\r\n        }else\r\n        {\r\n            this.chooiseNd.active = false;\r\n            this.pass_wordNd.active = true;\r\n        }\r\n    }\r\n    checkPassWord()\r\n    {\r\n        if(GGameDM.pass_word==\"\")\r\n        {\r\n            GHelper.showTip(\"远处密码未配置！！！\")\r\n            return\r\n        }\r\n        if(this.pass_word_editbox.string==GGameDM.pass_word)\r\n        {\r\n            this.pass_wordNd.active = false;\r\n            this.chooiseNd.active = true;\r\n            cc.sys.localStorage.setItem(\"isShowServerList\",true)\r\n        }else\r\n        {\r\n            GHelper.showTip(\"请输入正确密码！！！\")\r\n        }\r\n    }\r\n    closeView()\r\n    {\r\n         // 获取地址\r\n         GAccountHttp.init(\"auth\",GAppDM.account_server.host,GAppDM.account_server.port)\r\n         if(!GPageMgr.isPageOpened(\"Page_CodeLogin\"))\r\n         {\r\n            GPageMgr.openPage(\"Page_Start\")\r\n         }\r\n         GPageMgr.closePage('Page_ServerList');\r\n    }\r\n    btn_close_onClick(event)\r\n    {\r\n        this.closeView();\r\n    }\r\n    btn_closeShowIng_onClick(event)\r\n    {\r\n        cc.sys.localStorage.setItem(\"isShowServerList\",false)\r\n        GAppDM.isShowServerList = false;\r\n        this.closeView();\r\n        \r\n    }\r\n}\r\n","import { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Setting extends Page {\r\n\r\n    @property(cc.Node)\r\n    node_match:cc.Node=null\r\n    start() {\r\n        if(GGameDM.isReviewVersion)\r\n        {\r\n            this.node_match.active=false\r\n        }\r\n    }\r\n\r\n    onClickChangePhoneNumber() {\r\n        GPageMgr.openPage(\"Page_ChangePhone\")\r\n    }\r\n\r\n    onClickChangePassword() {\r\n        GPageMgr.openPage(\"Page_ResetPassword\")\r\n    }\r\n\r\n    onClickTerm() {\r\n        //GPageMgr.openPage(\"Page_Term\")\r\n        GPageMgr.openPage(\"Page_WebView\",\"http://www.zdpoker.com/protocol/user\")\r\n    }\r\n\r\n    onClickStatement() {\r\n        GPageMgr.openPage(\"Page_Statement\")\r\n    }\r\n\r\n    onClickAbout() {\r\n        //GPageMgr.openPage(\"Page_About\")\r\n        GPageMgr.openPage(\"Page_WebView\",\"http://www.zdpoker.com/protocol/privacy\")\r\n    }\r\n\r\n    onClickLogout() {\r\n        GPageMgr.openPage(\"Page_Logout\")\r\n    }\r\n\r\n    onClickDeleteAccount() {\r\n        GPageMgr.openPage(\"Page_Tips\",{\r\n            tips:\"确定要注销帐号吗\",\r\n            buttons:[\r\n                {\r\n                    label:\"确定\",\r\n                    callback:async ()=>\r\n                    {\r\n                        let res = await GHallHttp.request(\"removeAccount\",{})\r\n                        if(res.errcode)\r\n                        {\r\n                            GHelper.showTip(res.errcode.des)\r\n                            return\r\n                        }\r\n                        else\r\n                        {\r\n                            GHelper.showTip(\"注销帐号成功\")\r\n                            GPageMgr.openPage(\"Page_Logout\")\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    label:\"取消\",\r\n                    callback:()=>\r\n                    {\r\n\r\n                    }\r\n                }\r\n            ]\r\n        })\r\n    }\r\n\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_Setting\")\r\n    }\r\n}\r\n","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_SignTip extends Page {\r\n    onLoad(){\r\n        setTimeout(()=>\r\n        {\r\n            GPageMgr.closePage(\"Page_SignTip\")\r\n        },2000000)\r\n    }\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_SignTip\")\r\n    }\r\n    Btn_Invite_OnClick(event)\r\n    {\r\n        //转到邀请界面\r\n    }\r\n}\r\n","import { GAppDM } from \"../../DataModel/AppDataModel\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { resMgr } from \"../../manager/ResourceManager\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport ItemTask from \"../main/layer/ItemTask\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Sign extends Page {\r\n\r\n    @property(cc.Label)\r\n    labelSignCount: cc.Label = null;\r\n    \r\n    @property(cc.Label)\r\n    labelTips: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelScore: cc.Label = null;\r\n\r\n    @property(cc.ScrollView)\r\n    scrollviewTask: cc.ScrollView = null;\r\n\r\n    @property(cc.Node)\r\n    layoutTask: cc.Node = null;\r\n\r\n    @property([cc.Toggle])\r\n    tg_signs:cc.Toggle[]=[]\r\n\r\n    @property([ItemTask])\r\n    wgt_tasks:ItemTask[]=[]\r\n\r\n    @property(cc.Sprite)\r\n    imgAvatar: cc.Sprite = null;\r\n\r\n    start() {\r\n        this.scrollviewTask.scrollToTop();\r\n        this.init()\r\n    }\r\n\r\n    init() {\r\n        let user = GUserMgr.self_user\r\n        let suffix: string = \"image/head/\" + user.logo;\r\n        let path = `${suffix}`;\r\n        resMgr.loadImage(path, (res) => {\r\n            cc.isValid(this.imgAvatar) && (this.imgAvatar.getComponent(cc.Sprite).spriteFrame = res);\r\n        })\r\n\r\n        let sign_count=user.sign_count||0\r\n        let next = sign_count % 7\r\n        let next_mii = GAppDM.signs[next]\r\n        \r\n        let today_sign=false\r\n        if(user.sign_time)\r\n        {\r\n            let today = new Date()\r\n            let signday = new Date(user.sign_time)\r\n            if(today.getFullYear()==signday.getFullYear()\r\n                &&today.getMonth()==signday.getMonth()\r\n                &&today.getDate()==signday.getDate())\r\n            {\r\n                today_sign=true\r\n            }\r\n        }\r\n        this.labelTips.string = (today_sign ? \"今日\" : \"明日\") + \"签到可获得\" + GAppDM.getItemDesc(next_mii)\r\n        this.labelSignCount.string = sign_count+\"\"\r\n        this.labelScore.string = user.coin+\"\"\r\n\r\n        for (let i = 0; i < this.tg_signs.length; i++) {\r\n            this.tg_signs[i].isChecked = i < (sign_count%7)\r\n            this.tg_signs[i].node.parent.getChildByName(\"label_day\").color = i < sign_count ? cc.color(255,255,255) : cc.Color.WHITE\r\n            let node = this.tg_signs[i].node.parent.getChildByName(\"label_reward\")\r\n            node.color = i < sign_count ? cc.color(255,255,255) : cc.Color.WHITE\r\n            let mii = GAppDM.signs[i]\r\n            node.getComponent(cc.Label).string = GAppDM.getItemDesc(mii)\r\n        }\r\n        GHallHttp.request(\"getuser\").then((res)=>\r\n        {\r\n            if(!res.user)\r\n            {\r\n                return\r\n            }\r\n            GUserMgr.addOneUser(res.user)\r\n            for(let i=0;i<this.wgt_tasks.length;++i)\r\n            {\r\n                let ti = this.wgt_tasks[i]\r\n                ti.refresh()\r\n            }\r\n        })\r\n    }\r\n\r\n    async onClickSign() {\r\n        let today_sign=false\r\n        if(GUserMgr.self_user.sign_time)\r\n        {\r\n            let today = new Date()\r\n            let signday = new Date(GUserMgr.self_user.sign_time)\r\n            if(today.getFullYear()==signday.getFullYear()\r\n                &&today.getMonth()==signday.getMonth()\r\n                &&today.getDate()==signday.getDate())\r\n            {\r\n                today_sign=true\r\n            }\r\n        }\r\n        if(today_sign)\r\n        {\r\n            return\r\n        }\r\n\r\n        let res = await GHallHttp.request(\"sign\")\r\n        if(res.errcode)\r\n        {\r\n            GHelper.showTip(res.errcode.des)\r\n            return\r\n        }\r\n        GUserMgr.addOneUser(res.user)\r\n        \r\n        this.init()\r\n        GPageMgr.openPage(\"Page_SignTip\")\r\n    }\r\n\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_Sign\")\r\n    }\r\n}\r\n","import { EAccountFrom, GAppDM } from '../../DataModel/AppDataModel';\r\nimport { GGameDM } from '../../Framework/DataModel/GameDataModel';\r\nimport { Page } from '../../Framework/View/Page/Page';\r\nimport { GPageMgr } from '../../Framework/View/Page/PageManager';\r\nimport { GNativeTool } from '../../Framework/Logic/NativeTool'\r\nimport {ykUtils} from '../../utils/YkUtils'\r\nimport { layerMgr } from '../../manager/LayerManager';\r\nconst {ccclass, property} = cc._decorator\r\n\r\n@ccclass\r\nexport class Page_Start extends Page\r\n{\r\n    onLoad () \r\n    {\r\n\r\n        if(cc.sys.isBrowser){\r\n            this.goNextPage()\r\n            return\r\n        }\r\n\r\n        if(GGameDM.isReviewVersion){\r\n            // 审核版本\r\n            // GPageMgr.openPage(\"Page_CodeLogin\")\r\n            console.log('GGameDM.isReviewVersion  start')\r\n            if(cc.sys.os==cc.sys.OS_ANDROID){\r\n                GPageMgr.openPage(\"Page_CodeLogin\")\r\n            }else if(cc.sys.os==cc.sys.OS_IOS){\r\n                this.reviewLogin()\r\n            }else{\r\n                GPageMgr.openPage(\"Page_CodeLogin\")\r\n            }\r\n           \r\n        }else{\r\n            cc.find('versionUpdate',this.node).active = false\r\n            if(cc.sys.os==cc.sys.OS_ANDROID || cc.sys.os==cc.sys.OS_IOS){\r\n                // 检测大版本更新\r\n                if(cc.sys.os==cc.sys.OS_ANDROID){\r\n                    console.log('GGameDM.androidMaxVersion',GGameDM.androidMaxVersion)\r\n                    if(GGameDM.androidMaxVersion){\r\n                        this.checkMaxVersionAndroid()\r\n                    }else{\r\n                        this.goNextPage()\r\n                    }\r\n                }else if(cc.sys.os==cc.sys.OS_IOS){\r\n                    console.log('GGameDM.iosMaxVersion',GGameDM.iosMaxVersion)\r\n                    if(GGameDM.iosMaxVersion ){\r\n                        this.checkMaxVersionIos()\r\n                    }else{\r\n                        this.goNextPage()\r\n                    }\r\n                }\r\n                else{\r\n                    this.goNextPage()\r\n                }\r\n            }else{\r\n                this.goNextPage()\r\n            }\r\n        }\r\n    }\r\n\r\n    async reviewLogin(){\r\n        layerMgr.showNetLoading(true)\r\n        let ret =null;\r\n        while(ret==null){\r\n            let phoneCode = ''\r\n            for(var i=0;i<4;i++){\r\n                phoneCode+= ykUtils.getRndInteger(1,9)\r\n            }\r\n            let phone = '1300085'+phoneCode\r\n            let code = '123456'\r\n            \r\n            ret =  await GAppDM.onLogin(phone,code,EAccountFrom.QuickPhone)\r\n            if(ret){\r\n                break\r\n            }else{\r\n                ykUtils.waitTime(1)\r\n            }\r\n        }\r\n        layerMgr.showNetLoading(false)\r\n\r\n        if(ret)\r\n        {\r\n            GPageMgr.openPage(\"Page_Main\")\r\n        }else{\r\n            this.goNextPage()\r\n        }\r\n    }\r\n\r\n\r\n    checkMaxVersionIos(){\r\n        let serverVersion = GGameDM.iosMaxVersion\r\n        let version = GNativeTool.getMaxVersion()\r\n        console.log('GGameDM.iosMaxVersion',serverVersion,version)\r\n        var isMax = ykUtils.compareVersionMax(serverVersion,version)\r\n        if(isMax){\r\n            cc.find('versionUpdate',this.node).active = true\r\n            cc.find('versionUpdate/lb_version',this.node).getComponent(cc.Label).string = 'V'+serverVersion\r\n        }else{\r\n            this.goNextPage()\r\n        }\r\n    }\r\n\r\n    checkMaxVersionAndroid(){\r\n        let serverVersion = GGameDM.androidMaxVersion\r\n        let version = GNativeTool.getMaxVersion()\r\n        console.log('GGameDM.androidMaxVersion',serverVersion,version)\r\n        var isMax = ykUtils.compareVersionMax(serverVersion,version)\r\n        if(isMax){\r\n            cc.find('versionUpdate',this.node).active = true\r\n            cc.find('versionUpdate/lb_version',this.node).getComponent(cc.Label).string = 'V'+serverVersion\r\n        }else{\r\n            this.goNextPage()\r\n        }\r\n    }\r\n\r\n    onUpdateMaxVersionClick(){\r\n        // 打开下载页面\r\n        if(cc.sys.os==cc.sys.OS_ANDROID){\r\n            GNativeTool.openUrl(GGameDM.androidLoadUrl)\r\n        }else  if(cc.sys.os==cc.sys.OS_IOS){\r\n            GNativeTool.openUrl(GGameDM.iosLoadUrl)\r\n        }\r\n    }\r\n\r\n    goNextPage(){\r\n        if(GAppDM.quick_test|| GGameDM.update)\r\n        {\r\n            GPageMgr.openPage(\"Page_CodeLogin\")\r\n            return\r\n        }\r\n        if (!cc.sys.isNative\r\n            ||(cc.sys.os!=cc.sys.OS_ANDROID && cc.sys.os!=cc.sys.OS_IOS&&cc.sys.os!=cc.sys.OS_WINDOWS))\r\n        {\r\n            GPageMgr.openPage(\"Page_CodeLogin\")\r\n        }\r\n        else\r\n        {\r\n            if(GAppDM.checkUpdate){\r\n                GPageMgr.openPage(\"Page_Update\")\r\n            }else{\r\n                GPageMgr.openPage(\"Page_CodeLogin\")\r\n            }\r\n        }   \r\n    }\r\n}","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Statement extends Page {\r\n    start(){\r\n\r\n    }\r\n\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_Statement\")\r\n    }\r\n}\r\n","import { ETexasSeatState, GTexasTableDM, TexasSeatInfo, TexasTableInfo } from \"../../DataModel/TexasTableDataModel\";\r\nimport { GNetGameTexas } from \"../../Net/NetGameTexas\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { EMatchState, ETableState, ETexasAction } from \"../../Config/_ini_\";\r\nimport Card, { CardInfo } from \"../game/play/Card\";\r\nimport Seat from \"../game/play/Seat\";\r\nimport Widget_TableMatchTip from \"../Widget/Widget_TableMatchTip\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { GMatchSer, MatchModel, MatchPlayer } from \"../../Service/MatchService\";\r\nimport { GMsgCenter, MessageCenter } from \"../../utils/MessageCenter\";\r\nimport { GameChipsMove } from \"../game/play/GameChipsMove\";\r\nimport { GPageMgr, PageManager } from \"../../Framework/View/Page/PageManager\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { GTipLabel } from \"../../Framework/Extention/TipLabel\";\r\nimport Widget_Table_Action from \"../Widget/Widget_Table_Action\";\r\nimport { GAudioTool } from \"../../Framework/Logic/AudioTool\";\r\nimport { CardSeatInfo } from \"../../DataModel/CardTableDataModel\";\r\nimport { GNativeTool } from \"../../Framework/Logic/NativeTool\";\r\nimport Page_MatchInfo from \"./Page_MatchInfo\";\r\nimport { GaoDeMapTool } from \"../../Framework/Logic/GaoDeMapTool\";\r\nimport { GItemCfg } from \"../../Service/ItemService\";\r\nimport { layerMgr } from \"../../manager/LayerManager\"\r\nimport { GSettingDM } from \"../../Framework/DataModel/SettingDataModel\";\r\n\r\nimport { faceCheckTool } from \"../../Framework/Logic/FaceCheckTool\"\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\n\r\nimport { Global } from \"../game/Global\";\r\nimport { GAppDM } from \"../../DataModel/AppDataModel\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Table extends Page {\r\n    @property(Widget_Table_Action)\r\n    wgt_tableaction:Widget_Table_Action=null\r\n    @property(cc.Label)\r\n    lbl_tablenum:cc.Label=null\r\n    @property(cc.Label)\r\n    lbl_levelinfo:cc.Label=null\r\n    @property(cc.Label)\r\n    lbl_levelinfo2:cc.Label=null\r\n    @property(cc.Label)\r\n    lbl_avg:cc.Label=null\r\n    @property(cc.Label)\r\n    lbl_num:cc.Label=null\r\n    @property(cc.Label)\r\n    lbl_rank:cc.Label=null\r\n\r\n    @property(cc.Label)\r\n    lbl_total_pot:cc.Label=null\r\n    @property([cc.Label])\r\n    lbl_pots:cc.Label[]=[]\r\n\r\n    @property(cc.Button)\r\n    btn_signup:cc.Button=null\r\n\r\n    //牌桌灯光\r\n    @property(cc.Node)\r\n    node_light_tip: cc.Node = null;\r\n\r\n    @property([cc.Node])\r\n    m_publiccards=new Array<cc.Node>()\r\n\r\n    @property(cc.Prefab)\r\n    card: cc.Prefab = null;\r\n    @property(cc.Node)\r\n    self_card: cc.Node = null;\r\n    private SelfCard: Card[] = [];\r\n\r\n    @property(Seat)\r\n    seats = new Array<Seat>()\r\n\r\n    /**是否开始大圆盘 */\r\n    @property(Widget_TableMatchTip)\r\n    wgt_tmt:Widget_TableMatchTip=null\r\n\r\n    orginalBetPos: cc.Vec2[] = [];\r\n\r\n    @property(cc.Prefab)\r\n    chipsMovePrefab: cc.Prefab = null\r\n    public m_chipsMove: GameChipsMove = null;\r\n\r\n    @property(cc.Prefab)\r\n    reviewPrefab: cc.Prefab = null;\r\n\r\n    @property(cc.Button) \r\n    btn_focus: cc.Button = null;\r\n\r\n    @property(cc.Node) \r\n    clearAnimalNode: cc.Node = null;\r\n\r\n    public percent_imgPosY: number = 0;\r\n    public perPercent: number = 0;          // 自由加注条上一次拉动的百分比\r\n    public lastPercent: number = 0;\r\n\r\n    public curBig_blind = -1\r\n    \r\n    protected _table_id=-1\r\n    get tableInfo()\r\n    {\r\n        return GTexasTableDM.getTableInfo(this._table_id) as TexasTableInfo\r\n    }\r\n    get selfSeatInfo()\r\n    {\r\n        let self_seat = GTexasTableDM.getSeatByUserId(this._table_id,GUserMgr.self_user_id)\r\n        return self_seat\r\n    }\r\n    get selfSeatIndex()\r\n    {\r\n        let self_seat = this.selfSeatInfo\r\n        return self_seat?.index||0\r\n    }\r\n    protected _create_time=-1\r\n    private reviewNode = null\r\n    private centerCardX = []\r\n\r\n    onLoad() {\r\n        Global.tableData.selfRank = -1;\r\n        this._create_time=Date.now()\r\n        let reviewNode = cc.instantiate(this.reviewPrefab)\r\n        this.node.addChild(reviewNode);\r\n        reviewNode.active = false;\r\n        this.reviewNode = reviewNode\r\n        // 保持上层\r\n        reviewNode.zIndex = 100\r\n\r\n        GAudioTool.resetEffect();\r\n\r\n\r\n        MessageCenter.getInstance().register(\"cardstyle\", this.updateCardStyle.bind(this), this.node);\r\n        MessageCenter.getInstance().register(\"cardbgstyle\", this.updateCardBgStyle.bind(this), this.node);\r\n        MessageCenter.getInstance().register(\"turnShowCard\", this.turnShowCard.bind(this), this.node);\r\n\r\n        GMsgCenter.register(\"identify_success\", this.identify_success.bind(this), this.node);\r\n        GMsgCenter.register(\"identify_failed\", this.identify_failed.bind(this), this.node);\r\n\r\n        GMsgCenter.register(\"Game_Hide\", this.doInGameHide.bind(this), this.node);\r\n        \r\n\r\n        this.refreshTableInfo()\r\n        this.schedule(this.refreshTableInfo.bind(this),1)\r\n\r\n\r\n        // // 记录五张牌的chushi\r\n        // for(var i=0;i<this.m_publiccards.length;i++){\r\n        //     this.centerCardX.push(this.m_publiccards[i].x)\r\n        // }\r\n       \r\n        \r\n    }\r\n    // private showAc = null\r\n    // gameShow(){\r\n    //     if(this.showAc){\r\n    //         clearTimeout(this.showAc)\r\n    //     }\r\n    //     // 重置卡片位置\r\n    //     this.showAc =  setTimeout(()=>{\r\n    //         for(var i=0;i<this.seats.length;i++){\r\n    //             let seat =  this.seats[i]\r\n    //             seat.getCard(0).doStopAllActions()\r\n    //             seat.getCard(1).doStopAllActions()\r\n    //         }\r\n    //     },100)\r\n    // }\r\n\r\n    doInGameHide(){\r\n        GNetGameTexas.closeInHide()\r\n        this.clearAnimalNode.stopAllActions()\r\n    }\r\n    check_identify() {\r\n        // GNativeTool.callRlsb(GUserMgr.self_user.nickname, GUserMgr.self_user.idcard_no.toString(), GUserMgr.self_user_id.toString())\r\n        faceCheckTool.checkFace(GUserMgr.self_user.nickname, GUserMgr.self_user.idcard_no.toString(), GUserMgr.self_user_id.toString())\r\n    }\r\n\r\n   \r\n\r\n    identify_failed() {\r\n    }\r\n    /**\r\n     * 刷新牌桌中间的信息\r\n     */\r\n    refreshTableInfo()\r\n    {\r\n        let ti = this.tableInfo\r\n        let empty = false\r\n        let matchM:MatchModel=null\r\n        if(ti)\r\n        {\r\n            // if (this.count==-1) {\r\n            //     this.count = 0;\r\n            //     GNetGameTexas.send_texas_identified(ti.match_insid)\r\n            // }\r\n\r\n            let matchInsM = GMatchSer.getMatchInsById(ti.match_insid)\r\n            matchM = matchInsM.match\r\n            if (!matchM||matchInsM.state==EMatchState.Waiting) {\r\n                empty=true\r\n            }\r\n        }\r\n        else\r\n        {\r\n            empty=true\r\n        }\r\n        if(empty)\r\n        {\r\n            this.lbl_tablenum.string=\"-\"\r\n            this.lbl_levelinfo.string=\"-\"\r\n            this.lbl_levelinfo2.string=\"-\"\r\n            this.lbl_avg.string=\"-\"\r\n            this.lbl_num.string=\"-\"\r\n            this.lbl_rank.string=\"-\"\r\n            return\r\n        }\r\n        let time = new Date()\r\n        let h = time.getHours()\r\n        let m = time.getMinutes()\r\n        let str=\"\"\r\n        if(h<10)\r\n        {\r\n            str=\"0\"+h+\":\"\r\n        }\r\n        else\r\n        {\r\n            str=h+\":\"\r\n        }\r\n        if(m<10)\r\n        {\r\n            str+=\"0\"+m\r\n        }\r\n        else\r\n        {\r\n            str+=m\r\n        }\r\n        this.lbl_tablenum.string=(ti.no||\"-\")+\" 号桌\"+\"  \"+str\r\n        let bm = GMatchSer.getBlindItem(matchM.blind_id,ti.blind_index)\r\n        if(bm.level<=0)\r\n        {\r\n            bm = GMatchSer.getBlindItem(matchM.blind_id,ti.blind_index-1)\r\n        }\r\n        let dttime = Math.floor((ti.blind_deadline-GHelper.getServerTime())/1000)\r\n        if(dttime<0)dttime=0\r\n        let timestr=Math.floor(dttime/60).toString().padStart(2,\"0\")+\":\"+(dttime%60).toString().padStart(2,\"0\")\r\n        this.lbl_levelinfo.string=\"L\"+bm.level+\" \"+bm.small_blind+\"/\"+bm.big_blind+\"/\"+bm.ante+\"  \"+timestr\r\n        \r\n        if(this.curBig_blind != bm.big_blind){\r\n            this.curBig_blind = bm.big_blind\r\n            this.refreshNumber()\r\n        }\r\n\r\n       \r\n        let bm_next=GMatchSer.getBlindItem(matchM.blind_id,ti.blind_index+1)\r\n        if(!bm_next)\r\n        {\r\n            bm_next=bm\r\n        }\r\n        if(bm_next.level>0)\r\n        {\r\n            this.lbl_levelinfo2.string=\"L\"+bm_next.level+\" \"+bm_next.small_blind+\"/\"+bm_next.big_blind+\"/\"+bm_next.ante\r\n        }\r\n        else\r\n        {\r\n            this.lbl_levelinfo2.string=\"休息\"+Math.floor(bm_next.seconds/60)+\"分钟\"\r\n        }\r\n        let total = ti.total_player_num*matchM.coin\r\n        let avg=Math.floor(total/ti.cur_player_num)\r\n        if(avg)\r\n        {\r\n            this.lbl_avg.string=this.getFormatNum(avg)\r\n        }\r\n        else\r\n        {\r\n            this.lbl_avg.string=\"-\"\r\n        }\r\n        this.lbl_num.string=ti.cur_player_num+\"/\"+ti.total_player_num\r\n        let selfseat = this.selfSeatInfo\r\n        if(!selfseat)\r\n        {\r\n            let players = GMatchSer.getPlayers(this.tableInfo.match_insid)\r\n            if(players&&players[GUserMgr.self_user_id])\r\n            {\r\n                let rank = players[GUserMgr.self_user_id].rank\r\n                this.lbl_rank.string=\"第\"+rank+\"名\"\r\n                this.lbl_rank.string = \"\"\r\n            }\r\n        }\r\n        else\r\n        {\r\n            let pi = selfseat.playerinfo as MatchPlayer\r\n            this.lbl_rank.string=\"第\"+pi.cur_rank+\"名\"\r\n        }\r\n        // for(var i=0;i<this.seats.length;i++){\r\n        //     console.log('card angle :'+i+'::'+this.seats[i].getCard(0).node.angle\r\n        //     +'::'+this.seats[i].getCard(1).node.angle)\r\n\r\n        //     console.log('card angle nei :'+this.seats[i].getCard(0).node.children[0].name+i+'::'+this.seats[i].getCard(0).node.children[0].angle\r\n        //     +'::'+this.seats[i].getCard(1).node.children[0].angle)\r\n        // }\r\n    }\r\n    /**\r\n     * 刷新牌桌中自己的排名\r\n     * @param cur_rank \r\n     */\r\n    refreshTableRank(cur_rank)\r\n    {\r\n        if(Global.tableData.selfRank!=-1)\r\n        {\r\n            let selfseat = this.selfSeatInfo\r\n            if(!selfseat)\r\n            {\r\n                let players = GMatchSer.getPlayers(this.tableInfo.match_insid)\r\n                if(players&&players[GUserMgr.self_user_id])\r\n                {\r\n                    players[GUserMgr.self_user_id].rank = cur_rank;\r\n                }\r\n            }else\r\n            {\r\n                (selfseat.playerinfo as MatchPlayer).cur_rank = cur_rank;\r\n            }\r\n            this.lbl_rank.string=\"第\"+cur_rank+\"名\"\r\n        }\r\n    }\r\n    // 刷新所有的数字\r\n    refreshNumber(){\r\n        for (let i = 0; i < 9; i++) {\r\n            let seat = this.seats[i];\r\n            if(seat.node.active){\r\n                seat.refreshNumber()\r\n            }\r\n        }\r\n        // =============================\r\n        this.refreshPots()\r\n        cc.find('Widget_Table_Action',this.node).getComponent('Widget_Table_Action')['refreshButtons']()\r\n    }\r\n\r\n\r\n\r\n    private lastBbClickTime = 0\r\n    onBbChangeClick(){\r\n        let clickTimec = Date.now() - this.lastBbClickTime\r\n\r\n        if(clickTimec<=1000){\r\n            GSettingDM.bbOn = !GSettingDM.bbOn\r\n            this.refreshNumber()\r\n            this.lastBbClickTime = 0\r\n        }else{\r\n            this.lastBbClickTime = Date.now()\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    \r\n    getFormatNum(num,isToPot = false):string{\r\n        // bb保留两位小数\r\n        let bigBland = this.curBig_blind\r\n        // console.log('getFormatNum',bigBland)\r\n        if(!GSettingDM.bbOn || bigBland == -1){\r\n            if(isToPot){\r\n                return this._toPot(num).toString()\r\n            }\r\n            return num.toString()\r\n        }\r\n        \r\n        let bb = Number((num/bigBland).toFixed(2))+' BB'\r\n        return bb\r\n    }\r\n\r\n\r\n    protected onDestroy(): void {\r\n        // this.node.stopAllActions()\r\n        this.clearAnimalNode.stopAllActions()\r\n\r\n        let page = GPageMgr.getPage(\"Page_MatchInfo\") as Page_MatchInfo\r\n        page?.hide()\r\n        \r\n        MessageCenter.getInstance().unregister(\"cardstyle\", this.node);\r\n        MessageCenter.getInstance().unregister(\"turnShowCard\", this.node);\r\n        GMsgCenter.unregister(\"identify_success\", this.node)\r\n        GMsgCenter.unregister(\"identify_failed\", this.node)\r\n        GMsgCenter.unregister(\"Game_Hide\", this.node)\r\n\r\n        // GMsgCenter.unregister(\"Game_Show\",this.node);\r\n        GHelper.clearTip()\r\n\r\n        GPageMgr.closePage('Page_MatchPay')\r\n        GPageMgr.closePage('Page_MatchInfo')\r\n        \r\n    }\r\n\r\n    updateCardStyle() {\r\n        this.m_publiccards.forEach(element => {\r\n            if (element.getComponent(Card).info) {\r\n                element.getComponent(Card).setContent(element.getComponent(Card).info.id);\r\n            }\r\n        });\r\n        if (this.seats[0].seatInfo && this.seats[0].seatInfo.playerinfo.id==GUserMgr.self_user_id) {\r\n            this.seats[0].getCard(0).setContent(this.seats[0].getCard(0).getComponent(Card).info.id);\r\n            this.seats[0].getCard(1).setContent(this.seats[0].getCard(1).getComponent(Card).info.id);\r\n        }\r\n    }\r\n\r\n    updateCardBgStyle(index) {\r\n        if(this.seats == null){\r\n            return\r\n        }\r\n        \r\n        for(let i=0;i<this.seats.length;++i)\r\n        {\r\n            this.seats[i].getCard(0).setCardBg(index)\r\n            this.seats[i].getCard(1).setCardBg(index)\r\n\r\n            this.m_publiccards.forEach(element => {\r\n                if (element.getComponent(Card)) {\r\n                    element.getComponent(Card).setCardBg(index);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    start() {\r\n        \r\n    }\r\n\r\n\r\n    initTable(table_id:number)\r\n    {\r\n        this.clearAnimalNode.stopAllActions()\r\n        this._table_id= table_id\r\n        this.wgt_tableaction.init(this._table_id)\r\n        this.resetPublicCards()\r\n        this.showTable()\r\n        //this.showSelfCards()\r\n        let tableinfo = this.tableInfo\r\n        \r\n        this.wgt_tmt.init(this.tableInfo.match_insid)\r\n\r\n        let insid = this.tableInfo.match_insid\r\n        let matchins = GMatchSer.getMatchInsById(insid)\r\n        if(!matchins)\r\n        {\r\n            GPageMgr.closePage(\"Page_Game\")\r\n            return\r\n        }\r\n        \r\n        let focusmatches = GUserMgr.self_user.focusmatches||[]\r\n        if(focusmatches.indexOf(insid)>=0||matchins.state!=EMatchState.Waiting)\r\n        {\r\n            this.btn_focus.node.active = true\r\n            this.btn_focus.interactable=false\r\n            this.btn_focus.node.getChildByName(\"label\").getComponent(cc.Label).string = \"已关注赛事\"\r\n        }\r\n        else if(matchins.state==EMatchState.Waiting)\r\n        {\r\n            this.btn_focus.node.active=true\r\n        }else{\r\n\r\n        }\r\n        \r\n      \r\n\r\n        let cansignup = GMatchSer.canSignup(this._table_id)\r\n        if (!cansignup) {\r\n            if (matchins.state!=EMatchState.Waiting) {\r\n                this.btn_signup.node.active = false;\r\n                this.setBootomChangeShow(false)\r\n            }\r\n            else\r\n            {\r\n                this.btn_signup.node.active = true;\r\n                this.btn_signup.node.getChildByName(\"Background\").getChildByName(\"label\").getComponent(cc.Label).string = \"已报名参赛\"\r\n                this.btn_signup.interactable = false;\r\n                this.setBootomChangeShow(false)\r\n            }\r\n        }else{\r\n            this.btn_signup.node.active = true;\r\n            this.setBootomChangeShow(true)\r\n        }\r\n\r\n        if (!this.wgt_tmt.node.active) {\r\n            this.btn_focus.node.active = false;\r\n            let string = this.btn_signup.node.getChildByName(\"Background\").getChildByName(\"label\").getComponent(cc.Label).string\r\n            if(string ==\"已报名参赛\"){\r\n                this.btn_signup.node.active = false;\r\n                this.setBootomChangeShow(false)\r\n            }\r\n        }\r\n\r\n\r\n        this.initCenterCardPos()\r\n\r\n    }\r\n    // 比赛失败 报名不能显示补丁\r\n    reshSignUp(isShow)\r\n    {\r\n        this.btn_signup.node.active = isShow;\r\n    }\r\n\r\n    updateSignUp()\r\n    {\r\n        let cansignup = GMatchSer.canSignup(this._table_id)\r\n\r\n        if(cansignup)\r\n        {\r\n            this.btn_signup.node.active = true;\r\n        }\r\n         \r\n    }\r\n\r\n    showSelfCards() {\r\n        let selfInfo = this.tableInfo.seats[GUserMgr.self_user_id];\r\n        if (selfInfo != undefined) {\r\n            //自己的翻牌\r\n            this.seats[0].getCard(0).setContent(selfInfo.cards[0])\r\n            this.seats[0].getCard(1).setContent(selfInfo.cards[1])\r\n            this.seats[0].m_pkCards[0].img_num.node.setContentSize(new cc.Size(105, 159));\r\n            this.seats[0].m_pkCards[1].img_num.node.setContentSize(new cc.Size(105, 159));\r\n            this.seats[0].getCard(0).setFace(true)\r\n            this.seats[0].getCard(1).setFace(true)\r\n        }\r\n    }\r\n    /**\r\n     * 重置公共牌\r\n     */\r\n    resetPublicCards() {\r\n        for(let i=0;i<this.m_publiccards.length;++i)\r\n        {\r\n            this.m_publiccards[i].active=false\r\n        }\r\n        this.node_light_tip.active=false\r\n    }\r\n    /**\r\n     * 刷新 边池\r\n     * @returns \r\n     */\r\n    refreshPots()\r\n    {\r\n        this.lbl_total_pot.node.parent.active=false\r\n        for(let i=0;i<this.lbl_pots.length;++i)\r\n        {\r\n            this.lbl_pots[i].node.parent.active=false\r\n        }\r\n        let tableinfo = this.tableInfo\r\n        if(!tableinfo)\r\n        {\r\n            return\r\n        }\r\n        if(tableinfo.pot>0)\r\n        {\r\n            this.lbl_total_pot.node.parent.active=true\r\n            this.lbl_total_pot.string = this.getFormatNum(tableinfo.pot,true)\r\n        }\r\n        let pots = tableinfo.pots\r\n        if(!pots||pots.length<=1)\r\n        {\r\n            let has_allin=false\r\n            let allseats:{total_bet:number,allin:boolean}[]=[]\r\n            for(let key in tableinfo.seats)\r\n            {\r\n                let si = tableinfo.seats[key]\r\n                if(si.state==ETexasSeatState.AllIn)\r\n                {\r\n                    has_allin=true\r\n                }\r\n                allseats.push({total_bet:si.total_bet,allin:si.state==ETexasSeatState.AllIn})\r\n            }\r\n            if(has_allin)\r\n            {\r\n                pots=[]\r\n                allseats.sort((a,b)=>a.total_bet-b.total_bet)\r\n                while(allseats.length>0)\r\n                {\r\n                    let pot = 0\r\n                    let i=0;\r\n                    for(;i<allseats.length;++i)\r\n                    {\r\n                        if(allseats[i].total_bet<=0)\r\n                        {\r\n                            continue\r\n                        }\r\n                        if(allseats[i].allin)\r\n                        {\r\n                            let allin_bet = allseats[i].total_bet\r\n                            pot+=allin_bet*(allseats.length-i)\r\n                            for(let k=i;k<allseats.length;++k)\r\n                            {\r\n                                allseats[k].total_bet-=allin_bet\r\n                            }\r\n                            break\r\n                        }\r\n                        pot+=allseats[i].total_bet\r\n                    }\r\n                    allseats=allseats.slice(i+1)\r\n                    if(pot>0)\r\n                    {\r\n                        pots.push(pot)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(!pots||pots.length<=1)\r\n        {\r\n            return\r\n        }\r\n        for(let i=0;i<pots.length;++i)\r\n        {\r\n            this.lbl_pots[i].node.parent.active=true\r\n            this.lbl_pots[i].string=this.getFormatNum(pots[i],true)\r\n        }\r\n    }\r\n    \r\n\r\n    reloadUI() {\r\n    }\r\n\r\n    chipMoveIn() {\r\n        let centerPos = cc.Vec2.ZERO;\r\n        centerPos=this.lbl_total_pot.node.convertToWorldSpaceAR(centerPos)\r\n        for (let i = 0; i < 9; i++) {\r\n            let seat = this.seats[i];\r\n            if (seat.getComponent(Seat).labelBet.node.parent.active) {\r\n                let chips = cc.instantiate(this.chipsMovePrefab)\r\n                seat.getComponent(Seat).labelBet.node.parent.parent.addChild(chips);\r\n                chips.setPosition(seat.getComponent(Seat).labelBet.node.parent.position);\r\n\r\n                seat.getComponent(Seat).labelBet.node.parent.active = false\r\n                chips.active = true;\r\n\r\n                let pos = cc.Vec2.ZERO;\r\n                seat.getComponent(Seat).labelBet.node.parent.parent.convertToNodeSpaceAR(centerPos, pos);\r\n                chips.runAction(cc.sequence(cc.delayTime(0.5), cc.moveTo(0.3, pos), cc.hide(), cc.removeSelf(true)));\r\n            }\r\n        }\r\n    }\r\n\r\n    generalChip() {\r\n        let chip = cc.instantiate(this.chipsMovePrefab)\r\n        chip.setPosition(this.lbl_total_pot.node.parent.parent.getPosition())\r\n        this.node.addChild(chip)\r\n        return chip\r\n    }\r\n\r\n    initSendCard() {\r\n        let worldpos = cc.Vec2.ZERO;\r\n        this.node.parent.convertToWorldSpaceAR(this.node.parent.getChildByName(\"pot\").getPosition(), worldpos);\r\n        let seats: {[user_id:number]: CardSeatInfo } = {}\r\n        let pos = -1\r\n        for (const key in this.tableInfo.seats) {\r\n            let seatinfo = this.tableInfo.seats[key] as TexasSeatInfo\r\n            if(this.tableInfo.dealer_index==seatinfo.index) {\r\n                pos = 1\r\n                continue;\r\n            }\r\n\r\n            if (pos == -1) {\r\n                continue;\r\n            }\r\n            else\r\n            {\r\n                seats[key] = this.tableInfo.seats[key]\r\n            }\r\n        }\r\n\r\n        pos = -1\r\n        for (const key in this.tableInfo.seats) {\r\n            let seatinfo = this.tableInfo.seats[key] as TexasSeatInfo\r\n            if(this.tableInfo.dealer_index==seatinfo.index) {\r\n                seats[key] = this.tableInfo.seats[key]\r\n                pos = 1\r\n                break;\r\n            }\r\n\r\n            if (pos == -1) {\r\n                seats[key] = this.tableInfo.seats[key]\r\n                continue;\r\n            }\r\n        }\r\n\r\n        let i = 0;\r\n        for (const key in seats) {\r\n            let seatinfo = seats[key] as TexasSeatInfo\r\n            if(seatinfo.state==ETexasSeatState.Waiting) {\r\n                continue\r\n            }\r\n            let selfSeatIndex = this.selfSeatIndex\r\n            let index = (seatinfo.index-selfSeatIndex+this.seats.length)%this.seats.length\r\n            i++;\r\n            this.seats[index].getCard(0).clearContent();\r\n            this.seats[index].getCard(0).setFace(false);\r\n            this.seats[index].getCard(0).setDealPos(worldpos);\r\n            \r\n            this.seats[index].getCard(0).node.opacity=0\r\n            this.seats[index].getCard(0).deal(i*0.05);\r\n            GAudioTool.playSound(\"Common/Audio/Effect/fapai\")\r\n        }\r\n        let j = 0;\r\n        for (const key in seats) {\r\n            let seatinfo = seats[key] as TexasSeatInfo\r\n            if(seatinfo.state==ETexasSeatState.Waiting) {\r\n                continue\r\n            }\r\n            \r\n            let selfSeatIndex = this.selfSeatIndex\r\n            let index = (seatinfo.index-selfSeatIndex+this.seats.length)%this.seats.length\r\n            this.seats[index].getCard(1).clearContent();\r\n            this.seats[index].getCard(1).setFace(false);\r\n\r\n            this.seats[index].getCard(1).node.active = true;\r\n            this.seats[index].getCard(1).setDealPos(worldpos);\r\n            j++;\r\n          \r\n            this.seats[index].getCard(1).node.opacity=0\r\n            this.seats[index].getCard(1).deal((j+1)*0.05 + i*0.05);\r\n            GAudioTool.playSound(\"Common/Audio/Effect/fapai\")\r\n        }\r\n    }\r\n    \r\n    TurnSelfCard(cards: number []) {\r\n        // 设置为牌背\r\n        for (let i = 0; i < this.SelfCard.length; ++i) {\r\n            this.SelfCard[i].setFace(false);\r\n            this.SelfCard[i].setContent(cards[i]);\r\n        }\r\n\r\n        for (let i = 0; i < this.SelfCard.length; ++i) {\r\n            this.SelfCard[i].turn(0.3, true);\r\n        }\r\n    }\r\n\r\n    // 初始化中间的卡片位置\r\n    initCenterCardPos(){\r\n        for(var i=0;i<3;i++){\r\n            this.m_publiccards[i].x = this.m_publiccards[0].x + i * 98\r\n        }\r\n    }\r\n\r\n    clearSeatCardPos(){\r\n\r\n    }\r\n\r\n\r\n    turnThreeCards(num: number []) {\r\n        for (let i = 0; i < 3; ++i) {\r\n            this.m_publiccards[i].stopAllActions();\r\n            this.m_publiccards[i].active = true\r\n            this.m_publiccards[i].setPosition(cc.v2(this.m_publiccards[0].x, this.m_publiccards[0].y));\r\n            this.m_publiccards[i].getComponent(Card).setFace(false);\r\n\r\n            let movecallback = cc.callFunc(()=>{\r\n                this.m_publiccards[i].getComponent(Card).info = new CardInfo;\r\n                this.m_publiccards[i].getComponent(Card).info.id = num[i]\r\n                this.m_publiccards[i].getComponent(Card).setContent(num[i]);\r\n                this.m_publiccards[i].getComponent(Card).setCardBg(cc.sys.localStorage.getItem(\"setting_cardbg_style\") || \"1\")\r\n                this.m_publiccards[i].getComponent(Card).turn(0.2, true);\r\n            });\r\n            let pkMove = cc.moveTo(0.1 * i, cc.v2(this.m_publiccards[0].x + i * 98, this.m_publiccards[0].y));\r\n            this.m_publiccards[i].runAction(cc.sequence(pkMove, movecallback));\r\n        }\r\n    }\r\n    onEnterMatch()\r\n    {\r\n        if(!this._isOnLoadCalled)\r\n        {\r\n            return\r\n        }\r\n        this.wgt_tmt?.init(this.tableInfo.match_insid)\r\n    }\r\n    showTable() {\r\n        this.wgt_tmt.init(this.tableInfo.match_insid)\r\n        let tableinfo = this.tableInfo\r\n        if(!tableinfo)\r\n        {\r\n            return\r\n        }\r\n        for(let i=0;i<this.seats.length;++i)\r\n        {\r\n            this.seats[i].onStandUp()\r\n            this.orginalBetPos[i] = this.seats[i].labelBet.node.parent.getPosition();\r\n        }\r\n        let selfSeatIndex = this.selfSeatIndex\r\n        for(let key in tableinfo.seats)\r\n        {\r\n            let seatinfo = tableinfo.seats[key]\r\n            let index = (seatinfo.index-selfSeatIndex+this.seats.length)%this.seats.length\r\n            this.seats[index].node.active=true\r\n            this.seats[index].init(this._table_id,seatinfo.playerinfo.id, index)\r\n        }\r\n\r\n        this.dealer()\r\n        this.displayPublicCards()\r\n        this.refreshLight(true)\r\n        this.refreshPots()\r\n        this.onIdle()\r\n        this.wgt_tableaction.refreshButtons()\r\n    }\r\n\r\n    dealer() {\r\n        let tableinfo = this.tableInfo\r\n        if(!tableinfo)\r\n        {\r\n            return\r\n        }\r\n        let selfSeatIndex = this.selfSeatIndex\r\n        let index = (tableinfo.dealer_index-selfSeatIndex+this.seats.length)%this.seats.length \r\n        let pos = cc.Vec2.ZERO;\r\n        let worldpos = this.seats[index].node_dealer_tip.convertToWorldSpaceAR(cc.Vec2.ZERO)\r\n        this.node.convertToNodeSpaceAR(worldpos, pos)\r\n        if (tableinfo.dealer_index < 0) {\r\n            this.node.getChildByName(\"node_dealer\").active = false;\r\n        }\r\n        else\r\n        {\r\n            this.node.getChildByName(\"node_dealer\").active = true;\r\n        }\r\n        this.node.getChildByName(\"node_dealer\").setPosition(pos);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param force true的话表示不用动画直接显示\r\n     * @returns \r\n     */\r\n    refreshLight(force=false)\r\n    {\r\n        this.node_light_tip.active=false\r\n        //暂时直接返回，东哥不喜欢\r\n        return\r\n        let tableinfo = this.tableInfo\r\n        if(!tableinfo)\r\n        {\r\n            return\r\n        }\r\n        if(tableinfo.state!=ETableState.Playing)\r\n        {\r\n            return\r\n        }\r\n        if(tableinfo.turn_user_id<0)\r\n        {\r\n            return\r\n        }\r\n        let seat = this.getSeat(tableinfo.turn_user_id)\r\n        if(!seat)\r\n        {\r\n            return\r\n        }\r\n        this.node_light_tip.active=true\r\n        let st_wd_pos = seat.node.convertToWorldSpaceAR(cc.v2(0,0))\r\n        let cur_wd_pos = this.node_light_tip.convertToWorldSpaceAR(cc.v2(0,0))\r\n        let dtv2 = st_wd_pos.sub(cur_wd_pos)\r\n        let r = 0\r\n        if(dtv2.x==0)\r\n        {\r\n            if(dtv2.y>0)r=180\r\n            if(dtv2.y<0)r=0\r\n        }\r\n        else\r\n        {\r\n            let len = dtv2.len()\r\n            r = Math.atan(dtv2.y/dtv2.x)/3.14*180\r\n            \r\n            if(dtv2.x<0)\r\n            {\r\n                r=90-r\r\n            }\r\n            else\r\n            {\r\n                r=180+90-r\r\n            }\r\n        }\r\n        \r\n        this.node_light_tip.angle=this.node_light_tip.angle%360\r\n        if(r<this.node_light_tip.angle)\r\n        {\r\n            r+=360\r\n        }\r\n        if(force)\r\n        {\r\n            this.node_light_tip.angle=-r\r\n        }\r\n        else\r\n        {\r\n            cc.tween(this.node_light_tip).to(0.1,{angle:-r}).start()\r\n        }\r\n    }\r\n    getSeat(user_id:number)\r\n    {\r\n        for(let i=0;i<this.seats.length;++i)\r\n        {\r\n            if(this.seats[i].userId==user_id)\r\n            {\r\n                return this.seats[i]\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    displayPublicCards() {\r\n        this.resetPublicCards();\r\n        let cards = this.tableInfo.cards;\r\n        for (const key in cards) {\r\n            let value = cards[key];\r\n            this.m_publiccards[key].active = true;\r\n            this.m_publiccards[key].getComponent(Card).info = new CardInfo;\r\n            this.m_publiccards[key].getComponent(Card).info.id = value\r\n            this.m_publiccards[key].getComponent(Card).setContent(value)\r\n            this.m_publiccards[key].getComponent(Card).setFace(true)\r\n        }\r\n    }\r\n\r\n    onSit(table_id:number,seatinfo:TexasSeatInfo)\r\n    {\r\n        if(table_id!=this._table_id)\r\n        {\r\n            return\r\n        }\r\n        if(seatinfo.playerinfo.id==GUserMgr.self_user.id)\r\n        {\r\n            return\r\n        }\r\n        let selfSeatIndex = this.selfSeatIndex\r\n        let index = (seatinfo.index-selfSeatIndex+this.seats.length)%this.seats.length\r\n        this.seats[index].node.active=true\r\n        this.seats[index].init(this._table_id,seatinfo.playerinfo.id, index)\r\n        //服务器处理算了，sit后必然来个enter_table，\r\n    }\r\n    onStandUp(table_id:number,user_id:number)\r\n    {\r\n        if(table_id!=this._table_id)\r\n        {\r\n            return\r\n        }\r\n        let seat = this.getSeat(user_id)\r\n        seat.onStandUp()\r\n        if(user_id==GUserMgr.self_user_id)\r\n        {\r\n            let cansignup = GMatchSer.canSignup(this._table_id)\r\n           \r\n            if(cansignup)\r\n            {\r\n                this.btn_signup.node.getChildByName(\"Background\").getChildByName(\"label\").getComponent(cc.Label).string = \"报名参赛\"\r\n                this.btn_signup.node.active=true\r\n                this.btn_signup.interactable = true\r\n                this.setBootomChangeShow(true)\r\n            }\r\n            else\r\n            {\r\n                this.btn_signup.node.getChildByName(\"Background\").getChildByName(\"label\").getComponent(cc.Label).string = \"已报名参赛\"\r\n                this.btn_signup.interactable = false\r\n                this.setBootomChangeShow(false)\r\n            }\r\n            this.initTable(this._table_id)\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    // 认证成功 \r\n    identify_success() {\r\n       \r\n        console.log('identify_success show tk')\r\n\r\n        let beginSignUp = async ()=>{\r\n                        let pre_create_time = this._create_time\r\n                        // if(!GMatchSer.trySignup(this.tableInfo.match_insid))\r\n                        // {\r\n                        //     GPageMgr.openPage(\"Page_Charge\")\r\n                        //     return\r\n                        // }\r\n                        if(!GUserMgr.self_user.idcard_no&&!cc.sys.isBrowser && GAppDM.account_server.host!=\"123.60.12.239\" &&\r\n                        GGameDM.match_is_verification.indexOf(GUserMgr.self_user_id.toString())==-1\r\n                        )\r\n                        {\r\n                            GPageMgr.openPage(\"Page_IDCard\")\r\n                            return\r\n                        }\r\n\r\n                        // layerMgr.showNetLoading(true,'获取位置中')\r\n                        // let lm = await GaoDeMapTool.getLocation()\r\n                        // layerMgr.showNetLoading(false)\r\n                        \r\n                        let gps=[0,0]\r\n                        let lm = GaoDeMapTool.locationRes\r\n                        if(lm.code == 0){\r\n                            gps=[lm.longitude,lm.latitude]\r\n                            layerMgr.showNetLoading(true,'注册比赛中')\r\n                           \r\n                        }\r\n\r\n                        cc.error(\"开始报名\")\r\n                        let res = await GHallHttp.request(\"matchsignup\",{ins_id:this.tableInfo.match_insid,type:1,gps:gps})\r\n                        cc.error(\"报名结果=\",res)\r\n                        if(res.errcode)\r\n                        {\r\n                            GHelper.showTip(res.errcode.des)\r\n                            layerMgr.showNetLoading(false)\r\n                            return\r\n                        }\r\n                       \r\n                        layerMgr.showNetLoading(false)\r\n\r\n                        GItemCfg.init()\r\n                        GMatchSer.onSignup(res.umi,res.player)\r\n                       \r\n                        \r\n                        this.btn_signup.interactable = false;\r\n                        this.btn_signup.node.getChildByName(\"Background\").getChildByName(\"label\").getComponent(cc.Label).string = \"已报名参赛\"\r\n                        this.setBootomChangeShow(false)\r\n                        this.wgt_tableaction.refreshButtons()\r\n                    \r\n                        let match = GMatchSer.getMatchInsById(this.tableInfo.match_insid).match\r\n                        let ti = this.tableInfo\r\n                        ti.total_player_num+=1\r\n                        ti.match_total_point+=match.coin\r\n                        ti.cur_num+=1\r\n\r\n\r\n                        // 注册人脸 \r\n                        \r\n\r\n                        // let ti = this.tableInfo;\r\n                        if (ti) {\r\n                            GNetGameTexas.send_texas_identified(ti.match_insid)\r\n                        }\r\n                        if(this.selfSeatInfo)\r\n                        {\r\n                            let pi = this.selfSeatInfo.playerinfo as MatchPlayer\r\n                            pi.identified=true\r\n                        }\r\n                   \r\n\r\n\r\n                        // 刷新用户相关\r\n                        GHallHttp.request(\"getuser\").then((rs)=>\r\n                        {\r\n                            GUserMgr.addOneUser(rs.user)\r\n                            GMsgCenter.send(\"updateuserinfo\")\r\n                            GMsgCenter.send(\"coinchanged\")\r\n                        })\r\n        }\r\n\r\n       let page =  GPageMgr.openPage(\"Page_MatchPay\",{\r\n            table_id:this._table_id,\r\n            callBack: async ()=>\r\n            {\r\n                beginSignUp()\r\n            },\r\n        })\r\n       \r\n    }\r\n\r\n    \r\n    async Btn_Signup_OnClick(event)\r\n    {\r\n        if(!GMatchSer.canSignup(this._table_id))\r\n        {\r\n            return\r\n        }\r\n\r\n        if (!GUserMgr.self_user.idcard_no&&!GGameDM.isReviewVersion && GAppDM.account_server.host!=\"123.60.12.239\") \r\n        {\r\n            GPageMgr.openPage(\"Page_IDCard\");\r\n            return;\r\n        }\r\n\r\n\r\n        if(cc.sys.os == cc.sys.OS_ANDROID){\r\n            let isOpen = GNativeTool.checkLocationPremissionIsOpen()\r\n            if(!isOpen){\r\n                GHelper.showTip('请打开定位和获取手机信息的权限',5)\r\n                ykUtils.waitTimeNode(this.node,0.5)\r\n                // 请求权限\r\n                GNativeTool.reqLocationPremission()\r\n                return\r\n            }\r\n        }else if(cc.sys.os == cc.sys.OS_IOS){\r\n            // 刷新定位\r\n            layerMgr.showNetLoading(true,'获取位置中',20000)\r\n            let lm = await GaoDeMapTool.getLocation()\r\n            layerMgr.showNetLoading(false)\r\n            if(lm.code!=1){\r\n                GHelper.showTip(\"gps 数据获取失败!请打开位置权限！\")\r\n                return\r\n            }\r\n        }\r\n\r\n       \r\n        // if(GaoDeMapTool.locationRes.code==1)\r\n        // {\r\n        //     GHelper.showTip(\"gps 数据获取失败!请打开位置权限！\")\r\n        //     return\r\n            \r\n        // }else{\r\n        //     // 进行gps验证\r\n        // // layerMgr.showNetLoading(true,'获取位置中',20000)\r\n        // // console.log('开始获取位置...')\r\n        // // let lm = \r\n        // // layerMgr.showNetLoading(false)\r\n        // // console.log('获取位置结束...')\r\n        // }\r\n        // 静默获取\r\n        // layerMgr.showNetLoading(true,'人脸识别启动中')\r\n        // 进行人脸验证\r\n\r\n\r\n        this.check_identify()\r\n\r\n        \r\n        // if(GAppDM.account_server.host!=\"123.60.12.239\"  && GGameDM.match_is_verification.indexOf(GUserMgr.self_user_id.toString())==-1)\r\n        // {\r\n        //     this.check_identify()\r\n        // }\r\n        // else\r\n        // {\r\n        //     GMsgCenter.send(\"identify_success\")\r\n        //     let lastCheckTime = await ykUtils.getServerTime()\r\n        //     ykUtils.saveData('FACE_TIME',lastCheckTime)\r\n        // }\r\n    }\r\n    public SelfFoldAnim() {\r\n        for (let i = 0; i < 2; ++i) {\r\n            \r\n            let pkFoldCard = cc.instantiate(this.card).getComponent(Card);\r\n            pkFoldCard.setFace(false);\r\n\r\n            if (i==0) {\r\n                pkFoldCard.node.setPosition(this.seats[0].m_card_panel.children[0].getPosition());\r\n                pkFoldCard.node.angle = this.seats[0].m_card_panel.children[0].angle;\r\n            }\r\n            else\r\n            {\r\n                pkFoldCard.node.setPosition(this.seats[0].m_card_panel.children[1].getPosition());\r\n                pkFoldCard.node.angle = this.seats[0].m_card_panel.children[1].angle;\r\n            }\r\n           \r\n            pkFoldCard.setCardBg(cc.sys.localStorage.getItem(\"setting_cardbg_style\") || \"1\")\r\n            this.seats[0].m_card_panel.addChild(pkFoldCard.node);\r\n\r\n            let temppos = cc.Vec3.ZERO;\r\n            let pos = cc.Vec3.ZERO;\r\n            temppos = this.lbl_total_pot.node.convertToWorldSpaceAR(cc.Vec3.ZERO)\r\n            this.self_card.convertToNodeSpaceAR(temppos, pos);\r\n            let pkMove = cc.moveTo(0.2, cc.v2(pkFoldCard.node.x, pos.y));\r\n            let pkScale = cc.scaleTo(0.2, 0.5);\r\n            let pkFadeOut = cc.fadeOut(0.2);\r\n\r\n            let pkSpawn = cc.spawn(pkMove, pkScale, pkFadeOut);\r\n            pkFoldCard.node.runAction(cc.sequence(pkSpawn, cc.callFunc(this.removeFoldCard.bind(this), pkFoldCard.node, pkFoldCard.node)));\r\n        }\r\n    }\r\n\r\n    removeFoldCard(target: cc.Node) {\r\n        target.removeFromParent(true);\r\n        target.destroy();\r\n    }\r\n    onGameStart(table_id:number)\r\n    {\r\n\r\n        console.log('onGameStart =====================')\r\n        if(table_id!=this._table_id)\r\n        {\r\n            return\r\n        }\r\n        // if(GPageMgr.isPageOpened(\"Page_MatchInfo\"))\r\n        // {\r\n        //     GPageMgr.getPage(\"Page_MatchInfo\").getComponent(\"Page_MatchInfo\").hide();\r\n        // }\r\n       this.clearAnimalNode.stopAllActions()\r\n\r\n       // 报名按钮 是否显示\r\n       this.btn_signup.node.active =  GMatchSer.canSignup(this._table_id);\r\n \r\n   \r\n        // 处理底部 左右 观战切换按钮\r\n        this.setBootomChangeShow(true)\r\n       \r\n        \r\n        // 开赛倒计时关闭  大圈倒计时 \r\n        this.wgt_tmt.node.active=false\r\n        \r\n\r\n        this.clear()\r\n        // 更新 桌面信息\r\n        let tableinfo = this.tableInfo\r\n        // 更新 座位信息\r\n        let seatinfo =  this.selfSeatInfo\r\n\r\n        // 报名就已经注册过了 当游戏开始 设置为true\r\n        if(this.selfSeatInfo)\r\n        {\r\n            let pi = this.selfSeatInfo.playerinfo as MatchPlayer\r\n            pi.identified=true\r\n        }\r\n       \r\n\r\n        this.resetPublicCards()\r\n        // 用户操作 页面初始化\r\n        this.wgt_tableaction.onGameStart()\r\n\r\n        let worldpos = cc.Vec2.ZERO\r\n        this.node.parent.convertToWorldSpaceAR(this.node.parent.getChildByName(\"pot\").getPosition(), worldpos)\r\n\r\n        // 座位信息 更新 初始化 有人没人\r\n        this._seatSafeCheck()\r\n\r\n        // 处理座位旁边 下注图标 和 下注金额\r\n        let len = tableinfo.cards.length\r\n        for(let i=0;i<this.seats.length;++i)\r\n        {\r\n            let st = this.seats[i]\r\n            st.onGameStart()\r\n        }\r\n        // 处理我的手牌 展示\r\n        this.seats[0].getCard(0).setFace(false)\r\n        this.seats[0].getCard(1).setFace(false)\r\n\r\n\r\n        // 发牌动画\r\n        this.doInitSendCard()\r\n      \r\n\r\n        if (seatinfo!=undefined) {\r\n            let bet = tableinfo.curmaxbet-seatinfo.bet\r\n            if (GUserMgr.self_user_id==seatinfo.playerinfo.id) {\r\n                if (tableinfo.big_blind_index==seatinfo.index || tableinfo.small_blind_index==seatinfo.index) {\r\n                    //小盲位 大盲位 筹码不够 自动allin 翻牌\r\n    \r\n                    if (bet > seatinfo.playerinfo.point) {\r\n                        this.seats[0].getCard(0).img_cardFace.active = true;\r\n                        this.seats[0].getCard(1).img_cardFace.active = true;\r\n                        this.seats[0].getCard(0).setContent(seatinfo.cards[0])\r\n                        this.seats[0].getCard(1).setContent(seatinfo.cards[1])\r\n                        this.seats[0].m_pkCards[0].img_num.node.setContentSize(new cc.Size(105, 159));\r\n                        this.seats[0].m_pkCards[1].img_num.node.setContentSize(new cc.Size(105, 159));\r\n                        this.seats[0].getCard(0).turn(1)\r\n                        this.seats[0].getCard(1).turn(1)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        if(len >= 3)\r\n        {\r\n            this.showSelfCards()\r\n        }\r\n        this.refreshPots()\r\n        this.dealer()\r\n\r\n        // 关注赛事按钮  隐藏 \r\n        // this.btn_signup.node.active = false;\r\n        this.btn_focus.node.active = false;\r\n    }\r\n\r\n    doInitSendCard(){\r\n        this.initSendCard()\r\n    }\r\n\r\n    protected _seatSafeCheck()\r\n    {\r\n        let ti = this.tableInfo\r\n        for(let key in ti.seats)\r\n        {\r\n            let si = ti.seats[key]\r\n            if(!si)\r\n            {\r\n                continue\r\n            }\r\n            let seat = this.getSeat(si.playerinfo.id)\r\n            if(!seat||!seat.node.active||!seat.seatInfo||seat.seatInfo.playerinfo.id!=si.playerinfo.id)\r\n            {\r\n                this.onSit(ti.id,si)\r\n            }\r\n        }\r\n        for(let i=0;i<this.seats.length;++i)\r\n        {\r\n            let st = this.seats[i]\r\n            if(st.node.active)\r\n            {\r\n                if(!ti.seats[st.userId])\r\n                {\r\n                    st.node.active=false\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onUpgradeBlind()\r\n    {\r\n        let ret = GMatchSer.canSignup(this.tableInfo.id)\r\n        if (!ret) {\r\n            this.btn_signup.node.active = false;\r\n            this.btn_signup.node.getChildByName(\"Background\").getChildByName(\"label\").getComponent(cc.Label).string = \"已报名参赛\"\r\n            this.btn_signup.interactable = false\r\n            this.setBootomChangeShow(false)\r\n        }\r\n        else\r\n        {\r\n            this.btn_signup.node.active = true\r\n            this.btn_signup.interactable = true\r\n            this.setBootomChangeShow(true)\r\n        }\r\n    }\r\n    onBeginBet(table_id:number)\r\n    {\r\n        if(table_id!=this._table_id)\r\n        {\r\n            return\r\n        }\r\n        let tableinfo = this.tableInfo\r\n        if(tableinfo.turn_user_id<0)\r\n        {\r\n            return\r\n        }\r\n        if (this.seats==null) {\r\n            return\r\n        }\r\n\r\n         \r\n        for(let i=0;i<this.seats.length;++i)\r\n        {\r\n            this.seats[i].stopTimeCutDown()\r\n            if(this.seats[i].userId==tableinfo.turn_user_id)\r\n            {\r\n                this.seats[i].onBeginBet()\r\n            }\r\n        }\r\n        let seatinfo = this.selfSeatInfo\r\n        let len = tableinfo.cards.length\r\n        if(tableinfo.turn_user_id==GUserMgr.self_user_id)\r\n        {\r\n            GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_bet_start\")\r\n            this.showSelfCards()\r\n        }\r\n        else\r\n        {\r\n            if (!this.seats[0].getCard(0).img_cardFace.active) {\r\n                this.seats[0].getCard(0).setFace(false)\r\n                this.seats[0].getCard(1).setFace(false)\r\n            }\r\n        }\r\n        this.wgt_tableaction.onBeginBet()\r\n        this.refreshLight()\r\n    }\r\n    async onBet(table_id:number,user_id:number,bet:number)\r\n    {\r\n        if(table_id!=this._table_id)\r\n        {\r\n            return\r\n        }\r\n        this.refreshPots()\r\n        let seat  = this.getSeat(user_id)\r\n        seat.onBet(bet)\r\n\r\n        if (bet < 0) {\r\n            // GAudioTool.playSound(\"Common/Audio/Effect/fold\")\r\n            GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_fold\")\r\n            if (seat.seatInfo.playerinfo.id==GUserMgr.self_user_id) {\r\n                //飞自己的手牌\r\n                seat.getCard(0).setColor(cc.Color.BLACK.fromHEX(\"#4D4D4D\"))\r\n                seat.getCard(1).setColor(cc.Color.BLACK.fromHEX(\"#4D4D4D\"))\r\n                this.SelfFoldAnim();\r\n                return\r\n            }\r\n\r\n            seat.m_pkCards[0].node.parent.getComponent(cc.Mask).enabled = true;\r\n            seat.m_pkCards[1].node.parent.getComponent(cc.Mask).enabled = true;\r\n\r\n            seat.m_pkCards[0].doStopAllActions()\r\n            seat.m_pkCards[1].doStopAllActions()\r\n            await ykUtils.waitTime(0.1)\r\n            seat.m_pkCards[0].node.runAction(cc.moveTo(0.3, new cc.Vec2(0, -160)));\r\n            seat.m_pkCards[1].node.runAction(cc.moveTo(0.3, new cc.Vec2(0, -160)));\r\n        }\r\n        else if (bet == 0) {\r\n            //check\r\n            // GAudioTool.playSound(\"Common/Audio/Effect/check\")\r\n\r\n            GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_check1\") // 看或者过\r\n\r\n            this.scheduleOnce(\r\n                ()=>\r\n                {\r\n                    GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_check2\")\r\n                },\r\n                0.3);\r\n\r\n        }\r\n        else\r\n        {\r\n            let seatinfo = GTexasTableDM.getSeatByUserId(table_id,user_id);\r\n            \r\n            if(seatinfo.action == ETexasAction.Raise)\r\n            {\r\n                GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_raise1\") //  加注\r\n\r\n                this.scheduleOnce(\r\n                    ()=>\r\n                    {\r\n                        GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_raise2\")\r\n                    },\r\n                    0.3);\r\n            }\r\n            else if(seatinfo.action == ETexasAction.Call)\r\n            {\r\n                GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_follow_call1\") // 跟注\r\n\r\n                this.scheduleOnce(\r\n                    ()=>\r\n                    {\r\n                        GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_follow_call2\")\r\n                    },\r\n                    0.3);\r\n\r\n            }\r\n            else if(seatinfo.action == ETexasAction.Allin)\r\n            {\r\n                GAudioTool.stopAllIn();\r\n                GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_all_in_1\") // Allin\r\n\r\n                this.scheduleOnce(\r\n                    ()=>\r\n                    {\r\n                        GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_raise2\")\r\n                    },\r\n                    0.3)\r\n\r\n\r\n                this.scheduleOnce(\r\n                    ()=>\r\n                    {\r\n                    \r\n                         \r\n                        if(GAudioTool._allIn_id==-1)\r\n                        {\r\n                            GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_all_in_2\",true)\r\n                        }\r\n                    },\r\n                    1\r\n                )\r\n            }\r\n            else\r\n            {\r\n                GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_bet1\") // 下注\r\n\r\n                this.scheduleOnce(\r\n                    ()=>\r\n                    {\r\n                        GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_bet2\")\r\n                    },\r\n                    0.3);\r\n\r\n               \r\n            }\r\n            // GAudioTool.playSound(\"Common/Audio/Effect/bet\")\r\n             \r\n            \r\n        }\r\n        this.wgt_tableaction.refreshButtons()\r\n\r\n        if(this.tableInfo.pot>0)\r\n        {\r\n            this.lbl_total_pot.node.parent.active=true\r\n            this.lbl_total_pot.string = this.getFormatNum(this.tableInfo.pot,true)\r\n        }\r\n    }\r\n\r\n    //下注\r\n    // Btn_xxxx_OnClick() {\r\n    //     let selfSeatInfo = GTexasTableDM.selfSeatInfo\r\n    //     let curmaxbet = this.tableInfo.curmaxbet\r\n    //     let dtbet = this.tableInfo.dtbet\r\n    //     let min = curmaxbet+dtbet\r\n    //     let left = min-selfSeatInfo.bet\r\n    //     GNetGameTexas.send_texas_bet(this._table_id,left)\r\n    // }\r\n    //公共牌\r\n    onDealCard(table_id:number)\r\n    {\r\n        this.refreshPots()\r\n        if(table_id!=this._table_id)\r\n        {\r\n            return\r\n        }\r\n        for(let i = 0;i<this.seats.length;++i)\r\n        {\r\n            let st = this.seats[i]\r\n            if(!st)\r\n            {\r\n                continue\r\n            }\r\n            st.refreshTip(false,true)\r\n        }\r\n        let seat = this.getSeat(GUserMgr.self_user_id)\r\n        if(seat)\r\n        {\r\n            seat.showCardType()\r\n        }\r\n        let tableinfo = this.tableInfo\r\n        let len = tableinfo.cards.length\r\n        GAudioTool.playSound(\"Common/Audio/Effect/deal\")\r\n        if(len==3)\r\n        {\r\n            //发三张\r\n            this.turnThreeCards(tableinfo.cards)\r\n            this.chipMoveIn()\r\n        }\r\n        else if (len==4)\r\n        {\r\n            //1张\r\n            this.m_publiccards[3].active = true;\r\n            this.m_publiccards[3].stopAllActions();\r\n            this.m_publiccards[3].getComponent(Card).setFace(false);\r\n            this.m_publiccards[3].getComponent(Card).info = new CardInfo;\r\n            this.m_publiccards[3].getComponent(Card).info.id = tableinfo.cards[3]\r\n            this.m_publiccards[3].getComponent(Card).setCardBg(cc.sys.localStorage.getItem(\"setting_cardbg_style\") || \"1\")\r\n            this.m_publiccards[3].getComponent(Card).setContent(tableinfo.cards[3]);\r\n            this.m_publiccards[3].getComponent(Card).turn(0.3, true);\r\n            this.chipMoveIn()\r\n        }\r\n        else if (len==5)\r\n        {\r\n            this.m_publiccards[4].active = true;\r\n            this.m_publiccards[4].stopAllActions();\r\n            this.m_publiccards[4].getComponent(Card).setFace(false);\r\n            this.m_publiccards[4].getComponent(Card).info = new CardInfo;\r\n            this.m_publiccards[4].getComponent(Card).info.id = tableinfo.cards[4]\r\n            this.m_publiccards[4].getComponent(Card).setCardBg(cc.sys.localStorage.getItem(\"setting_cardbg_style\") || \"1\")\r\n            this.m_publiccards[4].getComponent(Card).setContent(tableinfo.cards[4]);\r\n            this.m_publiccards[4].getComponent(Card).turn(0.3, true);\r\n            this.chipMoveIn()\r\n        }\r\n        else\r\n        {\r\n            this.displayPublicCards()\r\n        }\r\n    }\r\n    clear()\r\n    {\r\n        for(let i=0;i<this.seats.length;++i)\r\n        {\r\n            let seat = this.seats[i]\r\n            if(seat.node.active)\r\n            {\r\n                seat.clearTable()\r\n            }\r\n        }\r\n        this.lbl_total_pot.node.parent.active=false      //  底池 清空\r\n        for(let i=0;i<this.lbl_pots.length;++i)          //  边池 清空\r\n        {\r\n            this.lbl_pots[i].node.parent.active=false\r\n        }\r\n        for(let i=0;i<this.m_publiccards.length;++i) // 公共牌区域 清空\r\n        {\r\n            this.m_publiccards[i].active=false\r\n        }\r\n        this.node_light_tip.active=false  // 桌面光束 目前废弃\r\n        this.node.getChildByName(\"node_dealer\").active = false; // 发牌人D显示\r\n    }\r\n    onIdle()\r\n    {\r\n        let ti = this.tableInfo\r\n        if(!ti||ti.state!=ETableState.Idle)\r\n        {\r\n            return\r\n        }\r\n        this.clear()\r\n        let time = GGameDM.serverTime\r\n        let blind_deadline = ti.blind_deadline\r\n        let left = Math.floor((blind_deadline-time)/1000)  // 休息时间到了？\r\n        if(left<0)\r\n        {\r\n            return\r\n        }\r\n        for(let i=0;i<this.seats.length;++i)\r\n        {\r\n            let st = this.seats[i]\r\n            if(st.node.active)\r\n            {\r\n                st.onIdle()\r\n            }\r\n        }\r\n        this.resetPublicCards()\r\n        let _getTip=()=>\r\n        {\r\n            time = GGameDM.serverTime\r\n            left = Math.floor((blind_deadline-time)/1000)\r\n            if(left<0)\r\n            {\r\n                left=0\r\n            }\r\n            let m = Math.floor(left/60)\r\n            let s = left%60\r\n            let str=\"\"\r\n            if(m<10)\r\n            {\r\n                str+=\"0\"+m+\":\"\r\n            }\r\n            else if(m>10)\r\n            {\r\n                str+=m+\":\"\r\n            }\r\n            if(s<10)\r\n            {\r\n                str+=\"0\"+s\r\n            }\r\n            else\r\n            {\r\n                str+=s\r\n            }\r\n            let tip_str=`比赛休息中(${str})`\r\n            return {tip_str,left}\r\n        }\r\n        GHelper.showTip(_getTip().tip_str,left)\r\n        let sc_func = ()=>\r\n        {\r\n            let {tip_str,left} = _getTip()\r\n            GTipLabel.refershTip(tip_str)\r\n            if(left<=0)\r\n            {\r\n                this.unschedule(sc_func)\r\n                GTipLabel.clear()\r\n            }\r\n        }\r\n        this.schedule(sc_func,0.5)      // 0.5s 刷新一次休息 时间 显示\r\n        this.wgt_tableaction.refreshButtons()\r\n    }\r\n    onAllAllInShow(table_id:number,all:{[user_id:number]:number[]})\r\n    {\r\n        if(table_id!=this._table_id)\r\n        {\r\n            return\r\n        }\r\n        for(let key in all)\r\n        {\r\n            let st = this.getSeat(parseInt(key))\r\n            if(st&&st.node.active)\r\n            {\r\n                st.onAllAllInShow(all[key])\r\n            }\r\n        }\r\n        this.refreshPots()\r\n    }\r\n    //当前局结束\r\n    onGameResult(table_id:number){\r\n        if(table_id!=this._table_id)\r\n        {\r\n            return\r\n        }\r\n        GAudioTool.resetEffect();\r\n        GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_win_0\")\r\n\r\n        GNetGameTexas.send_texas_gps()\r\n        this._seatSafeCheck()\r\n        this.wgt_tableaction.onGameResult()\r\n\r\n        let battleRecords=GTexasTableDM.battleRecords[this._table_id]\r\n        let gameresult = battleRecords[battleRecords.length-1]\r\n        this.refreshPots()\r\n        for (const key in gameresult.userrecords) {\r\n            let recordseatinfo = gameresult.userrecords[key]\r\n            let index = (recordseatinfo.index-this.selfSeatIndex+this.seats.length)%this.seats.length\r\n            let seat = this.getSeat(recordseatinfo.playerinfo.id)\r\n            if(!seat)\r\n            {\r\n                continue\r\n            }\r\n            seat.onGameResult(recordseatinfo)\r\n\r\n            if (recordseatinfo.dtpoint>0) {\r\n                //表示赢\r\n                let pkChips = this.generalChip();\r\n                let centerPos = cc.Vec2.ZERO;\r\n                centerPos=this.seats[index].node.convertToWorldSpaceAR(centerPos);\r\n                let outpos = this.node.convertToNodeSpaceAR(centerPos);\r\n                let pkCallback = cc.callFunc(()=>\r\n                {\r\n                    this.piaozi(seat.node, recordseatinfo, seat.realIndex)\r\n                });\r\n                pkChips.runAction(cc.sequence(cc.moveTo(0.5, outpos), pkCallback, cc.destroySelf()));\r\n            }\r\n            else if(recordseatinfo.win>0)\r\n            {\r\n                //分池自己的钱\r\n                let pkChips = this.generalChip();\r\n                let centerPos = cc.Vec2.ZERO;\r\n                centerPos=this.seats[index].node.convertToWorldSpaceAR(centerPos);\r\n                let outpos = this.node.convertToNodeSpaceAR(centerPos);\r\n                // let pkCallback = cc.callFunc(()=>\r\n                // {\r\n                //     this.piaozi(seat.node, recordseatinfo, index)\r\n                // });\r\n                seat.labelBet.string = recordseatinfo.win.toString();\r\n                pkChips.runAction(cc.sequence(cc.moveTo(0.5, outpos), cc.destroySelf()));\r\n            }\r\n\r\n            // seat.labelChip.string = this.getFormatNum(recordseatinfo.playerinfo.point.toString());\r\n            // else\r\n            // {\r\n            //     this.piaozi(seat.node, recordseatinfo.dtpoint)\r\n            // }\r\n\r\n            seat.setLabelChipNum(recordseatinfo.playerinfo.point)\r\n        }\r\n\r\n        //this.lbl_total_pot.string = \"0\"\r\n        //this.lbl_total_pot.node.parent.active=false\r\n\r\n        this.clearAnimalNode.runAction(cc.sequence(cc.delayTime(5),\r\n        cc.callFunc(()=>{\r\n            this.clear()\r\n        })))\r\n    }\r\n\r\n    turnShowCard(index) {\r\n        let selfInfo = this.tableInfo.seats[GUserMgr.self_user_id];\r\n        if (selfInfo != undefined) {\r\n            if (index==1) {\r\n                this.seats[0].getCard(0).doStopAllActions();\r\n                this.seats[0].getCard(0).turn(0.5, true)\r\n                this.seats[0].getCard(0).resetPos()\r\n            }\r\n            if (index==2) {\r\n                this.seats[0].getCard(1).doStopAllActions();\r\n                this.seats[0].getCard(1).turn(0.5, true)\r\n                this.seats[0].getCard(1).resetPos()\r\n            }\r\n        }\r\n    }\r\n\r\n    piaozi(node, recordseatinfo, index) {\r\n        let lbp = new cc.Node();\r\n        lbp.color = new cc.Color().fromHEX(\"#FAC052\");\r\n        if (recordseatinfo.dtpoint > 0) {\r\n            lbp.addComponent(cc.Label).string = \"+\" + this.getFormatNum(recordseatinfo.dtpoint.toString());\r\n        }\r\n        // else if (recordseatinfo.win > 0) {\r\n        //     lbp.addComponent(cc.Label).string = recordseatinfo.win.toString();\r\n        // }\r\n        // else if (win < 0)\r\n        // {\r\n        //     lbp.addComponent(cc.Label).string = \"-\" + win.toString();\r\n        // }\r\n        lbp.getComponent(cc.Label).fontSize = 22;\r\n        node.addChild(lbp);\r\n\r\n        if (index==0) {\r\n            //lbp.runAction(cc.sequence(cc.moveTo(1, new cc.Vec2(0, 110)), cc.destroySelf()));\r\n            lbp.setPosition(new cc.Vec2(0,180))\r\n            lbp.runAction(cc.sequence(cc.delayTime(3.0), cc.destroySelf()));\r\n        }\r\n        else\r\n        {\r\n            lbp.setPosition(new cc.Vec2(0, 116))\r\n            lbp.runAction(cc.sequence(cc.delayTime(3.0), cc.destroySelf()));\r\n        }\r\n    }\r\n\r\n    onClickRaise(event: cc.Event.EventCustom, data: string) {\r\n        let id = Number(data);\r\n        let rate = [2, 3, 4, 5];\r\n        //let raise = Math.floor(rate[id - 1] * configMgr.getConfig(BlindConfig, GTexasTableDM.table.level).big_blind);\r\n        //GTexasTableDM.playRaise(raise);\r\n    }\r\n\r\n    onClickReview() {\r\n        let pos = this.reviewNode.getPosition()\r\n        this.reviewNode.setPosition(pos.x + cc.winSize.width, pos.y)\r\n        this.reviewNode.active = true\r\n\r\n        cc.Tween.stopAllByTarget(this.reviewNode)\r\n        cc.tween(this.reviewNode)\r\n        .to(0.2, {x: (1-GPageMgr.node.scale)*750})\r\n        .call(() => {\r\n            \r\n        })\r\n        .start();\r\n        this.reviewNode.getComponent('ReView').onReviewData()\r\n    }\r\n\r\n    async Btn_Focus_OnClick(event)\r\n    {\r\n        let insid = this.tableInfo.match_insid\r\n        let focusmatches = GUserMgr.self_user.focusmatches||[]\r\n        if(focusmatches.indexOf(insid)>0)\r\n        {\r\n            return\r\n        }\r\n        \r\n        let res = await GHallHttp.request(\"focus\",{insid:insid})\r\n        if(res.errcode)\r\n        {\r\n            GHelper.showTip(res.errcode.des)\r\n            return\r\n        }\r\n        focusmatches.push(insid)\r\n        GUserMgr.self_user.focusmatches=focusmatches\r\n        let mim = GMatchSer.getMatchInsById(this.tableInfo.match_insid)\r\n        GMatchSer.focusmatchins.push(mim)\r\n        this.btn_focus.interactable =false\r\n        this.btn_focus.node.getChildByName(\"label\").getComponent(cc.Label).string = \"已关注赛事\"\r\n    }\r\n    onAuto(table_id: number, user_id: number, auto: boolean)\r\n    {\r\n        if(table_id!=this._table_id)\r\n        {\r\n            return\r\n        }\r\n        this.wgt_tableaction.onAuto(table_id, user_id, auto)\r\n        let seat = this.getSeat(user_id)\r\n        if(!seat)\r\n        {\r\n            return\r\n        }\r\n        seat.onAuto()\r\n    }\r\n    onShowCards(table_id:number,user_id:number,showcards:number)\r\n    {\r\n        if(this.tableInfo.state!=ETableState.End)\r\n        {\r\n            return\r\n        }\r\n        if(this._table_id!=table_id)\r\n        {\r\n            return\r\n        }\r\n        let seat = this.getSeat(user_id)\r\n        if(!seat||!seat.node.active)\r\n        {\r\n            return\r\n        }\r\n        seat.onShowCards(showcards)\r\n    }\r\n    onChangeTableLeftClick(){\r\n        GNetGameTexas.send_texas_watch(this.tableInfo.match_insid,0)\r\n    }\r\n    onChangeTableRightClick(){\r\n        GNetGameTexas.send_texas_watch(this.tableInfo.match_insid,1)\r\n    }\r\n    // 底部观战切换 按钮显示 是否\r\n    setBootomChangeShow(isShow){\r\n        if(this.tableInfo.cur_table_num<=1) // 桌子数量小于等于1 不显示切换\r\n        {\r\n            isShow = false\r\n        }else\r\n        {\r\n            let tableinfo = GTexasTableDM.getTableInfo(this._table_id)\r\n            if(!tableinfo)\r\n            {\r\n                isShow = true;  // 显示\r\n            }\r\n            else\r\n            {\r\n                isShow = false;  // 不显示\r\n                let matchInsM = GMatchSer.getMatchInsById(this.tableInfo.match_insid)\r\n                let matchM:MatchModel = matchInsM.match\r\n                if( matchInsM.state==EMatchState.Waiting)\r\n                {\r\n                    isShow = false;\r\n                }else\r\n                {\r\n                    \r\n                    let seatinfo = GTexasTableDM.getSelfSeatInfo(tableinfo.id)\r\n                    if(seatinfo)\r\n                    {\r\n                        isShow = false;\r\n                    }else\r\n                    {\r\n                        isShow = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n         \r\n       \r\n        cc.find('changeLeftTable',this.node).active = isShow\r\n        cc.find('changeRightTable',this.node).active = isShow\r\n    }\r\n\r\n\r\n    protected _toPot(pot:number)\r\n    {\r\n        pot=pot||0\r\n        if(pot<1000000)\r\n        {\r\n            return pot+\"\"\r\n        }\r\n        let str = pot/1000000+\"\"\r\n        if(str.length>5)\r\n        {\r\n            str = str.substring(0,5)\r\n        }\r\n        str+=\"M\"\r\n        return str\r\n    }\r\n\r\n    \r\n    \r\n\r\n}\r\n","import { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_Term extends Page {\r\n\r\n    start()\r\n    {\r\n\r\n    }\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_Term\")\r\n    }\r\n}\r\n","import { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nexport class ButtonInfo {\r\n    label: string;\r\n    callback?: Function;\r\n}\r\n\r\n@ccclass\r\nexport default class Page_Tips extends cc.Component {\r\n\r\n    @property(cc.Button)\r\n    btnClose: cc.Button = null;\r\n\r\n    @property(cc.Label)\r\n    labelTips: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    layoutButton: cc.Node = null;\r\n\r\n    @property([cc.Node])\r\n    itemButtons: cc.Node[] = [];\r\n\r\n    private tips: string = \"\";\r\n    private buttons: ButtonInfo[] = [];\r\n\r\n    onOpen(info:{tips: string, buttons: ButtonInfo[]}) {\r\n        this.tips = info.tips\r\n        this.buttons = info.buttons || []\r\n        \r\n        this.initUI();\r\n    }\r\n\r\n    initUI() {\r\n        this.labelTips.string = this.tips || \"\";\r\n\r\n        this.btnClose.interactable = !this.buttons.length;\r\n\r\n        this.layoutButton.removeAllChildren();\r\n        for (let i = 0; i < this.buttons.length; i++) {\r\n            let info = this.buttons[i];\r\n            let node = cc.instantiate(this.itemButtons[i % this.itemButtons.length]);\r\n            this.layoutButton.addChild(node);\r\n\r\n            node.getChildByName(\"label\").getComponent(cc.Label).string = info.label;\r\n\r\n            node.on(cc.Node.EventType.TOUCH_END, async () => {\r\n                if(info.callback)\r\n                {\r\n                    await info.callback()\r\n                }\r\n                this.onClickClose();\r\n            })\r\n        }\r\n    }\r\n\r\n    onClickClose() {\r\n        GPageMgr.closePage(\"Page_Tips\")\r\n    }\r\n}\r\n","import { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BYTE_LABEL: string[] = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\"];\r\n\r\nfunction getFormatLabel(bytes: number, fix: number = 1) {\r\n    if (bytes < 1000) {\r\n        return String(Math.round(bytes));\r\n    }\r\n\r\n    let count = 0;\r\n    while(bytes >= 1000 && count < BYTE_LABEL.length - 1) {\r\n        count += 1;\r\n        bytes /= 1000;\r\n    }\r\n\r\n    return bytes.toFixed(fix) + BYTE_LABEL[count];\r\n}\r\n\r\n@ccclass\r\nexport default class Page_Update extends Page {\r\n\r\n    @property(cc.Sprite)\r\n    imgBg: cc.Sprite = null;\r\n\r\n    @property(cc.Node)\r\n    nodeLoading: cc.Node = null;\r\n\r\n    @property(cc.ProgressBar)\r\n    progressBar: cc.ProgressBar = null;\r\n\r\n    @property(cc.Label)\r\n    labelTips: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelProgress: cc.Label = null;\r\n\r\n    private _storagePath = '';\r\n    private _am: jsb.AssetsManager = null;\r\n    private _failCount = 0;\r\n\r\n    private _hotupdatePath: string = 'blackjack-remote-asset';\r\n    @property(cc.Asset)\r\n    manifestUrl: cc.Asset = null;   //更新文件\r\n    @property(cc.Label)\r\n    version: cc.Label = null;\r\n    private customManifestStr:string = \"\"\r\n    private versionCompareHandle = null;\r\n\r\n    onLoad() {\r\n        if (!cc.sys.isNative) \r\n        {\r\n            this.loadRes();\r\n            return;\r\n        }\r\n\r\n        this.customManifestStr = (this.manifestUrl as any)._nativeAsset;\r\n\r\n        console.log(\"manifestUrl:\", this.manifestUrl);\r\n        let version = JSON.parse((this.manifestUrl as any)._nativeAsset).version;\r\n        console.log(\"version:\", version);\r\n\r\n       \r\n        this.version.string = version;\r\n\r\n        this.labelTips.string = \"检查更新...\";\r\n\r\n        // Setup your own version compare handler, versionA and B is versions in string\r\n        // if the return value greater than 0, versionA is greater than B,\r\n        // if the return value equals 0, versionA equals to B,\r\n        // if the return value smaller than 0, versionA is smaller than B.\r\n        GGameDM.version=version\r\n        this.versionCompareHandle = function (versionA, versionB) {\r\n            GGameDM.version=versionA\r\n            cc.log(\"JS Custom Version Compare: version A is \" + versionA + ', version B is ' + versionB);\r\n            var vA = versionA.split('.');\r\n            var vB = versionB.split('.');\r\n            for (var i = 0; i < vA.length; ++i) {\r\n                var a = parseInt(vA[i]);\r\n                var b = parseInt(vB[i] || 0);\r\n                if (a === b) {\r\n                    continue;\r\n                }\r\n                else {\r\n                    return a - b;\r\n                }\r\n            }\r\n            if (vB.length > vA.length) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        };\r\n\r\n        this._storagePath = ((jsb.fileUtils ? jsb.fileUtils.getWritablePath() : '/') + this._hotupdatePath);\r\n        this._am = new jsb.AssetsManager('', this._storagePath, this.versionCompareHandle);\r\n\r\n        //請求服務器地址\r\n        //this.requestHotUpdateUrl()\r\n\r\n        this.checkUpdate()\r\n    }\r\n\r\n    checkUpdate() {\r\n        if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {\r\n            // Resolve md5 url\r\n            var url = this.manifestUrl.nativeUrl;\r\n\r\n            // if (cc.loader.md5Pipe) {\r\n            //     url = cc.loader.md5Pipe.transformURL(url);\r\n            // }\r\n\r\n\r\n            // let uuid = (this.manifestUrl as any)._uuid;\r\n            // url = cc.assetManager.utils.getUrlWithUuid(uuid, { isNative: true, ext: '.pem' });\r\n\r\n            //url = url.replace('//', '/');\r\n\r\n            console.log(\"manifestUrl 转换后:\", url);\r\n\r\n            this._am.loadLocalManifest(url);\r\n        }\r\n\r\n        console.log(this._am.getLocalManifest() , this._am.getLocalManifest().isLoaded())\r\n\r\n\r\n        if (!this._am.getLocalManifest() || !this._am.getLocalManifest().isLoaded()) {\r\n            this.labelTips.string = \"manifest文件不存在\";\r\n            // this.loadRes();\r\n            return;\r\n        }\r\n        this._am.setEventCallback(this.checkCb.bind(this));\r\n\r\n        this._am.checkUpdate();\r\n    }\r\n\r\n    // requestHotUpdateUrl() {\r\n    //     let url = \"\";\r\n    //     let obj = {\r\n    //         \"userid\": \"fdsagds\",\r\n    //     }\r\n    //     GHelper.httpRequest(url, obj, this.responseGetHotUpdateUrl.bind(this))\r\n    // }\r\n\r\n    responseGetHotUpdateUrl() {\r\n        if (!cc.sys.isNative) {\r\n            return;\r\n        }\r\n        // if (value[\"msg_code\"] == \"0\") {\r\n        //     let data = value[\"data\"];\r\n        //     cv.tools.logObject(value, \"请求热更地址回包:::::::\");\r\n        //     cv.domainMgr.setDefultImgServer(data[\"imgServer\"]);\r\n        //     cv.domainMgr.setDefultImgServer2(data[\"imgServer2\"]);\r\n        //     cv.domainMgr.set_api_url(data[\"api_url\"]);\r\n        //     console.log(\"this.manifestUrl:\" + this.manifestUrl.nativeUrl);\r\n        //     //合法的域名才能去进行替换，以免产生崩溃\r\n        //     if (cv.StringTools.earseSpace(data[\"url\"]).length > 0) {\r\n        //         this.modifyAppLoadUrlForManifestFile(data[\"url\"], this.manifestUrl.nativeUrl);\r\n        //     } else {\r\n        //         console.log(\"url 有问题\");\r\n        //     }\r\n        // } else {\r\n        //     //需要强更\r\n        //     cv.tools.logObject(value, \"请求热更地址失败,有强更:::::::\");\r\n        //     let data = value[\"data\"];\r\n        //     cv.dataHandler.getUserData().download_url = data[\"download_url\"];\r\n        //     cv.netWorkManager.OnHttplogin();\r\n        //     return;\r\n        // }\r\n        // this.startCheckUpdate();\r\n    }\r\n\r\n    onEnable() {\r\n    }\r\n\r\n    onDisable() {\r\n        this._am && this._am.setEventCallback(null);\r\n    }\r\n\r\n    loadRes() {\r\n        GPageMgr.openPage(\"Page_CodeLogin\")\r\n    }\r\n\r\n    checkCb(event: jsb.EventAssetsManager) {\r\n        let failed = false;\r\n        switch (event.getEventCode()) {\r\n            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:\r\n                this.labelTips.string = \"加载manifest文件失败\";\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:\r\n                this.labelTips.string = \"下载manifest文件失败\";\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:\r\n                this.labelTips.string = \"解析manifest文件失败\";\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:\r\n                this.labelTips.string = \"已是最新版本\";\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.NEW_VERSION_FOUND:\r\n                this.labelTips.string = `发现新版本 (${getFormatLabel(this._am.getTotalBytes())})`;\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        if (failed) {\r\n            cc.log(\"zuixin\")\r\n            this._am.setEventCallback(null!);\r\n            this.loadRes();\r\n            return;\r\n        }\r\n\r\n        this._am.setEventCallback(this.updateCb.bind(this));\r\n        this._am.update();\r\n    }\r\n\r\n    updateCb(event: jsb.EventAssetsManager) {\r\n        let failed = false;\r\n        let complete = false;\r\n        switch (event.getEventCode()) {\r\n            case jsb.EventAssetsManager.UPDATE_PROGRESSION:\r\n                this.progressBar.progress = event.getPercent();\r\n                this.labelProgress.string = event.getDownloadedFiles() + ' / ' + event.getTotalFiles();\r\n                break;\r\n            case jsb.EventAssetsManager.UPDATE_FINISHED:\r\n                this.labelTips.string = '更新完成';\r\n                complete = true;\r\n                break;\r\n            case jsb.EventAssetsManager.UPDATE_FAILED:\r\n                this.labelTips.string = '更新失败:' + event.getMessage();\r\n                if (this._failCount < 5) {\r\n                    this._failCount++;\r\n                    this._am.downloadFailedAssets();\r\n                } else {\r\n                    failed = true;\r\n                }\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_UPDATING:\r\n                this.labelTips.string = '更新错误: ' + event.getAssetId() + ', ' + event.getMessage();\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_DECOMPRESS:\r\n                this.labelTips.string = event.getMessage();\r\n                failed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        if (failed) {\r\n            this._am.setEventCallback(null!);\r\n            this.loadRes();\r\n            return\r\n        }\r\n\r\n        if (complete) {\r\n            this._am.setEventCallback(null!);\r\n            //this.loadRes();\r\n            cc.log(\"更新已经完成, 重啓\")\r\n\r\n            var searchPaths = jsb.fileUtils.getSearchPaths();\r\n            var newPaths = this._am.getLocalManifest().getSearchPaths();\r\n            console.log(\"newPaths-------------\" + JSON.stringify(newPaths));\r\n            for (var i = 0; i < newPaths.length; i++) {\r\n                if (searchPaths.indexOf(newPaths[i]) == -1) {\r\n                    Array.prototype.unshift.apply(searchPaths, [newPaths[i]]);\r\n                }\r\n            }\r\n\r\n            // 纯化====\r\n            var  ay = []\r\n            for(var i=0;i<searchPaths.length;i++){\r\n                if(ay.indexOf(searchPaths[i])==-1){\r\n                    ay.push(searchPaths[i]) \r\n                }\r\n            }\r\n\r\n            // This value will be retrieved and appended to the default search path during game startup,\r\n            // please refer to samples/js-tests/main.js for detailed usage.\r\n            // !!! Re-add the search paths in main.js is very important, otherwise, new scripts won't take effect.\r\n            cc.sys.localStorage.setItem('HotUpdateSearchPaths', JSON.stringify(ay));\r\n            jsb.fileUtils.setSearchPaths(ay);\r\n            \r\n            cc.log(\"111111\")\r\n            cc.audioEngine.stopAll();\r\n            cc.game.restart();\r\n            cc.log(\"133333\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 修改本地热更新配置文件\r\n     * @param newAppHotUpdateUrl 新的热更新地址\r\n     * @param localManifestPath 本地热更新配置文件路径\r\n     * @param resultCallback 替换成功后地回调\r\n     */\r\n    modifyAppLoadUrlForManifestFile(newAppHotUpdateUrl: string, localManifestPath: string) {\r\n    if (jsb.fileUtils.isFileExist(this._storagePath + '/project.manifest')) {\r\n        console.log(\"有下载的manifest文件\");\r\n        console.log(\"StoragePath for remote asset : \", this._storagePath);\r\n        let loadManifest = jsb.fileUtils.getStringFromFile(this._storagePath + '/project.manifest');\r\n        let manifestObject = JSON.parse(loadManifest);\r\n        manifestObject.packageUrl = newAppHotUpdateUrl;\r\n        manifestObject.remoteManifestUrl = newAppHotUpdateUrl + '/project.manifest';\r\n        manifestObject.remoteVersionUrl = newAppHotUpdateUrl + '/version.manifest';\r\n\r\n        let afterString = JSON.stringify(manifestObject);\r\n        let isWritten = jsb.fileUtils.writeStringToFile(afterString, this._storagePath + '/project.manifest');\r\n        console.log(\"Written Status : \", isWritten);\r\n    } else {\r\n        console.log(\"没有下载的manifest文件\", newAppHotUpdateUrl, localManifestPath);\r\n        //修改原始manifest文件\r\n        // let originManifestPath = localManifestPath;\r\n        console.log(\"11111111:\" + localManifestPath);\r\n        let originManifest: string = jsb.fileUtils.getStringFromFile(localManifestPath);\r\n        // console.log(\"222222::\" + originManifest);\r\n        let originManifestObject = JSON.parse(originManifest);\r\n        originManifestObject.packageUrl = newAppHotUpdateUrl;\r\n        originManifestObject.remoteManifestUrl = originManifestObject.packageUrl + '/project.manifest';\r\n        originManifestObject.remoteVersionUrl = originManifestObject.packageUrl + '/version.manifest';\r\n        let afterString = JSON.stringify(originManifestObject);\r\n        if (!jsb.fileUtils.isDirectoryExist(this._storagePath)) {\r\n            jsb.fileUtils.createDirectory(this._storagePath);\r\n        }\r\n        // console.log(\"66666：\" + afterString);\r\n        let isWritten = jsb.fileUtils.writeStringToFile(afterString, this._storagePath + '/project.manifest');\r\n        console.log(\"this Written Status : \", this._storagePath);\r\n        console.log(\"Written Status : \", isWritten);\r\n    }\r\n}\r\n    \r\n    /**\r\n     * 删除缓存资源\r\n     */\r\n    public clearHotFileCache() {\r\n        //删除热更文件夹\r\n        /*if (jsb.fileUtils.isDirectoryExist(this._storagePath)) {\r\n            console.log(\"检测到缓存文件\");\r\n            this.panel.percentLabel.string = \"检测到缓存文件\";\r\n            jsb.fileUtils.removeDirectory(this._storagePath + \"/\");\r\n        }*/\r\n        //删除临时文件夹\r\n        if (jsb.fileUtils.isDirectoryExist(this._storagePath + \"_temp\")) {\r\n            jsb.fileUtils.removeDirectory(this._storagePath + \"_temp/\");\r\n            console.log(\"存在临时文件夹\");\r\n        }\r\n\r\n        //删完之后做一次检测\r\n        /*if (jsb.fileUtils.isDirectoryExist(this._storagePath)) {\r\n            console.log(\"未清理热更文件夹\");\r\n        }else{\r\n            console.log(\"已清理热更文件夹\");\r\n        }*/\r\n        if (jsb.fileUtils.isDirectoryExist(this._storagePath + \"_temp\")) {\r\n            console.log(\"未清理临时文件夹\");\r\n        } else {\r\n            console.log(\"已清理临时文件夹\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 写入当前版本号\r\n     */\r\n    // writeLastVersion() {\r\n    //     if (cc.isValid(window.big_version, true)) {\r\n    //         console.log(\"ssssssssss:\" + window.big_version);\r\n    //     } else {\r\n    //         console.log(\"666666666666\");\r\n    //         return;\r\n    //     }\r\n    //     console.log(\"writeLastVersion::::==>\" + window.big_version);\r\n    //     if (!jsb.fileUtils.isDirectoryExist(this._storagePath)) {\r\n    //         jsb.fileUtils.createDirectory(this._storagePath);\r\n    //         console.log(\"writeLastVersion::先创建文件夹\");\r\n    //     }\r\n    //     jsb.fileUtils.writeStringToFile(window.big_version, this._storagePath + \"/version.txt\");\r\n    // }\r\n    \r\n}\r\n","import Widget_DemainCode from \"../Widget/Widget_DemainCode\";\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { BagItemItem, GItemCfg } from \"../../Service/ItemService\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { MD5 } from \"../../utils/MD5\";\r\nimport { GBase64 } from \"../../Framework/Core/Base64\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { ClubModel ,GClubSer} from \"../../Service/ClubService\";\r\nimport Widget_NumberFrame from \"../Widget/Widget_NumberFrame\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\nimport { layerMgr } from \"../../manager/LayerManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_UseItemByCode extends Page {\r\n    @property(Widget_DemainCode)\r\n    widget_DemainCode:Widget_DemainCode = null\r\n    @property(Widget_NumberFrame)\r\n    numberFrame = null\r\n\r\n    private _item\r\n    private hxData\r\n    private xpInterval\r\n\r\n    start() {\r\n    }\r\n    onLoad(): void {\r\n        this.numberFrame.setOnEditEndCb(()=>{\r\n            this.onRefreshNumber()\r\n        })\r\n    }\r\n\r\n    async onOpen(item:BagItemItem)\r\n    {   \r\n        // 生成此张票的核销信息\r\n      \r\n        \r\n        // 加密\r\n        // let keyMm = 'ffddccvvaa%?'\r\n\r\n        // let sign = new MD5().hex_md5(userId+id+date+keyMm) \r\n        // data['sign'] = sign\r\n\r\n        // console.log(data)\r\n        this._item = item\r\n        this.numberFrame.setMax(item.count)\r\n\r\n\r\n        let itemConf = GItemCfg.getItemById(this._item.item_id)\r\n        let club = itemConf.verifi_club\r\n        if(club<-1){\r\n            cc.find('content/lb_club',this.node).getComponent(cc.Label).string =\"(所有俱乐部)\"\r\n        }else if(club && club>0){\r\n           let clubData =  await GClubSer.getClubDataById(club)\r\n           cc.find('content/lb_club',this.node).getComponent(cc.Label).string = clubData.title\r\n        }\r\n\r\n        this.onRefreshNumber()\r\n    }\r\n\r\n\r\n    async onRefreshNumber(){\r\n        let userId = GUserMgr.self_user._id\r\n        let id = this._item.id\r\n        let date = Date.now()\r\n        let itemId = this._item.item_id\r\n        let data ={}\r\n        if(this._item.count == 1){\r\n       \r\n            data = {\r\n                userId:userId,\r\n                id:id,\r\n                date:date,\r\n                type:1\r\n            }\r\n      \r\n        }else{\r\n            data = {\r\n                userId:userId,\r\n                itemId:itemId,\r\n                id:id,\r\n                num:this.numberFrame.getCurNum(),\r\n                date:date,\r\n                type:2\r\n            }\r\n        }\r\n\r\n        this.hxData = data\r\n\r\n        this.widget_DemainCode.generateDeminCode(JSON.stringify(data))\r\n        let itemConf = GItemCfg.getItemById(this._item.item_id)\r\n        cc.find('content/lb_name',this.node).getComponent(cc.Label).string = itemConf.name+'x'+this.numberFrame.getCurNum()\r\n    \r\n        // console.log(JSON.stringify(data))\r\n        // 3s 检测一次\r\n        this.clearXpInterval()\r\n        this.xpInterval = setInterval(()=>{\r\n            this.onCheckXiaoPiao()\r\n        },2000)\r\n    }\r\n\r\n    onCancel(){\r\n        GPageMgr.closePage(\"Page_UseItemByCode\")\r\n    }\r\n    \r\n    clearXpInterval(){\r\n        if(this.xpInterval){\r\n            clearInterval(this.xpInterval)\r\n        }\r\n        this.xpInterval = null\r\n    }\r\n\r\n\r\n    protected onDestroy(): void {\r\n        this.clearXpInterval()\r\n    }\r\n\r\n\r\n    // 检测销票 信息\r\n    async onCheckXiaoPiao(){\r\n        if(this.hxData = null){\r\n            this.clearXpInterval\r\n            return\r\n        }\r\n        // 刷新背包\r\n        // let bagItems = GItemCfg.bagItems\r\n        // GMsgCenter.send('update_myprize',{tag:'Page_MyPrizeDetail',item_id:this._item.item_id})\r\n        // await GItemCfg.init()\r\n        // let bagItems = GItemCfg.bagItems\r\n        // var isHave = false\r\n        // bagItems.forEach((items)=>{\r\n        //     if(items.id == this._item.id\r\n        //         &&items.item_id == this._item.item_id\r\n        //         &&items.create_time == this._item.create_time){\r\n        //             isHave = true\r\n        //         }\r\n        // })\r\n        let tp = this._item.type\r\n\r\n        let res = await GHallHttp.request('checkIsBagItemsHaveItem',{id:this._item.id})\r\n        // 防止销毁后执行\r\n        if(!cc.isValid(this)){\r\n            return\r\n        }\r\n        if(!res.isHave){\r\n            GHelper.showTip('扫码成功')\r\n            this.clearXpInterval()\r\n            // ==================等待1s后进行刷新\r\n\r\n            if (this.hxData.type == 2){\r\n                 // 显示等待 \r\n                 layerMgr.showNetLoading(true,'销票中...')\r\n                 await ykUtils.waitTime(2)\r\n                 layerMgr.showNetLoading(false)\r\n            }\r\n          \r\n\r\n            GMsgCenter.send('update_myprize',{tag:'Page_MyPrizeDetail',item_id:this._item.item_id})\r\n            GPageMgr.closePage(\"Page_UseItemByCode\")\r\n        }\r\n    }\r\n}","\r\nimport { Page } from \"../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Page_WebView extends Page {\r\n\r\n    @property(cc.WebView)\r\n    webview: cc.WebView = null\r\n\r\n    @property(cc.Node)\r\n    webNode: cc.Node = null\r\n\r\n    onOpen(url: string) {\r\n        this.webview.url = url\r\n    }\r\n\r\n    resizeWibHeight(){\r\n        this.webview.node.height = this.webview.node.height - 130\r\n    }\r\n\r\n    Btn_Close_OnClick(event)\r\n    {\r\n        GPageMgr.closePage(\"Page_WebView\")\r\n    }\r\n\r\n    onClose(){\r\n        console.log('Page_WebView onClose')\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class Page extends cc.Component\r\n{\r\n    onLoad()\r\n    {\r\n    }\r\n    protected start(): void {\r\n        \r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        \r\n    }\r\n    public delegate:any = null\r\n    setDelegate(delegate){\r\n        this.delegate = delegate\r\n    }\r\n}\r\n","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class PauseLayer extends cc.Component {\r\n\r\n    onShow() {\r\n    }\r\n\r\n    onHide() {\r\n    }\r\n\r\n    onClickHome() {\r\n        //sceneMgr.toMainScene();\r\n    }\r\n\r\n    onClickRestart() {\r\n        //sceneMgr.toGameScene();\r\n    }\r\n\r\n    onClickContinue() {\r\n    }\r\n\r\n    onClickClose() {\r\n    }\r\n}\r\n","class PoolManager {\r\n\r\n    private pools: WeakMap<Object, cc.NodePool> = null;\r\n\r\n    constructor() {\r\n        this.pools = new WeakMap();\r\n    }\r\n\r\n    get() {\r\n\r\n    }\r\n\r\n    put() {\r\n        \r\n    }\r\n}\r\n\r\nexport const poolMgr: PoolManager = new PoolManager();","export class PropModel {\r\n    public props: { [key: number]: number} = {};\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    reset() {\r\n    }\r\n}","import {JsonProtoFilter} from \"./JsonProtoFilter\"\r\nimport {GoogleProtoFilter} from \"./GoogleProtoFilter\"\r\n\r\nexport enum EProtoType\r\n{\r\n    Json=1,\r\n    GoogleProtoBuffer\r\n}\r\nexport let GProtoFactory=\r\n{\r\n    createFilter:function(type)\r\n    {\r\n        let filter = null\r\n        switch(type)\r\n        {\r\n            case EProtoType.GoogleProtoBuffer:\r\n            {\r\n                filter = new GoogleProtoFilter()\r\n                break\r\n            }\r\n            default:\r\n            {\r\n                filter = new JsonProtoFilter()\r\n                break\r\n            }\r\n        }\r\n        return filter\r\n    }\r\n}","import { BaseAd } from \"./BaseAd\";\r\n\r\nclass QQAd extends BaseAd {\r\n    private bannerAd = null;\r\n    private videoAd = null;\r\n    private videoSuccess: Function = null;\r\n    private videoFail: Function = null;\r\n    private nativeAd = null;\r\n    private nativeSuccess: Function = null;\r\n    private nativeFail: Function = null;\r\n\r\n    constructor() {\r\n        super(\"qq\");\r\n    }\r\n\r\n    private getUserInfo(success?: (res) => void, fail?: () => void) {\r\n        qq.getSetting({\r\n            success: () => {\r\n                qq.getUserInfo({\r\n                    success: (res) => {\r\n                        success && success(res.userInfo);\r\n                    },\r\n                    fail: () => {\r\n                        fail && fail();\r\n                    }\r\n                })\r\n            },\r\n            fail: () => {\r\n                let sysInfo = qq.getSystemInfoSync();\r\n                let width = sysInfo.screenWidth;\r\n                let height = sysInfo.screenHeight;\r\n                let button = qq.createUserInfoButton({\r\n                    type: \"text\",\r\n                    text: \"\",\r\n                    style: {\r\n                        left: 0,\r\n                        top: 0,\r\n                        width: width,\r\n                        height: height,\r\n                        lineHeight: height,\r\n                        backgroundColor: '#00000080',\r\n                        color: '#ffffff',\r\n                        textAlign: 'center',\r\n                        fontSize: 16,\r\n                        borderRadius: 4\r\n                    }\r\n                });\r\n\r\n                button.onTap((res) => {\r\n                    if (res.userInfo) {\r\n                        button.destroy();\r\n                        success && success(res.userInfo);\r\n                    } else {\r\n                        fail && fail();\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    login(success?: Function, fail?: Function) {\r\n        qq.login({\r\n            success: (res) => {\r\n                this.getUserInfo((userInfo) => {\r\n                        success && success({\r\n                            nickname: userInfo.nickName,\r\n                            avatar: userInfo.avatarUrl,\r\n                            gender: userInfo.gender,\r\n                            platform: this.platform,\r\n                            code: res.code\r\n                        });\r\n                    }, () => {\r\n                        fail && fail();\r\n                    }\r\n                )\r\n            },\r\n            fail: () => {\r\n                fail && fail();\r\n            }\r\n        });\r\n    }\r\n\r\n    share() {\r\n\r\n    }\r\n\r\n    createBannerAd() {\r\n        if (!this.banner_id) {\r\n            return;\r\n        }\r\n\r\n        if (!this.bannerAd) {\r\n            let sysInfo = qq.getSystemInfoSync();\r\n            this.bannerAd = qq.createBannerAd({\r\n                adUnitId: this.banner_id,\r\n                style: {\r\n                    width: Math.min((sysInfo.pixelRatio * 300), sysInfo.screenWidth),\r\n                }\r\n            });\r\n\r\n            this.bannerAd.onResize((size) => {\r\n                this.bannerAd.style.top = sysInfo.screenHeight - size.height;\r\n                this.bannerAd.style.left = sysInfo.screenWidth / 2 - size.width / 2;\r\n            })\r\n\r\n            this.bannerAd.show();\r\n            this.bannerAd.onLoad(() => {\r\n                console.log(\"Banner广告加载成功\");\r\n            });\r\n            this.bannerAd.onError(() => {\r\n                console.log(\"Banner广告加载失败\");\r\n            });\r\n        }\r\n    }\r\n\r\n    destroyBannerAd() {\r\n        if (this.bannerAd) {\r\n            this.bannerAd.hide();\r\n            this.bannerAd.destroy();\r\n            this.bannerAd = null;\r\n        }\r\n    }\r\n\r\n    createVideoAd(success?: Function, fail?: Function) {\r\n        if (!this.video_id) {\r\n            success && success();\r\n            return;\r\n        }\r\n\r\n        if (!this.videoAd) {\r\n            this.videoAd = qq.createRewardedVideoAd({\r\n                adUnitId: this.video_id\r\n            });\r\n\r\n            this.videoAd.onLoad(() => {\r\n                console.log(\"激励视频广告加载成功\");\r\n            });\r\n\r\n            this.videoAd.onError(() => {\r\n                console.log(\"激励视频广告加载失败\");\r\n                this.videoFail && this.videoFail();\r\n            })\r\n\r\n            this.videoAd.onClose((res) => {\r\n                if (res && res.isEnded) {\r\n                    console.log(\"激励视频正常播放结束\");\r\n                    this.videoSuccess && this.videoSuccess();\r\n                } else {\r\n                    console.log(\"激励视频播放中途推出\");\r\n                    this.videoFail && this.videoFail();\r\n                }\r\n            })\r\n        }\r\n\r\n        this.videoSuccess = success;\r\n        this.videoFail = fail;\r\n\r\n        this.videoAd.show()\r\n        .catch(() => {\r\n            this.videoAd.load()\r\n            .then(() => {\r\n                this.videoAd.show();\r\n            })\r\n        })\r\n    }\r\n\r\n    createInterstitialAd(callback?: Function) {\r\n        if (!this.interstitial_id) {\r\n            callback && callback();\r\n            return;\r\n        }\r\n\r\n        let interstitialAd = qq.createInterstitialAd({\r\n            adUnitId: this.interstitial_id\r\n        });\r\n        interstitialAd.show();\r\n        interstitialAd.onLoad(() => {\r\n            console.log('插屏广告加载成功');\r\n        });\r\n        interstitialAd.onError(() => {\r\n            console.log('插屏广告加载失败');\r\n        });\r\n        interstitialAd.onClose(() => {\r\n            console.log('插屏广告关闭');\r\n            callback && callback();\r\n        })\r\n    }\r\n    \r\n    createNativeAd(success?: Function, fail?: Function) {\r\n        if (!this.native_id) {\r\n            success && success();\r\n            return;\r\n        }\r\n    }\r\n    \r\n    reportAdShow(id: string) {\r\n\r\n    }\r\n    \r\n    reportAdClick(id: string) {\r\n\r\n    }\r\n\r\n    vibrateShort() {\r\n        qq.vibrateShort();\r\n    }\r\n\r\n    vibrateLong() {\r\n        qq.vibrateLong();\r\n    }\r\n}\r\n\r\nexport const qqAd: QQAd = new QQAd();","import { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { GBase64 } from \"../Core/Base64\";\r\n\r\nexport let GQiNiuTool:QiNiuTool = null\r\nclass QiNiuTool\r\n{    \r\n    protected _local_file_path:string=\"\"\r\n    protected _upload_callback:Function=null\r\n    protected _download_host : \"\"\r\n\r\n    // callback -> callback(status,response) \r\n    // status = 1为成功, 其他为失败  \r\n    // 成功后response 为文件在七牛的外网地址，失败为错误原因\r\n    async uploadFile(qiniu_filename,localfilepath:string,callback:Function)\r\n    {\r\n        this._upload_callback = callback\r\n        this._local_file_path = localfilepath\r\n        let jsonData = await GHallHttp.request(\"getQiniuUploadtoken\",{filename:qiniu_filename})\r\n        if(jsonData.errcode)\r\n        {\r\n            return\r\n        }\r\n        this.onGetUploadToken(jsonData.host,jsonData.upload_token)\r\n    }\r\n\r\n    onGetUploadToken (host,upload_token)\r\n    {\r\n        this._download_host = host\r\n        let tmp_data = jsb.fileUtils.getStringFromFile(this._local_file_path)\r\n        let str_b64 = GBase64.encode(tmp_data, 0, tmp_data.length)\r\n        this._upload(str_b64, upload_token)\r\n    }\r\n\r\n    _upload(str_b64, token)\r\n    {\r\n        let data = str_b64.replace(/^.*?,/, '')\r\n        let url = \"http://upload.qiniup.com/putb64/-1\"\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = ()=>\r\n        {\r\n            let status = -1\r\n            if (xhr.readyState == 4) \r\n            {\r\n                let response = \"\"\r\n                if (xhr.status == 200)\r\n                {\r\n                    status = 1\r\n                    response = \"http://\" + this._download_host + \"/\" +  (JSON.parse(xhr.response).key)\r\n                }\r\n                else\r\n                {\r\n                    status = xhr.status\r\n                    response = xhr.responseText\r\n                }\r\n                if (this._upload_callback)\r\n                {\r\n                    this._upload_callback(status,response)\r\n                }\r\n            }\r\n        }\r\n        xhr.open(\"POST\", url, true)\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\")\r\n        xhr.setRequestHeader(\"Authorization\", \"UpToken \" + token)\r\n        xhr.send(data)\r\n     }\r\n}\r\n\r\nGQiNiuTool = new QiNiuTool()","export class RankingModel {\r\n    public next_like: number = 0;\r\n    public count_like: number = 0;\r\n    public next_refresh: number = 0;\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    reset() {\r\n    }\r\n}","import Card from \"../game/play/Card\";\r\nimport { ECardType, ETexasAction } from \"../../Config/_ini_\";\r\nimport { ETexasSeatState, TexasRecordSeatInfo } from \"../../DataModel/TexasTableDataModel\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ReViewItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    yourname: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    cardtype: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    card0: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    card1: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    card2: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    card3: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    card4: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    card5: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    card6: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    reward: cc.Label = null;\r\n\r\n    cards: cc.Node[]= [];\r\n\r\n    @property([cc.Node])\r\n    actions: cc.Node[]=[];\r\n\r\n    onLoad() {\r\n        this.cards.push(this.card0);\r\n        this.cards.push(this.card1);\r\n        this.cards.push(this.card2);\r\n        this.cards.push(this.card3);\r\n        this.cards.push(this.card4);\r\n        this.cards.push(this.card5);\r\n        this.cards.push(this.card6);\r\n    }\r\n\r\n    setdata(jsonData) {\r\n        let userrecord:TexasRecordSeatInfo=jsonData.userrecord\r\n        this.yourname.string = userrecord.playerinfo.nickname\r\n        if(userrecord.showcards!=3)\r\n        {\r\n            userrecord.cardtype=ECardType.None\r\n        }\r\n        switch (userrecord.cardtype) {\r\n            case ECardType.None:\r\n                this.cardtype.string = \"\"\r\n                break;\r\n            case ECardType.High:\r\n                this.cardtype.string = \"高牌\"\r\n                break;\r\n            case ECardType.OnePair:\r\n                this.cardtype.string = \"一对\"\r\n                break;\r\n            case ECardType.TwoPair:\r\n                this.cardtype.string = \"两对\"\r\n                break;\r\n            case ECardType.Tribble:\r\n                this.cardtype.string = \"三条\"\r\n                break;\r\n            case ECardType.Flush:\r\n                this.cardtype.string = \"顺子\"\r\n                break;\r\n            case ECardType.Straight:\r\n                this.cardtype.string = \"同花\"\r\n                break;\r\n            case ECardType.FullHouse:\r\n                this.cardtype.string = \"葫芦\"\r\n                break;\r\n            case ECardType.Quadruple:\r\n                this.cardtype.string = \"四条\"\r\n                break;\r\n            case ECardType.StraightFlush:\r\n                this.cardtype.string = \"同花顺\"\r\n                break;\r\n            case ECardType.RoyalFlush:\r\n                this.cardtype.string = \"皇家同花顺\"\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // export enum ETexasAction {\r\n        //     None = 0,\r\n        //     Raise,\r\n        //     Call,\r\n        //     Allin,\r\n        //     Check,\r\n        //     Fold\r\n        // }\r\n\r\n        for (let index = 0; index < this.actions.length; index++) {\r\n            const element = this.actions[index];\r\n            element.getComponent(cc.Label).string = \"\"\r\n        }\r\n\r\n        for (let index = 0; index < userrecord.actions.length; index++) {\r\n            const element = userrecord.actions[index].action;\r\n            if (element == ETexasAction.None) {\r\n                break\r\n            }\r\n            else\r\n            {\r\n                if (element == ETexasAction.Check) {\r\n                    this.actions[index].getComponent(cc.Label).string = \"看牌\";\r\n                }\r\n                else if (element == ETexasAction.Call) {\r\n                    this.actions[index].getComponent(cc.Label).string = \"跟注\" + \" \" + userrecord.actions[index].bet;\r\n                }\r\n                else if (element == ETexasAction.Fold) {\r\n                    this.actions[index].getComponent(cc.Label).string = \"弃牌\";\r\n                }\r\n                else if (element == ETexasAction.Raise) {\r\n                    this.actions[index].getComponent(cc.Label).string = \"加注\" + \" \" + userrecord.actions[index].bet;\r\n                }\r\n                else if (element == ETexasAction.Allin) {\r\n                    this.actions[index].getComponent(cc.Label).string = \"\" + \" \" + userrecord.actions[index].bet;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (userrecord.dtpoint > 0) {\r\n            this.reward.string = \"+\" + userrecord.dtpoint;\r\n            this.reward.node.color = new cc.Color().fromHEX(\"#EC4F30\")\r\n        }\r\n        else\r\n        {\r\n            this.reward.string = userrecord.dtpoint+\"\";\r\n            this.reward.node.color = new cc.Color().fromHEX(\"#EC9630\")\r\n        }\r\n        let isself = GUserMgr.self_user_id==userrecord.playerinfo.id\r\n\r\n        for (let i = 0; i < 7; i++) {\r\n            this.cards[i].getComponent(Card).clearContent()\r\n            this.cards[i].getComponent(Card).setFace(false)\r\n            \r\n            this.cards[i].getComponent(Card).updateCardBack1();\r\n        }\r\n        let show_all = (userrecord.state!=ETexasSeatState.Fold)\r\n        // //手牌\r\n        if (userrecord.cards[0]!=null&&(userrecord.showcards==1 || userrecord.showcards== 3 ||isself/*||userrecord.negative*/)) {\r\n            this.card0.getComponent(Card).setFace(true)\r\n            this.card0.getComponent(Card).setReviewContent(userrecord.cards[0])\r\n        }\r\n\r\n        if (userrecord.cards[1]!=null&&(userrecord.showcards==2 || userrecord.showcards== 3 ||isself/*||userrecord.negative*/)) {\r\n            this.card1.getComponent(Card).setFace(true)\r\n            this.card1.getComponent(Card).setReviewContent(userrecord.cards[1])\r\n        }\r\n        let acion_len = userrecord.actions.length\r\n        if (jsonData.publiccards[0]!=null&&(acion_len>=2||show_all)) {\r\n            this.card2.getComponent(Card).setFace(true)\r\n            this.card2.getComponent(Card).setReviewContent(jsonData.publiccards[0])\r\n        }\r\n\r\n        if (jsonData.publiccards[1]!=null&&(acion_len>=2||show_all)) {\r\n            this.card3.getComponent(Card).setFace(true)\r\n            this.card3.getComponent(Card).setReviewContent(jsonData.publiccards[1])\r\n        }\r\n\r\n        if (jsonData.publiccards[2]!=null&&(acion_len>=2||show_all)) {\r\n            this.card4.getComponent(Card).setFace(true)\r\n            this.card4.getComponent(Card).setReviewContent(jsonData.publiccards[2])\r\n        }\r\n\r\n        if (jsonData.publiccards[3]!=null&&(acion_len>=3||show_all)) {\r\n            this.card5.getComponent(Card).setFace(true)\r\n            this.card5.getComponent(Card).setReviewContent(jsonData.publiccards[3])\r\n        }\r\n\r\n        if (jsonData.publiccards[4]!=null&&(acion_len>=4||show_all)) {\r\n            this.card6.getComponent(Card).setFace(true)\r\n            this.card6.getComponent(Card).setReviewContent(jsonData.publiccards[4])\r\n        }\r\n    }\r\n}\r\n","import { GTexasTableDM, TexasRecordTableInfo } from \"../../DataModel/TexasTableDataModel\";\r\nimport { GMatchSer } from \"../../Service/MatchService\";\r\nimport ListView from \"../../utils/ListView\";\r\nimport ReViewItem from \"./ReViewItem\";\r\nconst {ccclass, property} = cc._decorator;\r\n@ccclass\r\nexport default class ReView extends cc.Component {\r\n    @property(cc.ScrollView) data_scrollview: cc.ScrollView = null;\r\n    @property(cc.Button) frontBtn: cc.Button = null;\r\n    @property(cc.Button) backBtn: cc.Button = null;\r\n    @property(cc.Button) prevBtn: cc.Button = null;\r\n    @property(cc.Button) nextBtn: cc.Button = null;\r\n    @property(cc.Label) cur: cc.Label = null;\r\n    @property(cc.Label) number: cc.Label = null;\r\n    @property(cc.Label) time: cc.Label = null;\r\n    private index = -1;\r\n    \r\n    /**\r\n     * 适配 widget(当前帧立即生效)\r\n     * @param node          要适配的节点\r\n     * @param bTransChild   是否遍历适配子节点(默认 false)\r\n     */\r\n    adaptWidget(node: cc.Node, bTransChild?: boolean): void {\r\n        if (!node) return;\r\n\r\n        let widget: cc.Widget = node.getComponent(cc.Widget);\r\n        if (widget && cc.isValid(widget, true)) {\r\n            widget.enabled = true;\r\n            widget.updateAlignment();\r\n            widget.enabled = false;\r\n        }\r\n\r\n        if (bTransChild) {\r\n            for (let i = 0; i < node.children.length; ++i) {\r\n                this.adaptWidget(node.children[i], bTransChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n        this.adaptWidget(this.node, true)\r\n    }\r\n\r\n    convertReviewTime(time)\r\n    {\r\n        time = parseInt(time)\r\n        let dt = new Date(time)\r\n        let now = new Date()\r\n        return dt.getFullYear()+\"-\"+(dt.getMonth()+1)+\"-\"+dt.getDate()+\" \"+dt.getHours()+\":\"+dt.getMinutes()\r\n    }\r\n\r\n    onReviewData() {\r\n        //拿最新的\r\n        let records:TexasRecordTableInfo[] = GMatchSer.getMatchRecords(this.node.parent.getComponent('Page').tableInfo.match_insid)\r\n        if(records==undefined || records.length==0)\r\n        {\r\n            return\r\n        }\r\n        this.index = records.length - 1;\r\n        this.cur.string = records.length + \"/\" + records.length;\r\n        let data = records[records.length-1]\r\n        this.number.string = \"牌局编号:\" + data.id;\r\n        this.time.string = this.convertReviewTime(data.end_time);\r\n        let dataList = []\r\n        for (const key in data.userrecords) {\r\n            dataList.push({type: 0, publiccards: data.cards, userrecord: data.userrecords[key]})\r\n        }\r\n        // this.cur.string = \"\"\r\n        // let dataList = []\r\n        // for (let index = 0; index < 30; index++) {\r\n        //     dataList.push({type: 0, data: {name: \"abc\", card0: 2, card1: 3, card2: 5, card3: 12, card4: 15, card5: 18, card6: 23}})   \r\n        // }\r\n        this.data_scrollview.getComponent(ListView).init(this.bindcallfunc.bind(this), this.getItemType.bind(this));\r\n        this.data_scrollview.getComponent(ListView).notifyDataSetChanged(dataList)\r\n    }\r\n\r\n    public getItemType(data) {\r\n        return data.type\r\n    }\r\n\r\n    public bindcallfunc(node: cc.Node, info, i) {\r\n        node.getComponent(ReViewItem).setdata(info)\r\n    }\r\n\r\n    onClickFirstPage() {\r\n        this.index = 0;\r\n        let records:TexasRecordTableInfo[] = GMatchSer.getMatchRecords(this.node.parent.getComponent('Page').tableInfo.match_insid)\r\n        let data = records[0]\r\n        if(data == null){\r\n            return\r\n        }\r\n\r\n        this.number.string = \"牌局编号:\" + data.id;\r\n        this.time.string = this.convertReviewTime(data.end_time);\r\n\r\n        let dataList = []\r\n        this.cur.string = \"1/\" + records.length;\r\n        for (const key in data.userrecords) {\r\n            dataList.push({type: 0, publiccards: data.cards, userrecord: data.userrecords[key]})\r\n        }\r\n        this.data_scrollview.getComponent(ListView).notifyDataSetChanged(dataList)\r\n    }\r\n\r\n    onClickEndPage() {\r\n        let records:TexasRecordTableInfo[] = GMatchSer.getMatchRecords(this.node.parent.getComponent('Page').tableInfo.match_insid)\r\n        let data = records[records.length-1]\r\n        if(data == null){\r\n            return\r\n        }\r\n        \r\n        this.number.string = \"牌局编号:\" + data.id;\r\n        this.time.string = this.convertReviewTime(data.end_time);\r\n\r\n        this.index = records.length-1\r\n        this.cur.string = records.length + \"/\" + records.length;\r\n        let dataList = []\r\n        for (const key in data.userrecords) {\r\n            dataList.push({type: 0, publiccards: data.cards, userrecord: data.userrecords[key]})\r\n        }\r\n        this.data_scrollview.getComponent(ListView).notifyDataSetChanged(dataList)\r\n    }\r\n\r\n    onClickPrevPage() {\r\n        let records:TexasRecordTableInfo[] = GMatchSer.getMatchRecords(this.node.parent.getComponent('Page').tableInfo.match_insid)\r\n        let curIndex = this.index - 1\r\n        if (curIndex >= 0 && records[curIndex]!=null) {\r\n            this.index = curIndex;\r\n            let data = records[curIndex];\r\n            \r\n            this.number.string = \"牌局编号:\" + data.id;\r\n            this.time.string = this.convertReviewTime(data.end_time);\r\n\r\n            let cur = curIndex + 1;\r\n            this.cur.string = cur + \"/\" + records.length;\r\n            let dataList = []\r\n            for (const key in data.userrecords) {\r\n                dataList.push({type: 0, publiccards: data.cards, userrecord: data.userrecords[key]})\r\n            }\r\n            this.data_scrollview.getComponent(ListView).notifyDataSetChanged(dataList)\r\n        }\r\n    }\r\n\r\n    onClickNextPage() {\r\n        let records:TexasRecordTableInfo[] = GMatchSer.getMatchRecords(this.node.parent.getComponent('Page').tableInfo.match_insid)\r\n        let curIndex = this.index + 1;\r\n        if (curIndex >= 0 && records[curIndex]!=null) {\r\n            this.index = curIndex;\r\n            let data = records[curIndex];\r\n\r\n            this.number.string = \"牌局编号:\" + data.id;\r\n            this.time.string = this.convertReviewTime(data.end_time);\r\n\r\n            let dataList = []\r\n            let cur = curIndex + 1;\r\n            this.cur.string = cur + \"/\" + records.length;\r\n            for (const key in data.userrecords) {\r\n                dataList.push({type: 0, publiccards: data.cards, userrecord: data.userrecords[key]})\r\n            }\r\n            this.data_scrollview.getComponent(ListView).notifyDataSetChanged(dataList)\r\n        }\r\n    }\r\n\r\n    onClickClose() {\r\n        //this.node.active = false;\r\n\r\n        cc.Tween.stopAllByTarget(this.node);\r\n        cc.tween(this.node)\r\n        .to(0.2, {x: cc.winSize.width})\r\n        .call(() => {\r\n            \r\n        })\r\n        .start();\r\n    }\r\n}\r\n","export class RecordModel {\r\n\r\n    public shop_diamond_free: number = 0;\r\n    public shop_diamond_video: number = 0;\r\n    public shop_buy: {[key: number]: number} = {};\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    reset() {\r\n    }\r\n}","export let GResTool:ResTool=null\r\nclass ResTool\r\n{\r\n    protected _items={}\r\n    getRes(name)\r\n    {\r\n        return this._items[name]\r\n    }\r\n    cacheAll(dirs:Array<string>,callback)\r\n    {\r\n        let i=0\r\n        let complete = ()=>\r\n        {\r\n            if(i==0)\r\n            {\r\n                if(callback)\r\n                {\r\n                    callback()\r\n                }\r\n            }\r\n        }\r\n        for(let k=0;k<dirs.length;++k)\r\n        {\r\n            ++i\r\n            this._cacheDir(dirs[k],()=>\r\n            {\r\n                --i\r\n                complete()\r\n            })\r\n        }\r\n    }\r\n    protected _cacheDir(dir,callback)\r\n    {\r\n        cc.loader.loadResDir(dir,cc.SpriteFrame,(error,resource,urls)=>\r\n        {\r\n            for(let i=0;i<urls.length;++i)\r\n            {\r\n                this._items[urls[i]] = resource[i]\r\n            }\r\n            if(callback)\r\n            {\r\n                callback()\r\n            }\r\n        })\r\n    }\r\n}\r\nGResTool = new ResTool()\r\ncc[\"GResTool\"] = GResTool","\r\nclass ResourceManager {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public preload(bundle: string, onProgress?: (finish, total, item) => void, onComplete?: (err, items) => void) {\r\n        cc.assetManager.loadBundle(String(bundle), (err, res) => {\r\n            if (!err) {\r\n                res.preloadDir(\"\", onProgress, onComplete)\r\n            }\r\n        })\r\n    }\r\n\r\n    private load(bundle: string, path: number | string, type: typeof cc.Asset, success: Function, fail: Function) {\r\n        cc.assetManager.loadBundle(String(bundle), (err, res) => {\r\n            if (err) {\r\n                console.log(\"load bundle fail\", err);\r\n                fail && fail();\r\n                return;\r\n            }\r\n\r\n            res.load(String(path), type, (err, res) => {\r\n                if (err) {\r\n                    fail && fail();\r\n                    return;\r\n                }\r\n                success && success(res);\r\n            })\r\n        })\r\n    }\r\n\r\n    private loadRes(path: string, type: typeof cc.Asset, success?: Function, fail?: Function) {\r\n        cc.resources.load(path, type, (err, res) => {\r\n            if (err) {\r\n                fail && fail();\r\n                return;\r\n            }\r\n            success && success(res);\r\n        })\r\n    }\r\n\r\n    public loadImage(path: string, success: (res: cc.SpriteFrame) => void, fail?: () => void) {\r\n        this.loadRes(path, cc.SpriteFrame, success, fail);\r\n    }\r\n\r\n    public loadCard(type: number, id: number, success: (res: cc.SpriteFrame) => void, fail?: () => void) {\r\n        this.loadRes(\"image/card/\" + type + \"/\" + id, cc.SpriteFrame, success, fail);\r\n    }\r\n\r\n    public loadProp(id: number, success: (res: cc.SpriteFrame) => void, fail?: () => void) {\r\n        this.loadRes(\"image/prop/\" + id, cc.SpriteFrame, success, fail);\r\n    }\r\n\r\n    public loadGoods(id: number, success: (res: cc.SpriteFrame) => void, fail?: () => void) {\r\n        this.load(\"goods\", id, cc.SpriteFrame, success, fail);\r\n    }\r\n    \r\n    public loadAudio(path: string, success: (res: cc.AudioClip) => void, fail?: () => void) {\r\n        this.load(\"audio\", path, cc.AudioClip, success, fail);\r\n    }\r\n\r\n    public loadPrefab(path: string, success: (res: cc.Prefab) => void, fail?: () => void) {\r\n        this.load(\"prefab\", path, cc.Prefab, success, fail);\r\n    }\r\n}\r\n\r\nexport const resMgr: ResourceManager = new ResourceManager();","import { TimeLabel } from './TimeLabel';\r\nimport {GHelper} from \"../Logic/Helper\"\r\n\r\nconst {ccclass, property} = cc._decorator\r\n\r\n@ccclass\r\nexport class ReverseCountLabel extends cc.Label\r\n{\r\n    protected _deadline:number = 0\r\n    get deadline()\r\n    {\r\n        return this._deadline\r\n    }\r\n    set deadline(value)\r\n    {\r\n        this._deadline = value\r\n    }\r\n\r\n    protected _pre_text:string = \"\"\r\n    get pre_text()\r\n    {\r\n        return this._pre_text\r\n    }\r\n    set pre_text(value)\r\n    {\r\n        this._pre_text = value\r\n    }\r\n\r\n    end_event:Function=null\r\n    protected _interval_handler:number = null\r\n    \r\n    protected _pre_count:number = -1\r\n    protected _left_time = -1\r\n    onLoad() \r\n    {\r\n\r\n    }\r\n    pause()\r\n    {\r\n        this._left_time = this._deadline - GHelper.getServerTime()\r\n        if(this._interval_handler)\r\n        {\r\n            clearInterval(this._interval_handler)\r\n            this._interval_handler = null\r\n        }\r\n    }\r\n    resume()\r\n    {\r\n        if(this._left_time>=0)\r\n        {\r\n            this._deadline = GHelper.getServerTime()+this._left_time\r\n            this.run()\r\n        }\r\n    }\r\n    run()\r\n    {\r\n        let self = this\r\n        if(this._interval_handler)\r\n        {\r\n            return false\r\n        }\r\n        this._interval_handler = setInterval(function()\r\n        {\r\n            self._refresh()\r\n        },1000)\r\n        return this._refresh()\r\n    }\r\n    _refresh()\r\n    {\r\n        if(this._pre_count==0)\r\n        {\r\n            if(this._interval_handler)\r\n            {\r\n                clearInterval(this._interval_handler)\r\n                this._interval_handler = null\r\n            }\r\n            this._pre_count = -1\r\n            if(this.end_event)\r\n            {\r\n                this.end_event()\r\n            }\r\n            return true\r\n        }\r\n        let time = GHelper.getServerTime()\r\n        let dt_time = this.deadline - time\r\n        let count = Math.floor(dt_time/1000+0.1)\r\n        if(count<0)\r\n        {\r\n            count = 0\r\n        }\r\n        this._pre_count = count\r\n        this.string = this._pre_text+this._pre_count\r\n        return false\r\n    }\r\n    onDestroy()\r\n    {\r\n        if(this._interval_handler)\r\n        {\r\n            clearInterval(this._interval_handler)\r\n            this._interval_handler = null\r\n        }\r\n    }\r\n}","import {GHelper} from \"../Logic/Helper\"\r\n\r\nconst {ccclass, property} = cc._decorator\r\n\r\n@ccclass\r\nexport class ReverseTimerLabel extends cc.Component\r\n{\r\n    _nums: {top_one:cc.Sprite,bottom_one:cc.Sprite,str:string}[]\r\n    _root:cc.Node\r\n    _num: number=0\r\n    _forceLen: number=-1\r\n    _max_num: number=9\r\n    \r\n    @property()\r\n    selectedFont: number=10\r\n    \r\n    @property()\r\n    num_spacing: number=6\r\n    _interval_handler:number=0\r\n    _seconds:number=0\r\n    _sp_rect:any\r\n    get seconds() \r\n    {\r\n        return this._seconds\r\n    }\r\n    set seconds(value) \r\n    {\r\n        if(this._seconds===value)\r\n        {\r\n            return\r\n        }\r\n        this._seconds = value\r\n        if(this._interval_handler)//表示正在倒计时的过程中修改了数据所以要重新run\r\n        {\r\n            this.run()\r\n        }\r\n    }\r\n    end_callback:Function//时间为0的时候的回调\r\n    _init_callback:Function\r\n    static create(num=0,font_num=10,forcelen=-1)\r\n    {\r\n        let rtl = <ReverseTimerLabel>GHelper.createNode(ReverseTimerLabel)\r\n        rtl._num = num\r\n        rtl._forceLen = forcelen\r\n        rtl.selectedFont = font_num\r\n        rtl._seconds = num\r\n        return rtl\r\n    }\r\n\r\n    _getNumStr():string\r\n    {\r\n        let numStr = this._num+\"\"\r\n        //numStr = numStr.replace(\":\",\".\")\r\n        let length = numStr.length\r\n        if(this._forceLen > 0 && length < this._forceLen)\r\n        {\r\n            for(let i = 1; this._forceLen - length;++i)\r\n            {\r\n                numStr = \"0\" + numStr\r\n            }\r\n            length = numStr.length\r\n        }\r\n        return numStr\r\n    }\r\n    // use this for initialization\r\n    onLoad() \r\n    {\r\n        let self = this\r\n        this._root = new cc.Node()\r\n        this._root.parent = this.node\r\n        \r\n        let str_one = \"Image/Num/\" + this.selectedFont + \"_0\"\r\n        GHelper.createSprite(str_one, function(sp)\r\n        {\r\n            let rect = sp.spriteFrame.getRect()\r\n            self._init(self._getNumStr(),rect)\r\n        })\r\n    }\r\n    _init(numStr,r)\r\n    {\r\n        this._sp_rect = r\r\n        let length = numStr.length\r\n        this._nums = []\r\n        for(let i = length-1; i>=0; --i)\r\n        {\r\n            let x =(i - 1) * r.width -(i - 1) * this.num_spacing\r\n            let str_num = numStr[i]\r\n            let tb = this._createOne(str_num,x)\r\n            this._nums[i] = {\r\n                top_one : tb.top_one,\r\n                bottom_one : tb.bottom_one,\r\n                str : str_num\r\n            }\r\n        }\r\n        if(this._init_callback)\r\n        {\r\n            this._init_callback()\r\n        }\r\n    }\r\n    _createOne(str_num,x)\r\n    {\r\n        let str_one = \"Image/Num/\" + this.selectedFont + \"_\" + str_num\r\n        let r = this._sp_rect\r\n        let top_one = GHelper.createSprite(str_one, function(sp)\r\n        {\r\n            let rect = new cc.Rect(0,0,r.width,r.height/2)\r\n            sp.spriteFrame.setRect(rect)\r\n            sp.node.width = r.width\r\n            sp.node.height = r.height/2\r\n        },null,\"_top\")\r\n        top_one.node.x = x\r\n        top_one.node.setAnchorPoint(0.5, 0)\r\n        let bottom_one = GHelper.createSprite(str_one, function(sp)\r\n        {\r\n            let rect = new cc.Rect(0,r.height/2,r.width,r.height/2)\r\n            sp.spriteFrame.setRect(rect)\r\n            sp.node.width = r.width\r\n            sp.node.height = r.height/2\r\n        },null,\"_bottom\")\r\n        bottom_one.node.x = x\r\n        bottom_one.node.setAnchorPoint(0.5, 1)\r\n\r\n        top_one.node.parent = this._root\r\n        bottom_one.node.parent = this._root\r\n\r\n        return {top_one:top_one,bottom_one:bottom_one,str:str_num}\r\n    }\r\n    stop()\r\n    {\r\n        if(this._interval_handler)\r\n        {\r\n            clearInterval(this._interval_handler)\r\n            this._interval_handler = null\r\n        }\r\n    }\r\n    run()\r\n    {\r\n        if(this._sp_rect)\r\n        {\r\n            this._run()\r\n        }\r\n        else\r\n        {\r\n            this._init_callback = this._run.bind(this)\r\n        }\r\n    }\r\n    _run()\r\n    {\r\n        this._init_callback = null\r\n        let self = this\r\n        let startTime = GHelper.getLocalTime()\r\n        let endTime = startTime+this._seconds*1000\r\n        if(this._interval_handler)\r\n        {\r\n            clearInterval(this._interval_handler)\r\n            this._interval_handler = null\r\n        }\r\n        if(this._seconds<=0)\r\n        {\r\n            return\r\n        }\r\n        this._interval_handler = setInterval(function(){\r\n            let curTime = GHelper.getLocalTime()\r\n            let curNum = Math.floor((endTime-curTime)/1000)\r\n            curNum = curNum>0?curNum:0\r\n            if(curNum!=self._seconds)\r\n            {\r\n                self._changeTo(curNum)\r\n                self._seconds = curNum\r\n            }\r\n            if(curNum<=0)\r\n            {\r\n                if(self.end_callback)\r\n                {\r\n                    if(self._interval_handler)\r\n                    {\r\n                        clearInterval(self._interval_handler)\r\n                        self._interval_handler = null\r\n                    }\r\n                    self.end_callback()\r\n                }\r\n            }\r\n        },1000)\r\n    }\r\n    _changeTo(num)\r\n    {\r\n        let numStr = num+\"\"\r\n        let length = numStr.length\r\n        if(this._forceLen > 0 && length < this._forceLen)\r\n        {\r\n            for(let i = 0; i<this._forceLen - length;++i)\r\n            {\r\n                numStr = \"0\" + numStr\r\n            }\r\n            length = numStr.length\r\n        }\r\n        for(let i = length-1; i>=0; --i)\r\n        {\r\n            this._changeOne(numStr,i)\r\n        }\r\n    }\r\n    _changeOne(numStr,i)\r\n    {\r\n        let r = this._sp_rect\r\n        let str_num = numStr[i]\r\n        let pre = this._nums[i]\r\n        if(pre.str != str_num)\r\n        {\r\n            let x =(i - 1) * r.width -(i - 1) * this.num_spacing\r\n            let tb = this._createOne(str_num,x)\r\n\r\n            tb.bottom_one.node.scaleY = 0\r\n            let pto = pre.top_one\r\n            let pbo = pre.bottom_one\r\n            \r\n            pre.top_one = tb.top_one\r\n            pre.bottom_one = tb.bottom_one\r\n            pre.str = tb.str\r\n\r\n            let action = cc.sequence(\r\n                cc.scaleTo(0.3, 1, 0),\r\n                cc.callFunc( function()\r\n                {\r\n                    let newAction = cc.sequence(\r\n                        cc.scaleTo(0.2, 1, 1),\r\n                        cc.callFunc( function()\r\n                        {\r\n                            pbo.node.removeFromParent()\r\n                        } )\r\n                    )\r\n                    tb.bottom_one.node.runAction(newAction)\r\n                } ),\r\n                cc.removeSelf()\r\n            )\r\n            tb.top_one.node.zIndex = pto.node.zIndex - 1000\r\n            pto.node.runAction(action)\r\n        }\r\n    }\r\n    onDestroy()\r\n    {\r\n        if(this._interval_handler)\r\n        {\r\n            clearInterval(this._interval_handler)\r\n            this._interval_handler = null\r\n        }\r\n    }\r\n}","\r\n\r\nexport class RewardModel{\r\n    public receiver: string = \"\";\r\n    public phone: string = \"\";\r\n    public address: string = \"\";\r\n\r\n    constructor() {\r\n        super(\"reward\");\r\n    }\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    reset() {\r\n    }\r\n}","import {core} from \"../Core/Base\"\r\nimport {GHelper} from \"../Logic/Helper\"\r\n\r\nexport class RollingNode extends cc.Layout\r\n{\r\n    private _temp_items:any[]\r\n    private _root_layout:cc.Layout\r\n    private _total_width:number=0\r\n    public width:number=0\r\n    static create(width)\r\n    {\r\n        let rn = <RollingNode>GHelper.createNode(RollingNode)\r\n        rn.width = width\r\n        return rn\r\n    }\r\n    addText(str)\r\n    {\r\n        //传进来的本来就是Label的节点了，就直接那啥了\r\n        if(core.isObject(str))\r\n        {\r\n            this.addNode(str)\r\n            return\r\n        }\r\n        let lbl = <cc.Label>GHelper.createNode(cc.Label)\r\n        lbl.string = str || \"\"\r\n        this.addNode(lbl)\r\n    }\r\n    addSprite(path)\r\n    {\r\n        let self = this\r\n        //传进来的本来就是sprite的节点了，就直接那啥了\r\n        if(core.isObject(path))\r\n        {\r\n            this.addNode(path)\r\n            return\r\n        }\r\n        GHelper.createSprite(path,function(sp)\r\n        {\r\n            if(sp)\r\n            {\r\n                self.addNode(sp)\r\n            }\r\n        })\r\n    }\r\n    addNode(node_comp)\r\n    {\r\n        if( this._isOnLoadCalled )\r\n        {\r\n            node_comp.node.anchorX = 0\r\n            node_comp.node.parent = this._root_layout.node\r\n            this._total_width+=node_comp.node.width\r\n            this._check_move()\r\n        }\r\n        else\r\n        {\r\n            this._temp_items.push(node_comp)\r\n        }\r\n    }\r\n    _check_move()\r\n    {\r\n        let width = this.width\r\n        let dt = this._total_width - width\r\n        if(dt<=0)//无需移动\r\n        {\r\n            return\r\n        }\r\n        let action = cc.sequence(\r\n            cc.moveTo(3,cc.v2(-dt,0)),\r\n            cc.delayTime(1),\r\n            cc.moveTo(3,cc.v2(0,0)),\r\n            cc.delayTime(1),\r\n        )\r\n        action = cc.repeatForever(action)\r\n        this._root_layout.node.stopAllActions()\r\n        this._root_layout.node.runAction(action)\r\n    }\r\n    // use this for initialization\r\n    onLoad () \r\n    {\r\n        this.node.anchorX = 0\r\n        let self = this\r\n        this._root_layout = <cc.Layout>GHelper.createNode(cc.Layout)\r\n        this._root_layout.node.anchorX = 0\r\n        this._root_layout.node.parent = this.node\r\n        core.foreach(this._temp_items,function(index,node_comp)\r\n        {\r\n            node_comp.node.anchorX = 0\r\n            node_comp.node.parent = self._root_layout.node\r\n            self._total_width+=node_comp.node.width\r\n        })\r\n\r\n        let mask = this.addComponent(cc.Mask)\r\n        this._check_move()\r\n    }\r\n}","import { ucAd } from \"../sdk/UCAd\";\r\nimport { wxAd } from \"../sdk/WXAd\";\r\nimport { ttAd } from \"../sdk/TTAd\";\r\nimport { vivoAd } from \"../sdk/VivoAd\";\r\nimport { BaseAd, testAd } from \"../sdk/BaseAd\";\r\nimport { oppoAd } from \"../sdk/OppoAd\";\r\nimport { qqAd } from \"../sdk/QQAd\";\r\n\r\nclass SdkManager {\r\n    private ad: BaseAd = null;\r\n    private vibrate_on: boolean = true;\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.ad = testAd;\r\n        switch(cc.sys.platform) {\r\n            case cc.sys.MOBILE_BROWSER: {\r\n                if (cc.sys.browserType == cc.sys.BROWSER_TYPE_UC) {\r\n                    this.ad = ucAd;\r\n                }\r\n                break;\r\n            }\r\n            case cc.sys.WECHAT_GAME: {\r\n                this.ad = wxAd;\r\n                break;\r\n            }\r\n            case cc.sys.QQ_PLAY: {\r\n                this.ad = qqAd;\r\n                break;\r\n            }\r\n            case cc.sys.HUAWEI_GAME: {\r\n                break;\r\n            }\r\n            case cc.sys.XIAOMI_GAME: {\r\n                break;\r\n            }\r\n            case cc.sys.OPPO_GAME: {\r\n                this.ad = oppoAd;\r\n                break;\r\n            }\r\n            case cc.sys.VIVO_GAME: {\r\n                this.ad = vivoAd;\r\n                break;\r\n            }\r\n            case cc.sys.BYTEDANCE_GAME: {\r\n                this.ad = ttAd;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    getAd() {\r\n        return this.ad;\r\n    }\r\n\r\n    getPlatform() {\r\n        return this.ad ? this.ad.getPlatform() : \"unknown\";\r\n    }\r\n\r\n    getNetworkMode() {\r\n        return true;\r\n    }\r\n\r\n    checkVideoAd(callback?) {\r\n        callback && callback();\r\n    };\r\n\r\n    checkInterstitialAd(callback?) {\r\n        callback && callback();\r\n    };\r\n\r\n    checkNativeAd(callback?) {\r\n        callback && callback();\r\n    };\r\n\r\n    hasLogin() {\r\n        return true;\r\n    }\r\n\r\n    hasShare() {\r\n        return true;\r\n    }\r\n\r\n    hasVideoAd() {\r\n        return true;\r\n    }\r\n\r\n    hasInterstitialAd() {\r\n        return true;\r\n    }\r\n\r\n    hasNativeAd() {\r\n        return false;\r\n    }\r\n\r\n    hasRanking() {\r\n        return true;\r\n    }\r\n\r\n    login(success?: Function, fail?: Function) {\r\n        this.ad ? this.ad.login(success, fail) : fail && fail();\r\n    }\r\n\r\n    share(success?: Function, fail?: Function) {\r\n        this.ad ? this.ad.share(success, fail) : fail && fail();\r\n    }\r\n\r\n    showBannerAd(success?: Function, fail?: Function) {\r\n        this.ad ? this.ad.createBannerAd() : fail && fail();\r\n    }\r\n\r\n    hideBannerAd(success?: Function, fail?: Function) {\r\n        this.ad ? this.ad.destroyBannerAd() : fail && fail();\r\n    }\r\n\r\n    showVideoAd(success?: Function, fail?: Function) {\r\n        this.ad ? this.ad.createVideoAd(success, fail) : fail && fail();\r\n    }\r\n\r\n    showInterstitialAd(success?, fail?) {\r\n        this.ad ? this.ad.createInterstitialAd(success) : fail && fail();\r\n    }\r\n\r\n    showNativeAd(success?: Function, fail?: Function) {\r\n        this.ad ? this.ad.createNativeAd(success, fail) : fail && fail();\r\n    }\r\n\r\n    reportAdShow(id: string) {\r\n        this.ad && this.ad.reportAdShow(id);\r\n    }\r\n\r\n    reportAdClick(id: string) {\r\n        this.ad && this.ad.reportAdClick(id);\r\n    }\r\n}\r\n\r\nexport const sdkMgr = new SdkManager();","import { ECardType, ETableState, ETexasAction, GCardTypeStr } from \"../../../Config/_ini_\";\r\nimport { ECardSeatState } from \"../../../DataModel/CardTableDataModel\";\r\nimport { ETexasSeatState, GTexasTableDM, TexasRecordSeatInfo } from \"../../../DataModel/TexasTableDataModel\";\r\nimport { GHelper } from \"../../../Framework/Logic/Helper\";\r\nimport { GUserMgr } from \"../../../Logic/UserManager\";\r\nimport { resMgr } from \"../../../manager/ResourceManager\";\r\nimport { GMatchSer } from \"../../../Service/MatchService\";\r\nimport { HashMap } from \"../../../utils/HashMap\";\r\nimport Card from \"./Card\";\r\nimport { GameChipsMove } from \"./GameChipsMove\";\r\n\r\nimport { GSettingDM } from \"../../../Framework/DataModel/SettingDataModel\";\r\nimport { GAudioTool } from \"../../../Framework/Logic/AudioTool\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst SEAT_POS = [\r\n    cc.v3(0, -480),\r\n    cc.v3(-300, -250), cc.v3(-300, 0), cc.v3(-300, 250),\r\n    cc.v3(-130, 500), cc.v3(130, 500),\r\n    cc.v3(300, 250), cc.v3(300, 0), cc.v3(300, -250)\r\n]\r\n\r\nexport class CardInfo {\r\n    id: number = 0;\r\n    x: number = 0;\r\n    y: number = 0;\r\n    scale: number = 1;\r\n    mark: number = 0;\r\n    select: boolean = false;\r\n    delay: number = 0;\r\n}\r\n\r\nexport class SeatCardInfo {\r\n    scale: number = 1;\r\n    angle: number = 0;\r\n    position: cc.Vec3 = cc.Vec3.ZERO;\r\n}\r\n\r\n@ccclass\r\nexport default class Seat extends cc.Component {\r\n\r\n    /**\r\n     * 仅仅自己的才用这个，别人的直接用筹码显示\r\n     */\r\n    @property(cc.Label)\r\n    lbl_cardtype: cc.Label = null;\r\n\r\n    @property(cc.Button)\r\n    btnSit: cc.Button = null;\r\n\r\n    @property(cc.Sprite)\r\n    imgAvatar: cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    labelNickname: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    nodeAllin: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeMark: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    labelBet: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelChip: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    card_panel: cc.Node = null;\r\n\r\n    @property(cc.Prefab)\r\n    prefab_card: cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    bar_timer: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    node_wait: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    node_fold: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    node_raise: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    node_call: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    node_allin: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    node_check: cc.Node = null\r\n\r\n    @property(cc.Prefab)\r\n    chipsMovePrefab: cc.Prefab = null\r\n\r\n    @property(cc.Node)\r\n    node_dealer_tip: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    node_gray: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    node_auto_tip: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    node_win_tip: cc.Node = null\r\n\r\n    @property(Number)\r\n    tableIdx: Number = 0\r\n\r\n    public m_chipsMove: GameChipsMove = null\r\n\r\n    public m_pkCards: Card[] = []\r\n    public m_card_panel: cc.Node = null;\r\n\r\n    protected _cardsInfoMap: HashMap<number, SeatCardInfo[]> = new HashMap();\r\n    public realIndex: number;\r\n\r\n    onLoad() {\r\n        this.m_chipsMove = cc.instantiate(this.chipsMovePrefab).getComponent('GameChipsMove')\r\n        this.node.addChild(this.m_chipsMove.node)\r\n        this.m_chipsMove.setSeat(this)\r\n\r\n        this.bar_timer.active = false;\r\n        let sp_blink = this.bar_timer.parent.getChildByName(\"person\").getChildByName(\"sp_blink\")\r\n        if (sp_blink!=null) {\r\n            sp_blink.active = false;\r\n        }\r\n        if(this.lbl_cardtype)\r\n        {\r\n            this.lbl_cardtype.string=\"\"\r\n        }\r\n        this.node_gray.active=false\r\n        this.labelNickname.node.color = new cc.Color().fromHEX(\"#FFFFFF\")\r\n        this.node_auto_tip.active=false\r\n        this.node_win_tip.active=false\r\n        this._initCardsInfo()\r\n        // this._initHandCards()\r\n    }\r\n    \r\n    protected _table_id=-1\r\n    protected _user_id=-1\r\n    get userId()\r\n    {\r\n        return this._user_id\r\n    }\r\n    get seatIndex()\r\n    {\r\n        if(this.seatInfo)\r\n        {\r\n            return this.seatInfo.index\r\n        }\r\n        return -1\r\n    }\r\n\r\n    get seatInfo()\r\n    {\r\n        return GTexasTableDM.getSeatByUserId(this._table_id,this._user_id)\r\n    }\r\n    protected _initCardsInfo(): void {\r\n        let card_panel: cc.Node = this.node.getChildByName(\"node_card\");\r\n        this.m_card_panel = card_panel\r\n        this.m_card_panel.active = true\r\n    \r\n        let cardsInfo: SeatCardInfo[] = [];\r\n        let childrenCount: number = card_panel.childrenCount;\r\n        for (let i = 1; i < childrenCount + 1; i++) {\r\n            let card: cc.Node = card_panel.getChildByName(`cardBg${i}`);\r\n            if (card) {\r\n                let t: SeatCardInfo = new SeatCardInfo();\r\n                t.scale = card.scale;\r\n                t.angle = card.angle;\r\n                t.position.set(card.position);\r\n                cardsInfo.push(t);\r\n            }\r\n        }\r\n        this._cardsInfoMap.add(1, cardsInfo);\r\n        // card_panel.removeFromParent(true);\r\n        // card_panel.destroy();\r\n\r\n        card_panel.removeAllChildren(true);\r\n        // let cardsInfos: SeatCardInfo[] = this._cardsInfoMap.get(1);\r\n        // if (!cardsInfos) return;\r\n        for (let i = 0; i < cardsInfo.length; i++) {\r\n            let t: Card = cc.instantiate(this.prefab_card).getComponent(Card);\r\n            t.node.active = false;\r\n            t.node.scale = cardsInfo[i].scale;\r\n           \r\n            t.node.angle = cardsInfo[i].angle;\r\n            t.node.setPosition(cardsInfo[i].position);\r\n\r\n            this.m_pkCards.push(t);\r\n            card_panel.addChild(t.node, null, \"pkcard\" + i);\r\n        }\r\n\r\n      \r\n\r\n        for (let i = 0; i < cardsInfo.length; i++) {\r\n            card_panel.children[i].scale = cardsInfo[i].scale;\r\n            card_panel.children[i].angle = cardsInfo[i].angle;\r\n            card_panel.children[i].setPosition(cardsInfo[i].position);\r\n            let t: Card =card_panel.children[i].getComponent(Card);\r\n            t.clearContent()\r\n            t.setFace(false)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    init(table_id:number,user_id:number, index:number) {\r\n        // console.log('seat init ',table_id,user_id,index)\r\n        this.realIndex = index;\r\n        this.node_dealer_tip.active=false\r\n        this._user_id=user_id\r\n        this._table_id=table_id\r\n        let seatinfo = this.seatInfo\r\n        if(!seatinfo)\r\n        {\r\n            return null\r\n        }\r\n\r\n        let tableinfo = GTexasTableDM.getTableInfo(this._table_id)\r\n        if (!tableinfo)\r\n        {\r\n            return null\r\n        }\r\n\r\n        if(seatinfo.action==ETexasAction.Fold || seatinfo.state==ETexasSeatState.Waiting || this._user_id==GUserMgr.self_user_id) {\r\n            this.m_pkCards[0].node.active = false;\r\n            this.m_pkCards[1].node.active = false;\r\n        }\r\n        else\r\n        {\r\n            this.m_pkCards[0].node.active = true;\r\n            this.m_pkCards[1].node.active = true;\r\n        }\r\n        this.m_pkCards[0].node.parent.getComponent(cc.Mask).enabled = false;\r\n        this.m_pkCards[1].node.parent.getComponent(cc.Mask).enabled = false;\r\n        this.resetCardPos()\r\n        this.resetCardSize()\r\n        this.resetCardStye()\r\n        this.btnSit.node.active=false\r\n        this.labelNickname.node.active=true\r\n        this.labelNickname.string=seatinfo.playerinfo.nickname\r\n\r\n        if (seatinfo.playerinfo.logo==\"\") {\r\n            let num = Math.floor(Math.random()*(16 - 1)) + 1\r\n            let suffix: string = \"image/head/\" + num;\r\n            let path = `${suffix}`;\r\n            resMgr.loadImage(path, (res) => {\r\n                cc.isValid(this.imgAvatar) && (this.imgAvatar.getComponent(cc.Sprite).spriteFrame = res);\r\n            })\r\n        }\r\n        else\r\n        {\r\n            let suffix: string = \"image/head/\" + seatinfo.playerinfo.logo;\r\n            let path = `${suffix}`;\r\n            resMgr.loadImage(path, (res) => {\r\n                cc.isValid(this.imgAvatar) && (this.imgAvatar.getComponent(cc.Sprite).spriteFrame = res);\r\n            })\r\n        }\r\n\r\n        if(seatinfo.bet>0)\r\n        {\r\n            this.labelBet.node.parent.active=true\r\n            this.labelBet.node.parent.getChildByName(\"bg\").active = true;\r\n            // this.labelBet.string = seatinfo.bet+\"\"\r\n            this.setLabelBetNum(seatinfo.bet)\r\n        }\r\n        else\r\n        {\r\n            this.labelBet.node.parent.active=false\r\n            this.labelBet.node.parent.getChildByName(\"bg\").active = false;\r\n            this.labelBet.string = \"\"\r\n        }\r\n        this.node_auto_tip.active=seatinfo.auto\r\n        this.labelChip.node.parent.active=true\r\n        this.setLabelChipNum(seatinfo.playerinfo.point)\r\n        this.refreshTip(true)\r\n        this.showTime()\r\n\r\n        if (seatinfo.cards&&seatinfo.cards.length>0) {\r\n            if (tableinfo.turn_user_id==GUserMgr.self_user_id&&this._user_id==tableinfo.turn_user_id) {\r\n                this.showSeatCard(true)      \r\n            }\r\n            else\r\n            {\r\n                if (!this.getCard(0).img_num.node.active) {\r\n                    this.showSeatCard(false)\r\n                }\r\n                else\r\n                {\r\n                    this.getCard(0).node.active=true\r\n                    this.getCard(1).node.active=true\r\n\r\n                    let bet = tableinfo.curmaxbet-seatinfo.bet\r\n                    if (seatinfo.state==ETexasSeatState.AllIn) {\r\n                        //小盲位 大盲位 筹码不够 自动allin 翻牌\r\n                        //自己的翻牌\r\n                        // this.getCard(0).setContent(seatinfo.cards[0])\r\n                        // this.getCard(1).setContent(seatinfo.cards[1])\r\n                        \r\n                        // this.resetCardSize()\r\n                        // this.resetCardPos()\r\n                        this.showSeatCard(true)\r\n                    }\r\n                    \r\n                    else if (tableinfo.cards.length < 3) {\r\n                        let matchInsM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n                        let bm = GMatchSer.getBlindItem(matchInsM.match.blind_id,tableinfo.blind_index)\r\n\r\n                        console.log('blind check 1',seatinfo.index,tableinfo.big_blind_index,seatinfo.action,seatinfo.bet,bm.big_blind)\r\n                        console.log('blind check 2',seatinfo.index,tableinfo.small_blind_index,seatinfo.action,seatinfo.bet,bm.small_blind)\r\n\r\n\r\n                        if(seatinfo.index==tableinfo.big_blind_index&&seatinfo.action==ETexasAction.Call&&seatinfo.bet==bm.big_blind)\r\n                        {\r\n                            this.showSeatCard(false)\r\n                        }else if(seatinfo.index==tableinfo.small_blind_index&&seatinfo.action==ETexasAction.Call&&seatinfo.bet==bm.small_blind)\r\n                        {\r\n                            this.showSeatCard(false)\r\n                        }\r\n                        else if (seatinfo.action!=0) {\r\n                            this.showSeatCard(true)\r\n                        }\r\n                        else\r\n                        {\r\n                            this.showSeatCard(false)\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                      this.showSeatCard(true)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        else if (seatinfo.state==ETexasSeatState.Waiting || seatinfo.state==ETexasSeatState.Preparing || seatinfo.state==ETexasSeatState.Fold) {\r\n            this.m_pkCards[0].node.active = false;\r\n            this.m_pkCards[1].node.active = false;\r\n        }\r\n        else\r\n        {\r\n            this.m_pkCards[0].node.active = true;\r\n            this.m_pkCards[0].updateCardBack()\r\n            this.m_pkCards[0].setFace(false)\r\n\r\n            this.m_pkCards[1].node.active = true;\r\n            this.m_pkCards[1].updateCardBack()\r\n            this.m_pkCards[1].setFace(false)\r\n        }\r\n\r\n        this.showCardType()\r\n        if(seatinfo.action==ETexasAction.Fold)\r\n        {\r\n            this.labelNickname.node.color = new cc.Color().fromHEX(\"#C1AFAF\")\r\n            this.node_gray.active=true\r\n        }\r\n    }\r\n    \r\n    showTime()\r\n    {\r\n        let seatinfo = this.seatInfo\r\n        let tableinfo = GTexasTableDM.getTableInfo(this._table_id)\r\n        if (tableinfo.turn_user_id == seatinfo.playerinfo.id) {\r\n            let lefttime = Math.floor((tableinfo.timeout-GHelper.getServerTime())/1000)\r\n            if (lefttime<=0)\r\n            {\r\n                return\r\n            }\r\n            this.startTimeCutDown(lefttime);\r\n        }\r\n    }\r\n\r\n    refreshTip(force=false,clear=false)\r\n    {\r\n        let seatinfo = this.seatInfo\r\n        if(!seatinfo)\r\n        {\r\n            return null\r\n        }\r\n        this.node_wait.active=false\r\n        this.node_fold.active=false\r\n        this.node_fold.stopAllActions()\r\n        this.node_raise.active=false\r\n        this.node_call.active=false\r\n        this.node_call.stopAllActions()\r\n        this.node_allin.active=false\r\n        this.node_check.active=false\r\n        this.node_check.stopAllActions()\r\n        this.node_gray.active = false\r\n        if(seatinfo.action==ETexasAction.Allin)\r\n        {\r\n            this.node_allin.active=true\r\n        }\r\n        if(seatinfo.state==ETexasSeatState.Waiting)\r\n        {\r\n            this.node_gray.active = true;\r\n            this.node_wait.active=true\r\n            return\r\n        }\r\n        if(clear)\r\n        {\r\n            return\r\n        }\r\n        if(seatinfo.action==ETexasAction.Call&&!force)\r\n        {\r\n            this.node_call.active=true\r\n            this.node_call.runAction(cc.sequence(cc.delayTime(3),cc.callFunc(()=>\r\n            {\r\n                this.node_call.active=false\r\n            })))\r\n        }\r\n        else if(seatinfo.action==ETexasAction.Check&&!force)\r\n        {\r\n            this.node_check.active=true\r\n            this.node_check.runAction(cc.sequence(cc.delayTime(3),cc.callFunc(()=>\r\n            {\r\n                this.node_check.active=false\r\n            })))\r\n        }\r\n        else if(seatinfo.action==ETexasAction.Fold&&!force)\r\n        {\r\n            this.node_fold.active=true\r\n            this.node_fold.runAction(cc.sequence(cc.delayTime(3),cc.callFunc(()=>\r\n            {\r\n                this.node_fold.active=false\r\n            })))\r\n        }\r\n        else if(seatinfo.action==ETexasAction.Raise&&!force)\r\n        {\r\n            this.node_raise.active=true\r\n        }\r\n    }\r\n\r\n    onGameStart()\r\n    {\r\n        this.clearTable()\r\n        let seatinfo = this.seatInfo\r\n        if(!seatinfo)\r\n        {\r\n            this.node.active = false\r\n            return\r\n        }\r\n\r\n        if(seatinfo.bet>0)\r\n        {\r\n            this.labelBet.node.parent.active=true\r\n            this.labelBet.node.parent.getChildByName(\"bg\").active = true;\r\n            // this.labelBet.string = seatinfo.bet+\"\"\r\n            this.setLabelBetNum(seatinfo.bet)\r\n        }\r\n        else\r\n        {\r\n            this.labelBet.node.parent.active=false\r\n            this.labelBet.node.parent.getChildByName(\"bg\").active = false;\r\n        }\r\n\r\n    }\r\n    /**\r\n     * 清理 座位 对于的 桌面显示\r\n     */\r\n    clearTable() {\r\n        this.stopTimeCutDown()\r\n        if(this.lbl_cardtype)     //  牌型展示 移除\r\n        {\r\n            this.lbl_cardtype.string=\"\"\r\n        }\r\n        this.node_allin.active=false // all in 展示 移除\r\n        this.node_win_tip.stopAllActions()\r\n        this.node_win_tip.active=false\r\n        this.node_gray.active=false\r\n        this.labelNickname.node.color = new cc.Color().fromHEX(\"#FFFFFF\")\r\n        this.node_dealer_tip.active=false   // 发牌人 d 标志 移除\r\n        let seatinfo = this.seatInfo\r\n        cc.find('showCard',this.node).active = false\r\n\r\n        if(!seatinfo)\r\n        {\r\n            return null\r\n        }\r\n        this.m_pkCards[0].setFace(false)\r\n        this.m_pkCards[1].setFace(false)\r\n        \r\n\r\n        this.m_pkCards[0].node.active = false;\r\n        this.m_pkCards[1].node.active = false;\r\n\r\n        this.m_pkCards[0].node.parent.getComponent(cc.Mask).enabled = false;\r\n        this.m_pkCards[1].node.parent.getComponent(cc.Mask).enabled = false;\r\n\r\n        this.resetCardSize()\r\n        this.resetCardPos()\r\n\r\n        this.m_pkCards[0].setCardBg(cc.sys.localStorage.getItem(\"setting_cardbg_style\") || \"1\")\r\n        this.m_pkCards[1].setCardBg(cc.sys.localStorage.getItem(\"setting_cardbg_style\") || \"1\")\r\n\r\n        this.m_pkCards[0].clearContent();\r\n        this.m_pkCards[1].clearContent();\r\n\r\n        this.btnSit.node.active=false\r\n        this.labelNickname.node.active=true\r\n        this.labelNickname.string=seatinfo.playerinfo.nickname\r\n        if(seatinfo.bet>0)\r\n        {\r\n            this.labelBet.node.parent.active=true\r\n            this.labelBet.node.parent.getChildByName(\"bg\").active = true;\r\n            // this.labelBet.string = seatinfo.bet+\"\"\r\n            this.setLabelBetNum(seatinfo.bet)\r\n        }\r\n        else\r\n        {\r\n            this.labelBet.node.parent.active = false\r\n            this.labelBet.node.parent.getChildByName(\"bg\").active = false;\r\n        }\r\n        this.labelChip.node.parent.active=true\r\n        this.setLabelChipNum( seatinfo.playerinfo.point)// 刷新用户目前持有的点数\r\n        this.refreshTip(true,true)  // 清理桌面座位状态 显示 \r\n\r\n   \r\n    }\r\n\r\n    onBeginBet()\r\n    {\r\n        this.showTime()\r\n        this.node_raise.active=false\r\n    }\r\n\r\n    onAuto()\r\n    {\r\n        this.node_auto_tip.active=this.seatInfo.auto\r\n    }\r\n\r\n    onBet(bet:number)\r\n    {\r\n        this.stopTimeCutDown();\r\n        let seatinfo = this.seatInfo\r\n        // this.labelBet.string = seatinfo.bet+\"\"\r\n        this.setLabelBetNum(seatinfo.bet)\r\n        \r\n     \r\n       \r\n        // this.labelChip.string = seatinfo.playerinfo.point+\"\"\r\n        this.setLabelChipNum( seatinfo.playerinfo.point)\r\n        this.refreshTip()\r\n\r\n        if (bet > 0) {\r\n            let tempPos = new cc.Vec2(0, 0);\r\n            this.labelBet.node.parent.convertToWorldSpaceAR(this.labelBet.node.parent.getChildByName(\"bg\").getPosition(), tempPos)\r\n            this.m_chipsMove.MoveOut(false, tempPos, new cc.Vec2(0, 0), 0);\r\n        }\r\n\r\n        if (bet == 0) {\r\n            this.labelBet.node.parent.active=false\r\n            this.labelBet.string = \"\"\r\n        }\r\n\r\n        if(bet<0)\r\n        {\r\n            this.node_gray.active=true\r\n            this.labelNickname.node.color = new cc.Color().fromHEX(\"#C1AFAF\")\r\n        }\r\n    }\r\n\r\n    onShow() {\r\n        //eventMgr.addListener(consts.EVENT.SHOW_MOVE_SEAT, this.showMove, this);\r\n    }\r\n\r\n    public getCard(cardIndex: number): Card {\r\n        let t: Card = null;\r\n        if (cardIndex >= 0 && cardIndex < 2) {\r\n            t = this.m_pkCards[cardIndex];\r\n        }\r\n        return t;\r\n    }\r\n\r\n    updateLabel() {\r\n        \r\n    }\r\n\r\n    onClickSeat() {\r\n    }\r\n\r\n    showMove(time: number = 0.5, worldPos = null) {\r\n        if (this._user_id==-1) {\r\n            return;\r\n        }\r\n\r\n        let index = (this.seatIndex + 9 - 0) % 9;\r\n        let pos = SEAT_POS[index];\r\n\r\n        cc.Tween.stopAllByTarget(this.node);\r\n        cc.tween(this.node)\r\n        .to(time, {x: pos.x, y: pos.y})\r\n        .call(() => {\r\n            this.updatePosition(worldPos);\r\n        })\r\n        .start();\r\n    }\r\n\r\n    updatePosition(worldPos) {\r\n    }\r\n\r\n    startTimeCutDown(time) {\r\n        let sp_blink = this.bar_timer.parent.getChildByName(\"person\").getChildByName(\"sp_blink\")\r\n        if (sp_blink!=null) {\r\n            sp_blink.active = true;\r\n            sp_blink?.runAction(cc.repeatForever(cc.blink(1, 1)))\r\n        }\r\n        let allTime = time;\r\n        let startOsTime = Date.now();\r\n        this.bar_timer.getChildByName(\"label_timer\").getComponent(cc.Label).string = \"\"//allTime;\r\n        let scheduleCallback = ()=>{\r\n            let nowOsTime = Date.now();\r\n            let nowTime = allTime - Math.floor((nowOsTime - startOsTime)/1000);\r\n            if (nowTime <= 0) {\r\n                this.stopTimeCutDown();\r\n            }\r\n            this.bar_timer.getChildByName(\"label_timer\").getComponent(cc.Label).string = \"\"//nowTime+\"\"\r\n            this.bar_timer.getComponent(cc.ProgressBar).progress = nowTime/allTime;\r\n        }\r\n        scheduleCallback()\r\n        this.bar_timer.active = true;\r\n        this.bar_timer.zIndex=9999\r\n        this.bar_timer.getChildByName(\"label_timer\").getComponent(cc.Label).schedule(scheduleCallback, 1);\r\n    }\r\n    /**\r\n     * 移除座位倒计时\r\n     */\r\n    stopTimeCutDown() {\r\n        let sp_blink = this.bar_timer.parent.getChildByName(\"person\").getChildByName(\"sp_blink\")\r\n        if (sp_blink!=null) {\r\n            sp_blink.stopAllActions();\r\n            sp_blink.active = false;\r\n        }\r\n        this.bar_timer.getChildByName(\"label_timer\").getComponent(cc.Label).unscheduleAllCallbacks();\r\n        this.bar_timer.active = false;\r\n    }\r\n\r\n    showChips() {\r\n\r\n    }\r\n\r\n    ShakeSeat() {\r\n\r\n    }\r\n    showCardType(cardtype?:ECardType)\r\n    {\r\n        if(this.lbl_cardtype)\r\n        {\r\n            this.lbl_cardtype.string=\"\"\r\n        }\r\n        let si = this.seatInfo\r\n        if(!si)\r\n        {\r\n            return\r\n        }\r\n        cardtype=cardtype||si.cardtype||ECardType.None\r\n        if(cardtype<=0)\r\n        {\r\n            return\r\n        }\r\n        let str = GCardTypeStr[cardtype]||\"\"\r\n        if(this.lbl_cardtype)\r\n        {\r\n            this.lbl_cardtype.string=str\r\n        }\r\n        else if(str)\r\n        {\r\n            // this.labelChip.string=str\r\n             this.setLabelChipNum(str)\r\n        }\r\n    }\r\n\r\n    hideChips() {\r\n        this.labelBet.node.parent.active = true\r\n        this.labelBet.node.parent.getChildByName(\"bg\").active = true;\r\n    }\r\n\r\n\r\n    \r\n    protected _recordseatinfo:TexasRecordSeatInfo=null\r\n    onGameResult(recordseatinfo:TexasRecordSeatInfo)\r\n    {\r\n\r\n        if(recordseatinfo.dtpoint>0 && this.seatInfo.action==ETexasAction.Allin && GUserMgr.self_user_id==recordseatinfo.playerinfo.id)\r\n        {\r\n            GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_win2\")\r\n        }\r\n        // 修复 牌桌上下注筹码不消失问题 \r\n        this.seatInfo.bet = 0;\r\n        this.seatInfo.action = ETexasAction.None;\r\n        //面前筹码清空\r\n        this.labelBet.node.parent.active=false\r\n        this.labelBet.string = \"\"\r\n\r\n        this._recordseatinfo=recordseatinfo\r\n        if(!recordseatinfo)\r\n        {\r\n            return\r\n        }\r\n        this.refreshTip(false,true)\r\n        if(recordseatinfo.dtpoint>0)\r\n        {\r\n            // this.labelChip.string = (recordseatinfo.dtpoint + this.seatInfo.playerinfo.point).toString()\r\n            this.setLabelChipNum(recordseatinfo.dtpoint + this.seatInfo.playerinfo.point)\r\n            this.node_win_tip.active=true\r\n            this.node_allin.active = false\r\n            this.node_win_tip.runAction(cc.sequence(cc.delayTime(3.5),cc.callFunc(()=>\r\n            {\r\n                this.node_win_tip.active=false\r\n            })))\r\n            \r\n        }\r\n\r\n        if (GUserMgr.self_user_id==recordseatinfo.playerinfo.id) {\r\n            if (this.getCard(0).imgBack.active) {\r\n                this.m_pkCards[0].img_num.node.setContentSize(new cc.Size(105, 159));\r\n                this.m_pkCards[1].img_num.node.setContentSize(new cc.Size(105, 159));\r\n\r\n                this.getCard(0).setContent(recordseatinfo.cards[0])\r\n                this.getCard(1).setContent(recordseatinfo.cards[1])\r\n                this.getCard(0).turn(0, false)\r\n                this.getCard(1).turn(0, false)\r\n            }\r\n            return\r\n        }\r\n\r\n        this.getCard(0).node.active = false\r\n        this.getCard(1).node.active = false\r\n\r\n        if (!recordseatinfo.cards) {\r\n            return\r\n        }\r\n\r\n        if(recordseatinfo.showcards==3)\r\n        {\r\n            this.showCardType(recordseatinfo.cardtype)\r\n        }\r\n        else\r\n        {\r\n            return\r\n        }\r\n        \r\n\r\n        this.m_card_panel.active = true\r\n        this.m_card_panel.setPosition(cc.Vec2.ZERO)\r\n        this.getCard(0).node.active = true\r\n        this.getCard(1).node.active = true\r\n        this.getCard(0).setContent(recordseatinfo.cards[0])\r\n        this.getCard(1).setContent(recordseatinfo.cards[1])\r\n        this.getCard(0).turn(0, true)\r\n        this.getCard(1).turn(0, true)\r\n        this._preshowcards=0\r\n    }\r\n    protected _preshowcards=0\r\n    onShowCards(showcards:number)\r\n    {\r\n        if(!this._recordseatinfo)\r\n        {\r\n            return\r\n        }\r\n        var showCardNode =  cc.find('showCard',this.node)\r\n        showCardNode.active = true\r\n        \r\n        if(this._user_id==GUserMgr.self_user_id)\r\n        {\r\n            if(showcards==1)\r\n            {\r\n                this.getCard(0).setColor(cc.Color.WHITE)\r\n            }\r\n            if(showcards==2)\r\n            {\r\n                this.getCard(1).setColor(cc.Color.WHITE)\r\n            }\r\n            if(showcards==3)\r\n            {\r\n                this.getCard(0).setColor(cc.Color.WHITE)\r\n                this.getCard(1).setColor(cc.Color.WHITE)\r\n            }\r\n            return\r\n        }\r\n        if(this._preshowcards>0)\r\n        {\r\n            showcards=3\r\n        }\r\n\r\n        this.getCard(0).node.parent.getComponent(cc.Mask).enabled = false\r\n        this.getCard(0).node.setPosition(cc.Vec2.ZERO)\r\n        this.getCard(1).node.setPosition(cc.Vec2.ZERO)\r\n\r\n        this.resetCardPos()\r\n        this.resetCardSize()\r\n\r\n        cc.error(\"shownum=\",showcards)\r\n\r\n        GAudioTool.playEffect(\"Common/Audio/Effect/zdpk_show_card\")\r\n        \r\n        if(showcards==1)\r\n        {\r\n            this.getCard(0).node.active = true\r\n            this.getCard(0).setContent(this._recordseatinfo.cards[0])\r\n            this.getCard(0).turn(0, true)\r\n            this.getCard(1).node.active = true\r\n            this.getCard(1).updateCardBack()\r\n        }\r\n        if(showcards==2)\r\n        {\r\n            \r\n            this.getCard(0).node.active = true\r\n            this.getCard(0).updateCardBack()\r\n            this.getCard(1).node.active = true\r\n            this.getCard(1).setContent(this._recordseatinfo.cards[1])\r\n            this.getCard(1).turn(0, true)\r\n        }\r\n        if(showcards==3)\r\n        {\r\n            \r\n            if(this._preshowcards!=1)\r\n            {\r\n                this.getCard(0).node.active = true\r\n                this.getCard(0).setContent(this._recordseatinfo.cards[0])\r\n                this.getCard(0).turn(0, true)\r\n            }\r\n            if(this._preshowcards!=2)\r\n            {\r\n                this.getCard(1).node.active = true\r\n                this.getCard(1).setContent(this._recordseatinfo.cards[1])\r\n                this.getCard(1).turn(0, true)\r\n            }\r\n            this.showCardType(this._recordseatinfo.cardtype)\r\n        }\r\n    }\r\n\r\n    // 显示座位上的卡牌\r\n    showSeatCard(isShow){\r\n        if(isShow){\r\n            this.resetCardSize()\r\n            this.resetCardPos()\r\n            this.getCard(0).node.active=true\r\n            this.getCard(1).node.active=true\r\n\r\n\r\n            this.getCard(0).setContent(this.seatInfo.cards[0])\r\n            this.getCard(1).setContent(this.seatInfo.cards[1])\r\n            this.getCard(0).setFace(true)\r\n            this.getCard(1).setFace(true)\r\n        }else{\r\n            this.getCard(0).setFace(false)\r\n            this.getCard(1).setFace(false)\r\n        }\r\n    }\r\n\r\n    resetCardPos(){\r\n        if (this.realIndex==0) {\r\n            this.m_pkCards[0].node.setPosition(new cc.Vec2(-29.736, -3.691));\r\n            this.m_pkCards[1].node.setPosition(new cc.Vec2(39.721, -3.05));\r\n        }\r\n        else\r\n        {\r\n            this.m_pkCards[0].node.setPosition(new cc.Vec2(-13.496, -13.161));\r\n            this.m_pkCards[1].node.setPosition(new cc.Vec2(11.586, -14.879));\r\n        }\r\n    }\r\n    resetCardSize(){\r\n        if (this.realIndex==0) {\r\n            this.m_pkCards[0].imgBack.setContentSize(new cc.Size(105, 159));\r\n            this.m_pkCards[1].imgBack.setContentSize(new cc.Size(105, 159));\r\n            this.m_pkCards[0].imgBack.setContentSize(new cc.Size(105, 159));\r\n            this.m_pkCards[1].imgBack.setContentSize(new cc.Size(105, 159));\r\n            this.m_pkCards[0].img_num.node.setContentSize(new cc.Size(105, 159));\r\n            this.m_pkCards[1].img_num.node.setContentSize(new cc.Size(105, 159));\r\n        }\r\n        else\r\n        {\r\n            this.m_pkCards[0].imgBack.setContentSize(new cc.Size(66, 100));\r\n            this.m_pkCards[1].imgBack.setContentSize(new cc.Size(66, 100));\r\n            this.m_pkCards[0].imgBack.setContentSize(new cc.Size(66, 100));\r\n            this.m_pkCards[1].imgBack.setContentSize(new cc.Size(66, 100));\r\n            this.m_pkCards[0].img_num.node.setContentSize(new cc.Size(66, 100));\r\n            this.m_pkCards[1].img_num.node.setContentSize(new cc.Size(66, 100));\r\n        }\r\n    }\r\n    resetCardStye(){\r\n        this.m_pkCards[0].setCardBg(cc.sys.localStorage.getItem(\"setting_cardbg_style\") || \"1\")\r\n        this.m_pkCards[1].setCardBg(cc.sys.localStorage.getItem(\"setting_cardbg_style\") || \"1\")\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //所有人都allin了，就提前show牌\r\n    onAllAllInShow(cards:number[])\r\n    {\r\n        if(this._user_id==GUserMgr.self_user_id)\r\n        {\r\n            this.showSeatCard(true)\r\n            return\r\n        }\r\n        this.refreshTip(false,true)\r\n        this.seatInfo.cards=cards\r\n        this.resetCardPos()\r\n        this.getCard(0).node.active = true\r\n        this.getCard(0).setContent(cards[0])\r\n        this.getCard(0).setFace(false)\r\n        this.getCard(0).turn(0, true)\r\n\r\n        this.getCard(1).node.active = true\r\n        this.getCard(1).setContent(cards[1])\r\n        this.getCard(1).setFace(false)\r\n        this.getCard(1).turn(0, true)\r\n    }\r\n    onIdle()\r\n    {\r\n        this.clearTable()\r\n        this.labelBet.node.parent.active = false\r\n    }\r\n    onStandUp()\r\n    {\r\n        this.node.active = false\r\n        this.clearTable()\r\n        this._user_id = -1\r\n    }\r\n\r\n\r\n    private lastChipNum = 0\r\n    private lastBetNum = 0\r\n\r\n    setLabelChipNum(chipNum){\r\n        if(chipNum==''){\r\n            chipNum = 0\r\n        }\r\n        chipNum = Number(chipNum)\r\n        // console.log(chipNum,this.getFormatNum(chipNum))\r\n        this.labelChip.string = this.getFormatNum(chipNum)\r\n        this.lastChipNum = chipNum\r\n    }\r\n\r\n    setLabelBetNum(betNum){\r\n        if(betNum==''){\r\n            betNum = 0\r\n        }\r\n        betNum = Number(betNum)\r\n        this.lastBetNum = betNum\r\n\r\n        this.labelBet.string = this.getFormatNum(betNum)\r\n    }\r\n\r\n\r\n    getFormatNum(num):string{\r\n        // bb保留两位小数\r\n        let bigBland = this.node.parent.parent.getComponent('Page_Table')['curBig_blind']\r\n        // console.log('getFormatNum',bigBland)\r\n        if(!GSettingDM.bbOn || bigBland == -1){\r\n            return num.toString()\r\n        }\r\n        \r\n\r\n        let bb = Number((num/bigBland).toFixed(2))+' BB'\r\n        return bb\r\n    }\r\n\r\n\r\n    refreshNumber(){\r\n        this.setLabelChipNum(this.lastChipNum)\r\n        this.setLabelBetNum(this.lastBetNum)\r\n    }\r\n\r\n\r\n  \r\n\r\n}\r\n","import {GAudioTool} from \"../Logic/AudioTool\"\r\nimport {GHelper} from \"../Logic/Helper\"\r\n\r\nexport let GSettingDM:SettingDataModel = null\r\nclass SettingDataModel\r\n{\r\n    musicOn = true//音乐开\r\n    soundOn = true//音效开\r\n    voiceOn = true//声音开\r\n    shakeOn = true//震动开\r\n    bbOn = false//bb数 开\r\n    music_value = 1\r\n    sound_value = 1\r\n    voice_value = 1\r\n    select_bg=\"\"\r\n    card_style=\"\"\r\n    cardbg_style=\"\"\r\n    quick_raise_pre=[2,2.5,2.8,3]\r\n    quick_raise_aft=[33,50,60,100]\r\n    init()\r\n    {\r\n        this.musicOn = cc.sys.localStorage.getItem(\"setting_musicOn\")\r\n        this.soundOn = cc.sys.localStorage.getItem(\"setting_soundOn\")\r\n        this.voiceOn = cc.sys.localStorage.getItem(\"setting_voiceOn\")\r\n        this.shakeOn = cc.sys.localStorage.getItem(\"setting_shakeOn\")\r\n        this.bbOn = cc.sys.localStorage.getItem(\"setting_bbOn\")\r\n\r\n        this.music_value = cc.sys.localStorage.getItem(\"setting_music_value\")||0\r\n        this.sound_value = cc.sys.localStorage.getItem(\"setting_sound_value\")||0\r\n        this.voice_value = cc.sys.localStorage.getItem(\"setting_voice_value\")||0\r\n        this.select_bg = cc.sys.localStorage.getItem(\"setting_select_bg\")||this.select_bg\r\n        this.card_style = cc.sys.localStorage.getItem(\"setting_card_style\")||this.card_style\r\n        this.cardbg_style = cc.sys.localStorage.getItem(\"setting_cardbg_style\")||this.cardbg_style\r\n        if(cc.sys.localStorage.getItem(\"setting_quick_raise_pre\")){\r\n            this.quick_raise_pre = JSON.parse(cc.sys.localStorage.getItem(\"setting_quick_raise_pre\"))\r\n        }\r\n        if(cc.sys.localStorage.getItem(\"setting_quick_raise_aft\")){\r\n            this.quick_raise_aft = JSON.parse(cc.sys.localStorage.getItem(\"setting_quick_raise_aft\"))\r\n        }\r\n\r\n        this.quick_raise_pre.sort((a,b)=>a-b)\r\n        this.quick_raise_aft.sort((a,b)=>a-b)\r\n        \r\n        try{\r\n            this.music_value = parseFloat(this.music_value+\"\")\r\n        }\r\n        catch(e)\r\n        {\r\n            this.music_value = 1\r\n        }\r\n        try{\r\n            this.sound_value = parseFloat(this.sound_value+\"\")\r\n        }\r\n        catch(e)\r\n        {\r\n            this.sound_value = 1\r\n        }\r\n        try{\r\n            this.voice_value = parseFloat(this.voice_value+\"\")\r\n        }\r\n        catch(e)\r\n        {\r\n            this.voice_value = 1\r\n        }\r\n        GAudioTool.setMusicVolume(this.music_value)\r\n        //GAudioTool.setSoundVolume(this.sound_value)\r\n        GAudioTool.setVoiceVolume(this.voice_value)\r\n        if(<any>this.musicOn==\"false\")\r\n        {\r\n            this.musicOn = false\r\n        }\r\n        else\r\n        {\r\n            this.musicOn = true\r\n        }\r\n        if(<any>this.bbOn==\"false\")\r\n        {\r\n            this.bbOn = false\r\n        }else if(<any>this.bbOn==\"true\")\r\n        {\r\n            this.bbOn = true;\r\n        }\r\n        else\r\n        {\r\n            this.bbOn = false\r\n        }\r\n        if(<any>this.soundOn == \"false\")\r\n        {\r\n            this.soundOn = false\r\n        }\r\n        else\r\n        {\r\n            this.soundOn = true\r\n        }\r\n        if(<any>this.voiceOn == \"false\")\r\n        {\r\n            this.voiceOn = false\r\n        }\r\n        else\r\n        {\r\n            this.voiceOn = true\r\n        }\r\n        if(<any>this.shakeOn == \"false\")\r\n        {\r\n            this.shakeOn = false\r\n        }\r\n        else\r\n        {\r\n            this.shakeOn = true\r\n        }\r\n    }\r\n    updateQuickRaisePre()\r\n    {\r\n        this.quick_raise_pre.sort((a,b)=>a-b)\r\n        GHelper.saveData({\"setting_quick_raise_pre\":JSON.stringify(this.quick_raise_pre)})\r\n    }\r\n    updateQuickRaiseAft()\r\n    {\r\n        this.quick_raise_aft.sort((a,b)=>a-b)\r\n        GHelper.saveData({\"setting_quick_raise_aft\":JSON.stringify(this.quick_raise_aft)})\r\n    }\r\n    setMusicValue(m_value)\r\n    {\r\n        this.music_value = m_value\r\n        GAudioTool.setMusicVolume(this.music_value)\r\n        GHelper.saveData({\"setting_music_value\":this.music_value})\r\n    }\r\n    setSoundValue(s_value)\r\n    {\r\n        this.sound_value = s_value\r\n        GAudioTool.setSoundVolume(this.sound_value)\r\n        GHelper.saveData({\"setting_sound_value\":this.sound_value})\r\n    }\r\n    setVoiceValue(s_value)\r\n    {\r\n        this.voice_value = s_value\r\n        GAudioTool.setVoiceVolume(this.voice_value)\r\n        GHelper.saveData({\"setting_sound_value\":this.voice_value})\r\n    }\r\n    setMusicOn(musicOn)\r\n    {\r\n        this.musicOn = musicOn\r\n        if(!this.musicOn)\r\n        {\r\n            GAudioTool.stopMusic()\r\n        }\r\n        GHelper.saveData({\"setting_musicOn\":this.musicOn})\r\n    }\r\n    setSoundOn(soundOn)\r\n    {\r\n        this.soundOn = soundOn\r\n        GHelper.saveData({\"setting_soundOn\":this.soundOn})\r\n    }\r\n    setVoiceOn(voiceOn)\r\n    {\r\n        this.voiceOn = voiceOn\r\n        GHelper.saveData({\"setting_voiceOn\":this.voiceOn})\r\n    }\r\n    setShakeOn(shakeOn)\r\n    {\r\n        this.shakeOn = shakeOn\r\n        GHelper.saveData({\"setting_shakeOn\":this.shakeOn})\r\n    }\r\n\r\n    setBbOn(isOn){\r\n        this.bbOn = isOn\r\n        GHelper.saveData({\"setting_bbOn\":this.bbOn})\r\n    }\r\n\r\n}\r\nGSettingDM = new SettingDataModel()\r\n","import { GSimpleLogDataModel } from './../DataModel/SimpleLogDataModel';\r\nexport let GShare:Share = null\r\nclass Share\r\n{\r\n    _agent=null\r\n    _share_plugin=null\r\n    _callback=null\r\n    init()\r\n    {\r\n        if(typeof anysdk == \"undefined\")\r\n        {\r\n            GSimpleLogDataModel.log(\"share:no anysdk\")\r\n            return\r\n        }\r\n        this._agent = anysdk.agentManager\r\n        if(!this._agent)\r\n        {\r\n            GSimpleLogDataModel.log(\"share:no _agent\")\r\n            return\r\n        }\r\n        this._share_plugin = this._agent.getSharePlugin()\r\n        if(!this._share_plugin)\r\n        {\r\n            GSimpleLogDataModel.log(\"share:no _share_plugin\")\r\n            return\r\n        }\r\n        this._share_plugin.setListener(this.onShareCallBack,this)\r\n    }\r\n    onShareCallBack(code, msg)\r\n    {\r\n        if(this._callback)\r\n        {\r\n            this._callback(code,msg)\r\n        }\r\n        GSimpleLogDataModel.log(\"share:share result, resultcode:\"+code+\", msg: \"+msg)\r\n        switch ( code ) \r\n        {\r\n            case anysdk.ShareResultCode.kShareSuccess:\r\n                break\r\n            case anysdk.ShareResultCode.kShareFail:\r\n                //do something\r\n                break\r\n            case anysdk.ShareResultCode.kShareCancel:\r\n                //do something\r\n                break\r\n            case anysdk.ShareResultCode.kShareNetworkError:\r\n                //do something\r\n                break\r\n        }\r\n    }\r\n    share(info,callback?)\r\n    {\r\n        this._callback = callback\r\n        if(!this._share_plugin)\r\n        {\r\n            return\r\n        }\r\n        this._share_plugin.share(info)\r\n    }\r\n}\r\n\r\nGShare = new Share()","\r\n\r\nexport class ShopModel{\r\n    \r\n    public next_staff: number = 0;\r\n    public daily_staff: number = 0;\r\n    public count_staff: number = 0;\r\n    public daily_diamond_free: number = 0;\r\n    public daily_diamond_video: number = 0;\r\n    public count_diamond: number = 0;\r\n\r\n    constructor() {\r\n        super(\"shop\");\r\n    }\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    reset() {\r\n        this.daily_staff = 1;\r\n        this.daily_diamond_free = 1;\r\n        this.daily_diamond_video = 10;\r\n        this.saveData();\r\n    }\r\n}","import { GHelper } from './Helper';\r\nimport { GGoogleTool } from './GoogleTool';\r\nimport { GUserMgr } from '../../Logic/UserManager';\r\nimport { GOrderSer } from '../../Service/OrderService';\r\nexport let GShopTool:ShopTool=null\r\nexport enum EOrderFrom\r\n{\r\n    Ios,//ios应用商店\r\n    Google,\r\n    Wechat,//微信\r\n    Alipay,//支付宝\r\n    Android_Sft,//盛付通\r\n}\r\nexport class ProductInfo\r\n{\r\n    user_id:number=-1\r\n    from:EOrderFrom=-1\r\n    order_id:string=\"\"\r\n    product_id:string=\"\"\r\n    transactionIdentifier:string=\"\"\r\n    receipt:string=\"\"\r\n}\r\nlet STInitData=\r\n{\r\n    signType:\"MD5\",\r\n    charset:\"UTF-8\",\r\n    version:\"V4.1.1.1.1\",\r\n    // 生产\r\n    signKey:\"eryisclswxnn2018\",\r\n    msgSender:\"11505824\",\r\n    url:\"https://cardpay.shengpay.com/mobile-acquire-channel/cashier.htm\",\r\n    // 测试\r\n    // signKey:\"support4test\",\r\n    // msgSender:\"540506\",\r\n    // url:\"https://cardpay.shengpay.com/mobile-acquire-channel/cashier.htm\",\r\n    pageUrl:\"http://39.108.222.193\",\r\n    notifyUrl:\"http://39.108.222.193:8080/stpay\",\r\n    name:\"B2CPayment\",\r\n    language:\"zh-CN\",\r\n    currency:\"CNY\",\r\n}\r\nclass STPayDataModel\r\n{\r\n    OrderNo = \"\"\r\n    OrderAmount = \"0.01\"\r\n    PayType = \"PT312\"\r\n    PayChannel = \"hw\"\r\n    InstCode = \"\"\r\n    ProductId = \"a_pple\"\r\n    ProductName = \"apple\"\r\n    ProductNum = \"10\"\r\n    UnitPrice = \"5\"\r\n    ProductDesc = \"\"\r\n    ProductUrl = \"\"\r\n    SellerId = \"\"\r\n    BuyerName = \"\"\r\n    BuyerId = \"\"\r\n    PayerId = \"\"\r\n    BuyerContact = \"\"\r\n    BuyerIp = \"\"\r\n    PayeeId = \"\"\r\n    DepositId = \"\"\r\n    DepositIdType = \"\"\r\n    SharingInfo = \"\"\r\n    Ext1 = \"\"\r\n    Ext2 = \"{'note':'','attach':'','requestFrom':'ANDROID_APP','package_name':'com.eryi.jzdqp','wap_name':'缘起麻将','app_name':'缘起麻将','bundle_id':'com.eryi.jzdqp','wap_url':'https://m.jd.com'}\"\r\n}\r\n\r\nclass ShopTool\r\n{\r\n    protected _unHandlePI:ProductInfo=null\r\n    protected _pay_cb=null\r\n\r\n    protected _st_plugin            = \"com/eryi/casino/stpay/STPayPlugin\"\r\n\r\n    protected _one_string_param  = \"(Ljava/lang/String;)V\"\r\n    protected _two_string_params = \"(Ljava/lang/String;Ljava/lang/String;)V\"\r\n\r\n    get productInfo()\r\n    {\r\n        return this._unHandlePI\r\n    }\r\n    set productInfo(value)\r\n    {\r\n        this._unHandlePI = value\r\n    }\r\n    constructor()\r\n    {\r\n        if(cc.sys.os == cc.sys.OS_ANDROID) \r\n        {\r\n            //let ret = jsb.reflection.callStaticMethod(this._st_plugin,\"init\",\"(Ljava/lang/String;)Z\",JSON.stringify(STInitData))\r\n        }\r\n        else if(cc.sys.os == cc.sys.OS_IOS) \r\n        {\r\n        }\r\n    }\r\n    pay(order_id:string,money:number,from:EOrderFrom,product_id:string,cb?)\r\n    {\r\n        if(this._unHandlePI)\r\n        {\r\n            return false\r\n        }\r\n        if(from==EOrderFrom.Ios)\r\n        {\r\n            this._pay_cb = cb\r\n            this._unHandlePI=new ProductInfo()\r\n            this._unHandlePI.user_id = GUserMgr.self_user_id\r\n            this._unHandlePI.order_id = order_id\r\n            this._unHandlePI.product_id = product_id\r\n            this._unHandlePI.from = from\r\n            GHelper.showRunningTip()\r\n            let params = \r\n            {\r\n                id:product_id//服务器标识的商品id\r\n            }\r\n            let listener = this._convertCallBackName(this._on_pay_callback.bind(this), \"ios_pay\")\r\n            jsb.reflection.callStaticMethod(\"AppShop\", \"setJsCallback:\", listener)\r\n            let pd = GOrderSer.getProduct(product_id)\r\n            jsb.reflection.callStaticMethod(\"AppShop\", \"openAppShop:params:\", pd.key, JSON.stringify(params))\r\n        }\r\n        else if(from==EOrderFrom.Google)\r\n        {\r\n            let pd = GOrderSer.getProduct(product_id)\r\n            GGoogleTool.buy(pd.key,order_id,cb)\r\n        }\r\n        else if(from==EOrderFrom.Android_Sft)\r\n        {\r\n            let dm = new STPayDataModel()\r\n            dm.OrderAmount = money+\"\"\r\n            dm.OrderNo = order_id\r\n            dm.ProductId = product_id\r\n            dm.ProductName = \"钻石\"\r\n            dm.ProductDesc = \"钻石好好多！\"\r\n            let str = JSON.stringify(dm)\r\n            let ret = false\r\n            ret = jsb.reflection.callStaticMethod(this._st_plugin,\"pay\",\"(Ljava/lang/String;)Z\",str)\r\n        }\r\n        return true\r\n    }\r\n\r\n    protected _on_pay_callback(params)\r\n    {\r\n        GHelper.clearRunningTip()\r\n        let result = params\r\n        let state = params.errorCode\r\n        this.clearPay()\r\n        this._unHandlePI.transactionIdentifier = params.transactionIdentifier\r\n        this._unHandlePI.receipt = params.receipt\r\n        if(this._pay_cb)\r\n        {\r\n            this._pay_cb(state == 998,this._unHandlePI)\r\n        }\r\n        this._unHandlePI = null\r\n    }\r\n\r\n    clearPay()\r\n    {\r\n        jsb.reflection.callStaticMethod(\"AppShop\", \"clearPayQueu\",\"1\");\r\n    } \r\n\r\n    protected _convertCallBackName(fun, name) \r\n    {\r\n        var funName = \"\"\r\n        if (name)\r\n        {\r\n            console[name] = function(params)\r\n            {\r\n                fun(params)\r\n            }\r\n            funName = \"console.\" + name\r\n        } \r\n        else \r\n        {\r\n            (<any>console).nativeToJsCallback = function(params)\r\n            {\r\n                fun(params)\r\n            }\r\n            funName = \"console.nativeToJsCallback\"\r\n        }\r\n        return funName\r\n    }\r\n}\r\nGShopTool = new ShopTool()","import { Page } from \"../../../Framework/View/Page/Page\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SignLayer extends Page {\r\n\r\n    @property(cc.Label)\r\n    labelSignCount: cc.Label = null;\r\n    \r\n    @property(cc.Label)\r\n    labelTips: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelScore: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    layoutSign: cc.Node = null;\r\n\r\n    @property(cc.ScrollView)\r\n    scrollviewTask: cc.ScrollView = null;\r\n\r\n    @property(cc.Node)\r\n    layoutTask: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    itemTask: cc.Node = null;\r\n\r\n    onShow() {\r\n        this.scrollviewTask.scrollToTop();\r\n        \r\n        // signCtrl.getSignInfo(() => {\r\n        //     this.initTable();\r\n        // })\r\n        // taskCtrl.getTaskInfo(() => {\r\n        //     eventMgr.dispatchEvent(consts.EVENT.REFRESH_UI);\r\n        // })\r\n    }\r\n\r\n    reloadUI() {\r\n        this.layoutTask.removeAllChildren();\r\n        // let configs = configMgr.getConfig(TaskConfig);\r\n        // for (let config of configs) {\r\n        //     let node = cc.instantiate(this.itemTask);\r\n        //     this.layoutTask.addChild(node);\r\n        //     node.emit(\"init\", config.id);\r\n        // }\r\n\r\n        this.initTable();\r\n    }\r\n\r\n    initTable() {\r\n        // let next = signCtrl.sign_count % 7 + 1;\r\n        // let config = configMgr.getConfig(SignConfig, next);\r\n        // this.labelTips.string = (signCtrl.daily_sign ? \"今日\" : \"明日\") + \"签到可获得\" + config.desc;\r\n        // this.labelSignCount.string = String(signCtrl.sign_count);\r\n        // this.labelScore.string = String(propCtrl.score);\r\n\r\n        // let sign_count = signCtrl.daily_sign ? signCtrl.sign_count % 7 : (signCtrl.sign_count - 1) % 7 + 1;\r\n        // for (let i = 0; i < this.layoutSign.childrenCount; i++) {\r\n        //     let node = this.layoutSign.children[i];\r\n        //     node.getChildByName(\"toggle\").getComponent(cc.Toggle).isChecked = i < sign_count;\r\n        //     node.getChildByName(\"label_day\").color = i < sign_count ? cc.color(236,150,48) : cc.Color.WHITE;\r\n        //     node.getChildByName(\"label_reward\").color = i < sign_count ? cc.color(236,150,48) : cc.Color.WHITE;\r\n        // }\r\n    }\r\n\r\n    onClickSign() {\r\n        // signCtrl.requestSign(() => {\r\n        //     this.initTable();\r\n        //     propCtrl.getUserProps();\r\n        // });\r\n    }\r\n}\r\n","\r\n\r\nexport class SignModel{\r\n    \r\n    public daily_sign: number = 0;\r\n    public sign_count: number = 0;\r\n\r\n    constructor() {\r\n        super(\"sign\");\r\n    }\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    reset() {\r\n        this.daily_sign = 1;\r\n        this.saveData();\r\n    }\r\n}","import { GHelper } from \"../../../Framework/Logic/Helper\";\r\nimport { GHallHttp } from \"../../../Net/HallHttp\";\r\nimport { GMatchSer } from \"../../../Service/MatchService\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SignupLayer extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    labelMatch: cc.Label = null;\r\n\r\n    @property(cc.ToggleContainer)\r\n    toggles: cc.ToggleContainer = null;\r\n\r\n    @property(cc.Node)\r\n    layout: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    item: cc.Node = null;\r\n\r\n    onReady() {\r\n\r\n    }\r\n\r\n    onShow() {\r\n        this.reloadUI();\r\n    }\r\n\r\n    onHide() {\r\n    }\r\n\r\n    reloadUI() {\r\n\r\n    }\r\n\r\n    async onClickSignup() {\r\n    }\r\n}\r\n","export let GSimpleLogDataModel =\r\n{\r\n    _log_list:new Array<string>(),\r\n    get log_list()\r\n    {\r\n        return this._log_list\r\n    },\r\n    log(info)\r\n    {\r\n        cc.log(info)\r\n        this._log_list.push(info)\r\n    }\r\n}","import { GHelper } from \"../Logic/Helper\";\r\n\r\nexport class SimpleWebServer\r\n{\r\n    protected _host=\"\"\r\n    protected _port=0\r\n    protected _ctr=\"\"\r\n    session_id:string=null\r\n    init(ctr:string,host:string,port:number)\r\n    {\r\n        this._host = host\r\n        this._port = port\r\n        this._ctr = ctr\r\n    }\r\n    protected _getUrl(action:string,ctr?:string)\r\n    {\r\n        ctr = ctr||this._ctr\r\n        let url = \"http://\"+this._host+\":\"+this._port+\"/\"+ctr+\"/\"+action\r\n        return url\r\n    }\r\n    protected async _request(action:string,msg?:any,ctr?:string)\r\n    {\r\n        msg=msg||{}\r\n        if(this.session_id&&action!=\"GetTime\")\r\n        {\r\n            msg.session_id=this.session_id\r\n        }\r\n        let url = this._getUrl(action,ctr)\r\n\r\n        let rs = await GHelper.httpPost(url,msg)\r\n        console.log(JSON.stringify(rs))\r\n        return rs\r\n    }\r\n    async request(action:string,msg?:any,ctr?:string)\r\n    {\r\n        return await this._request(action,msg,ctr)\r\n    }\r\n}","import { GGameDM } from './../DataModel/GameDataModel';\r\nimport {core} from \"../Core/Base\"\r\nimport {EProtoType,GProtoFactory} from \"./ProtoFilter/ProtoFactory\"\r\nimport {IProtoFilter} from \"./ProtoFilter/IProtoFilter\"\r\nimport {GHelper} from \"../Logic/Helper\"\r\nimport { GToSvrLog } from '../Logic/ToServerLog';\r\nimport { layerMgr } from '../../manager/LayerManager';\r\nimport { GPageMgr } from '../View/Page/PageManager';\r\n\r\nexport class SimpleWebSocket\r\n{\r\n    protected _wb_client:WebSocket\r\n    protected _host:string=\"\"\r\n    protected _port:number=0\r\n    protected _cacheMsg = new Array<any>()\r\n    protected _protoType:EProtoType=EProtoType.Json\r\n    protected _protoFilter:IProtoFilter\r\n    protected _need_close:boolean=false\r\n    protected _heart_beat:boolean=false\r\n    protected _is_open:boolean=false\r\n\r\n    protected outTime = 5000\r\n    get isOpen()\r\n    {\r\n        return this._is_open\r\n    }\r\n    protected _heart_beat_handler:number=0\r\n    protected _cmd_cb_objs={}\r\n    protected _rcv_heart_beat = true\r\n    protected _rec_handler = null\r\n    protected _send_heart_beat_time=0\r\n    protected _cmd_callbacks={}//\"cmd\":{fun:fun,is_only}//一个cmd同时只能有一个，is_only代表是否仅仅该回调，\r\n    protected _protocol=null\r\n\r\n    protected _heart_timeout = 5\r\n    protected lastChckTime = null\r\n\r\n    init(host:string,port:number)\r\n    {\r\n        this._host = host || this._host\r\n        this._port = port || this._port\r\n        if(!this._protoFilter)\r\n        {\r\n            this._protoFilter = GProtoFactory.createFilter(this._protoType)\r\n        }\r\n    }\r\n\r\n    connect ()\r\n    {\r\n        if(this._is_open)\r\n        {\r\n            return\r\n        }\r\n        this._need_close = false\r\n        this._is_open = false\r\n        //this._host=\"127.0.0.1\"\r\n        let url = \"ws://\" + this._host + \":\" + this._port\r\n\r\n        cc.log(\"Trying to connect to server : \" + url)\r\n        if(this._wb_client)\r\n        {\r\n            this._wb_client.onopen = null\r\n            this._wb_client.onmessage = null\r\n            this._wb_client.onerror = null\r\n            this._wb_client.onclose = null\r\n            this._wb_client.close()\r\n            this._wb_client=null\r\n        }\r\n        if(this._protocol)\r\n        {\r\n            this._wb_client = new WebSocket(url+\"/\",[this._protocol])\r\n        }\r\n        else\r\n        {\r\n            this._wb_client = new WebSocket(url+\"/\")\r\n        }\r\n        this._wb_client.onopen = this.onOpen.bind(this)\r\n        this._wb_client.onmessage = this.onMessage.bind(this)\r\n        this._wb_client.onerror = this.onError.bind(this)\r\n        this._wb_client.onclose = this.onClose.bind(this)\r\n        if(this._wb_client.readyState==3)\r\n        {\r\n            this.onClose()\r\n        }\r\n    }\r\n    onOpen (e?)\r\n    {\r\n        this._rcv_heart_beat = true\r\n        this._is_open = true\r\n\r\n        layerMgr.showNetLoading(false)\r\n        cc.log(\"success to connect to \" + this._host + \":\" + this._port)\r\n        this._onCacheMsg()\r\n        this._heart_beat_handler = setInterval(()=>\r\n        {\r\n            this.lastChckTime = Date.now()+1000\r\n            if(this._heart_beat)\r\n            {\r\n                this.send_heartbeat()\r\n            }\r\n        },2000)\r\n    }\r\n    _onCacheMsg()\r\n    {\r\n        core.foreach(this._cacheMsg,(k,data)=>\r\n        {\r\n            this.send(data)\r\n        })\r\n        this._cacheMsg=[]\r\n    }\r\n    onError (e?)\r\n    {\r\n        cc.log(\"simplewebsocket onerror!\")\r\n        cc.log(e)\r\n        this.onClose()\r\n    }\r\n    onClose (e?):boolean\r\n    {\r\n\r\n        this._wb_client.onopen = null\r\n        this._wb_client.onmessage = null\r\n        this._wb_client.onerror = null\r\n        this._wb_client.onclose = null\r\n\r\n        if(this._heart_beat_handler)\r\n        {\r\n            clearInterval(this._heart_beat_handler)\r\n            this._heart_beat_handler = null\r\n        }\r\n        \r\n        \r\n        if(this._rec_handler)\r\n        {\r\n            return true\r\n        }\r\n        this._is_open = false\r\n       \r\n        cc.log(\"connection is closed：host=\"+this._host+\" port=\"+this._port+\" this._need_close=\"+this._need_close)\r\n        \r\n        if(!this._need_close)\r\n        {\r\n            layerMgr.showNetLoading(true,'正在重连...')\r\n            this._rec_handler = setTimeout(()=>\r\n            {\r\n                this._rec_handler = null\r\n                if(!this._need_close)\r\n                {\r\n                    \r\n                    this.connect()\r\n                }\r\n            },1000)\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    registerCmdCallbackObj(key,cmd_cb_obj)\r\n    {\r\n        this._cmd_cb_objs[key] = cmd_cb_obj\r\n    }\r\n    registerCmdCallback(cmd,fun,is_only?)\r\n    {\r\n        this._cmd_callbacks[cmd] = {fun:fun,is_only:is_only}\r\n    }\r\n    getGamekeys()\r\n    {\r\n        let keys = []\r\n        for(let key in this._cmd_cb_objs)\r\n        {\r\n            keys.push(key)\r\n        }\r\n        return keys\r\n    }\r\n    onMessage (e)\r\n    {\r\n        //web平台自己调试无需发送到服务器\r\n        if(!cc.sys.isBrowser)\r\n        {\r\n            try\r\n            {\r\n                this._protoFilter.decode(e.data,this._onMessage.bind(this))\r\n            }\r\n            catch(err)\r\n            {\r\n                if(err&&err.stack)\r\n                {\r\n                    GToSvrLog.log({stack:err.stack,data:e.data})\r\n                }\r\n                else if(err)\r\n                {\r\n                    GToSvrLog.log({err,data:e.data})\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this._protoFilter.decode(e.data,this._onMessage.bind(this))\r\n        }\r\n    }\r\n    protected _onMessage(data)\r\n    {\r\n        if(!data)//异常消息\r\n        {\r\n            return\r\n        }\r\n\r\n        if (data && data.cmd)\r\n        {\r\n            if(data.servertime)\r\n            {\r\n                let dt = data.servertime - Date.now()\r\n                if(Math.abs(dt)<Math.abs(GGameDM.diffServerTime))\r\n                {\r\n                    GGameDM.diffServerTime = dt\r\n                }\r\n            }\r\n            data.cmd = data.cmd.toLowerCase()\r\n            let cmd:string = data.cmd\r\n            let _index = data.cmd.indexOf(\"_\")\r\n            let prefix = null\r\n            if(_index>0)\r\n            {\r\n                prefix = cmd.substring(0,_index)\r\n            }\r\n            if(prefix)\r\n            {\r\n                let obj = this._cmd_cb_objs[prefix]\r\n                if(obj)\r\n                {\r\n                    obj.onMessage(data)\r\n                    return\r\n                }\r\n            }\r\n            if(cmd.indexOf(\"heartbeat\")<0)\r\n            {\r\n                let strData = JSON.stringify(data)\r\n                cc.log(core.format(new Date(),\"mm:hh:ss  \")+\"receive:\"+strData)\r\n            }\r\n            else\r\n            {\r\n                let strData = JSON.stringify(data)\r\n                // cc.log(core.format(new Date(),\"mm:hh:ss  \")+\"receive:\"+strData)\r\n                cmd=\"heartbeat\"\r\n            }\r\n            if ( !data.errcode )\r\n            {\r\n                if(this[\"receive_\" + cmd])\r\n                {\r\n                    this[\"receive_\" + cmd](data)\r\n                }\r\n                else\r\n                {\r\n                    cc.log(cmd + \" has no handler!\")\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (this[\"receive_\" + cmd + \"_failed\"])\r\n                {\r\n                    this[\"receive_\" + cmd + \"_failed\"](data)\r\n                }\r\n                else if(data.errcode.id>0)\r\n                {\r\n                    if(cmd==\"texas_login\")\r\n                    {\r\n                        GHelper.showTip(data.errcode.des+\"请重新登陆...\")\r\n                        GHelper.clearData()\r\n                        GPageMgr.closeAll()\r\n                        GPageMgr.openPage(\"Page_CodeLogin\")\r\n                    }else\r\n                    {\r\n                        GHelper.showTip(data.errcode.des)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    send (data)\r\n    {\r\n        if (this._wb_client&&this._is_open)\r\n        {\r\n            //if(data.cmd!=\"heartbeat\")\r\n            {\r\n                let strData = JSON.stringify(data)\r\n                \r\n                if(data.cmd != 'heartbeat'){\r\n                    cc.log(core.format(new Date(),\"mm:hh:ss  \")+\"send:\"+strData)\r\n                }\r\n            }\r\n            let msg = this._protoFilter.encode(data)\r\n            this._wb_client.send(msg)\r\n        }\r\n        else\r\n        {\r\n            this._cacheMsg.push(data)\r\n        }\r\n    }\r\n    close()\r\n    {   \r\n        this._need_close = true\r\n        if(!this._wb_client)\r\n        {\r\n            return\r\n        }\r\n        this._wb_client.close()\r\n    }\r\n    \r\n    // 手动关闭\r\n    closeInHide()\r\n    {   \r\n        if(!this._wb_client)\r\n        {\r\n            return\r\n        }\r\n        this._wb_client.close&&this._wb_client.close()\r\n    }\r\n\r\n\r\n    protected _close_and_rc()\r\n    {\r\n        // this.close()\r\n\r\n        // 重置状态\r\n\r\n        this._wb_client.close()\r\n    }\r\n    // update(dt)\r\n    // {\r\n    //     if(dt>5000)\r\n    //     {\r\n    //         this._close_and_rc()\r\n    //     }\r\n    // }\r\n    openHeartBeat()\r\n    {\r\n        this._heart_beat = true\r\n    }\r\n    /*\r\n    //心跳包请求\r\n    message HeartReq {\r\n        optional Version version = 1;\t\r\n    }\r\n    */\r\n    send_heartbeat()\r\n    {\r\n        if( this.lastChckTime==null){\r\n            this.lastChckTime = Date.now()\r\n        }\r\n\r\n        let xtTime = (Date.now() - this.lastChckTime)/1000\r\n        if( xtTime> this._heart_timeout)\r\n        {\r\n            console.log('心跳断线',xtTime)\r\n            if(this._heart_beat_handler)\r\n            {\r\n                clearInterval(this._heart_beat_handler)\r\n                this._heart_beat_handler = null\r\n            }\r\n\r\n           \r\n            this._close_and_rc()\r\n            return\r\n        }\r\n         // this._rcv_heart_beat = false\r\n\r\n         this.send({cmd:\"heartbeat\"})\r\n         this._send_heart_beat_time = GHelper.getLocalTime()\r\n    }\r\n    /*\r\n    //心跳包响应\r\n    message HeartRes {\r\n        optional int32 errcode = 1; //错误原因 0表示成功\r\n        optional string errcodedes = 2; //错误描述\r\n        optional int32 servertime = 3;  //服务器时间\r\n    }\r\n    */\r\n    receive_heartbeat(jsonData)\r\n    {\r\n\r\n        this.lastChckTime = Date.now()\r\n    }\r\n}","export default class SingleBase \r\n{ \r\n    private static _Instance = null;\r\n\r\n    static Instance(data?) \r\n    { \r\n        if(!this._Instance)\r\n            this._Instance = new this();\r\n            this._Instance.initOnCreate&& this._Instance.initOnCreate(data)\r\n         return this._Instance; \r\n    } \r\n}","export class SkillWheel extends cc.Component\r\n{\r\n\r\n    _fun_callback:Function\r\n    // use this for initialization\r\n    onLoad() \r\n    {\r\n\r\n    }\r\n\r\n    Btn_Skill_OnClick(event)\r\n    {\r\n        if(this._fun_callback)\r\n        {\r\n            this._fun_callback()\r\n        }\r\n    }\r\n\r\n    registerCallBack(callback)\r\n    {\r\n        this._fun_callback = callback\r\n    }\r\n}\r\n","import {GHelper} from \"../Logic/Helper\"\r\n\r\nconst {ccclass, property} = cc._decorator\r\n\r\n@ccclass\r\nexport class SpriteNumLabel extends cc.Component\r\n{\r\n\r\n    @property({type:cc.SpriteAtlas})\r\n    spriteAtlas:cc.SpriteAtlas=null\r\n    _string:string=\"0\"\r\n    _width:number=0\r\n    get width()\r\n    {\r\n        return this._width\r\n    }\r\n    _height:number=0\r\n    get height()\r\n    {\r\n        return this._height\r\n    }\r\n    get string() \r\n    {\r\n        return this._string\r\n    }\r\n    set string(value) \r\n    {\r\n        if(this._string===value)\r\n        {\r\n            return\r\n        }\r\n        this._string = value\r\n        this._updateShow()\r\n    }\r\n    _numType:number=1\r\n    get numType() \r\n    {\r\n        return this._numType\r\n    }\r\n    set numType(value) \r\n    {\r\n        if(this._numType===value)\r\n        {\r\n            return\r\n        }\r\n        this._numType = value\r\n        this._updateShow()\r\n    }\r\n    _forceNum:number=-1\r\n    get forceNum()\r\n    {\r\n        return this._forceNum\r\n    }\r\n    set forceNum(value)\r\n    {\r\n        this._forceNum = value\r\n    }\r\n    static create(string:string=\"0\",numType:number=1,forceNum:number=-1)\r\n    {\r\n        let snl = <SpriteNumLabel>GHelper.createNode(SpriteNumLabel)\r\n        snl._numType = numType\r\n        snl._forceNum = forceNum\r\n        snl._string = string\r\n        return snl\r\n    }\r\n    // use this for initialization\r\n    onLoad() \r\n    {\r\n        this._updateShow()\r\n    }\r\n    _updateShow()\r\n    {\r\n        let self = this\r\n        let numStr = this._string+\"\"\r\n        let length = numStr.length\r\n        if(this._forceNum>0 && length < this._forceNum)\r\n        {\r\n            for(let i = 0;i<this._forceNum - length;++i)\r\n            {\r\n                numStr = \"0\" + numStr\r\n            }\r\n            length = numStr.length\r\n        }\r\n        this._init(numStr)\r\n    }\r\n    _init(numStr)\r\n    {\r\n        this.node.removeAllChildren()\r\n        let offsetX = 0\r\n        if(this._numType==1)\r\n        {\r\n            offsetX = -2\r\n        }\r\n        let width = 0\r\n        let height = 0\r\n        let length= numStr.length\r\n        for(let i = 0; i<length;++i)\r\n        {\r\n            let s = numStr[i]\r\n            let sf = this.spriteAtlas.getSpriteFrame(this._numType + \"_\" + s)\r\n            let sp = <cc.Sprite>GHelper.createNode(cc.Sprite)\r\n            sp.spriteFrame = sf\r\n            sp.node.parent = this.node\r\n            sp.node.setPosition(width, 0)\r\n            let rect = sf.getRect()\r\n            width += rect.width + 2 * offsetX\r\n            let h = rect.height\r\n            if(height < h)\r\n            {\r\n                height = h\r\n            }\r\n        }\r\n        this._width = width\r\n        this._height = height\r\n    }\r\n}\r\n","import {utils} from \"../utils/Utils\";\r\nimport { BaseAd } from \"./BaseAd\";\r\n\r\nclass TTAd extends BaseAd {\r\n    private bannerAd: wx.BannerAd = null;\r\n\r\n    constructor() {\r\n        super(\"byte\");\r\n    }\r\n\r\n    private getUserInfo(success?: Function, fail?: Function) {\r\n        tt.getSetting({\r\n            success: () => {\r\n                tt.getUserInfo({\r\n                    success: (res) => {\r\n                        success && success(res.userInfo);\r\n                    },\r\n                    fail: () => {\r\n                        fail && fail();\r\n                    }\r\n                })\r\n            },\r\n            fail: () => {\r\n                tt.authorize({\r\n                    scope: \"userInfo\",\r\n                    success: (data) => {\r\n                        tt.getUserInfo({\r\n                            success: (res) => {\r\n                                success && success(res.userInfo);\r\n                            },\r\n                            fail: () => {\r\n                                fail && fail();\r\n                            }\r\n                        })\r\n                    },\r\n                    fail: () => {\r\n                        fail && fail();\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    login(success?: Function, fail?: Function) {\r\n        tt.login({\r\n            force: true,\r\n            success: (res) => {\r\n                let code = res.code;\r\n                tt.getUserInfo({\r\n                    success: (res) => {\r\n                        if (res.userInfo) {\r\n                            success && success({\r\n                                nickname: res.userInfo.nickName,\r\n                                avatar: res.userInfo.avatarUrl,\r\n                                gender: res.userInfo.gender,\r\n                                platform: this.platform,\r\n                                code: code\r\n                            })\r\n                        }\r\n                        success && success({\r\n\r\n                        })\r\n                    },\r\n                    fail: (err) => {\r\n                        fail && fail();\r\n                    }\r\n                })\r\n            },\r\n            fail: () => {\r\n                fail && fail();\r\n                console.log(`login调用失败`);\r\n            }\r\n        })\r\n    }\r\n\r\n    share() {\r\n\r\n    }\r\n\r\n    createBannerAd() {\r\n        if (!this.banner_id) {\r\n            return;\r\n        }\r\n\r\n        if (!this.bannerAd) {\r\n            let sysInfo = tt.getSystemInfoSync();\r\n            let width = 150;\r\n            this.bannerAd = tt.createBannerAd({\r\n                adUnitId: this.banner_id,\r\n                style: {\r\n                    width: width,\r\n                    top: sysInfo.screenHeight - width * 0.4,\r\n                    left: sysInfo.screenWidth / 2 - width / 2\r\n                }\r\n            });\r\n\r\n            if (!this.bannerAd) {\r\n                return;\r\n            }\r\n\r\n            this.bannerAd.onResize((size) => {\r\n                this.bannerAd.style.top = sysInfo.screenHeight - size.height;\r\n                this.bannerAd.style.left = sysInfo.screenWidth / 2 - size.width / 2;\r\n            })\r\n\r\n            this.bannerAd.show();\r\n            this.bannerAd.onLoad(() => {\r\n                console.log(\"Banner广告加载成功\");\r\n            });\r\n            this.bannerAd.onError(() => {\r\n                console.log(\"Banner广告加载失败\");\r\n            });\r\n        }\r\n    }\r\n\r\n    destroyBannerAd() {\r\n        if (this.bannerAd) {\r\n            this.bannerAd.hide();\r\n            this.bannerAd.destroy();\r\n            this.bannerAd = null;\r\n        }\r\n    }\r\n\r\n    createVideoAd(success?: Function, fail?: Function) {\r\n        if (!this.video_id) {\r\n            success && success();\r\n            return;\r\n        }\r\n\r\n        let videoAd = tt.createRewardedVideoAd({\r\n            adUnitId: this.video_id\r\n        });\r\n\r\n        if (!videoAd) {\r\n            success && success();\r\n            return;\r\n        }\r\n\r\n        videoAd.show()\r\n        .then()\r\n        .catch(() => {\r\n            //重试\r\n            videoAd.load()\r\n            .then(() => {\r\n                videoAd.show();\r\n            })\r\n            .catch((res) => {\r\n                console.error(`激励视频广告播放失败！` + JSON.stringify(res));\r\n            });\r\n        });\r\n\r\n        let on_error = (res) => {\r\n            console.error(`激励视频广告播放失败！` + JSON.stringify(res));\r\n            videoAd && videoAd.offError(on_error);\r\n        }\r\n        let on_close = (res) => {\r\n            if (res && res.isEnded) {\r\n                success && success();\r\n            } else {\r\n                fail && fail();\r\n            }\r\n            \r\n            videoAd && videoAd.offClose(on_close);\r\n        }\r\n        \r\n        videoAd.onError(on_error);\r\n        videoAd.onClose(on_close);\r\n    }\r\n\r\n    createInterstitialAd(callback?: Function) {\r\n        if (!this.interstitial_id) {\r\n            callback && callback();\r\n            return;\r\n        }\r\n        \r\n        let interstitialAd = tt.createInterstitialAd({\r\n            adUnitId: this.interstitial_id\r\n        });\r\n\r\n        if (!interstitialAd) {\r\n            callback && callback();\r\n            return;\r\n        }\r\n\r\n        interstitialAd.show();\r\n        interstitialAd.onLoad(() => {\r\n            console.log('插屏广告加载成功');\r\n        });\r\n        interstitialAd.onError(() => {\r\n            console.log('插屏广告加载失败');\r\n        });\r\n        interstitialAd.onClose(() => {\r\n            console.log('插屏广告关闭');\r\n            callback && callback();\r\n        })\r\n    }\r\n    \r\n    createNativeAd(success?: Function, fail?: Function) {\r\n        if (!this.native_id) {\r\n            success && success();\r\n            return;\r\n        }\r\n    }\r\n    \r\n    reportAdShow(id: string) {\r\n\r\n    }\r\n    \r\n    reportAdClick(id: string) {\r\n\r\n    }\r\n}\r\n\r\nexport const ttAd: TTAd = new TTAd();","import { TaskInfo } from \"../data/data\";\r\n\r\n\r\nexport class TaskModel{\r\n    public status_daily: {[key: number]: number} = {};\r\n    public status_main: {[key: number]: number} = {};\r\n    public task_daily: TaskInfo[] = [];\r\n    public task_main: TaskInfo[] = [];\r\n\r\n    constructor() {\r\n        super(\"task\");\r\n    }\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    reset() {\r\n        this.status_daily = {};\r\n        this.saveData();\r\n    }\r\n}","\r\n\r\nexport class TeachModel{\r\n    public teach_start: number = 0;\r\n    public teach_main: number = 0;\r\n    public teach_task: number = 0;\r\n\r\n    constructor() {\r\n        super(\"teach\");\r\n    }\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    reset() {\r\n    }\r\n}","// 专门用来计算奖励\r\n\r\nimport { core } from \"../../Framework/Core/Base\"\r\nimport { GItemCfg } from \"../../Service/ItemService\"\r\nimport { MatchInsModel, MatchItemInfo, MultiDynamicReward } from \"../../Service/MatchService\"\r\n\r\nexport let GTexasRewardTool:TexasMatchReward = null\r\n\r\nexport interface RewardCoinDetail{\r\n    lastRewardCoin:number,\r\n    allRewardCoin:number\r\n}\r\n\r\n\r\n\r\nclass TexasMatchReward\r\n{\r\n    getRewardAll(matchnIns:MatchInsModel,mrs:MultiDynamicReward[]):MatchItemInfo[]{\r\n        // 判断奖励类型\r\n        let rewards:MatchItemInfo[] = null\r\n        switch(matchnIns.match.dynamic_reward){\r\n            case 0:\r\n                //固定奖励\r\n                rewards = this.getImmobilizationReward(matchnIns)\r\n                break\r\n            case 1:\r\n                //基础动态奖励\r\n                rewards = this.getBaseActiveReward(matchnIns)\r\n                break\r\n            case 2:\r\n                // 高级动态奖励\r\n                rewards = this.getAdvanceActiveReward(matchnIns,mrs)\r\n                break\r\n            case 3:\r\n                rewards = this.getAdvanceActiveCoinReward(matchnIns,mrs)\r\n                // 高级积分动态奖励\r\n                break\r\n            case 4:\r\n                 // 纯积分动态奖励\r\n                rewards = this.getAdvanceActiveOnlyCoinReward(matchnIns,mrs)\r\n                break\r\n        }\r\n\r\n        return rewards\r\n    }\r\n\r\n    \r\n    // 固定奖励 (不理会破保)\r\n    getImmobilizationReward(matchnIns:MatchInsModel){\r\n        return matchnIns.match.reward\r\n    }\r\n    // 基础动态奖励(破保后所有的奖励都放在下一位)\r\n    getBaseActiveReward(matchnIns:MatchInsModel){\r\n        let rewards = matchnIns.match.reward\r\n        let oneCost = this.getOneCost(matchnIns)\r\n\r\n        let lastReward = rewards[rewards.length-1]\r\n\r\n        let rewardDetail:RewardCoinDetail = this.getRewardCoinDetail(rewards)\r\n\r\n        // 进行破保计算\r\n\r\n        // 所有积分\r\n        let total_coin = matchnIns.player_num*oneCost\r\n        let dtcoin = total_coin - rewardDetail.allRewardCoin\r\n\r\n      \r\n        if(dtcoin<=0){\r\n            return core.clone(rewards) \r\n        }\r\n        // ==================累加到最后的奖励\r\n        \r\n        let newRewards = this.getNewRewards_acc(dtcoin,rewardDetail,lastReward)\r\n        let res = rewards.concat(newRewards)\r\n        return res\r\n    }\r\n\r\n    // 获得高级动态奖励的奖励\r\n    getAdvanceActiveReward(matchnIns:MatchInsModel,mrs:MultiDynamicReward[]){\r\n        let rewards = matchnIns.match.reward\r\n        let oneCost = this.getOneCost(matchnIns)\r\n\r\n        let lastReward = rewards[rewards.length-1]\r\n        let rewardDetail:RewardCoinDetail = this.getRewardCoinDetail(rewards)\r\n\r\n        // 进行破保计算\r\n\r\n        // 所有积分\r\n        let total_coin = matchnIns.player_num*oneCost\r\n        let dtcoin = total_coin - rewardDetail.allRewardCoin\r\n\r\n        let needAddCoinNum = matchnIns.match.gg_reward_begin_coin_num || 0\r\n        let realLeft = dtcoin\r\n\r\n        if(needAddCoinNum>0){\r\n            realLeft = dtcoin - needAddCoinNum\r\n            if(dtcoin<=needAddCoinNum){\r\n                // 积分不足报名\r\n                dtcoin = needAddCoinNum\r\n            }\r\n        }\r\n        if(dtcoin<=0){\r\n            return core.clone(rewards) \r\n        }\r\n        let peopleOff = matchnIns.match.gg_reward_begin_people_num||0\r\n        let newRewards = this.getNewRewards_advance(dtcoin,rewardDetail,lastReward,oneCost,mrs,realLeft,peopleOff)\r\n        let res = rewards.concat(newRewards)\r\n        return res\r\n    }\r\n\r\n    // 高级积分动态奖励 \r\n    getAdvanceActiveCoinReward(matchnIns:MatchInsModel,mrs:MultiDynamicReward[]){\r\n        let rewards = matchnIns.match.reward\r\n        let oneCost = this.getOneCost(matchnIns)\r\n\r\n        let lastReward = rewards[rewards.length-1]\r\n        let rewardDetail:RewardCoinDetail = this.getRewardCoinDetail(rewards)\r\n\r\n        // 进行破保计算\r\n\r\n        // 所有积分\r\n        let total_coin = matchnIns.player_num*oneCost\r\n        let dtcoin = total_coin - rewardDetail.allRewardCoin\r\n\r\n        let needAddCoinNum = matchnIns.match.gg_reward_begin_coin_num || 0\r\n        let realLeft = dtcoin\r\n        if(needAddCoinNum>0){\r\n            realLeft = dtcoin - needAddCoinNum\r\n            if(dtcoin<=needAddCoinNum){\r\n                // 积分不足报名\r\n                dtcoin = needAddCoinNum\r\n            }\r\n        }\r\n        if(dtcoin<=0){\r\n            return core.clone(rewards) \r\n        }\r\n        let peopleOff = matchnIns.match.gg_reward_begin_people_num||0\r\n        let newRewards = this.getNewRewards_advance(dtcoin,rewardDetail,lastReward,oneCost,mrs,realLeft,peopleOff,true)\r\n        let res = rewards.concat(newRewards)\r\n        return res\r\n    }\r\n\r\n    // 纯积分动态奖励\r\n    getAdvanceActiveOnlyCoinReward(matchnIns:MatchInsModel,mrs:MultiDynamicReward[]){\r\n        let rewards = matchnIns.match.reward\r\n        let oneCost = this.getOneCost(matchnIns)\r\n\r\n        let lastReward = rewards[rewards.length-1]\r\n        let rewardDetail:RewardCoinDetail = this.getRewardCoinDetail(rewards)\r\n\r\n        let total_coin = matchnIns.player_num*oneCost\r\n        if(total_coin<rewardDetail.lastRewardCoin){\r\n            total_coin = rewardDetail.lastRewardCoin\r\n        }\r\n\r\n        let peopleOff = matchnIns.match.gg_reward_begin_people_num||0\r\n        let newRewards = this.getNewRewards_advance(total_coin,null,null,\r\n            oneCost,mrs,total_coin,peopleOff,true)\r\n\r\n        return newRewards\r\n    }\r\n\r\n\r\n\r\n    // 高级动态奖励 realLeft真正破保后的遗留  peopleOff 奖励人数的偏移  \r\n    getNewRewards_advance(dtcoin:number,\r\n        rewardDetail:RewardCoinDetail,\r\n        lastReward:MatchItemInfo,\r\n        oneCost:number,\r\n        mrs:MultiDynamicReward[],\r\n        realLeft:number,\r\n        peopleOff=0,         //奖励开始的偏移量\r\n        onlayCoin = false //是否只给积分\r\n        ):MatchItemInfo[]{\r\n        // 动态分配所有的奖励\r\n        \r\n        let left_signup_num = 1\r\n        // 先找到奖励区间\r\n        if(realLeft<=0){\r\n            // 只计算真正遗留下的可以计算奖励人数的竞技点\r\n            left_signup_num = 1\r\n        }else{\r\n            left_signup_num = Math.floor(realLeft/oneCost)||1\r\n        }\r\n        left_signup_num = left_signup_num+peopleOff\r\n\r\n        let mr:MultiDynamicReward = null\r\n        for(let i=0;i<mrs.length;++i)\r\n        {\r\n            let temp = mrs[i]\r\n            if(left_signup_num>=temp.min&&left_signup_num<=temp.max)\r\n            {\r\n                mr = temp\r\n                break\r\n            }\r\n        }\r\n        if(!mr)\r\n        {\r\n            mr = mrs[mrs.length-1]\r\n        }\r\n\r\n        let newRewad = []\r\n        let outReward = 0 //溢出奖励 \r\n        for(var v of mr.rate){\r\n            let rew:MatchItemInfo = null\r\n            let rateReward = Math.floor(dtcoin*v/100)||1\r\n\r\n            // 溢出奖励+给下一名\r\n            if(outReward>0){\r\n                rateReward = rateReward+outReward\r\n                outReward = 0\r\n            }\r\n            //=====================================================================\r\n\r\n            if(lastReward&&rewardDetail && rateReward>= rewardDetail.lastRewardCoin){\r\n                if(onlayCoin){\r\n                    rew = new MatchItemInfo()\r\n                    rew.id=-99\r\n                    rew.count=rewardDetail.lastRewardCoin\r\n                }else{\r\n                    rew = core.clone(lastReward)\r\n                }\r\n                outReward = rateReward -rewardDetail.lastRewardCoin\r\n            }else{\r\n                rew = new MatchItemInfo()\r\n                rew.id=-99\r\n                rew.count=rateReward\r\n            }\r\n            newRewad.push(rew)\r\n        }\r\n        return newRewad\r\n    }\r\n\r\n\r\n    // 累加最后一位奖励\r\n    getNewRewards_acc(dtcoin:number,rewardDetail:RewardCoinDetail,lastReward:MatchItemInfo):MatchItemInfo[]{\r\n        let num = Math.floor(dtcoin/rewardDetail.lastRewardCoin)\r\n        let left = dtcoin%rewardDetail.lastRewardCoin\r\n        \r\n        let newRewad = []\r\n        for(var i=0;i<num;i++){\r\n            newRewad.push(core.clone(lastReward))\r\n        }\r\n        if(left>0){\r\n            // 剩余的奖励 通过奖励点发放\r\n            let rwOne=new MatchItemInfo()\r\n            rwOne.id=-99\r\n            rwOne.count=left\r\n            newRewad.push(rwOne)\r\n        }\r\n\r\n        return  newRewad\r\n    }\r\n\r\n    \r\n\r\n    // 获取一次报名所需\r\n    getOneCost(matchnIns:MatchInsModel){\r\n        let costs=matchnIns.match.signup_cost\r\n        let coin = 0\r\n        for(let key in costs)\r\n        {\r\n            if(costs[key].id==-99)\r\n            {\r\n                coin=costs[key].count\r\n                break\r\n            }\r\n        }\r\n        return coin\r\n    }\r\n    // 获取最后一名的奖励额度 以及所有奖励的额度\r\n    getRewardCoinDetail(rewards:MatchItemInfo[]):RewardCoinDetail{\r\n        let res:RewardCoinDetail = {\r\n            lastRewardCoin:0,\r\n            allRewardCoin:0\r\n        }\r\n\r\n        for(var k in rewards){\r\n            let dcoin = 0\r\n            if(rewards[k].id==-99)\r\n            {\r\n                dcoin=rewards[k].count\r\n            }\r\n            else\r\n            {\r\n                let id = rewards[k].id\r\n                let item = GItemCfg.getItemById(id)\r\n                dcoin=item.coin*rewards[k].count\r\n            }\r\n\r\n\r\n            res.lastRewardCoin=dcoin\r\n            res.allRewardCoin+=dcoin\r\n        }\r\n\r\n        return res\r\n    }\r\n\r\n\r\n}\r\nGTexasRewardTool = new TexasMatchReward()","import { CardRecordSeatInfo, CardRecordTableInfo, CardSeatInfo, ETableType, _ECardSeatState } from './CardTableDataModel';\r\nimport { GUserMgr } from \"../Logic/UserManager\";\r\nimport { CardTableDataModel, CardTableInfo } from './CardTableDataModel';\r\nimport { ECardType, EMatchState, ETableState, ETexasAction } from '../Config/_ini_';\r\nimport { GMatchSer } from '../Service/MatchService';\r\n\r\n\r\nclass _ETexasSeatState extends _ECardSeatState\r\n{\r\n    AllIn=10\r\n    Fold=11\r\n}\r\n\r\nexport let ETexasSeatState=new _ETexasSeatState()\r\n\r\nexport class TexasSeatInfo extends CardSeatInfo\r\n{\r\n\t//玩家手中的牌\r\n    cards: number[] = []\r\n    //玩家操作\r\n    action=ETexasAction.None\r\n    bet=0    // 下注\r\n    total_bet=0 \r\n    cardtype=ECardType.None\r\n}\r\n\r\nexport class TexasTableInfo extends CardTableInfo<TexasSeatInfo>\r\n{\r\n    dealer_index = 0                        //发牌位\r\n    small_blind_index = 0                   //小盲位\r\n    big_blind_index = 0                     //大盲位\r\n    small_blind=0\r\n    big_blind=0\r\n    cards: number[] = []                    //公共牌\r\n    blind_index: number = 0                  //当前盲注等级\r\n    pot: number = 0                         //底池\r\n    turnpot:number = 0                      // 轮到谁说话\r\n    //上次的dt值，方便加注使用（加注妖大于等于dtbet）\r\n    dtbet=0\r\n    /**\r\n     * 加注单位量\r\n     */\r\n    min_raise_bet=0\r\n    curmaxbet=0      //当前下注的最大量\r\n    turn_user_id=-1 //轮到谁说话\r\n    match_insid=\"\"  // 当前比赛id\r\n    blind_deadline=-1\r\n    cur_player_num =0\r\n    cur_table_num =0\r\n    total_player_num =0\r\n    match_total_point =0\r\n    no=0\r\n    allallinshow=false\r\n    pots:number[]=[]      // 边池\r\n}\r\n\r\nclass TexasResultPotItem\r\n{\r\n    pot=0\r\n    wins:{[user_id:number]:number}={}\r\n}\r\n\r\nclass TexasResult\r\n{\r\n    pots:TexasResultPotItem[]=[]\r\n}\r\n\r\nexport class TexasRecordTableInfo extends CardRecordTableInfo<TexasRecordSeatInfo>\r\n{\r\n    id:string=\"\"\r\n    match_id=0\r\n    blind_id=0\r\n    blind_index=0\r\n    dealer_index=0\r\n    small_blind_index=0\r\n    big_blind_index=0\r\n    small_blind=0\r\n    big_blind=0\r\n    cards:number[]=[]\r\n    tr:TexasResult=null\r\n}\r\nexport class TexasRecordSeatInfo extends CardRecordSeatInfo\r\n{\r\n    bet=0\r\n    cards:number[]=[]\r\n    cardtype=ECardType.None\r\n    state=ETexasSeatState.Waiting\r\n    showcards=0\r\n    win=0\r\n    //消极行为\r\n    negative=false\r\n    //actions:ETexasAction[]=[]\r\n    actions:{\r\n        action:ETexasAction, bet:number\r\n    }[]\r\n}\r\n\r\nexport let GTexasTableDM:TexasTableDataModel=null\r\nclass TexasTableDataModel extends CardTableDataModel<TexasSeatInfo,TexasTableInfo,TexasRecordSeatInfo,TexasRecordTableInfo>\r\n{\r\n    onShowCards(table_id:number,user_id:number,showcards:number)\r\n    {\r\n        let results = this.battleRecords[table_id]\r\n        if(!results||results.length<=0)\r\n        {\r\n            return\r\n        }\r\n        let rs = results[results.length-1]\r\n        let rr = rs.userrecords[user_id]\r\n        rr.showcards=rr.showcards|showcards\r\n    }\r\n    getTableInfoByMatchInsId(ins_id:string)\r\n    {\r\n        for(let key in this._table_infos)\r\n        {\r\n            let tb = this._table_infos[key]\r\n            if(tb.match_insid==ins_id)\r\n            {\r\n                return tb\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    getSelfSeatInfo(table_id:number)\r\n    {\r\n        let si = this.getSeatByUserId(table_id,GUserMgr.self_user_id)\r\n        return si\r\n    }\r\n    getSelfSeatIndex(table_id:number)\r\n    {\r\n        let self_seat = this.getSelfSeatInfo(table_id)\r\n        return self_seat?.index||0\r\n    }\r\n    init(table_info:TexasTableInfo)\r\n    {\r\n        super.init(table_info)\r\n        //开赛之后报名数据有点异常\r\n        let matchInsM = GMatchSer.getMatchInsById(table_info.match_insid)\r\n        if(table_info.state==ETableState.Playing&&matchInsM.state!=EMatchState.Playing)\r\n        {\r\n            matchInsM.state=EMatchState.Playing\r\n        }\r\n        let selfseatinfo=this.getSeatByUserId(table_info.id,GUserMgr.self_user_id)\r\n        if(selfseatinfo)\r\n        {\r\n            matchInsM.state=EMatchState.Playing\r\n        }\r\n        if(GUserMgr.self_user.matchinfos[matchInsM.id])\r\n        {\r\n            return\r\n        }\r\n        if(this.getSelfSeatInfo(table_info.id))\r\n        {\r\n            GUserMgr.self_user.matchinfos[matchInsM.id]=\r\n            <any>{\r\n                ins_id:matchInsM.id\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 记录桌子休息状态 和截止时间\r\n     * @param table_id \r\n     * @param deadline \r\n     * @returns \r\n     */\r\n    onIdle(table_id:number,deadline:number)\r\n    {\r\n        let ti = GTexasTableDM.getTableInfo(table_id)\r\n        if(!ti)\r\n        {\r\n            return\r\n        }\r\n        ti.state=ETableState.Idle\r\n        ti.blind_deadline=deadline\r\n    }\r\n    onDealCard(table_id:number,cards:number[],cardtype:ECardType)\r\n    {\r\n        let ti = GTexasTableDM.getTableInfo(table_id)\r\n        if(!ti)\r\n        {\r\n            return\r\n        }\r\n        ti.turnpot=ti.pot\r\n        ti.cards=ti.cards.concat(cards)\r\n        for(let key in ti.seats)\r\n        {\r\n            let seat = ti.seats[key] as TexasSeatInfo\r\n            seat.bet=0\r\n            if(seat.action!=ETexasAction.Fold\r\n                &&seat.action!=ETexasAction.Allin)\r\n            {\r\n                seat.action=ETexasAction.None\r\n            }\r\n        }\r\n        let self_seat = this.getSelfSeatInfo(table_id)\r\n        if(self_seat)\r\n        {\r\n            self_seat.cardtype=cardtype\r\n        }\r\n    }\r\n    onResult(record:TexasRecordTableInfo)\r\n    {\r\n        super.onResult(record)\r\n        let ti = this._table_infos[record.table_id]\r\n        if(!ti||!record.tr)\r\n        {\r\n            return\r\n        }\r\n        GMatchSer.addRecord(ti.match_insid,record)\r\n        ti.pots=[]\r\n        for(let i=0;i<record.tr.pots.length;++i)\r\n        {\r\n            let pot = record.tr.pots[i]\r\n            ti.pots.push(pot.pot)\r\n            for(let user_id in pot.wins)\r\n            {\r\n                let point = pot.wins[user_id]||0\r\n                let ur = record.userrecords[user_id] as TexasRecordSeatInfo\r\n                if(!ur)\r\n                {\r\n                    continue\r\n                }\r\n                ur.win=ur.win||0\r\n                ur.win+=point\r\n            }\r\n        }\r\n    }\r\n    onbet(table_id:number,user_id:number,bet:number,curmaxbet:number,dtbet:number,action:ETexasAction)\r\n    {\r\n        let tableinfo=this.getTableInfo(table_id)\r\n        if(!tableinfo)\r\n        {\r\n            return\r\n        }\r\n        tableinfo.curmaxbet = curmaxbet\r\n        tableinfo.dtbet = dtbet\r\n        tableinfo.turn_user_id=-1\r\n        let seat = GTexasTableDM.getSeatByUserId(table_id,user_id) as TexasSeatInfo\r\n        if(bet>=0)\r\n        {\r\n            seat.bet+=bet\r\n            seat.total_bet+=bet\r\n            seat.dt_point+=bet\r\n            seat.playerinfo.point-=bet\r\n            tableinfo.pot+=bet\r\n            if(seat.playerinfo.point<=0)\r\n            {\r\n                seat.state=ETexasSeatState.AllIn\r\n            }\r\n        }\r\n        else\r\n        {\r\n            seat.state=ETexasSeatState.Fold\r\n        }\r\n        seat.action = action\r\n    }\r\n}\r\nGTexasTableDM = new TexasTableDataModel()","\r\nimport {GHelper} from \"../Logic/Helper\"\r\n\r\nexport class TimeLabel extends cc.Label\r\n{\r\n    _time_handler:number=0\r\n    onLoad () \r\n    {\r\n        let self = this\r\n        this._refresh()\r\n        this._time_handler = setInterval(function()\r\n        {\r\n            self._refresh()\r\n        },10000)\r\n    }\r\n    _refresh()\r\n    {\r\n        this.string = GHelper.getLocalTime(\"hh:mm\")\r\n    }\r\n    onDestroy()\r\n    {\r\n        clearInterval(this._time_handler)\r\n        this._time_handler = 0\r\n    }\r\n}\r\n","import SingleBase from \"../Base/SingleBase\"\r\nclass TimeManageer extends SingleBase {\r\n    initOnCreate(){\r\n\r\n    }\r\n\r\n    \r\n    getServiceTime(){\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    update(dt:number){\r\n\r\n    }\r\n}\r\n\r\nexport let timeMgr = TimeManageer.Instance()\r\n\r\n","import {GHelper} from \"../Logic/Helper\"\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nexport let GTipLabel:TipLabel=null\r\n\r\n@ccclass\r\nexport class TipLabel extends cc.Component{\r\n    protected _time:number = -1\r\n    protected _bg:cc.Sprite = null\r\n    protected _lbl_tip:cc.Label = null\r\n    // use this for initialization\r\n    onLoad() \r\n    {\r\n        GTipLabel = this\r\n        //this.node.setPosition(cc.winSize.width/2,cc.winSize.height/2)\r\n        this._bg = GHelper.createSprite(\"Common/Image/Other/tipBg\")\r\n        this._bg.node.setAnchorPoint(cc.v2(0.5,0.5))\r\n        this._bg.node.parent = this.node\r\n\r\n        this._lbl_tip = <cc.Label>GHelper.createNode(cc.Label)\r\n        this._lbl_tip.node.setAnchorPoint(cc.v2(0.5,0.5))\r\n        this._lbl_tip.node.parent = this.node\r\n        this._lbl_tip.fontSize = 30\r\n        this._lbl_tip.node.y=-this._lbl_tip.fontSize/2\r\n        this._lbl_tip.node.color=cc.Color.WHITE\r\n        this.node.active = false\r\n    }\r\n    show(str:string,time?,showPos?)\r\n    {\r\n        if(showPos)\r\n        {\r\n            this._bg.node.setPosition(showPos)\r\n            this._lbl_tip.node.setPosition(cc.v2(showPos.x,showPos.y -this._lbl_tip.fontSize/2))\r\n        }else\r\n        {\r\n            this._bg.node.setPosition(cc.v2(0,0))\r\n            this._lbl_tip.node.setPosition(cc.v2(0,-this._lbl_tip.fontSize/2))\r\n        }\r\n        this._lbl_tip.string = str || \"no string tip!\"\r\n        this._time = time || 2\r\n        setTimeout(()=>\r\n        {\r\n            if(this._time>0)\r\n            {\r\n                this.node.active = true\r\n            }\r\n        }, 500)\r\n    }\r\n    refershTip(str:string)\r\n    {\r\n        this._lbl_tip.string = str\r\n    }\r\n    update(dt)\r\n    {\r\n        this._time -= dt\r\n        if(this._time<=0)\r\n        {\r\n            this.node.active = false\r\n        }\r\n    }\r\n    clear()\r\n    {\r\n        this._time = 0\r\n        this.node.active = false\r\n    }\r\n}","import {GHelper} from \"../Logic/Helper\"\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nexport let GTipRunning:TipRunning=null\r\n\r\n@ccclass\r\nexport class TipRunning extends cc.Component{\r\n    protected _time:number = -1\r\n    protected _bg:cc.Sprite = null\r\n    protected _run:cc.Sprite = null\r\n    // use this for initialization\r\n    onLoad() \r\n    {\r\n        GTipRunning = this\r\n        this.node.active = false\r\n\r\n        this.node.width = cc.winSize.width\r\n        this.node.height = cc.winSize.height\r\n        this.node.setPosition(cc.winSize.width/2,cc.winSize.height/2)\r\n        this._bg = GHelper.createSprite(\"Common/Image/Other/running_bg\")\r\n        this._bg.node.parent = this.node\r\n        this._run = GHelper.createSprite(\"Common/Image/Other/running\")\r\n        this._run.node.parent = this.node\r\n        let action =cc.repeatForever(cc.rotateBy(1,150))\r\n        this._run.node.runAction(action)\r\n    }\r\n}","import { GHallHttp } from \"../../Net/HallHttp\"\r\nimport { core } from \"../Core/Base\"\r\n\r\nexport let GToSvrLog:ToServerLog=null\r\nclass ToServerLog\r\n{\r\n    protected _logs=[]\r\n    log(obj)\r\n    {\r\n        if(GHallHttp.session_id)\r\n        {\r\n            GHallHttp.request(\"clientLog\",{log:JSON.stringify(obj)})\r\n        }\r\n        else\r\n        {\r\n            this._logs.push(obj)\r\n        }\r\n    }\r\n    sendAll()\r\n    {\r\n        if(GHallHttp.session_id)\r\n        {\r\n            if(this._logs.length>0)\r\n            {\r\n                GHallHttp.request(\"clientLog\",{log:JSON.stringify(this._logs)})\r\n                this._logs=[]\r\n            }\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n}\r\nGToSvrLog = new ToServerLog()","import {core} from \"./Base\"\r\n\r\nexport enum ETriggerType{\r\n    Region=0,\r\n    Condition\r\n}\r\nexport enum EConditionType{\r\n    Die=0,\r\n    Hit,\r\n    HP,\r\n    MP,\r\n}\r\n\r\nlet _GTriggerCode = 0\r\n\r\nexport let GTriggerMgr =\r\n{\r\n    _regionTriggers: {},\r\n    _conditionTriggers: {},\r\n    //触发器的单个个体必须包含x,y,width,height,其他参数为各自需要添加\r\n    init: function ()\r\n    {\r\n        this.clearAll();\r\n    },\r\n    clearAll: function ()\r\n    {\r\n        this.clearRegionTrigger();\r\n        this.clearConditionTrigger();\r\n    },\r\n    clear: function (triggertype)\r\n    {\r\n        if (triggertype===undefined)\r\n        {\r\n            this.clearAll();\r\n        }\r\n        else if (triggertype == ETriggerType.Region)\r\n        {\r\n            this.clearRegionTrigger();\r\n        }\r\n        else\r\n        {\r\n            this.clearConditionTrigger();\r\n        }\r\n    },\r\n\r\n\r\n\r\n\r\n    ////////////////////////////////////////////区域触发器//////////////////////////////////////////////////////\r\n    //objs 需要检查的对象，regions触发起区域，callBackObj回调的对象\r\n    initRegionTrigger: function (objs, triggers, callBackObj)\r\n    {\r\n        this.clearRegionTrigger();\r\n        if (!triggers || triggers.length <= 0)\r\n        {\r\n            return;\r\n        }\r\n        for (let i = 0, length = triggers.length; i < length; ++i)\r\n        {\r\n            this._regionTriggers.triggerInfos[i] = { trigger: triggers[i] };\r\n        }\r\n        if (core.isArray(objs))\r\n        {\r\n            for (let i = 0, length = objs.length; i < length; ++i)\r\n            {\r\n                this._regionTriggers.objInfos[i] = { obj: objs[i] };\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this._regionTriggers.objInfos[0] = { obj: objs };\r\n        }\r\n        if (typeof callBackObj !== \"undefined\")\r\n        {\r\n            this._regionTriggers.callBackObj = callBackObj;\r\n        }\r\n        this._checkRegion();//初始化check\r\n    },\r\n    clearRegionTrigger: function ()\r\n    {\r\n        this._regionTriggers = { triggerInfos: [], objInfos: [], callBackObj: null };\r\n    },\r\n\r\n    addObjToRegionTrigger: function (obj)\r\n    {\r\n        this._regionTriggers.objInfos[this._regionTriggers.objInfos.length] = { obj: obj };\r\n    },\r\n\r\n    removeObjInRegionTrigger: function (obj)\r\n    {\r\n        for (let i = 0; i < this._regionTriggers.objInfos.length; ++i)\r\n        {\r\n            let o = this._regionTriggers.objInfos[i].obj;\r\n            if (o === obj)\r\n            {\r\n                this._regionTriggers.objInfos.removeAt(i);\r\n                return;\r\n            }\r\n        }\r\n    },\r\n\r\n    //是否在触发器内\r\n    _isInTrigger: function (pos, region)\r\n    {\r\n        if (!pos || typeof region === \"undefined\")\r\n        {\r\n            return false;\r\n        }\r\n        cc.log(\"pos.x\" + pos.x + \"  pos.y=\" + pos.y);\r\n        cc.log(\"region.x\" + region.x + \"  region.y=\" + region.y);\r\n        if (pos.x < (region.x - region.width / 2))\r\n        {\r\n            return false;\r\n        }\r\n        if (pos.x > (region.x + region.width / 2))\r\n        {\r\n            return false;\r\n        }\r\n        if (pos.y < (region.y - region.height / 2))\r\n        {\r\n            return false;\r\n        }\r\n        if (pos.y > (region.y + region.height / 2))\r\n        {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    //外部需要调用改接口\r\n    check: function ()\r\n    {\r\n        this._checkRegion();\r\n    },\r\n    _checkRegion: function ()\r\n    {\r\n        for (let i = 0, length = this._regionTriggers.objInfos.length; i < length; ++i)\r\n        {\r\n            let info = this._regionTriggers.objInfos[i];\r\n            if (!info)\r\n            {\r\n                continue;\r\n            }\r\n            let obj = info.obj;\r\n            if (!obj || !obj.getPosition)\r\n            {\r\n                this.removeObjInRegionTrigger(obj);//改对象已经无效\r\n                continue;\r\n            }\r\n            let pos = obj.getPosition();\r\n\r\n            //优化检查频率，，10个像素差之后才进行检测\r\n            if (!info.prePos || !cc.pFuzzyEqual(pos, info.prePos, 10))\r\n            {\r\n                info.prePos = pos;\r\n                for (let i = 0, length = this._regionTriggers.triggerInfos.length; i < length; ++i)\r\n                {\r\n                    let triggerInfo = this._regionTriggers.triggerInfos[i];\r\n                    if (this._isInTrigger(pos, triggerInfo.trigger.region))\r\n                    {\r\n                        //原本在外面或首次检测，触发进入事件\r\n                        if (triggerInfo[obj] && triggerInfo[obj] == -1)\r\n                        {\r\n                            this._triggerIn(obj, triggerInfo.trigger);\r\n                            triggerInfo[obj] = 1;\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        //原本在里面或者首次检测，现在不在了，触发走出触发器事件\r\n                        if (triggerInfo[obj] && triggerInfo[obj] == 1)\r\n                        {\r\n                            this._triggerOut(obj, triggerInfo.trigger);\r\n                        }\r\n                        triggerInfo[obj] = -1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    //从外面进入时触发\r\n    _triggerIn: function (obj, trigger)\r\n    {\r\n        if (!this._regionTriggers.callBackObj || !this._regionTriggers.callBackObj.onTriggerIn)\r\n        {\r\n            return\r\n        }\r\n        cc.log(\"some one triggered in\")\r\n        this._regionTriggers.callBackObj.onTriggerIn(obj, trigger)\r\n    },\r\n\r\n    //从里面走出去的时候触发\r\n    _triggerOut: function (obj, trigger)\r\n    {\r\n        if (!this._regionTriggers.callBackObj || !this._regionTriggers.callBackObj.onTriggerOut)\r\n        {\r\n            return\r\n        }\r\n        cc.log(\"some one triggered out\")\r\n        this._regionTriggers.callBackObj.onTriggerOut(obj, trigger)\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //////////////////////////////////////条件触发器//////////////////////////////////////////////////\r\n    initConditionTrigger: function ()\r\n    {\r\n        this._conditionTriggers = {}\r\n        for (let conditiontype in EConditionType)\r\n        {\r\n            this._conditionTriggers[conditiontype] = {}\r\n        }\r\n    },\r\n    clearConditionTrigger: function ()\r\n    {\r\n        this._conditionTriggers = []\r\n        for (let conditiontype in EConditionType)\r\n        {\r\n            this._conditionTriggers[EConditionType[conditiontype]] = {}\r\n        }\r\n    },\r\n    triggerCondition: function (conditiontype, params, conditions)\r\n    {\r\n        params = params || {};\r\n        conditions = conditions || {};\r\n        for (let code in this._conditionTriggers[conditiontype])\r\n        {\r\n            let info = this._conditionTriggers[conditiontype][code]\r\n            for (let key in info.conditions)\r\n            {\r\n                if (info.conditions[key] !== conditions[key])\r\n                {\r\n                    return false\r\n                }\r\n            }\r\n            info.callback(params)\r\n        }\r\n        return true\r\n    },\r\n    addConditionTriggerEvent: function (conditiontype, callback, conditions)\r\n    {\r\n        conditions = conditions || {}\r\n        _GTriggerCode += 1\r\n        this._conditionTriggers[conditiontype][_GTriggerCode] = { callback: callback, conditions: conditions }\r\n        return { type: conditiontype, code: _GTriggerCode }\r\n    },\r\n    removeConditionTriggerEvent: function (conditiontype, code)\r\n    {\r\n        if (code === undefined)\r\n        {\r\n            this._conditionTriggers[conditiontype] = {}\r\n        }\r\n        else\r\n        {\r\n            delete this._conditionTriggers[conditiontype][code]\r\n        }\r\n\r\n    }\r\n}","import { BaseAd } from \"./BaseAd\";\r\n\r\nclass UCAd extends BaseAd {\r\n    private bannerAd = null;\r\n\r\n    constructor() {\r\n        super(\"uc\");\r\n    }\r\n\r\n    private getUserInfo(success?: Function, fail?: Function) {\r\n        uc.getSetting({\r\n            success: () => {\r\n                uc.getUserInfo({\r\n                    success: (res) => {\r\n                        success && success(res.userInfo);\r\n                    },\r\n                    fail: () => {\r\n                        fail && fail();\r\n                    }\r\n                })\r\n            },\r\n            fail: () => {\r\n                uc.authorize({\r\n                    scope: \"userInfo\",\r\n                    success: (data) => {\r\n                        uc.getUserInfo({\r\n                            success: (res) => {\r\n                                success && success(res.userInfo);\r\n                            },\r\n                            fail: () => {\r\n                                fail && fail();\r\n                            }\r\n                        })\r\n                    },\r\n                    fail: () => {\r\n                        fail && fail();\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    login(success?: Function, fail?: Function) {\r\n        uc.login({\r\n            success: (res) => {\r\n                this.getUserInfo((userInfo) => {\r\n                        success && success({\r\n                            nickname: userInfo.nickname,\r\n                            avatar: userInfo.avatar_url,\r\n                            gender: userInfo.gender,\r\n                            platform: this.platform,\r\n                            code: res.code\r\n                        });\r\n                    }, () => {\r\n                        fail && fail();\r\n                    }\r\n                )\r\n            },\r\n            fail: () => {\r\n                fail && fail();\r\n            }\r\n        });\r\n    }\r\n\r\n    share() {\r\n        uc.shareAppMessage({\r\n            query: \"\",//key=value&key=value\r\n            target: \"wechat\",//wechat、qq\r\n            success: (res) => {\r\n\r\n            },\r\n            fail: (err) => {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    createBannerAd() {\r\n        if (this.bannerAd == null) {\r\n            let sysInfo = uc.getSystemInfoSync();\r\n            if (typeof sysInfo == \"string\") {\r\n                sysInfo = JSON.parse(sysInfo);\r\n            }\r\n            this.bannerAd = uc.createBannerAd({\r\n                style: {\r\n                    width: Math.min((sysInfo.pixelRatio * 250), sysInfo.screenWidth),\r\n                    height: 0,  // 高度自适应\r\n                    gravity: 7  // 底部居中\r\n                }\r\n            });\r\n            this.bannerAd.show();\r\n            this.bannerAd.onLoad(() => {\r\n                console.log(\"Banner广告加载成功\");\r\n            });\r\n            this.bannerAd.onError(() => {\r\n                console.log(\"Banner广告加载失败\");\r\n            });\r\n        }\r\n    }\r\n\r\n    destroyBannerAd() {\r\n        if (this.bannerAd != null) {\r\n            this.bannerAd.hide();\r\n            this.bannerAd.destroy();\r\n            this.bannerAd = null;\r\n        }\r\n    }\r\n\r\n    createVideoAd(success?: Function, fail?: Function) {\r\n        let videoAd = uc.createRewardVideoAd();\r\n        videoAd.onLoad(() => {\r\n            console.log(\"激励视频广告加载成功\");\r\n            videoAd.show();\r\n        });\r\n        videoAd.onError(() => {\r\n            console.log(\"激励视频广告加载失败\");\r\n            fail && fail();\r\n        });\r\n        videoAd.onClose((res) => {\r\n            if (res && res.isEnded) {\r\n                console.log(\"激励视频正常播放结束\");\r\n                success && success();\r\n            } else {\r\n                console.log(\"激励视频播放中途推出\");\r\n                fail && fail();\r\n            }\r\n        })\r\n    }\r\n\r\n    createInterstitialAd(callback?: Function) {\r\n        let interstitialAd = uc.createInterstitialAd();\r\n        interstitialAd.show();\r\n        interstitialAd.onLoad(() => {\r\n            console.log('插屏广告加载成功');\r\n        });\r\n        interstitialAd.onError(() => {\r\n            console.log('插屏广告加载失败');\r\n        });\r\n        interstitialAd.onClose(() => {\r\n            console.log('插屏广告关闭');\r\n            callback && callback();\r\n        })\r\n    }\r\n    \r\n    createNativeAd(success?: Function, fail?: Function) {\r\n        success && success();\r\n    }\r\n    \r\n    reportAdShow(id: string) {\r\n\r\n    }\r\n    \r\n    reportAdClick(id: string) {\r\n\r\n    }\r\n}\r\n\r\nexport const ucAd: UCAd = new UCAd();","import { GHallHttp } from \"../Net/HallHttp\"\r\nimport { MatchItemInfo } from \"../Service/MatchService\"\r\nimport { GMsgCenter } from \"../utils/MessageCenter\"\r\n\r\n/**\r\n * 记录用户的参赛信息和情况\r\n */\r\n export class UserMatchInfo\r\n {\r\n     //比赛实例id\r\n     ins_id=\"\"\r\n     //报名时间\r\n     signup_time=0\r\n     //报名费用\r\n     sigup:MatchItemInfo=null\r\n     //名词\r\n     rank=-1\r\n     //获得的奖励\r\n     reward:MatchItemInfo=null\r\n }\r\n\r\nexport class TaskStatus\r\n{\r\n    //最近达成时间\r\n    latest_time=0\r\n    ticket=0//好友绑定赠送的票\r\n    ticket_club=0//俱乐部绑定赠送的票\r\n}\r\nexport class AddressItem\r\n{\r\n    name=\"\"\r\n    phone=\"\"\r\n    address=\"\"\r\n    create_time=-1\r\n}\r\n/**\r\n * 用户信息模块\r\n */\r\nexport class UserModel\r\n{\r\n    _id:string = ''\r\n    id:number=-1\r\n    account_id:number=-1\r\n    nickname:string=\"\"\r\n    sex:number=-1\r\n    logo:string=\"\"\r\n    state:number=0\r\n    role_group:number=4\r\n    role:number=0\r\n    phone:string=\"\"\r\n    wechat:string=\"\"\r\n    qq:string=\"\"\r\n    email:string=\"\"\r\n    about:string=\"\"\r\n    pre_user_id:number=-1\r\n    exp:number = 0\r\n    level:number = 1//等级\r\n    vip_exp:number = 0\r\n    vip_level:number = 0//等级\r\n    is_robot:number = 0\r\n    create_time:number = 0\r\n    coin=0//默认0\r\n    reward_coin=0\r\n    money=0//钱包\r\n    ticket=0\r\n    video_coin = 0\r\n    clubs = {}\r\n\r\n    addresses:AddressItem[]=[]\r\n    address_time=0\r\n    \r\n    idcard_name=\"\"\r\n    idcard_no=\"\"\r\n    idcard_time=0\r\n\r\n    sign_count=0\r\n    sign_time=0\r\n    \r\n    matchinfos:{[ins_id:string]:UserMatchInfo}={} // 用户比赛信息 \r\n    focusmatches:string[]=[] // 关注赛事\r\n\r\n    taskstatus:{[name:string]:TaskStatus}={}\r\n\r\n    // 是否是分销商\r\n    is_distributor = 0\r\n    //分成记录\r\n    divide_all = 0\r\n    divide_money = 0\r\n    divide_record:{user_id:number,create_time:number,money:number,divide:number}[] = []\r\n\r\n}\r\n\r\nexport let GUserMgr:UserManager = null\r\nclass UserManager\r\n{\r\n    protected _self_user_id=-1\r\n    protected _users={}//角色信息\r\n    init(self_user_id)\r\n    {\r\n        this._self_user_id = self_user_id\r\n    }\r\n    get self_user_id()\r\n    {\r\n        return this._self_user_id\r\n    }\r\n    get self_user()\r\n    {\r\n        return this.getUserByUserId(this._self_user_id)\r\n    }\r\n    //添加一个角色信息\r\n    addOneUser(user:UserModel)\r\n    {\r\n        if(!user)\r\n        {\r\n            return\r\n        }\r\n        user.reward_coin=user.reward_coin||0\r\n        let r = this._users[user.id]\r\n        if(!r)\r\n        {\r\n            this._users[user.id] = user\r\n        }\r\n        else\r\n        {\r\n            for(let k in user)   \r\n            {\r\n                if(user[k]==undefined)\r\n                {\r\n                    continue\r\n                }\r\n                r[k] = user[k]\r\n            }\r\n        }\r\n    }\r\n    getUserByUserId(user_id):UserModel\r\n    {\r\n        return this._users[user_id]\r\n    }\r\n    clear()\r\n    {\r\n        this._users = { }\r\n    }\r\n\r\n\r\n    async refreshSelfUser(){\r\n       let info = await GHallHttp.request(\"getuser\")\r\n       this.addOneUser(info.user)\r\n       GMsgCenter.send(\"updateuserinfo\")\r\n       GMsgCenter.send(\"coinchanged\")\r\n\r\n    }\r\n}\r\n\r\nGUserMgr = new UserManager()","\r\n\r\nexport class UserModel{\r\n    public nickname: string = \"\";\r\n    public avatar: string = \"\";\r\n    public gender: number = 0;\r\n\r\n    init() {\r\n    }\r\n\r\n    reset() {\r\n    }\r\n}","import { MD5 } from \"./MD5\"\r\nimport encryptjs = require(\"./encryptjs/encryptjs\");\r\nimport { WeightInfo } from \"../data/data\";\r\n\r\n\r\nconst LABEL_NUM: string[] = [\"\", \"K\", \"M\"];\r\n\r\nclass Utils {\r\n    private secretkey = \"secret_key\";\r\n    constructor() {\r\n    }\r\n\r\n    public shuffle<T>(arr: T[]): T[] {\r\n        if (arr.length <= 1) {\r\n            return arr;\r\n        }\r\n\r\n        for (let i = arr.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i + 1));\r\n            [arr[i], arr[j]] = [arr[j], arr[i]];\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * 时间戳(ms)转为分秒时间(00:00)\r\n     * @param time \r\n     */\r\n    public formatTime(time: number) {\r\n        let remain = Math.floor(time / 1000);\r\n        let hour = Math.floor(remain / 3600);\r\n        let minute = Math.floor(remain / 60) % 60;\r\n        let second = remain % 60;\r\n        return (hour ? (hour < 10 ? \"0\" + hour : hour) + \":\" : \"\") + (minute < 10 ? \"0\" + minute : minute) + \":\" + (second < 10 ? \"0\" + second : second);\r\n    }\r\n\r\n    public formatDate = function(date: Date, fmt: string = \"yyyy-MM-dd hh:mm:ss\"): string {\r\n        const opt = {\r\n            \"y+\": date.getFullYear().toString(),\r\n            \"M+\": (date.getMonth() + 1).toString(),\r\n            \"d+\": date.getDate().toString(),\r\n            \"h+\": date.getHours().toString(),\r\n            \"m+\": date.getMinutes().toString(),\r\n            \"s+\": date.getSeconds().toString(),\r\n        }\r\n    \r\n        let ret = /(y+)/.exec(fmt);\r\n        if (ret) {\r\n            fmt = fmt.replace(ret[1], (date.getFullYear() + \"\").substring(4 - ret[1].length));\r\n        }\r\n    \r\n        for (let k in opt) {\r\n            ret = new RegExp(\"(\" + k + \")\").exec(fmt);\r\n            if (ret) {\r\n                fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, \"0\")))\r\n            };\r\n        };\r\n    \r\n        return fmt;\r\n    }\r\n\r\n    public getMD5(input: string): string {\r\n        return new MD5().hex_md5(input);\r\n    }\r\n\r\n    public encrypt(text: string, secret?: string): string {\r\n        return encryptjs.encrypt(text, secret || this.secretkey, 256);\r\n    }\r\n\r\n    public decrypt(text: string, secret?: string): string {\r\n        try {\r\n            return encryptjs.decrypt(text, secret || this.secretkey, 256);\r\n        } catch (e) {\r\n            console.error(e);\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    public parseCsv(data: string, delimiter = ',') {\r\n        let pattern = \"(\\\\\" + delimiter + \"|\\\\r?\\\\n|\\\\r|^)\" + \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" + \"([^\\\"\\\\\" + delimiter + \"\\\\r\\\\n]*))\";\r\n        let objPattern = new RegExp(pattern, \"g\");\r\n\r\n        let arrData = [[]];\r\n        let arrMatches = null;\r\n        while (arrMatches = objPattern.exec(data)) {\r\n            let strMatchedDelimiter = arrMatches[1];\r\n            if (\r\n                strMatchedDelimiter.length &&\r\n                (strMatchedDelimiter != delimiter)\r\n            ) {\r\n                arrData.push([]);\r\n            }\r\n            if (arrMatches[2]) {\r\n                var strMatchedValue = arrMatches[2].replace(\r\n                    new RegExp(\"\\\"\\\"\", \"g\"),\r\n                    \"\\\"\"\r\n                );\r\n            } else {\r\n                var strMatchedValue = arrMatches[3];\r\n            }\r\n            arrData[arrData.length - 1].push(strMatchedValue);\r\n        }\r\n        if (arrData.length > 0) {\r\n            arrData.pop();\r\n        }\r\n        return arrData;\r\n    }\r\n\r\n    public csvToJSON(data: string[][], index_key: number = 0) {\r\n        let keys: string[] = data[index_key];\r\n        let results = [];\r\n        for (let i = index_key + 1; i < data.length; i++) {\r\n            let values = data[i];\r\n            let result = {};\r\n            for (let j = 0; j < keys.length; j++) {\r\n                result[keys[j]] = values[j];\r\n            }\r\n            results.push(result);\r\n        }\r\n        return results;\r\n    }\r\n\r\n    //幂级数求和\r\n    getPowerSum(k, n) {\r\n        return (!k || !n || k == 1) ? k * n : k * (1 - Math.pow(k, n)) / (1 - k);\r\n    }\r\n\r\n    //平方和\r\n    getSquaresSum(n: number) {\r\n        return n * (n + 1) * (n * 2 + 1) / 6;\r\n    }\r\n\r\n    //斐波那契数列\r\n    getFibonacci(n) {\r\n        let value = (Math.pow(1 + Math.sqrt(5), n) - Math.pow(1 - Math.sqrt(5), n)) / Math.pow(2, n) / Math.sqrt(5);\r\n        return Math.round(value);\r\n    }\r\n\r\n    getRoute(p0: cc.Vec2, p1: cc.Vec2, p2: cc.Vec2, count: number = 10) {\r\n        if (count <= 1) {\r\n            return [];\r\n        }\r\n\r\n        let points = [];\r\n        for (let i = 0; i < count; i++) {\r\n            let t = i / 10;\r\n            let x = p0.x * (1 - t) * (1 - t) + p1.x * t * (1 - t) * 2 + p2.x * t * t;\r\n            let y = p0.y * (1 - t) * (1 - t) + p1.y * t * (1 - t) * 2 + p2.y * t * t;\r\n            points.push(cc.v2(x, y));\r\n        }\r\n        points.push(p2);\r\n        \r\n        return points;\r\n    }\r\n    \r\n    formatNumber(num: number, fix: number = 1) {\r\n        if (num < 10000) {\r\n            return String(Math.round(num));\r\n        }\r\n\r\n        let count = 0;\r\n        while(num >= 1000 && count < LABEL_NUM.length - 1) {\r\n            count += 1;\r\n            num /= 1000;\r\n        }\r\n\r\n        return num.toFixed(fix) + LABEL_NUM[count];\r\n    }\r\n\r\n    checkWeight(list: WeightInfo[]) {\r\n        let weights = 0;\r\n        for (let weight of list) {\r\n            weights += weight.weight;\r\n        }\r\n\r\n        let temp = Math.random() * weights;\r\n        for (let weight of list) {\r\n            if (temp <= weight.weight) {\r\n                return weight;\r\n            }\r\n            temp -= weight.weight;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * \r\n    自由加注本质是生成一个Step的数组  这样上滑的时候 根据进度取数组里面的值来生成下注筹码\r\n        ChipsStep 为自由加注的数组  \r\n        u32MiniRaise 是最小下注筹码\r\n        u32Stake 是最大下注筹码\r\n        isSmall 判断是否微局\r\n\r\n        ChipsStep 的第一个值为 0 第二个值为最小下注 \r\n\r\n        定义一个i32Stake  初始值为最小筹码u32MiniRaise\r\n        通过调用 GetRaiseLevel 函数 传递i32Stake 获取一个i32Step值\r\n        定义一个while循环  只要i32Stake  不等于 最大下注 就让 i32Stake累加一个i32Step值\r\n        如果累加后的i32Stake 大于最大下注  就让它等于最大下注终止循环\r\n        然后把得到的 i32Stake 值存入ChipsStep数组\r\n        用累加后的 i32Stake 值 再调用 GetRaiseLevel 函数获取最新的i32Step值\r\n\r\n        微局和非微局的区别在于调用 GetRaiseLevel 时  微局直接调用，可以得到小数 \r\n\r\n        非微局需要先把 参数转换为客户端显示值 也就是除100  然后再把得到的值 转换成服务器值乘100  \r\n        这样最终存入 ChipsStep 里的数据就是非小数的值\r\n\r\n        最终客户端自由加注条 根据上滑的进度  对应 ChipsStep数组的值来显示和下注\r\n        如果上滑到最上面就是allin\r\n    */\r\n    public SplitChipsLevel(u32Stake: number, u32MiniRaise: number, isSmall: number): number[] {\r\n        let ChipsStep: number[] = [];\r\n        ChipsStep.push(0);\r\n        let i32Stake = u32MiniRaise;\r\n        let i32Step = 0;\r\n        //if (isSmall) {\r\n            i32Step = this.GetRaiseLevel(i32Stake);\r\n        //}\r\n        // else {\r\n        //     i32Step = cv.StringTools.serverGoldByClient(this.GetRaiseLevel(cv.StringTools.clientGoldByServer(i32Stake)));\r\n        // }\r\n        ChipsStep.push(u32MiniRaise);\r\n\r\n        while (i32Stake != u32Stake) {\r\n            if (i32Stake + i32Step <= u32Stake) {\r\n                i32Stake += i32Step;\r\n            }\r\n            else {\r\n                i32Stake = u32Stake;\r\n            }\r\n            ChipsStep.push(i32Stake);\r\n            //if (isSmall) {\r\n                i32Step = this.GetRaiseLevel(i32Stake);\r\n            //}\r\n            // else {\r\n            //     i32Step = cv.StringTools.serverGoldByClient(this.GetRaiseLevel(cv.StringTools.clientGoldByServer(i32Stake)));\r\n            // }\r\n\r\n        }\r\n\r\n        return ChipsStep;\r\n    }\r\n    \r\n    public GetRaiseLevel(u32Stake: number): number {\r\n        let i32Step: number = 1;\r\n        if (u32Stake < 50) {\r\n            i32Step = 1;\r\n        }\r\n        else if (u32Stake < 100) {\r\n            i32Step = 5;\r\n        }\r\n        else if (u32Stake < 1000) {\r\n            i32Step = 10;\r\n        }\r\n        else if (u32Stake < 10000) {\r\n            i32Step = 100;\r\n        }\r\n        else if (u32Stake < 100000) {\r\n            i32Step = 1000;\r\n        }\r\n        else if (u32Stake < 1000000) {\r\n            i32Step = 2000;\r\n        }\r\n        else if (u32Stake < 10000000) {\r\n            i32Step = 10000;\r\n        }\r\n        else if (u32Stake < 100000000) {\r\n            i32Step = 20000;\r\n        }\r\n        else {\r\n            i32Step = 100000;\r\n        }\r\n        return i32Step;\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport let utils: Utils = new Utils();","import { Page } from \"../../../Framework/View/Page/Page\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class VideoLayer extends Page {\r\n\r\n    @property(cc.VideoPlayer)\r\n    video: cc.VideoPlayer = null;\r\n\r\n    init(url: string) {\r\n        this.video.remoteURL = url;\r\n    }\r\n    \r\n    onShow() {\r\n    }\r\n\r\n    initTable() {\r\n    }\r\n}\r\n","import { BaseAd } from \"./BaseAd\";\r\n\r\nclass VivoAd extends BaseAd{\r\n    private bannerAd = null;\r\n    private videoAd = null;\r\n    private videoSuccess: Function = null;\r\n    private videoFail: Function = null;\r\n    private nativeAd = null;\r\n    private nativeSuccess: Function = null;\r\n    private nativeFail: Function = null;\r\n\r\n    constructor() {\r\n        super(\"vivo\");\r\n    }\r\n\r\n    login(success?: Function, fail?: Function) {\r\n        qg.login().then((res) => {\r\n            let code = res.data.token;\r\n            qg.getUserInfo().then((res) => {\r\n                if (res.data) {\r\n                    success && success({\r\n                        nickname: res.data.nickName,\r\n                        avatar: res.data.smallAvatar,\r\n                        gender: res.data.gender,\r\n                        platform: this.platform,\r\n                        code: code\r\n                    })\r\n                } else {\r\n                    fail && fail();\r\n                }\r\n            }, (err) => {\r\n                console.log(\"获取用户信息失败\" + JSON.stringify(err));\r\n                fail && fail();\r\n            })\r\n        }, (err) => {\r\n            console.log(\"登录失败\" + JSON.stringify(err));\r\n            fail && fail();\r\n        })\r\n    }\r\n\r\n    share() {\r\n        qg.share();\r\n    }\r\n\r\n    createBannerAd() {\r\n        if (!this.banner_id) {\r\n            return;\r\n        }\r\n\r\n        if (!this.bannerAd) {\r\n            let sysInfo = qg.getSystemInfoSync();\r\n\r\n            this.bannerAd = qg.createBannerAd({\r\n                posId: this.banner_id,\r\n                style: {}\r\n            });\r\n\r\n            if (!this.bannerAd) {\r\n                return;\r\n            }\r\n\r\n            this.bannerAd.onResize((size) => {\r\n                if (this.bannerAd && this.bannerAd.style) {\r\n                    this.bannerAd.style.top = sysInfo.screenHeight - size.height;\r\n                    this.bannerAd.style.left = sysInfo.screenWidth / 2 - size.width / 2;\r\n                }\r\n            })\r\n\r\n            this.bannerAd.onLoad(() => {\r\n                console.log(\"Banner广告加载成功\");\r\n            });\r\n            this.bannerAd.onError(() => {\r\n                console.log(\"Banner广告加载失败\");\r\n            });\r\n\r\n            this.bannerAd.show()\r\n            .then(() => {\r\n                console.log(\"Banner广告展示完成\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Banner广告加载失败 \", JSON.stringify(err));\r\n            })\r\n        }\r\n    }\r\n\r\n    destroyBannerAd() {\r\n        if (this.bannerAd) {\r\n            this.bannerAd.hide();\r\n            this.bannerAd.destroy();\r\n            this.bannerAd = null;\r\n        }\r\n    }\r\n\r\n    createVideoAd(success?: Function, fail?: Function) {\r\n        if (!this.video_id) {\r\n            success && success();\r\n            return;\r\n        }\r\n\r\n        if (!this.videoAd) {\r\n            this.videoAd = qg.createRewardedVideoAd({\r\n                posId: this.video_id\r\n            });\r\n\r\n            this.videoAd.onLoad(() => {\r\n                console.log(\"激励视频广告加载成功\");\r\n            });\r\n\r\n            this.videoAd.onError(() => {\r\n                console.log(\"激励视频广告加载失败\");\r\n                this.videoFail && this.videoFail();\r\n            })\r\n\r\n            this.videoAd.onClose((res) => {\r\n                if (res && res.isEnded) {\r\n                    console.log(\"激励视频正常播放结束\");\r\n                    this.videoSuccess && this.videoSuccess();\r\n                } else {\r\n                    console.log(\"激励视频播放中途推出\");\r\n                    this.videoFail && this.videoFail();\r\n                }\r\n            })\r\n        }\r\n\r\n        this.videoSuccess = success;\r\n        this.videoFail = fail;\r\n        \r\n        this.videoAd.show()\r\n        .catch(() => {\r\n            this.videoAd.load()\r\n            .then(() => {\r\n                this.videoAd.show();\r\n            })\r\n        })\r\n    }\r\n\r\n    createInterstitialAd(callback?: Function) {\r\n        if (!this.interstitial_id) {\r\n            callback && callback();\r\n            return;\r\n        }\r\n\r\n        let interstitialAd = qg.createInterstitialAd({\r\n            posId: this.interstitial_id\r\n        });\r\n        interstitialAd.show();\r\n        interstitialAd.onLoad(() => {\r\n            console.log('插屏广告加载成功');\r\n        });\r\n        interstitialAd.onError(() => {\r\n            console.log('插屏广告加载失败');\r\n        });\r\n        interstitialAd.onClose(() => {\r\n            console.log('插屏广告关闭');\r\n            callback && callback();\r\n        })\r\n    }\r\n\r\n    createNativeAd(success?: Function, fail?: Function) {\r\n        if (!this.native_id) {\r\n            success && success();\r\n            return;\r\n        }\r\n        \r\n        if (!this.nativeAd) {\r\n            this.nativeAd = qg.createNativeAd({\r\n                posId: this.native_id\r\n            });\r\n\r\n            this.nativeAd.onLoad((res) => {\r\n                console.log(\"原生广告加载成功\");\r\n                if (res && res.adList && res.adList.length) {\r\n                    let ad = res.adList[Math.floor(Math.random() * res.adList.length)];\r\n                    this.nativeSuccess && this.nativeSuccess({\r\n                        id: ad.adId,\r\n                        title: ad.title,\r\n                        desc: ad.desc,\r\n                        icon: ad.icon,\r\n                        image: ad.imgUrlList[Math.floor(Math.random() * ad.imgUrlList.length)],\r\n                        logo: ad.logoUrl,\r\n                        tips: ad.clickBtnTxt,\r\n                        mode: 0\r\n                    })\r\n                } else {\r\n                    this.nativeFail && this.nativeFail();\r\n                }\r\n            })\r\n\r\n            this.nativeAd.onError(() => {\r\n                console.log(\"原生广告加载失败\");\r\n                this.nativeFail && this.nativeFail();\r\n            })\r\n        }\r\n\r\n        this.nativeSuccess = success;\r\n        this.nativeFail = fail;\r\n\r\n        this.nativeAd.load();\r\n    }\r\n\r\n    reportAdShow(id: string) {\r\n        if (this.nativeAd) {\r\n            this.nativeAd.reportAdShow({\r\n                adId: id\r\n            })\r\n        }\r\n    }\r\n\r\n    reportAdClick(id: string) {\r\n        if (this.nativeAd) {\r\n            this.nativeAd.reportAdClick({\r\n                adId: id\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const vivoAd: VivoAd = new VivoAd();","import { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GNativeTool } from \"../Logic/NativeTool\";\r\nimport { GQiNiuTool } from \"../Logic/QiNiuTool\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nexport let GTipLabel:TipLabel=null\r\n\r\n@ccclass\r\nexport class TipLabel extends cc.Component\r\n{\r\n    Btn_Voice_OnStart()\r\n    {\r\n        let time = new Date().getTime()\r\n        GNativeTool.beginVoiceRecord((path)=>\r\n        {\r\n            if(!path)\r\n            {\r\n                //失败之类的\r\n                return\r\n            }\r\n            let dt = new Date().getTime() - time\r\n            if(dt<1500)//小于1.5秒退出\r\n            {\r\n                //时间太短放弃发送\r\n                return\r\n            }\r\n            GQiNiuTool.uploadFile(\"voice_\"+GUserMgr.self_user_id+\".wav\",path, (status,url)=>\r\n            {\r\n                if (status == 1)\r\n                {\r\n                    let chat =\r\n                    {\r\n                        //type:EChatType.Voice,\r\n                        content:url\r\n                    }\r\n                    //GNetGameOX.send_ox_chat(chat)\r\n                }\r\n                else \r\n                {\r\n                    // 失败\r\n                }\r\n            })\r\n        })\r\n    }\r\n    Btn_Voice_OnCancel()\r\n    {\r\n        GNativeTool.cancelRecord()\r\n    }\r\n    Btn_Voice_OnEnd()\r\n    {\r\n        GNativeTool.endVoiceRecord()\r\n    }\r\n}","import { BaseAd } from \"./BaseAd\";\r\n\r\nclass WXAd extends BaseAd {\r\n    private bannerAd: wx.BannerAd = null;\r\n    private videoAd: wx.RewardedVideoAd = null;\r\n    private videoSuccess: Function = null;\r\n    private videoFail: Function = null;\r\n    private nativeAd = null;\r\n    private nativeSuccess: Function = null;\r\n    private nativeFail: Function = null;\r\n\r\n    constructor() {\r\n        super(\"wechat\");\r\n    }\r\n\r\n    private getUserInfo(success?: (res: wx.UserInfo) => void, fail?: () => void) {\r\n        wx.getSetting({\r\n            success: () => {\r\n                wx.getUserInfo({\r\n                    success: (res) => {\r\n                        success && success(res.userInfo);\r\n                    },\r\n                    fail: () => {\r\n                        fail && fail();\r\n                    }\r\n                })\r\n            },\r\n            fail: () => {\r\n                let sysInfo = wx.getSystemInfoSync();\r\n                let width = sysInfo.screenWidth;\r\n                let height = sysInfo.screenHeight;\r\n                let button = wx.createUserInfoButton({\r\n                    type: \"text\",\r\n                    text: \"\",\r\n                    style: {\r\n                        left: 0,\r\n                        top: 0,\r\n                        width: width,\r\n                        height: height,\r\n                        lineHeight: height,\r\n                        backgroundColor: '#00000080',\r\n                        color: '#ffffff',\r\n                        textAlign: 'center',\r\n                        fontSize: 16,\r\n                        borderRadius: 4\r\n                    }\r\n                });\r\n\r\n                button.onTap((res) => {\r\n                    if (res.userInfo) {\r\n                        button.destroy();\r\n                        success && success(res.userInfo);\r\n                    } else {\r\n                        fail && fail();\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    login(success?: Function, fail?: Function) {\r\n        wx.login({\r\n            success: (res) => {\r\n                success && success({\r\n                    appid: wx.getAccountInfoSync().miniProgram.appId,\r\n                    platform: this.platform,\r\n                    code: res.code\r\n                })\r\n                // this.getUserInfo((userInfo) => {\r\n                //         success && success({\r\n                //             nickname: userInfo.nickName,\r\n                //             avatar: userInfo.avatarUrl,\r\n                //             gender: userInfo.gender,\r\n                //             appid: wx.getAccountInfoSync().miniProgram.appId,\r\n                //             platform: \"wechat\",\r\n                //             code: res.code\r\n                //         });\r\n                //     }, () => {\r\n                //         fail && fail();\r\n                //     }\r\n                // )\r\n            },\r\n            fail: () => {\r\n                fail && fail();\r\n            }\r\n        });\r\n    }\r\n\r\n    share() {\r\n\r\n    }\r\n\r\n    requestSubscribeMessage(success?: Function, fail?: Function) {\r\n        if (!this.subscribe_templates || !this.subscribe_templates.length) {\r\n            fail && fail();\r\n            return;\r\n        }\r\n\r\n        // wx.requestSubscribeMessage({\r\n        //     tmplIds: this.subscribe_templates,\r\n        //     success: function(res) {\r\n\r\n        //     },\r\n        //     fail: function(res) {\r\n\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    createBannerAd() {\r\n        if (!this.banner_id) {\r\n            return;\r\n        }\r\n\r\n        if (!this.bannerAd) {\r\n            let sysInfo = wx.getSystemInfoSync();\r\n            this.bannerAd = wx.createBannerAd({\r\n                adUnitId: this.banner_id,\r\n                style: {\r\n                    width: Math.min((sysInfo.pixelRatio * 300), sysInfo.screenWidth),\r\n                }\r\n            });\r\n\r\n            this.bannerAd.onResize((size) => {\r\n                this.bannerAd.style.top = sysInfo.screenHeight - size.height;\r\n                this.bannerAd.style.left = sysInfo.screenWidth / 2 - size.width / 2;\r\n            })\r\n\r\n            this.bannerAd.show();\r\n            this.bannerAd.onLoad(() => {\r\n                console.log(\"Banner广告加载成功\");\r\n            });\r\n            this.bannerAd.onError(() => {\r\n                console.log(\"Banner广告加载失败\");\r\n            });\r\n        }\r\n    }\r\n\r\n    destroyBannerAd() {\r\n        if (this.bannerAd) {\r\n            this.bannerAd.hide();\r\n            this.bannerAd.destroy();\r\n            this.bannerAd = null;\r\n        }\r\n    }\r\n\r\n    createVideoAd(success?: Function, fail?: Function) {\r\n        if (!this.video_id) {\r\n            success && success();\r\n            return;\r\n        }\r\n\r\n        if (!this.videoAd) {\r\n            this.videoAd = wx.createRewardedVideoAd({\r\n                adUnitId: this.video_id\r\n            });\r\n\r\n            this.videoAd.onLoad(() => {\r\n                console.log(\"激励视频广告加载成功\");\r\n            });\r\n\r\n            this.videoAd.onError(() => {\r\n                console.log(\"激励视频广告加载失败\");\r\n                this.videoFail && this.videoFail();\r\n            })\r\n\r\n            this.videoAd.onClose((res) => {\r\n                if (res && res.isEnded) {\r\n                    console.log(\"激励视频正常播放结束\");\r\n                    this.videoSuccess && this.videoSuccess();\r\n                } else {\r\n                    console.log(\"激励视频播放中途推出\");\r\n                    this.videoFail && this.videoFail();\r\n                }\r\n            })\r\n        }\r\n\r\n        this.videoSuccess = success;\r\n        this.videoFail = fail;\r\n\r\n        this.videoAd.show()\r\n        .catch(() => {\r\n            this.videoAd.load()\r\n            .then(() => {\r\n                this.videoAd.show();\r\n            })\r\n        })\r\n    }\r\n\r\n    createInterstitialAd(callback?: Function) {\r\n        if (!this.interstitial_id) {\r\n            callback && callback();\r\n            return;\r\n        }\r\n        \r\n        let interstitialAd = wx.createInterstitialAd({\r\n            adUnitId: this.interstitial_id\r\n        });\r\n        interstitialAd.show();\r\n        interstitialAd.onLoad(() => {\r\n            console.log('插屏广告加载成功');\r\n        });\r\n        interstitialAd.onError(() => {\r\n            console.log('插屏广告加载失败');\r\n        });\r\n        interstitialAd.onClose(() => {\r\n            console.log('插屏广告关闭');\r\n            callback && callback();\r\n        })\r\n    }\r\n    \r\n    createNativeAd(success?: Function, fail?: Function) {\r\n        if (!this.native_id) {\r\n            success && success();\r\n            return;\r\n        }\r\n    }\r\n    \r\n    reportAdShow(id: string) {\r\n\r\n    }\r\n    \r\n    reportAdClick(id: string) {\r\n\r\n    }\r\n\r\n    vibrateShort() {\r\n        wx.vibrateShort();\r\n    }\r\n\r\n    vibrateLong() {\r\n        wx.vibrateLong();\r\n    }\r\n}\r\n\r\nexport const wxAd: WXAd = new WXAd();","import { Page } from \"../../../Framework/View/Page/Page\";\r\nimport { GPageMgr } from \"../../../Framework/View/Page/PageManager\";\r\nimport { layerMgr } from \"../../../manager/LayerManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WalletLayer extends Page {\r\n\r\n    @property(cc.Label)\r\n    labelMoney: cc.Label = null;\r\n\r\n    initTable() {\r\n    }\r\n\r\n    onClickCharge() {\r\n        //this.hide();\r\n        GPageMgr.openPage(\"Page_Charge\")\r\n    }\r\n\r\n    onClickWithdraw() {\r\n        GPageMgr.openPage(\"Page_WithDraw\")\r\n    }\r\n}\r\n","import { GHelper } from \"./Helper\";\r\nimport { GNativeTool } from \"./NativeTool\";\r\n\r\nexport enum EShareTo\r\n{\r\n    Friend=0,\r\n    Group,\r\n    Favorites\r\n}\r\nexport enum EMediaType\r\n{\r\n    Text=0,\r\n    Image,\r\n    Page,\r\n    Music,\r\n    Vedio\r\n}\r\n\r\nexport enum EWeiXinCode\r\n{\r\n    OK=0,\r\n    ErrorNoWeiXin=1,\r\n    ErrorNullAPI=2,\r\n    ErrorGetAccessToken=3,\r\n    ErrorGetUserInfo=4,\r\n    ErrorCancle=5,\r\n    ErrorDenyByWeixin=6\r\n}\r\nexport class WeiXinLoginModel\r\n{\r\n    code=null\r\n    wxcode=null\r\n    accessToken=\"\"\r\n    refreshToken=\"\"\r\n    openId=\"\"\r\n    roleName=\"\"\r\n    avatar=\"\"\r\n    sex=-1\r\n    unionId=\"\"\r\n}\r\nexport class WeiXinPayModel\r\n{\r\n    partnerId=\"\"\r\n    prepayId=\"\"\r\n    packageValue=\"\"\r\n    nonceStr=\"\"\r\n    timeStamp=\"\"\r\n    sign=\"\"\r\n}\r\n/*\r\n    分享的类型\t需要的参数\r\n    文本\tshareTo、mediaType、text\r\n    图片\tshareTo、mediaType、imagePath、thumbImage（或 thumbSize）\r\n    页面\tshareTo、mediaType、thumbImage（或 imagePath、thumbSize）、url、title、text\r\n    音乐\tshareTo、mediaType、thumbImage（或 imagePath、thumbSize）、url、title、text\r\n    视频\tshareTo、mediaType、thumbImage（或 imagePath、thumbSize）、url、title、text\r\n*/\r\nexport class WeiXinShareModel\r\n{\r\n    shareTo=-1//分享的目标，0 聊天窗口，1 朋友圈，2 收藏\r\n    mediaType=-1//分享类型，0 文本，1 图片，2 页面，3 音乐，4 视频\r\n    url=\"\"//音乐、视频或网页的链接\r\n    imagePath=\"\"//图片路径（本地图片，如\"/sdcard/test.png\"）\r\n    title=\"\"//分享的标题\r\n    text=\"\"//分享的内容\r\n}\r\nexport let GWXTool:WeiXinTool=null\r\nclass WeiXinTool\r\n{\r\n    /**\r\n     * 微信的appid，通过开发者账号生成的\r\n     */\r\n    protected _app_id = null\r\n    get appId()\r\n    {\r\n        if(!this._app_id)\r\n        {\r\n            if(cc.sys.os == cc.sys.OS_ANDROID) \r\n            {\r\n                this._app_id = jsb.reflection.callStaticMethod(this._wx_plugin, \"getAppId\",this._return_one_string)\r\n            }\r\n            else if(cc.sys.os == cc.sys.OS_IOS) \r\n            {\r\n                this._app_id = jsb.reflection.callStaticMethod(\"WechatLogin\", \"getAppId\")\r\n            }\r\n        }\r\n        return this._app_id\r\n    }\r\n    /**\r\n     * 微信的app secret，通过开发者账号生成的\r\n     */\r\n    protected _app_idsecret = null\r\n    get secret()\r\n    {\r\n        if(!this._app_idsecret)\r\n        {\r\n            if(cc.sys.os == cc.sys.OS_ANDROID) \r\n            {\r\n                this._app_idsecret = jsb.reflection.callStaticMethod(this._wx_plugin, \"getSecret\",this._return_one_string)\r\n            }\r\n            else if(cc.sys.os == cc.sys.OS_IOS) \r\n            {\r\n                this._app_idsecret = jsb.reflection.callStaticMethod(\"WechatLogin\", \"getSecret\")\r\n            }\r\n        }\r\n        return this._app_idsecret\r\n    }\r\n    protected _wx_plugin         = \"com/eryi/casino/wxapi/WXPlugin\"\r\n    protected _pay_activity      = \"com/eryi/casino/wxapi/WXPayEntryActivity\"\r\n\r\n    protected _one_string_param  = \"(Ljava/lang/String;)V\"\r\n    protected _two_string_params = \"(Ljava/lang/String;Ljava/lang/String;)V\"\r\n    protected _return_one_string = \"()Ljava/lang/String;\"\r\n    protected _return_one_bool = \"()Z\"\r\n    protected _login_cb:Function=null\r\n    protected _share_cb:Function=null\r\n    protected _pay_cb:Function=null\r\n\r\n    //是否支持微信调用（有可能微信没安装）\r\n    protected _is_support=null\r\n    get isSupport():boolean\r\n    {\r\n        if(this._is_support==null)\r\n        {\r\n            if(cc.sys.isBrowser)\r\n            {\r\n                //方便测试\r\n                return false\r\n            }\r\n            if(cc.sys.os == cc.sys.OS_ANDROID) \r\n            {\r\n                this._is_support = jsb.reflection.callStaticMethod(this._wx_plugin, \"isSupport\",this._return_one_bool)\r\n            }\r\n            else if(cc.sys.os == cc.sys.OS_IOS) \r\n            {\r\n                this._is_support = jsb.reflection.callStaticMethod(\"WechatLogin\", \"isSupport\")\r\n            }\r\n        }\r\n        //ios有可能出错\r\n        return true\r\n        //return this._is_support\r\n    }\r\n    constructor()\r\n    {\r\n        \r\n    }\r\n    \r\n    login(fun:Function)\r\n    {\r\n        if(cc.sys.isBrowser)\r\n        {\r\n            return\r\n        }\r\n        GHelper.showRunningTip()\r\n        this._login_cb = fun\r\n        if(cc.sys.os == cc.sys.OS_ANDROID) \r\n        {\r\n            let fun_name = this._convertCallBackName(this._on_login_callback.bind(this),\"wx_login\")\r\n            jsb.reflection.callStaticMethod(this._wx_plugin, \"login\", this._one_string_param, fun_name)\r\n        }\r\n        else if(cc.sys.os == cc.sys.OS_IOS) \r\n        {\r\n            let fun_name = this._convertCallBackName(this._on_login_callback.bind(this),\"wx_login\")\r\n            jsb.reflection.callStaticMethod(\"WechatLogin\", \"setJsCallback:\", fun_name)\r\n            jsb.reflection.callStaticMethod(\"WechatLogin\", \"login\")\r\n        }\r\n    }\r\n    protected _on_login_callback(userInfo)\r\n    {\r\n        userInfo.code = parseInt(userInfo.code)\r\n        if(userInfo.sex)\r\n        {\r\n            userInfo.sex = parseInt(userInfo.sex)\r\n        }\r\n\r\n        if(userInfo.code)\r\n        {\r\n            let err_info = \"\"\r\n            switch(userInfo.code)\r\n            {\r\n                case EWeiXinCode.ErrorNoWeiXin:\r\n                {\r\n                    err_info=\"没有安装微信\"\r\n                    break\r\n                }\r\n                case EWeiXinCode.ErrorNullAPI:\r\n                {\r\n                    err_info=\"没找到可调用的API\"\r\n                    break\r\n                }\r\n                case EWeiXinCode.ErrorGetAccessToken:\r\n                {\r\n                    err_info=\"获取AccessToken的时候出错\"\r\n                    break\r\n                }\r\n                case EWeiXinCode.ErrorGetUserInfo:\r\n                {\r\n                    err_info=\"获取UserInfo的时候出错\"\r\n                    break\r\n                }\r\n                case EWeiXinCode.ErrorCancle:\r\n                {\r\n                    err_info=\"取消微信登陆\"\r\n                    break\r\n                }\r\n                case EWeiXinCode.ErrorDenyByWeixin:\r\n                {\r\n                    err_info=\"微信验证失败\"\r\n                    break\r\n                }\r\n                default:\r\n                {\r\n                    err_info=\"微信登陆失败\"\r\n                    break\r\n                }\r\n            }\r\n            if(err_info.length>0)\r\n            {\r\n                GNativeTool.log(\"weixin\",err_info);\r\n                GHelper.showTip(err_info)\r\n                GHelper.clearRunningTip()\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(userInfo.wxcode)\r\n            {\r\n                //让客户端直接用code登陆\r\n                GHelper.clearRunningTip()\r\n                if(this._login_cb)\r\n                {\r\n                    this._login_cb(userInfo)\r\n                }\r\n                //this._getAccessToken(userInfo.wxcode)\r\n            }\r\n            else\r\n            {\r\n                GHelper.clearRunningTip()\r\n                if(this._login_cb)\r\n                {\r\n                    this._login_cb(userInfo)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    share(wxsm:WeiXinShareModel, onCallFunc) \r\n    {\r\n        if(cc.sys.isBrowser)\r\n        {\r\n            return\r\n        }\r\n        this._share_cb = onCallFunc\r\n\r\n        if(cc.sys.os == cc.sys.OS_ANDROID)\r\n        {\r\n            let str_params = JSON.stringify(wxsm)\r\n            let fun_name = this._convertCallBackName(this._on_share_callback.bind(this),\"wx_share\")\r\n            jsb.reflection.callStaticMethod(this._wx_plugin, \"share\", this._two_string_params,str_params,fun_name)\r\n        } \r\n        else if(cc.sys.os == cc.sys.OS_IOS)\r\n        {\r\n            if(wxsm.mediaType!=EMediaType.Image)\r\n            {\r\n                wxsm.imagePath = null\r\n                delete wxsm.imagePath\r\n            }\r\n            if(wxsm.mediaType!=EMediaType.Page)\r\n            {\r\n                wxsm.url = null\r\n                delete wxsm.url \r\n            }\r\n            let str_params = JSON.stringify(wxsm)\r\n            let fun_name = this._convertCallBackName(this._on_share_callback.bind(this),\"wx_share\")\r\n            jsb.reflection.callStaticMethod(\"WechatShare\", \"setJsCallback:\", fun_name)\r\n            jsb.reflection.callStaticMethod(\"WechatShare\", \"share:\",str_params)\r\n        }\r\n    }\r\n    protected _on_share_callback(params)\r\n    {\r\n        try\r\n        {\r\n\r\n        }\r\n        catch(e)\r\n        {\r\n\r\n        }\r\n    }\r\n    pay(wxpm:WeiXinPayModel,onCallFunc)\r\n    {\r\n        this._pay_cb = onCallFunc\r\n        var str_params = JSON.stringify(wxpm)\r\n        if(cc.sys.os == cc.sys.OS_ANDROID)\r\n        {\r\n            let listener = this._convertCallBackName(this._on_pay_callback.bind(this), \"wx_pay\")\r\n            jsb.reflection.callStaticMethod(this._wx_plugin, \"openShop\", this._two_string_params, str_params, listener)\r\n        }\r\n    }\r\n    protected _on_pay_callback(params)\r\n    {\r\n        let result = params\r\n        if(cc.sys.os == cc.sys.OS_ANDROID)\r\n        {\r\n            if(result.code != 998)\r\n            {\r\n                if (result.code == 1) \r\n                {\r\n                    //微信不存在\r\n                }\r\n                if (result.code == 2) \r\n                {\r\n                    //微信api不存在\r\n                } \r\n                if (result.code == 3) \r\n                { \r\n                    //取消\r\n                }\r\n                if (result.code == 4) \r\n                { \r\n                    //失败\r\n                }\r\n            } \r\n            else \r\n            {\r\n                // 充值成功\r\n                this._pay_cb()\r\n            }\r\n        }\r\n    }\r\n    protected _getAccessToken(wxcode)\r\n    {\r\n        let url = \"https://api.weixin.qq.com/sns/oauth2/access_token?appid=\"\r\n        url += this.appId + \"&secret=\" + this.secret + \"&code=\" + wxcode + \"&grant_type=authorization_code\"\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = ()=>\r\n        {\r\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) \r\n            {\r\n                let json = xhr.response\r\n                if(json.errmsg)\r\n                {\r\n                    GHelper.showTip(json.errmsg)\r\n                    GHelper.clearRunningTip() \r\n                }\r\n                else\r\n                {\r\n                    this._getUserInfo(json.access_token, json.refresh_token, json.openid)\r\n                }\r\n            }\r\n            else\r\n            {\r\n                GHelper.showTip(\"获取accessToken失败!\")\r\n                GHelper.clearRunningTip()\r\n            }\r\n        }\r\n        xhr.responseType = \"json\"\r\n        xhr.open(\"GET\", url, true)\r\n        xhr.send()\r\n    }\r\n    protected _refreshAccessToken(refreshToken) \r\n    {\r\n        let url=\"https://api.weixin.qq.com/sns/oauth2/refresh_token?appid=\"\r\n        url=url+this.appId\r\n        url=url+\"&grant_type=refresh_token\"\r\n        url=url+\"&refresh_token=\"+refreshToken\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = ()=>\r\n        {\r\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) \r\n            {\r\n                let json = xhr.response\r\n                this._getUserInfo(json.access_token, refreshToken, json.openid)\r\n            }\r\n            else\r\n            {\r\n                GHelper.showTip(\"获取accessToken失败!\")\r\n            }\r\n        }\r\n        xhr.responseType = \"json\"\r\n        xhr.open(\"GET\", url, true)\r\n        xhr.send()\r\n\t}\r\n\t\r\n\tprotected _checkAccessToken(accessToken,openId)\r\n\t{\r\n        let url=\"https://api.weixin.qq.com/sns/auth?access_token=\";\r\n        url=url+accessToken\r\n        url=url+\"&openid=\"+openId\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = ()=>\r\n        {\r\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) \r\n            {\r\n                let json = xhr.response\r\n                let errorCode=json.errcode\r\n            }\r\n        }\r\n        xhr.responseType = \"json\"\r\n        xhr.open(\"GET\", url, true)\r\n        xhr.send()\r\n\t}\r\n\t\r\n    protected _getUserInfo(accessToken,refreshToken,openId) \r\n    {\r\n        let url = \"https://api.weixin.qq.com/sns/userinfo?access_token=\"\r\n        url = url + accessToken + \"&openid=\" + openId\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = ()=>\r\n        {\r\n            GHelper.clearRunningTip()\r\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) \r\n            {\r\n                let json = xhr.response\r\n                if(json.errmsg)\r\n                {\r\n                    GHelper.showTip(json.errmsg)\r\n                    GHelper.clearRunningTip() \r\n                }\r\n                else\r\n                {\r\n                    let wxlm=new WeiXinLoginModel()\r\n                    wxlm.code=0\r\n                    wxlm.accessToken = accessToken\r\n                    wxlm.refreshToken = refreshToken\r\n                    wxlm.openId = openId\r\n                    wxlm.unionId = json.unionid\r\n                    wxlm.roleName = json.nickname\r\n                    wxlm.avatar = json.headimgurl\r\n                    wxlm.sex = json.sex\r\n                    if(this._login_cb)\r\n                    {\r\n                        this._login_cb(wxlm)\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                GHelper.showTip(\"获取userInfo失败!\")\r\n            }\r\n        }\r\n        xhr.responseType = \"json\"\r\n        xhr.open(\"GET\", url, true)\r\n        xhr.send()\r\n\t}\r\n    protected _convertCallBackName(fun, name) \r\n    {\r\n        var funName = \"\"\r\n        if (name)\r\n        {\r\n            console[name] = function(params)\r\n            {\r\n                fun(params)\r\n            }\r\n            funName = \"console.\" + name\r\n        } \r\n        else \r\n        {\r\n            (<any>console).nativeToJsCallback = function(params)\r\n            {\r\n                fun(params)\r\n            }\r\n            funName = \"console.nativeToJsCallback\"\r\n        }\r\n        return funName\r\n    }\r\n}\r\nGWXTool = new WeiXinTool()","import { core } from \"../../Framework/Core/Base\"\r\nimport { GHelper } from \"../../Framework/Logic/Helper\"\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\"\r\nimport { AddressItem, GUserMgr } from \"../../Logic/UserManager\"\r\nimport { GHallHttp } from \"../../Net/HallHttp\"\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\"\r\n\r\nexport class FollowerItem\r\n{\r\n    id=0\r\n    nickname=\"\"\r\n    logo=\"\"\r\n    create_time=0\r\n    money=0\r\n}\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_AddressItem extends cc.Component {\r\n\r\n    @property(cc.Toggle)\r\n    tg_choose: cc.Toggle = null\r\n\r\n    @property(cc.Label)\r\n    lbl_name_phone: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_address: cc.Label = null\r\n\r\n    protected _address:AddressItem=null\r\n    onLoad()\r\n    {\r\n        GMsgCenter.register(\"address_changed\",this.onChanged.bind(this),this)\r\n    }\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"address_changed\",this)\r\n    }\r\n    init(address:AddressItem) {\r\n        this._address=address\r\n        this.lbl_name_phone.string=address.name+\"  \"+address.phone\r\n        this.lbl_address.string=address.address\r\n        let address_time=GUserMgr.self_user.address_time||0\r\n        if(this._address.create_time==address_time)\r\n        {\r\n            this.tg_choose.check()\r\n        }\r\n        else\r\n        {\r\n            this.tg_choose.uncheck()\r\n        }\r\n    }\r\n    Btn_Edit_OnClick(event)\r\n    {\r\n        GPageMgr.openPage(\"Page_EditAddress\",this._address)\r\n    }\r\n    Btn_Choose_OnClick(event)\r\n    {\r\n        GMsgCenter.send(\"address_changed\",this._address.create_time)\r\n    }\r\n    onChanged(create_time:number)\r\n    {\r\n        if(this._address.create_time==create_time)\r\n        {\r\n            this.tg_choose.check()\r\n            GUserMgr.self_user.address_time=this._address.create_time\r\n            GHallHttp.request(\"chooseaddress\",{address_time:this._address.create_time})\r\n        }\r\n        else\r\n        {\r\n            this.tg_choose.uncheck()\r\n        }\r\n    }\r\n}\r\n","import { core } from \"../../Framework/Core/Base\"\r\nimport { GHelper } from \"../../Framework/Logic/Helper\"\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\"\r\nimport { AddressItem, GUserMgr } from \"../../Logic/UserManager\"\r\nimport { GHallHttp } from \"../../Net/HallHttp\"\r\nimport { BagItemItem, EBagItemState, GItemCfg, ItemItem } from \"../../Service/ItemService\"\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\"\r\n\r\nimport viewCell from \"../../Framework/TableView/viewCell\"\r\nimport tableView from \"../../Framework/TableView/tableView\"\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_ChangeItem extends viewCell {\r\n\r\n    @property(cc.Sprite)\r\n    sp_icon: cc.Sprite = null\r\n\r\n    @property(cc.Label)\r\n    lbl_title: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_subtitle: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_count: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_time: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    lbl_time_end: cc.Label = null;\r\n\r\n\r\n    @property(cc.Node)\r\n    layout1: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    layout2: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    layout3: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    layout4: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    node_btnexchange:cc.Node=null\r\n\r\n    @property(cc.Node)\r\n    node_btnexchange_reward:cc.Node=null\r\n    \r\n\r\n    @property(cc.Node)\r\n    node_btndonate:cc.Node=null\r\n\r\n    @property(cc.Node)\r\n    node_btnuse:cc.Node=null\r\n\r\n    @property(cc.Node)\r\n    node_btnGiveCheck:cc.Node=null\r\n\r\n\r\n    protected _item:BagItemItem=null\r\n    protected itemM = null\r\n\r\n    infoBt()\r\n    {\r\n        if(this.delegate.delegate._checkIndex == '2')\r\n        {\r\n            GPageMgr.openPage(\"Page_MyPrizeInfo\",this._item)\r\n        }else if(this.delegate.delegate._checkIndex == '1'){\r\n            if(this._item.count>1){\r\n                this.delegate.delegate.onPageDetailClick\r\n                &&this.delegate.delegate.onPageDetailClick(this._item.item_id)\r\n            }\r\n        }\r\n    }\r\n    onLoad()\r\n    {\r\n        GMsgCenter.register(\"item_changed\",()=>\r\n        {\r\n            this.initBagItem(this._item)\r\n        },this)\r\n    }\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"item_changed\",this)\r\n    }\r\n    init(index: number, data?: any, tv?: tableView): void {\r\n        console.log(\"tb init\",index,data)\r\n        this.initBagItem(data)\r\n    }\r\n\r\n    reload(data?: any) {\r\n        this.initBagItem(data)\r\n    }\r\n\r\n    initBagItem(item:BagItemItem) {\r\n        this._item=item\r\n\r\n        let needHideBtn = false\r\n        let idex = this.delegate.delegate._checkIndex\r\n        if(this._item.give_check == 0 && parseInt(idex) == 1){\r\n            // 这里要显示使用按钮\r\n            needHideBtn = true\r\n        }\r\n\r\n        this.initlayout()\r\n        if (this._item.state==EBagItemState.None) {\r\n            this.layout1.active = true;\r\n            if (this._item.give_nickname==\"\") {\r\n                //表示自己获得\r\n                this.layout1.getChildByName(\"label_desc\").getComponent(cc.Label).string = \"奖品获得者:\"\r\n                this.layout1.getChildByName(\"label_winner\").getComponent(cc.Label).string = this._item.start_nickname + \" \" + this._item.start_userid\r\n                this.lbl_time.string = \"获得时间:\"+GHelper.convertTime(this._item.create_time)\r\n            }\r\n            else\r\n            {\r\n                this.layout1.getChildByName(\"label_desc\").getComponent(cc.Label).string = \"转赠人:\"\r\n                this.layout1.getChildByName(\"label_winner\").getComponent(cc.Label).string = this._item.give_nickname + \" \" + this._item.give_userid\r\n                this.lbl_time.string = \"转赠时间:\"+ GHelper.convertTime(this._item.give_time)\r\n            }\r\n        }\r\n        else if (this._item.state==EBagItemState.Exchanging)\r\n        {\r\n            this.lbl_time.string = \"申请时间:\"+GHelper.convertTime(this._item.apply_time)\r\n            this.layout2.active = true;\r\n        }\r\n        else if (this._item.state==EBagItemState.TransOk)\r\n        {\r\n            this.lbl_time.string = \"转赠时间:\"+ GHelper.convertTime(this._item.give_time)\r\n            this.layout3.active = true;\r\n            this.layout3.getChildByName(\"label_desc\").getComponent(cc.Label).string = \"被转赠人:\"\r\n            this.layout3.getChildByName(\"label_winner\").getComponent(cc.Label).string = this._item.to_nickname + \" \" + this._item.to_userid\r\n        }\r\n        else if (this._item.state==EBagItemState.ExOk)\r\n        {\r\n            this.lbl_time.string = \"兑换成功:\"+GHelper.convertTime(this._item.ok_time)\r\n            this.layout4.active = true;\r\n\r\n            if (this._item.give_nickname==\"\") {\r\n                this.layout4.getChildByName(\"label_winner\").getComponent(cc.Label).string = this._item.start_nickname + \" \" + this._item.start_userid\r\n            }else{\r\n                this.layout4.getChildByName(\"label_winner\").getComponent(cc.Label).string = this._item.to_nickname + \" \" + this._item.to_userid\r\n            }\r\n        }\r\n        else if (this._item.state==EBagItemState.ExRewardCoin)\r\n        {\r\n            this.lbl_time.string = \"兑换时间:\"+GHelper.convertTime(this._item.apply_time)\r\n\r\n            this.layout4.active = true;\r\n            if (this._item.give_nickname==\"\") {\r\n                this.layout4.getChildByName(\"label_winner\").getComponent(cc.Label).string = this._item.start_nickname + \" \" + this._item.start_userid\r\n            }else{\r\n                this.layout4.getChildByName(\"label_winner\").getComponent(cc.Label).string = this._item.to_nickname + \" \" + this._item.to_userid\r\n            }\r\n          \r\n\r\n            this.layout4.getChildByName(\"btn_exchange\").getChildByName(\"label\").getComponent(cc.Label).string = \"已兑换欢乐点\"\r\n\r\n        }\r\n        else if (this._item.state==EBagItemState.ExClub || this._item.state==EBagItemState.ExClubOk)\r\n        {\r\n            this.lbl_time.string = \"兑换时间:\"+GHelper.convertTime(this._item.apply_time)\r\n\r\n            this.layout4.active = true;\r\n            if (this._item.give_nickname==\"\") {\r\n                this.layout4.getChildByName(\"label_winner\").getComponent(cc.Label).string = this._item.start_nickname + \" \" + this._item.start_userid\r\n            }else{\r\n                this.layout4.getChildByName(\"label_winner\").getComponent(cc.Label).string = this._item.to_nickname + \" \" + this._item.to_userid\r\n            }\r\n            // this.layout4.getChildByName(\"label_winner\").getComponent(cc.Label).string = this._item.start_nickname + \" \" + this._item.start_userid\r\n            this.layout4.getChildByName(\"btn_exchange\").getChildByName(\"label\").getComponent(cc.Label).string = \"已扫码兑换\"\r\n        }\r\n \r\n        // if(this._item.state==EBagItemState.Used)\r\n        // {\r\n        //     this.btn_state.interactable=false\r\n        //     this.lbl_state.string=\"已使用\"\r\n        // }\r\n        // else if(this._item.state==EBagItemState.Using)\r\n        // {\r\n        //     this.lbl_state.string=\"使用中\"\r\n        // }\r\n        // else\r\n        // {\r\n        //     this.lbl_state.string=\"使用\"\r\n        // }\r\n        this.lbl_count.string = \"x\"+this._item.count\r\n        let itemM = GItemCfg.getItemById(this._item.item_id)\r\n        this.itemM = itemM\r\n\r\n\r\n   \r\n        cc.find('give_check',this.node).active = (this._item.give_check == 0)\r\n        // 是否是exitem\r\n\r\n        \r\n\r\n\r\n        if(!itemM)\r\n        {\r\n            this.lbl_title.string = '过期数据'\r\n            this.lbl_subtitle.string = '过期数据'\r\n            this.lbl_time.string = \"获得时间:\"+GHelper.convertTime(this._item.create_time)\r\n            return\r\n        }\r\n        \r\n        if(this._item.state == EBagItemState.None && itemM['past_day'] && itemM['past_day']>0)\r\n        {\r\n            this.lbl_time_end.node.active   = true;\r\n            let endTime = this._item.create_time+Number(itemM['past_day'])*24*60*60*1000;\r\n            this.lbl_time_end.string =\"过期时间  :  \" + GHelper.convertTime(endTime)\r\n            if(GHelper.getServerTime()>=endTime)\r\n            {\r\n                this.lbl_time_end.node.color = cc.Color.RED;\r\n            }else\r\n            {\r\n                this.lbl_time_end.node.color  = cc.Color.WHITE;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.lbl_time_end.node.active   =  false;\r\n\r\n        }\r\n\r\n        if(itemM.verifi_club && (itemM.verifi_club>0 || itemM.verifi_club<-1)){\r\n            this.node_btnuse.active = true\r\n        }else{\r\n            this.node_btnuse.active = false\r\n        }\r\n\r\n        \r\n        if(itemM.can_exchange)\r\n        {\r\n            this.node_btnexchange.active=true\r\n        }\r\n        else\r\n        {\r\n            this.node_btnexchange.active=false\r\n        }\r\n\r\n        if(itemM['can_exchange_rewardcoin'])\r\n        {\r\n            this.node_btnexchange_reward.active = true;\r\n        }\r\n        else\r\n        {\r\n            this.node_btnexchange_reward.active = false;\r\n        }\r\n\r\n        if(itemM.can_give)\r\n        {\r\n            this.node_btndonate.active=true\r\n        }\r\n        else\r\n        {\r\n            this.node_btndonate.active=false\r\n        }\r\n        this.lbl_title.string=itemM.name\r\n        this.lbl_subtitle.string=itemM.des\r\n\r\n        if(this._item.give_check == 0 && parseInt(idex) == 2){\r\n            // 这里要显示使用按钮\r\n            // this.node_btnexchange.active = false\r\n            this.node_btnGiveCheck.active = true\r\n            cc.find('layout3/btn_exchange',this.node).active = false\r\n        }else{\r\n            // this.node_btnexchange.active = true\r\n            this.node_btnGiveCheck.active = false\r\n            cc.find('layout3/btn_exchange',this.node).active = true\r\n        }\r\n\r\n        if(needHideBtn){\r\n            cc.find('layout1/New Layout',this.node).children.forEach((element)=>{\r\n                element.active = false  \r\n            })\r\n        }\r\n    }\r\n    initlayout() {\r\n        this.layout1.active = false;\r\n        this.layout2.active = false;\r\n        this.layout3.active = false;\r\n        this.layout4.active = false;\r\n    }\r\n\r\n\r\n\r\n    Btn_copy() {\r\n        let copyStr = \"订单号\"\r\n\t\tif (cc.sys.os == cc.sys.OS_ANDROID) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tjsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\", \"Copy\", \"(Ljava/lang/String;)V\", copyStr);\r\n\t\t\t}, 100);\r\n\t\t}\r\n        else if (cc.sys.os == cc.sys.OS_IOS) {\r\n            jsb.reflection.callStaticMethod(\"AppController\", \"Copy:\" , copyStr);\r\n        }\r\n\t\telse {\r\n\t\t\tconst el = document.createElement('textarea');\r\n\t\t\tel.value = copyStr;\r\n \r\n\t\t\t// Prevent keyboard from showing on mobile\r\n\t\t\tel.setAttribute('readonly', '');\r\n\t\t\t//el.style.contain = 'strict';\r\n\t\t\tel.style.position = 'absolute';\r\n\t\t\tel.style.left = '-9999px';\r\n\t\t\tel.style.fontSize = '12pt'; // Prevent zooming on iOS\r\n \r\n\t\t\tconst selection = getSelection()!;\r\n\t\t\tlet originalRange;\r\n\t\t\tif (selection.rangeCount > 0) {\r\n\t\t\t\toriginalRange = selection.getRangeAt(0);\r\n\t\t\t}\r\n \r\n\t\t\tdocument.body.appendChild(el);\r\n\t\t\tel.select();\r\n \r\n\t\t\t// Explicit selection workaround for iOS\r\n\t\t\tel.selectionStart = 0;\r\n\t\t\tel.selectionEnd = copyStr.length;\r\n \r\n\t\t\tlet success = false;\r\n\t\t\ttry {\r\n\t\t\t\tsuccess = document.execCommand('copy');\r\n\t\t\t} catch (err) { }\r\n \r\n\t\t\tdocument.body.removeChild(el);\r\n \r\n\t\t\tif (originalRange) {\r\n\t\t\t\tselection.removeAllRanges();\r\n\t\t\t\tselection.addRange(originalRange);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n    Btn_Change_Reward_OnClick()\r\n    {\r\n        GPageMgr.openPage(\"Page_ChangePoint\", this._item)\r\n    }\r\n    Btn_Change_OnClick() {\r\n        GPageMgr.openPage(\"Page_Change\", this._item)\r\n    }\r\n\r\n    Btn_donate_OnClick() {\r\n        GPageMgr.openPage(\"Page_Donate\", this._item)\r\n    }\r\n    // 出事票票二维码\r\n    Btn_use_OnClick() {\r\n        console.log(this._item)\r\n\r\n        GPageMgr.openPage(\"Page_UseItemByCode\", this._item)\r\n    }\r\n\r\n    Btn_Exchange_OnClick(event)\r\n    {\r\n        // if(this._item.state==EBagItemState.None)\r\n        // {\r\n        //     GPageMgr.openPage(\"Page_Exchange\",this._item)\r\n        // }\r\n    }\r\n\r\n    async Btn_Givecheck_OnClick(){\r\n        console.log(this.itemM)\r\n        // 弹窗提示\r\n        GPageMgr.openPage(\"Page_Tips\",{\r\n            tips:\"确定后,对方将立刻收到 (\"+this.itemM.name+')',\r\n            buttons:[\r\n                {\r\n                    label:\"确定\",\r\n                    callback:async ()=>\r\n                    {\r\n                        let res = await GHallHttp.request(\"unLockItem\",{user_id:GUserMgr.self_user.id,\r\n                                id:this._item.id})\r\n                            if(res.errcode){\r\n                                GHelper.showTip(res.errcode)\r\n                            }else{\r\n                                // this.delegate.delegate.resh()\r\n                                GMsgCenter.send('update_myprize')\r\n                            }\r\n                    }\r\n                },\r\n                {\r\n                    label:\"取消\",\r\n                    callback:()=>\r\n                    {\r\n\r\n                    }\r\n                }\r\n            ]\r\n        })\r\n\r\n\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport { ClubModel ,GClubSer} from \"../../Service/ClubService\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\"\r\n\r\n@ccclass\r\nexport default class Widget_CitySearchCupItem extends cc.Component {\r\n\r\n   \r\n    private clubData:ClubModel = null \r\n    \r\n    onLoad()\r\n    {\r\n        \r\n    }\r\n    protected onDestroy(): void {\r\n    }\r\n\r\n    setdata(jsonData){\r\n        let data:ClubModel = jsonData.clubdata\r\n        this.clubData = data\r\n        cc.find('lbl_clubname',this.node).getComponent(cc.Label).string = data.title\r\n\r\n        this.clubData = data\r\n    }\r\n\r\n    onDetailClick(){\r\n        GMsgCenter.send('club_detail',this.clubData)\r\n    }\r\n    \r\n}\r\n","const {ccclass, property} = cc._decorator;\r\nimport {cityDatas} from '../../Config/zdpkDatas'\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\n\r\n\r\n@ccclass\r\nexport default class Widget_ClubShaiXuanItem extends cc.Component {\r\n    @property([cc.Prefab])\r\n    pfb: cc.Prefab = null;\r\n\r\n    private lastChoiceNode:cc.Node = null\r\n    private lastChoiceCity:cc.Node = null\r\n    onLoad()\r\n    {\r\n        this.initData()\r\n    }\r\n\r\n    initData(){\r\n        for(var k in cityDatas){\r\n            let node =  cc.instantiate(this.pfb);\r\n            console.log(node.getContentSize())\r\n            node.parent = this.getComponent(cc.ScrollView).content\r\n            node.getComponent(this.pfb.name).setDelegate(this)\r\n            node.getComponent(this.pfb.name).setData(k,cityDatas[k])\r\n            node.getComponent(this.pfb.name)['setIsOpen'](false)\r\n            node['_SCname'] = this.pfb.name\r\n            node.x = 0\r\n        }\r\n    }\r\n\r\n\r\n    onDirectChoice(node){\r\n        if(this.lastChoiceNode == node){\r\n            return\r\n        }\r\n        this.lastChoiceNode = node\r\n        var allChildren =  this.getComponent(cc.ScrollView).content.children\r\n        allChildren.forEach((nn)=>{\r\n            if(node == nn){\r\n                nn.getComponent(nn['_SCname'])['setIsOpen'](true)\r\n            }else{\r\n                nn.getComponent(nn['_SCname'])['setIsOpen'](false)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    onCityChoice(node,city){\r\n        if(this.lastChoiceCity == city){\r\n            return\r\n        }\r\n        this.lastChoiceCity = city\r\n        // 请求网络 进行查找\r\n        \r\n        GMsgCenter.send('filtrate_club_search',city)\r\n    }\r\n    \r\n}","const {ccclass, property} = cc._decorator;\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport { ClubModel ,GClubSer} from \"../../Service/ClubService\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\"\r\n\r\n@ccclass\r\nexport default class Widget_ClubItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    sp_icon: cc.Sprite = null\r\n\r\n    @property(cc.Label)\r\n    lbl_clubname: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_areaname: cc.Label = null\r\n\r\n    @property(cc.Button)\r\n    btn_join: cc.Button = null\r\n\r\n    @property(cc.Node)\r\n    im_joined: cc.Node = null\r\n\r\n\r\n    private clubData:ClubModel = null \r\n    \r\n    onLoad()\r\n    {\r\n        \r\n    }\r\n    protected onDestroy(): void {\r\n    }\r\n    Btn_Join_Click(event)\r\n    {\r\n        this.onJoninClubClick()\r\n    }\r\n\r\n    btn_Detail_click(event)\r\n    {\r\n        GMsgCenter.send('club_detail',this.clubData)\r\n    }\r\n\r\n    refreshData(){\r\n        console.log('refreshData')\r\n        this.refreshIsJoined()\r\n    }\r\n    \r\n    setdata(jsonData) {\r\n        cc.log(\"ab\")\r\n        let data:ClubModel = jsonData.clubdata\r\n        this.clubData = data\r\n        this.lbl_clubname.string = data.title\r\n        this.lbl_areaname.string = data.city\r\n\r\n\r\n\r\n        this.clubData = data\r\n\r\n        this.refreshIsJoined()\r\n    }\r\n\r\n    refreshIsJoined(){\r\n        this.im_joined.active = false\r\n        this.btn_join.node.active = true\r\n        for(var k in GUserMgr.self_user.clubs){\r\n            // console.log(k,this.clubData.id.toString())\r\n            if(k == this.clubData.id.toString()){\r\n                // this.nodeJoined.active = true\r\n                // this.nodeJoin.active = false\r\n                this.im_joined.active = true\r\n                this.btn_join.node.active = false\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    async onJoninClubClick(){\r\n        if(!this.clubData){\r\n            return\r\n        }\r\n        let res = await GClubSer.joinClub(this.clubData.id)\r\n        if(res.errcode){\r\n            this.refreshIsJoined()\r\n        }else{\r\n           GUserMgr.self_user.clubs[this.clubData.id.toString()] = this.clubData.service\r\n           this.clubData.user_count+=1\r\n           this.refreshIsJoined()\r\n        }\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nimport {ykUtils} from '../../utils/YkUtils'\r\n\r\n\r\n@ccclass\r\nexport default class Widget_ClubShaiXuanItem extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    maxDirect: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    city: cc.Node = null\r\n    \r\n    private cityNodes:cc.Node[] = []\r\n    private delegate = null\r\n    public isOpen = false\r\n\r\n    onLoad()\r\n    {\r\n        \r\n    }\r\n\r\n    setDelegate(delegate){\r\n        this.delegate = delegate\r\n    }\r\n    setData(direct,citys){\r\n        cc.find('lb_directname',this.maxDirect).getComponent(cc.Label).string = direct\r\n        ykUtils.addClickEventListener(this.node,this.maxDirect.getComponent(cc.Button),'Widget_ClubShaiXuanItem','onDirectClick',direct)\r\n        this.cityNodes.push(this.city)\r\n        for(let i=0;i< citys.length-1;i++){\r\n            let node = cc.instantiate(this.city)\r\n            this.cityNodes.push(node)\r\n            this.node.addChild(node)\r\n        }\r\n\r\n        for(var k in citys){\r\n            cc.find('lb_cityName', this.cityNodes[k]).getComponent(cc.Label).string = citys[k]\r\n            // 绑定点击事件\r\n            ykUtils.addClickEventListener(this.node,this.cityNodes[k].getComponent(cc.Button),'Widget_ClubShaiXuanItem','onCityClick',citys[k])\r\n        }\r\n    }\r\n\r\n\r\n    setIsOpen(isOpen){\r\n        if(isOpen){\r\n            this.setShowGray(this.maxDirect,true) \r\n        }else{\r\n            this.setShowGray(this.maxDirect,true) \r\n        }\r\n\r\n        this.cityNodes.forEach((node)=>{\r\n            node.active = isOpen\r\n            if(isOpen== false){\r\n                this.setShowGray(node,false)\r\n            }\r\n        })\r\n    }\r\n\r\n    setCityOpen(city){\r\n        this.cityNodes.forEach((nn)=>{\r\n            if(cc.find('lb_cityName', nn).getComponent(cc.Label).string==city){\r\n                this.setShowGray(nn,true)\r\n            }else{\r\n                this.setShowGray(nn,false)\r\n            }\r\n        })\r\n    }\r\n\r\n    onDirectClick(event,eventData){\r\n        this.delegate.onDirectChoice(this.node)\r\n    }\r\n    onCityClick(event,eventData){\r\n        // console.log(eventData)\r\n        this.setCityOpen(eventData)\r\n        this.delegate.onCityChoice(this.node,eventData)\r\n    }\r\n\r\n    setShowGray(nn,isShowGray){\r\n        cc.find('back_gray',nn).active = isShowGray\r\n        cc.find('back_black',nn).active = !isShowGray\r\n        \r\n    }\r\n\r\n  \r\n}","import { GMatchSer ,MatchModel} from \"../../Service/MatchService\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport { core } from \"../../Framework/Core/Base\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_CupDetailItem extends cc.Component {\r\n    @property(cc.Label)\r\n    lbl_title: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_date: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_time: cc.Label = null\r\n\r\n    onLoad()\r\n    {\r\n        \r\n    }\r\n    protected onDestroy(): void {\r\n    }\r\n    Btn_Detail_Click(event)\r\n    {\r\n        // GMsgCenter.send(\"detail\")\r\n    }\r\n    setdata(jsonData:MatchModel) {\r\n        // cc.log(\"ab\")\r\n        console.log(\"detail Data\",JSON.stringify(jsonData))\r\n        \r\n        this.lbl_title.string = jsonData.des\r\n\r\n        let dt = new Date(Number(jsonData.match_starttime))\r\n\r\n        let str = core.format(dt,\"HH:mm\")\r\n        let str2 = core.format(dt,\"M-D\")\r\n\r\n        this.lbl_date = str\r\n        \r\n        this.lbl_time = str2\r\n    }\r\n}\r\n","import { GMatchSer, MatchInsModel, MatchModel } from \"../../Service/MatchService\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\n\r\nimport { ClubModel ,GClubSer} from \"../../Service/ClubService\";\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_CupItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    sp_icon: cc.Sprite = null\r\n\r\n    @property(cc.Label)\r\n    lbl_clubname: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_areaname: cc.Label = null\r\n\r\n    private curData = null\r\n\r\n    // @property(cc.Button)\r\n    // btn_join: cc.Button = null\r\n\r\n    onLoad()\r\n    {\r\n        \r\n    }\r\n    protected onDestroy(): void {\r\n    }\r\n    Btn_Enter_Click(event)\r\n    {\r\n        GMsgCenter.send(\"detail\",  this.curData[1])\r\n    }\r\n\r\n    setdata(jsonData) {\r\n        // this.lbl_clubname.string = jsonData.name\r\n        this.curData = jsonData\r\n        let clubId = this.curData[0]\r\n\r\n        this.setClubData(clubId)\r\n    }\r\n\r\n    async setClubData(clubId){\r\n        let clubData:ClubModel = await GClubSer.getClubDataById(clubId)\r\n        if(clubData==null){\r\n            this.lbl_clubname.string = '未查询到此俱乐部'\r\n            this.lbl_areaname.string = 'xx'\r\n        }else{\r\n            this.lbl_clubname.string = clubData.title\r\n            this.lbl_areaname.string = clubData.city\r\n        }\r\n    }\r\n\r\n}\r\n","import { GMatchSer, MatchInsModel, MatchModel } from \"../../Service/MatchService\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\n\r\nimport { ClubModel ,GClubSer} from \"../../Service/ClubService\";\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_DemainCode extends cc.Component {\r\n\r\n    private url = null\r\n\r\n    protected onLoad(): void {\r\n        this.generateDeminCode('http://www.baidu.com',this.node.width)\r\n    }\r\n    generateDeminCode(url,len?:number){\r\n        var drawNode = this.node.children[0]\r\n        if(len){\r\n            this.node.width = len\r\n            this.node.height = len\r\n        }else{\r\n            len = this.node.width\r\n        }\r\n        var margain = 10\r\n        \r\n        var drawNodelen = this.node.width - margain*2\r\n        drawNode.width = drawNodelen\r\n        drawNode.height = drawNodelen\r\n        drawNode.x = -drawNodelen/2\r\n        drawNode.y = -drawNodelen/2\r\n        this.url = url\r\n\r\n        var qrcode = new QRCode(-1, QRErrorCorrectLevel.H);\r\n        qrcode.addData(url);\r\n\t    qrcode.make();\r\n\r\n\t    var ctx = drawNode.getComponent(cc.Graphics);\r\n\r\n\t    // compute tileW/tileH based on node width and height\r\n\t    var tileW = drawNode.width / qrcode.getModuleCount();\r\n\t    var tileH = drawNode.height / qrcode.getModuleCount();\r\n\r\n\t    // draw in the Graphics\r\n\t    for (var row = 0; row < qrcode.getModuleCount(); row++) {\r\n\t    \tfor (var col = 0; col < qrcode.getModuleCount(); col++) {\r\n\t    \t\t// ctx.fillStyle = qrcode.isDark(row, col) ? options.foreground : options.background;\r\n\t    \t\tif (qrcode.isDark(row, col)) {\r\n\t    \t\t\tctx.fillColor = cc.Color.BLACK;\r\n\t    \t\t} else {\r\n\t    \t\t\tctx.fillColor = cc.Color.WHITE;\r\n\t    \t\t}\r\n\t    \t\tvar w = (Math.ceil((col + 1) * tileW) - Math.floor(col * tileW));\r\n\t    \t\tvar h = (Math.ceil((row + 1) * tileW) - Math.floor(row * tileW));\r\n\t    \t\tctx.rect(Math.round(col * tileW), Math.round(row * tileH), w, h);\r\n\t    \t\tctx.fill();\r\n\t    \t}\r\n\t    }\r\n    }\r\n}\r\n","import { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { GItemCfg, ItemItem } from \"../../Service/ItemService\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\nimport { GGameDM } from \"../../Framework/DataModel/GameDataModel\";\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_ExchangeItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    imgIcon: cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    labelName: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelDesc: cc.Label = null;\r\n\r\n    @property(cc.Button)\r\n    btnExchange: cc.Button = null;\r\n\r\n    protected _item:ItemItem=null\r\n\r\n    init(item:ItemItem)\r\n    {\r\n        this._item=item\r\n\r\n        // if(GGameDM.isReviewVersion){\r\n\r\n        // }\r\n        this.labelName.string = this._item.name\r\n \r\n\r\n        this.labelDesc.string = \"需要\"+this._item['coin']+\"欢乐点兑换\"\r\n        if(GUserMgr.self_user.reward_coin<this._item['coin'])\r\n        {\r\n            //this.btnExchange.interactable=false\r\n        }\r\n\r\n        ykUtils.loadNetSpriteFrameWithNode(this.imgIcon,ykUtils.getItemIcon(this._item.icon))\r\n\r\n        // GHelper.createSpriteFrame(this._item.icon,(sf)=>\r\n        // {\r\n        //     if(cc.isValid(this))\r\n        //     {\r\n        //         this.imgIcon.spriteFrame=sf\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    Btn_Exchange_OnClick(event)\r\n    {\r\n        if(GUserMgr.self_user.reward_coin<this._item['coin'])\r\n        {\r\n\r\n            GHelper.showTip(\"您的欢乐点不足!\")\r\n            // GPageMgr.openPage(\"Page_Tips\",{tips: \"竞技点不足请前往充值\", buttons: [\r\n            //     {\r\n            //         label: \"确认\",\r\n            //         callback: async ()=>\r\n            //         {\r\n            //             GPageMgr.openPage(\"Page_Charge\")\r\n            //         }\r\n            //     },\r\n            //     {\r\n            //         label: \"取消\"\r\n            //     }\r\n            // ]})\r\n            return\r\n        }\r\n        GPageMgr.openPage(\"Page_Tips\",{tips: \"是否使用\"+this._item['coin']+\"欢乐点\"+this._item.name, buttons: [\r\n            {\r\n                label: \"确认\",\r\n                callback: async ()=>\r\n                {\r\n                    let rs = await GHallHttp.request(\"buyitem\",{item_id:this._item.id})\r\n                    if(rs.errcode)\r\n                    {\r\n                        GHelper.showTip(rs.errcode.des)\r\n                        return\r\n                    }\r\n                    let bi = GItemCfg.getBagItemById(this._item.id)\r\n                    if(!bi)\r\n                    {\r\n                        GItemCfg.bagItems.push(rs.bagitem)\r\n                    }\r\n                    else\r\n                    {\r\n                        bi.count=rs.bagitem.count\r\n                    }\r\n                    if(GUserMgr.self_user.coin<this._item.coin)\r\n                    {\r\n                        \r\n                    }\r\n                    GUserMgr.self_user.reward_coin=rs.reward_coin\r\n                    GMsgCenter.send(\"coinchanged\")\r\n                    GHelper.showTip(\"兑换成功\")\r\n                }\r\n            },\r\n            {\r\n                label: \"取消\"\r\n            }\r\n        ]})\r\n    }\r\n}\r\n","import { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { AdModel } from \"../../Service/AdService\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_HomeAdsItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    lbl_title: cc.Label = null\r\n\r\n    @property(cc.Sprite)\r\n    sp_ad: cc.Sprite = null\r\n\r\n    protected _ad:AdModel = null\r\n\r\n    init(ad:AdModel) {\r\n        this._ad=ad\r\n        this.lbl_title.string = this._ad.title\r\n        GHelper.createSpriteFrame(this._ad.icon,(sf)=>\r\n        {\r\n            this.sp_ad.spriteFrame=sf\r\n        })\r\n    }\r\n\r\n    Btn_Self_OnClick(event) {\r\n        if(this._ad.url.startsWith(\"http\"))\r\n        {\r\n            GPageMgr.openPage(\"Page_WebView\",this._ad.url)\r\n        }\r\n    }\r\n}\r\n","import { core } from \"../../Framework/Core/Base\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { NewsModel } from \"../../Service/NewsService\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_HomeNewsItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    labelTitle: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    labelTime: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    labelType: cc.Label = null\r\n\r\n    @property(cc.Sprite)\r\n    imgIcon: cc.Sprite = null\r\n\r\n    protected _news:NewsModel = null\r\n\r\n    init(news:NewsModel) {\r\n        this._news=news\r\n        this.labelTitle.string = news.title\r\n        if(this._news.subtitle)\r\n        {\r\n            this.labelTime.string = this._news.subtitle\r\n        }\r\n        else\r\n        {\r\n            let str =\"\"\r\n            let dt = new Date(this._news.create_time)\r\n            let cdt = new Date()\r\n            if(cdt.getFullYear()!=dt.getFullYear())\r\n            {\r\n                str = core.format(dt,\"YYYYY-M-D HH:mm\")\r\n            }\r\n            else if(cdt.getMonth()==dt.getMonth()&&cdt.getDate()==dt.getDate())\r\n            {\r\n                str = core.format(dt,\"HH:mm\")\r\n            }\r\n            else\r\n            {\r\n                str = core.format(dt,\"M-D HH:mm\")\r\n            }\r\n            this.labelTime.string = str\r\n        }\r\n        this.labelType.string = this._news.type\r\n        GHelper.createSpriteFrame(this._news.icon,(sf)=>\r\n        {\r\n            this.imgIcon.spriteFrame=sf\r\n        })\r\n    }\r\n\r\n    Btn_Self_OnClick(event) {\r\n        if(this._news.url.startsWith(\"http\"))\r\n        {\r\n            GPageMgr.openPage(\"Page_WebView\",this._news.url)\r\n        }\r\n    }\r\n}\r\n","import { core } from \"../../Framework/Core/Base\"\r\nimport { GHelper } from \"../../Framework/Logic/Helper\"\r\nimport { resMgr } from \"../../manager/ResourceManager\"\r\n\r\nexport class FollowerItem\r\n{\r\n    id=0\r\n    nickname=\"\"\r\n    logo=\"\"\r\n    create_time=0\r\n    ticket=0\r\n    isNew = false\r\n}\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_InviteeItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    imgAvatar: cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    labelNickname: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelTime: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelMoney: cc.Label = null;\r\n\r\n    init(follower:FollowerItem) {\r\n        this.labelNickname.string = follower.nickname\r\n        this.labelTime.string = core.toSimpleTime(follower.create_time)\r\n        this.labelMoney.string = follower.ticket+\"\"\r\n        // if(follower.logo)\r\n        // {\r\n        //     GHelper.createSpriteFrame(follower.logo,(sf)=>\r\n        //     {\r\n        //         this.imgAvatar.spriteFrame=sf\r\n        //     })\r\n        // }\r\n\r\n        let suffix: string = \"image/head/\" + follower.logo;\r\n        let path = `${suffix}`;\r\n        resMgr.loadImage(path, (res) => {\r\n            cc.isValid(this.imgAvatar) && (this.imgAvatar.getComponent(cc.Sprite).spriteFrame = res);\r\n            this.imgAvatar.node.setContentSize(90,90)\r\n        })\r\n\r\n        if(follower.isNew){\r\n            cc.find('new_title',this.node).active = true\r\n        }else{\r\n            cc.find('new_title',this.node).active = false\r\n        }\r\n      \r\n    }\r\n}\r\n","import { core } from \"../../Framework/Core/Base\"\r\nimport { GHelper } from \"../../Framework/Logic/Helper\"\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\"\r\nimport { AddressItem, GUserMgr } from \"../../Logic/UserManager\"\r\nimport { GHallHttp } from \"../../Net/HallHttp\"\r\nimport { BagItemItem, EBagItemState, GItemCfg, ItemItem } from \"../../Service/ItemService\"\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\"\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_ItemItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    sp_icon: cc.Sprite = null\r\n\r\n    @property(cc.Label)\r\n    lbl_title: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_subtitle: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_count: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_state: cc.Label = null\r\n\r\n    @property(cc.Button)\r\n    btn_state: cc.Button = null\r\n\r\n    protected _item:BagItemItem=null\r\n    onLoad()\r\n    {\r\n        GMsgCenter.register(\"item_changed\",()=>\r\n        {\r\n            this.init(this._item)\r\n        },this)\r\n    }\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"item_changed\",this)\r\n    }\r\n    init(item:BagItemItem) {\r\n        this._item=item\r\n        // if(this._item.state==EBagItemState.Used)\r\n        // {\r\n        //     this.btn_state.interactable=false\r\n        //     this.lbl_state.string=\"已使用\"\r\n        // }\r\n        // else if(this._item.state==EBagItemState.Using)\r\n        // {\r\n        //     this.lbl_state.string=\"使用中\"\r\n        // }\r\n        // else\r\n        // {\r\n        //     this.lbl_state.string=\"使用\"\r\n        // }\r\n        this.lbl_count.string = \"x\"+this._item.count\r\n        let itemM = GItemCfg.getItemById(this._item.item_id)\r\n        if(!itemM)\r\n        {\r\n            return\r\n        }\r\n        this.lbl_title.string=itemM.name\r\n        this.lbl_subtitle.string=itemM.des\r\n        \r\n        GHelper.createSpriteFrame(itemM.icon,(sf)=>\r\n        {\r\n            if(cc.isValid(this.sp_icon))\r\n            {\r\n                this.sp_icon.spriteFrame=sf\r\n            }\r\n        })\r\n    }\r\n    Btn_Exchange_OnClick(event)\r\n    {\r\n        if(this._item.state==EBagItemState.None)\r\n        {\r\n            GPageMgr.openPage(\"Page_Exchange\",this._item)\r\n        }\r\n    }\r\n}\r\n","import { EMatchState } from \"../../Config/_ini_\";\r\nimport { GTexasTableDM } from \"../../DataModel/TexasTableDataModel\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { GMatchSer, MatchPlayer } from \"../../Service/MatchService\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\"\r\nimport Page_Game from \"../Page/Page_Game\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_MatchInfo extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    lbl_title: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_time: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_level: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_curnum: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_prizenum: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_blind: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_ante: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_nextblind: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_signendtime: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_avcoin: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_totalcoin: cc.Label = null\r\n\r\n    onLoad()\r\n    {\r\n        GMsgCenter.register(\"upgradeblind\",this.onRefresh.bind(this),this)\r\n    }\r\n    protected onDestroy(): void {\r\n        GMsgCenter.unregister(\"upgradeblind\",this)\r\n    }\r\n    onEnable(){\r\n        let page = GPageMgr.getPage(\"Page_Game\") as Page_Game\r\n        if(!page)\r\n        {\r\n            return\r\n        }\r\n        // let table_id = page.tableId\r\n        // let tableinfo = GTexasTableDM.getTableInfo(table_id)\r\n        // GHallHttp.request(\"GetMatchPlayers\",{ins_id:tableinfo.match_insid}).then((res)=>\r\n        // {\r\n        //     let matchInsM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        //     let players:MatchPlayer[] = matchInsM.rankplayers = res.players||[]\r\n        //     matchInsM.player_num=res.player_num\r\n        //     if(tableinfo.total_player_num<matchInsM.player_num)\r\n        //     {\r\n        //         tableinfo.total_player_num=matchInsM.player_num\r\n        //     }\r\n        //     GMsgCenter.send(\"getplayers\")\r\n        //     if(cc.isValid(this))\r\n        //     {\r\n        //         this.onRefresh()\r\n        //     }\r\n        // })\r\n        \r\n        this.onRefresh()\r\n    }\r\n    protected onDisable(): void {\r\n        this.unscheduleAllCallbacks()\r\n    }\r\n    onRefresh()\r\n    {\r\n        this.unscheduleAllCallbacks()\r\n        let page = GPageMgr.getPage(\"Page_Game\") as Page_Game\r\n        if(!page)\r\n        {\r\n            return\r\n        }\r\n        let table_id = page.tableId\r\n        let tableinfo = GTexasTableDM.getTableInfo(table_id)\r\n        let matchInsM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        let matchM = matchInsM.match\r\n        if (!matchM) {\r\n            return\r\n        }\r\n\r\n        this.lbl_title.string=matchM.name\r\n        let blindItem = GMatchSer.getBlindItem(matchM.blind_id,matchInsM.blind_index)\r\n        if(blindItem.level<0)\r\n        {\r\n            blindItem = GMatchSer.getBlindItem(matchM.blind_id,matchInsM.blind_index-1)\r\n        }\r\n        this.lbl_level.string=blindItem.level+\"\"\r\n        matchInsM.rankplayers=matchInsM.rankplayers||[]\r\n        this.lbl_curnum.string=tableinfo.cur_player_num+\"/\"+tableinfo.total_player_num\r\n\r\n      \r\n\r\n        let rewardsLen = page.getComponent('Page_Game').getRewardsLen();\r\n        this.lbl_prizenum.string=(rewardsLen?rewardsLen:matchM.reward.length)+\"\"\r\n        this.lbl_blind.string=blindItem.small_blind+\"/\"+blindItem.big_blind\r\n        this.lbl_ante.string=blindItem.ante+\"\"\r\n        let nextBlindItem = GMatchSer.getBlindItem(matchM.blind_id,matchInsM.blind_index+1)||blindItem\r\n        if(nextBlindItem.level<0)\r\n        {\r\n            nextBlindItem = GMatchSer.getBlindItem(matchM.blind_id,matchInsM.blind_index+1+1)\r\n        }\r\n        this.lbl_nextblind.string=nextBlindItem.small_blind+\"/\"+nextBlindItem.big_blind\r\n        \r\n        \r\n        let total = tableinfo.total_player_num*matchM.coin\r\n        let playsers = matchInsM.rankplayers||[]\r\n        if(total==0||playsers.length<=0)\r\n        {\r\n            this.lbl_avcoin.string=\"-\"\r\n            this.lbl_totalcoin.string=\"-\"\r\n        }\r\n        else\r\n        {\r\n            if(tableinfo.cur_player_num>0)\r\n            {\r\n                this.lbl_avcoin.string=Math.floor(total/tableinfo.cur_player_num).toString();\r\n            }\r\n            else\r\n            {\r\n                this.lbl_avcoin.string=matchM.coin+\"\"\r\n            }\r\n            this.lbl_totalcoin.string=total+\"\"\r\n        }\r\n        this.schedule(this.onUpdate.bind(this),0.5)\r\n        this.onUpdate()\r\n    }\r\n    onUpdate()\r\n    {\r\n        let page = GPageMgr.getPage(\"Page_Game\") as Page_Game\r\n        if(!page)\r\n        {\r\n            return\r\n        }\r\n        let table_id = page.tableId\r\n        let tableinfo = GTexasTableDM.getTableInfo(table_id)\r\n        let matchInsM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        let matchM = matchInsM.match\r\n        let bm = GMatchSer.getBlindModel(matchM.blind_id)\r\n\r\n        let dttime = tableinfo.blind_deadline-GHelper.getServerTime()\r\n        if(dttime<0)\r\n        {\r\n            dttime=0\r\n            // let mtd = Math.abs( GHelper.getServerTime()-matchInsM.start_time);\r\n            // if(mtd<1000)\r\n            // {\r\n            //     if(GPageMgr.isPageOpened(\"Page_MatchInfo\"))\r\n            //     {\r\n            //         GPageMgr.getPage(\"Page_MatchInfo\").getComponent(\"Page_MatchInfo\").hide();\r\n            //     }\r\n            // }\r\n        }\r\n        dttime=Math.floor(dttime/1000)\r\n        let m = Math.floor(dttime/60)\r\n        let s = dttime%60\r\n        let str=m+\":\"\r\n        if(m<10)\r\n        {\r\n            str=\"0\"+str\r\n        }\r\n        if(s>=10)\r\n        {\r\n            str+=s\r\n        }\r\n        else\r\n        {\r\n            str+=\"0\"+s\r\n\r\n        }\r\n        this.lbl_time.string=str\r\n\r\n        let time = matchInsM.start_time\r\n        for(let i=0;i<matchM.reenter_blind_index;++i)\r\n        {\r\n            time += bm.items[i].seconds*1000\r\n        }\r\n        let now = GHelper.getServerTime()\r\n        let seconds=Math.floor((time-now)/1000)\r\n        if(seconds<0)\r\n        {\r\n            seconds=0\r\n        }\r\n        m = Math.floor(seconds/60)\r\n        s = seconds%60\r\n        str=m+\":\"\r\n        if(m<10)\r\n        {\r\n            str=\"0\"+str\r\n        }\r\n        if(s>=10)\r\n        {\r\n            str+=s\r\n        }\r\n        else\r\n        {\r\n            str+=\"0\"+s\r\n        }\r\n\r\n        this.lbl_signendtime.string=str\r\n        if (str==\"00:00\") {\r\n            this.lbl_signendtime.node.parent.getComponent(cc.Label).string = \"截止报名\"\r\n            this.lbl_signendtime.node.parent.color = new cc.Color().fromHEX(\"#D43030\")\r\n            this.lbl_signendtime.node.active = false;\r\n        }\r\n    }\r\n}","import { core } from \"../../Framework/Core/Base\";\r\nimport { GNetGameTexas } from \"../../Net/NetGameTexas\";\r\nimport { ExtUserMatchInfo } from \"../../Service/MatchService\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_MatchListItemEd extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    sp_icon: cc.Sprite = null\r\n\r\n    @property(cc.Label)\r\n    lbl_name: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_signup: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_time: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_rank: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_reward: cc.Label = null\r\n\r\n    protected _usermatchinfo: ExtUserMatchInfo = null\r\n\r\n    init(eumi: ExtUserMatchInfo) {\r\n        this._usermatchinfo=eumi\r\n        this.lbl_name.string = this._usermatchinfo.match.name\r\n        this.lbl_time.string = core.toSimpleTime(this._usermatchinfo.match.start_time)\r\n        if(this._usermatchinfo.rank<0)\r\n        {\r\n            this.lbl_rank.string = \"-\"\r\n        }\r\n        else\r\n        {\r\n            this.lbl_rank.string = this._usermatchinfo.rank+\"/\"+this._usermatchinfo.match.player_num\r\n        }\r\n    }\r\n\r\n    Btn_Self_Click() {\r\n        if(!this._usermatchinfo.match)\r\n        {\r\n            return\r\n        }\r\n        GNetGameTexas.send_texas_enter_match(this._usermatchinfo.match.id,this._usermatchinfo.ins_id)\r\n    }\r\n}\r\n","import { core } from \"../../Framework/Core/Base\";\r\nimport { GNetGameTexas } from \"../../Net/NetGameTexas\";\r\nimport { ExtUserMatchInfo } from \"../../Service/MatchService\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_MatchListItemIng extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    sp_icon: cc.Sprite = null\r\n\r\n    @property(cc.Label)\r\n    lbl_name: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_signup: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_time: cc.Label = null\r\n\r\n    protected _usermatchinfo: ExtUserMatchInfo = null\r\n\r\n    init(eumi: ExtUserMatchInfo) {\r\n        this._usermatchinfo=eumi\r\n        this.lbl_name.string = this._usermatchinfo.match.name\r\n        this.lbl_time.string = core.toSimpleTime(this._usermatchinfo.match.start_time)\r\n    }\r\n\r\n    Btn_Self_Click() {\r\n        if(!this._usermatchinfo.match)\r\n        {\r\n            return\r\n        }\r\n        GNetGameTexas.send_texas_enter_match(this._usermatchinfo.match.id,this._usermatchinfo.ins_id)\r\n    }\r\n}\r\n","import { EMatchState } from \"../../Config/_ini_\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { resMgr } from \"../../manager/ResourceManager\";\r\nimport { GNetGameTexas } from \"../../Net/NetGameTexas\";\r\nimport { GItemCfg } from \"../../Service/ItemService\";\r\nimport { GMatchSer, MatchInsModel } from \"../../Service/MatchService\";\r\n\r\nimport { layerMgr } from \"../../manager/LayerManager\"\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_MatchListItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    imgIcon: cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    labelName: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelDesc: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelStart: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    nodeRemain: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    labelRemainTitle: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelRemainDay: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelRemainTime: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelCount: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    labelReward: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    imgMarkSignin: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    imgMarkEnd: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    labelDead: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    nodeDead: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    labelTime: cc.Label = null;\r\n\r\n    public matchInsM: MatchInsModel = null;\r\n\r\n    init(info: MatchInsModel) {\r\n        if (this.matchInsM != info) {\r\n            this.matchInsM = info;\r\n            this.matchInsM = GMatchSer.getMatchInsById(info.id)||this.matchInsM\r\n            this.reloadUI();\r\n        } else {\r\n            this.initTable();\r\n        }\r\n    }\r\n\r\n    reloadUI() {\r\n        if (!this.matchInsM) {\r\n            return;\r\n        }\r\n        GHelper.createSpriteFrame(this.matchInsM.match.icon,(sf)=>\r\n        {\r\n            cc.isValid(this.imgIcon) && sf && (this.imgIcon.spriteFrame = sf);\r\n        })\r\n\r\n        let func=(info)=>\r\n        {\r\n            if(info.id==-99)\r\n            {\r\n                return info.count+\"游戏点\"\r\n            }\r\n            let item = GItemCfg.getItemById(info.id)\r\n            if(!item)\r\n            {\r\n                return \"\"\r\n            }\r\n            return item.name+\"x\"+info.count\r\n        }\r\n        let cost = this.matchInsM.match.signup_cost[0]\r\n        let cost_str=func(cost)\r\n        let reward = this.matchInsM.match.reward[0]\r\n        let reward_str = func(reward)\r\n        let start = new Date(this.matchInsM.start_time)\r\n        this.labelName.string = this.matchInsM.match.name\r\n        this.labelDesc.string = `${cost_str}参赛`\r\n        this.labelStart.string = start.getHours().toString().padStart(2, '0') + \":\" + start.getMinutes().toString().padStart(2, '0')\r\n        this.labelReward.string = \"奖励：\" + reward_str\r\n\r\n        this.initTable();\r\n    }\r\n\r\n    initTable() {\r\n        if (!this.matchInsM) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.updateLabel()\r\n        this.schedule(this.updateLabel.bind(this),0.5)\r\n    }\r\n\r\n    updateLabel() {\r\n        // 报名过的比赛 显示已参赛\r\n        // 报名了没开始的显示已报名\r\n        // 报名了正在打的显示参赛中\r\n        if (!this.matchInsM) {\r\n            return;\r\n        }\r\n        \r\n        let now = new Date();\r\n        let start = new Date(this.matchInsM.start_time)\r\n        let entt=this.matchInsM.start_time\r\n        this.nodeDead.active = false\r\n        this.labelDead.node.active = false;\r\n\r\n        if(this.matchInsM.match.reenter_blind_index>0)\r\n        {\r\n            let bm = GMatchSer.getBlindModel(this.matchInsM.match.blind_id)\r\n            let totalBlind = 0\r\n            for (let index = 0; index < this.matchInsM.match.reenter_blind_index; index++) {\r\n                totalBlind += bm.items[index].seconds*1000;\r\n            }\r\n\r\n            if (this.matchInsM.state!=EMatchState.Waiting) {\r\n\r\n                let remain = start.getTime() + totalBlind - now.getTime()\r\n                if (remain > 0) {\r\n                    //\r\n                    this.nodeDead.active = true;\r\n                    let dayday = new Date(start.getTime() + totalBlind)\r\n                    let minute = (dayday.getMinutes()==0) ? \"00\" : dayday.getMinutes();\r\n                    this.labelTime.string = dayday.getHours() + \":\" + minute;\r\n                }\r\n                else\r\n                {\r\n                    //已截止\r\n                    this.labelDead.node.active = true;\r\n                    this.labelStart.node.active = true\r\n                    this.labelStart.node.parent.getChildByName(\"bg\").active = true;\r\n                    this.labelDead.string = \"已截止\"\r\n                }\r\n            }\r\n            entt+=this.matchInsM.match.reenter_blind_index*6*60*1000\r\n        }\r\n        this.labelCount.string = this.matchInsM.player_num+\"/\"+this.matchInsM.player_num\r\n        this.labelCount.node.setPosition(this.labelDesc.node.getPosition().x + this.labelDesc.node.width + 10, this.labelDesc.node.getPosition().y);\r\n        this.imgMarkSignin.active = false;\r\n        if (this.matchInsM.state!=EMatchState.End&&this.matchInsM.state!=EMatchState.Cancel) {\r\n            this.nodeRemain.active = true\r\n            this.imgMarkEnd.active = false\r\n            if(this.matchInsM.state==EMatchState.Waiting)\r\n            {\r\n                if (GUserMgr.self_user.matchinfos[this.matchInsM.id]!=null) {\r\n                    //表示已报名\r\n                    this.imgMarkSignin.active = true;\r\n                    resMgr.loadImage(\"View/Page/Res/main/match/img_yibaoming\", (res) => {\r\n                        cc.isValid(this.imgMarkSignin) && (this.imgMarkSignin.getComponent(cc.Sprite).spriteFrame = res);\r\n                    })\r\n                }\r\n                this.labelRemainTitle.string = \"距离开始\";\r\n                let remain = start.getTime() - now.getTime()\r\n                if(remain>=60*60*1000)\r\n                {\r\n\r\n                    remain = Math.floor(remain / 1000)\r\n                    let day = Math.floor(remain / 86400)\r\n                    let hour = Math.floor((remain % 86400) / 3600)\r\n                    let minute = Math.floor((remain % 3600) / 60)\r\n                    let second = (remain % 60)\r\n                    this.labelRemainDay.node.active = false\r\n                    //this.labelRemainDay.node.active = day > 0\r\n                    //this.labelRemainDay.string = day + \"天\"\r\n                    let total_hour = day*24 + Number(hour.toString().padStart(2, '0'))\r\n                    this.labelRemainTime.string = total_hour + \":\" + minute.toString().padStart(2, '0') + \":\" + second.toString().padStart(2, '0')\r\n                }\r\n                else\r\n                {\r\n                    if(remain<0)\r\n                    {\r\n                        if (GUserMgr.self_user.matchinfos[this.matchInsM.id]!=null) {\r\n                            //表示已参赛\r\n                            this.imgMarkSignin.active = true;\r\n                            resMgr.loadImage(\"View/Page/Res/main/match/img_yicansai\", (res) => {\r\n                                cc.isValid(this.imgMarkSignin) && (this.imgMarkSignin.getComponent(cc.Sprite).spriteFrame = res);\r\n                            })\r\n                        }\r\n\r\n                        this.matchInsM.state=EMatchState.Playing\r\n                        this.updateLabel()\r\n                        this.unscheduleAllCallbacks()\r\n                        return\r\n                    }\r\n                    this.labelRemainDay.node.active = false\r\n                    remain=Math.floor(remain/1000)\r\n                    let minute = Math.floor(remain / 60)\r\n                    let second = (remain % 60)\r\n                    this.labelRemainTime.string = minute.toString().padStart(2, '0') + \":\" + second.toString().padStart(2, '0')\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (GUserMgr.self_user.matchinfos[this.matchInsM.id]!=null) {\r\n                    //表示参赛中\r\n                    this.imgMarkSignin.active = true;\r\n                    resMgr.loadImage(\"View/Page/Res/main/match/img_mark_signup\", (res) => {\r\n                        cc.isValid(this.imgMarkSignin) && (this.imgMarkSignin.getComponent(cc.Sprite).spriteFrame = res);\r\n                    })\r\n                }\r\n\r\n                this.labelRemainDay.node.active=false\r\n                this.labelRemainTitle.string = \"\"\r\n                this.labelRemainTime.string = \"\"\r\n                this.labelCount.string = (this.matchInsM[\"player_left_num\"]||0)+\"/\"+this.matchInsM.player_num\r\n                this.labelCount.node.setPosition(this.labelDesc.node.getPosition().x + this.labelDesc.node.width + 10, this.labelDesc.node.getPosition().y);\r\n                \r\n            }\r\n        } \r\n        else {\r\n            this.nodeRemain.active = false\r\n            //this.imgMarkEnd.active = true\r\n        }\r\n        // let signupinfos = GUserMgr.self_user.matchinfos\r\n        // if(!signupinfos||!signupinfos[this.matchInsM.id])\r\n        // {\r\n        //     this.imgMarkSignin.active=false\r\n        // }\r\n        // else\r\n        // {\r\n        //     this.imgMarkSignin.active=true\r\n        // }\r\n    }\r\n\r\n    Btn_Match_Click() {\r\n        if(this.matchInsM.state==EMatchState.End||this.matchInsM.state==EMatchState.Cancel)\r\n        {\r\n            return\r\n        }\r\n        GNetGameTexas.send_texas_enter_match(this.matchInsM.match_id,this.matchInsM.id)\r\n    }\r\n}\r\n","import { GAlipay } from \"../../Framework/View/Page/Alipay\";\r\nimport { GOrderSer, ProductItem } from \"../../Service/OrderService\";\r\nimport { ykUtils } from \"../../utils/YkUtils\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_NumberFrame extends cc.Component {\r\n    @property(cc.Label)\r\n    lbNum: cc.Label = null\r\n    @property(cc.EditBox)\r\n    editbox = null\r\n    \r\n    private maxNum = 1\r\n    private cb:any = null\r\n    onLoad(){\r\n        // 初始化\r\n        this.setMax(1)\r\n        this.lbNum.string = '1'\r\n\r\n        this.editbox.node.on('editing-did-ended',()=>{\r\n            console.log(this.editbox.string)\r\n            let edSts = this.editbox.string\r\n\r\n            if(edSts.indexOf('.')!=-1){\r\n                edSts = edSts.slice(0,edSts.indexOf('.'))\r\n                this.editbox.string = edSts\r\n            } \r\n            if(parseInt(edSts)<=1){\r\n                this.editbox.string = 1\r\n            }else if(parseInt(edSts)>this.maxNum){\r\n                this.editbox.string = this.maxNum\r\n            }\r\n            \r\n            this.cb&&this.cb()\r\n        })\r\n    }\r\n\r\n\r\n    setMax(maxNum){\r\n        this.maxNum = maxNum\r\n        this.lbNum.string = maxNum.toString() \r\n    }\r\n\r\n    // 添加\r\n    onAdd(){\r\n        let st =  parseInt(this.editbox.string)\r\n        if(st+1<=this.maxNum){\r\n            this.editbox.string = (st+1).toString()\r\n            this.cb&&this.cb()\r\n        }\r\n    }\r\n    //减小\r\n    onSub(){\r\n        let st =  parseInt(this.editbox.string)\r\n        if(st-1>0){\r\n            this.editbox.string = (st-1).toString()\r\n            this.cb&&this.cb()\r\n        }\r\n    }\r\n\r\n    getCurNum(){\r\n        if(ykUtils.isEmpty(this.editbox.string)){\r\n            return 1\r\n        }else{\r\n            return parseInt(this.editbox.string)\r\n        }\r\n    }\r\n\r\n    setOnEditEndCb(cb){\r\n        this.cb = cb\r\n    }\r\n}\r\n","// import Card from \"../game/play/Card\";\r\n// import { ECardType } from \"../../Config/_ini_\";\r\n// import { ETexasSeatState, TexasRecordSeatInfo } from \"../../DataModel/TexasTableDataModel\";\r\n// import { GUserMgr } from \"../../Logic/UserManager\";\r\n\r\nimport { GAlipay } from \"../../Framework/View/Page/Alipay\";\r\nimport { GOrderSer, ProductItem } from \"../../Service/OrderService\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_ProductItem extends cc.Component {\r\n    @property(cc.Label)\r\n    lbl_name: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_money: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_score: cc.Label = null\r\n\r\n    @property(cc.Button)\r\n    btn_item: cc.Button = null\r\n\r\n    item: ProductItem = null;\r\n    id: number = null;\r\n\r\n    onLoad() {\r\n        this.btn_item.node.on('click', this.Btn_Click, this)\r\n    }\r\n    \r\n    Btn_Click(event)\r\n    {\r\n        GAlipay.alipayEvent(this.id);\r\n    }\r\n\r\n    setdata(jsonData) {\r\n        this.item = jsonData.product;\r\n        this.id = jsonData.product.id;\r\n        this.lbl_money.string = jsonData.product.money\r\n        this.lbl_name.string = jsonData.product.title\r\n        this.lbl_score.string = \"赠送：\" + jsonData.product.coin + \"游戏点\"\r\n    }\r\n}\r\n","import viewCell from \"../../Framework/TableView/viewCell\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { utils } from \"../../utils/Utils\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_ScoreItem extends viewCell {\r\n    @property(cc.Label)\r\n    lbl_name: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_blind: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_rank: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_score: cc.Label = null;\r\n\r\n\r\n \r\n    init(index: number, data?: any) {\r\n        this.setdata(data)\r\n    }\r\n\r\n\r\n    setdata(p) {\r\n        // console.log(p)\r\n        if(p.jsonDataid==GUserMgr.self_user_id)\r\n        {\r\n            this.node.getChildByName('img_shadow').active=true\r\n        }\r\n        else\r\n        {\r\n            this.node.getChildByName('img_shadow').active=false\r\n        }\r\n\r\n        this.node.getChildByName('label_rank').getComponent(cc.Label).string = (Number(p.i) + 1)+\"\"\r\n        this.node.getChildByName('label_score').getComponent(cc.Label).string = utils.formatNumber(p.jsonData.pre_point)\r\n        this.node.getChildByName('label_blind').getComponent(cc.Label).string = (p.jsonData.pre_point/p.big_blind).toFixed(2) + ' BB'\r\n        this.node.getChildByName('label_nickname').getComponent(cc.Label).string = p.jsonData.nickname\r\n\r\n        if (p.jsonData.point<=0) {\r\n            this.node.getChildByName('label_rank').color = new cc.Color().fromHEX(\"#CCCCCC\");\r\n            this.node.getChildByName('label_score').color = new cc.Color().fromHEX(\"#CCCCCC\");\r\n            this.node.getChildByName('label_blind').color = new cc.Color().fromHEX(\"#CCCCCC\");\r\n            this.node.getChildByName('label_nickname').color = new cc.Color().fromHEX(\"#CCCCCC\");\r\n        }\r\n        else\r\n        {\r\n            this.node.getChildByName('label_rank').color = new cc.Color().fromHEX(\"#383838\");\r\n            this.node.getChildByName('label_score').color = new cc.Color().fromHEX(\"#383838\");\r\n            this.node.getChildByName('label_blind').color = new cc.Color().fromHEX(\"#383838\");\r\n            this.node.getChildByName('label_nickname').color = new cc.Color().fromHEX(\"#383838\");\r\n        }\r\n    }\r\n}\r\n","import { GUserMgr } from \"../../Logic/UserManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_SignUpBar extends cc.Component {\r\n    @property(cc.Label)\r\n    itemName: cc.Label = null\r\n\r\n    @property(cc.Node)\r\n    left_kuang: cc.Node = null\r\n    @property(cc.Node)\r\n    left_label: cc.Node = null\r\n\r\n    @property(cc.Label)\r\n    right_label: cc.Label = null\r\n\r\n    private itemCfg\r\n\r\n    onLoad()\r\n    {        \r\n      \r\n    }\r\n\r\n    // 设置物品\r\n    setItem(itemCfg:any){\r\n        let user = GUserMgr.self_user\r\n        this.itemCfg = itemCfg\r\n        if(itemCfg == 'coin'){\r\n            this.itemName.string = '游戏点'\r\n            this.left_kuang.active = false\r\n            this.left_label.active = true\r\n            this.left_label.getComponent(cc.Label).string = '(剩余'+user.coin.toString()+'游戏点)'\r\n        }else if(itemCfg == 'rewardCoin'){\r\n            this.itemName.string = '欢乐点'\r\n            this.left_kuang.active = false\r\n            this.left_label.active = true\r\n            this.left_label.getComponent(cc.Label).string = '(剩余'+user.reward_coin.toString()+'欢乐点)'\r\n        }else{\r\n            this.left_kuang.active = true\r\n            this.left_label.active = false\r\n            this.itemName.string = itemCfg.name\r\n        }\r\n    }\r\n\r\n    setNum(haveNum,useNum){\r\n        if(this.itemCfg=='coin' || this.itemCfg=='rewardCoin'){\r\n           \r\n            this.right_label.string = '已选'+useNum+'点'\r\n        }else{\r\n            this.right_label.string = '已选'+useNum+'张'\r\n            this.left_kuang.children[0].getComponent(cc.Label).string = '剩余'+haveNum+'张'\r\n        }\r\n        if(useNum>0){\r\n            cc.find('back_juan/checkmark',this.node).active = true\r\n        }else{\r\n            cc.find('back_juan/checkmark',this.node).active = false\r\n        }\r\n    }\r\n}","import { EMatchState } from \"../../Config/_ini_\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { GMatchSer, MatchInsModel } from \"../../Service/MatchService\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_TableMatchTip extends cc.Component {\r\n    @property(cc.Label)\r\n    lbl_main: cc.Label = null\r\n    protected _matchIns:MatchInsModel=null\r\n    onLoad()\r\n    {\r\n        this.node.active=false\r\n    }\r\n    init(ins_id:string)\r\n    {\r\n        this._matchIns = GMatchSer.getMatchInsById(ins_id)\r\n        if((!this._matchIns)\r\n            ||this._matchIns.state!=EMatchState.Waiting)\r\n        {\r\n            this.node.active=false\r\n            this.unscheduleAllCallbacks()\r\n            return false\r\n        }\r\n\r\n        let serverTime = GHelper.getServerTime()\r\n        if(this._matchIns.start_time>serverTime) // 比赛已经不在 等待状态 但是比赛时间未到 显示开赛倒计时\r\n        {\r\n            this.node.active=true\r\n            this.unscheduleAllCallbacks()\r\n            this._refresh()\r\n            this.schedule(this._refresh.bind(this),0.5)\r\n            return true\r\n        }\r\n        else\r\n        {\r\n            this.node.active=false\r\n            this.unscheduleAllCallbacks()\r\n\r\n            return false\r\n        }\r\n    }\r\n    protected _refresh()\r\n    {\r\n        let serverTime = GHelper.getServerTime()\r\n        let dt = Math.floor((this._matchIns.start_time-serverTime)/1000)\r\n        if(dt<0)\r\n        {\r\n            dt=0\r\n        }\r\n        let m = Math.floor(dt/60)\r\n        if(m>=60)\r\n        {\r\n            if(this.lbl_main.string==\"即将开赛\")\r\n            {\r\n                return\r\n            }\r\n            this.lbl_main.string=\"即将开赛\"\r\n            this.lbl_main.fontSize=90\r\n            return\r\n        }\r\n        if(this.lbl_main.string==\"即将开赛\")\r\n        {\r\n            this.lbl_main.fontSize=140\r\n        }\r\n        let str = m+\":\"\r\n        if(m<0)\r\n        {\r\n            str=\"0\"+m\r\n        }\r\n        let s = dt%60\r\n        if(s<10)\r\n        {\r\n            str+=\"0\"+s\r\n        }\r\n        else\r\n        {\r\n            str+=s\r\n        }\r\n        this.lbl_main.string=str\r\n    }\r\n    onIdle(deadline:number)\r\n    {\r\n        this.schedule(()=>\r\n        {\r\n            let serverTime = GHelper.getServerTime()\r\n            let dt = Math.floor((deadline-serverTime)/1000)\r\n            if(dt<0)\r\n            {\r\n                dt=0\r\n            }\r\n            let m = Math.floor(dt/60)\r\n            if(m>=60)\r\n            {\r\n                this.lbl_main.string=\"即将开赛\"\r\n                return\r\n            }\r\n            let str = m+\":\"\r\n            if(m<0)\r\n            {\r\n                str=\"0\"+m\r\n            }\r\n            let s = dt%60\r\n            if(s<10)\r\n            {\r\n                str+=\"0\"+s\r\n            }\r\n            else\r\n            {\r\n                str+=s\r\n            }\r\n            this.lbl_main.string=str\r\n        },0.5)\r\n    }\r\n}\r\n","import { ETexasSeatState, GTexasTableDM, TexasSeatInfo, TexasTableInfo } from \"../../DataModel/TexasTableDataModel\";\r\nimport { GNetGameTexas } from \"../../Net/NetGameTexas\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { ETableState, ETexasAction } from \"../../Config/_ini_\";\r\nimport { MessageCenter } from \"../../utils/MessageCenter\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { GMatchSer } from \"../../Service/MatchService\";\r\nimport { GSettingDM } from \"../../Framework/DataModel/SettingDataModel\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\n\r\n// import Page_Table, { GPageTable } from \"../Page/Page_Table\"\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_Table_Action extends cc.Component {\r\n    @property(cc.Node)\r\n    node_showcards0: cc.Node=null\r\n\r\n    @property(cc.Node)\r\n    node_showcards1: cc.Node=null;\r\n\r\n    @property(cc.Button)\r\n    btn_menu:cc.Button=null\r\n    @property(cc.Button)\r\n    btn_setup:cc.Button=null\r\n    @property(cc.Button)\r\n    btn_review:cc.Button=null\r\n\r\n    @property(cc.Button)\r\n    btn_auto_callfold: cc.Button = null\r\n    @property(cc.Button)\r\n    btn_auto_any: cc.Button = null\r\n    @property(cc.Button)\r\n    btn_fold: cc.Button = null\r\n    @property(cc.Node)\r\n    btn_raise: cc.Node = null\r\n    @property(cc.Button)\r\n    btn_check: cc.Button = null\r\n    @property(cc.Button)\r\n    btn_call: cc.Button = null\r\n    @property(cc.Button)\r\n    btn_allin: cc.Button = null\r\n    @property(cc.Button)\r\n    btn_auto: cc.Button = null\r\n\r\n    @property([cc.Label])\r\n    lbl_quickbet_tips = new Array<cc.Label>()\r\n    @property([cc.Label])\r\n    lbl_quickbet_bets = new Array<cc.Label>()\r\n\r\n    @property(cc.Label)\r\n    lbl_call: cc.Label = null\r\n\r\n    @property(cc.Node)\r\n    free_raise: cc.Node = null\r\n\r\n    @property(cc.Button)\r\n    btn_allin2: cc.Button = null\r\n    protected _iscallfold = false//自动跟或弃\r\n    protected _isany = false//自动跟\r\n    protected _preany=0\r\n    protected showleft = -1\r\n    protected showright = -1\r\n\r\n    //自由加注\r\n    @property(cc.Slider)\r\n    sd_raise: cc.Slider = null\r\n    @property(cc.Node)\r\n    percent_img: cc.Node = null\r\n\r\n    private _onclickSliderDown: boolean = false\r\n    public sd_raiseStep = 0;\r\n\r\n    @property(cc.Label)\r\n    lbl_slider_text: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbl_slider_total: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    node_raise_top:cc.Node=null\r\n\r\n    @property(cc.Node)\r\n    node_countdown: cc.Node = null\r\n\r\n    protected _slider_height = 0\r\n    public perPercent: number = 0;          // 自由加注条上一次拉动的百分比\r\n    public lastPercent: number = 0;\r\n\r\n    @property(cc.Node)\r\n    node_btn: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    node_raise: cc.Node = null;\r\n\r\n    @property([cc.Vec2])\r\n    raise1Vec2 = new Array<cc.Vec2>()\r\n\r\n    @property([cc.Vec2])\r\n    raise2Vec2 = new Array<cc.Vec2>()\r\n\r\n    @property([cc.Vec2])\r\n    raise3Vec2 = new Array<cc.Vec2>()\r\n\r\n    @property([cc.Vec2])\r\n    raise4Vec2 = new Array<cc.Vec2>()\r\n\r\n    @property([cc.Vec2])\r\n    raise5Vec2 = new Array<cc.Vec2>()\r\n\r\n    protected _quickRaiseStrategy:{chip:number,tip:string}[] = []\r\n    protected _table_id = -1\r\n   \r\n\r\n    init(table_id:number)\r\n    {\r\n        this._table_id=table_id\r\n    }\r\n    get tableInfo() {\r\n        return GTexasTableDM.getTableInfo(this._table_id) as TexasTableInfo\r\n    }\r\n    get selfSeatInfo() {\r\n        let self_seat = GTexasTableDM.getSeatByUserId(this._table_id, GUserMgr.self_user_id) as TexasSeatInfo\r\n        return self_seat\r\n    }\r\n    get selfSeatIndex() {\r\n        let self_seat = this.selfSeatInfo\r\n        return self_seat?.index || 0\r\n    }\r\n    onLoad() {\r\n        this.sd_raise.handle.node.on(cc.Node.EventType.TOUCH_START, this.onsliderHandDown.bind(this))\r\n        this.sd_raise.handle.node.on(cc.Node.EventType.TOUCH_END, this.onsliderHandUp.bind(this))\r\n        this.sd_raise.handle.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onsliderHandCancel.bind(this))\r\n        //MessageCenter.getInstance().register(\"showCard\", this.showCard.bind(this), this.node);\r\n        this._slider_height = this.percent_img.height\r\n\r\n        this.raise1Vec2.push(new cc.Vec2(0, 22))\r\n\r\n        this.raise2Vec2.push(new cc.Vec2(-129, -11))\r\n        this.raise2Vec2.push(new cc.Vec2(123, -10))\r\n\r\n        this.raise3Vec2.push(new cc.Vec2(-129, -11))\r\n        this.raise3Vec2.push(new cc.Vec2(0, 22))\r\n        this.raise3Vec2.push(new cc.Vec2(123, -10))\r\n\r\n        this.raise4Vec2.push(new cc.Vec2(-129, -11))\r\n        this.raise4Vec2.push(new cc.Vec2(0, 22))\r\n        this.raise4Vec2.push(new cc.Vec2(123, -10))\r\n        this.raise4Vec2.push(new cc.Vec2(0, 97.5))\r\n\r\n        this.raise5Vec2.push(new cc.Vec2(-129, -11))\r\n        this.raise5Vec2.push(new cc.Vec2(-45, 22))\r\n        this.raise5Vec2.push(new cc.Vec2(40, 25))\r\n        this.raise5Vec2.push(new cc.Vec2(123, -10))\r\n        this.raise5Vec2.push(new cc.Vec2(0, 97.5))\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        MessageCenter.getInstance().unregister(\"cardstyle\", this.node);\r\n        GHelper.clearTip()\r\n    }\r\n\r\n    start() {\r\n    }\r\n\r\n    refreshButtons() {\r\n        this.btn_menu.node.active=true\r\n        this.btn_setup.node.active=true\r\n        this.btn_review.node.active=true\r\n\r\n        this.lbl_quickbet_tips[0].node.parent.parent.active = false\r\n        for (let i = 0; i < this.lbl_quickbet_tips.length; ++i) {\r\n            this.lbl_quickbet_tips[i].node.parent.active = false\r\n        }\r\n        this.btn_auto_callfold.node.active = false\r\n        this.btn_auto_any.node.active = false\r\n        this.btn_fold.node.active = false\r\n        this.btn_check.node.active = false\r\n        this.btn_call.node.active = false\r\n        this.btn_allin.node.active = false\r\n        this.sd_raise.node.parent.active = false\r\n        this.btn_raise.active = false\r\n        this.btn_auto.node.active = false\r\n        this.btn_allin2.node.active=false\r\n\r\n        this.node_countdown.active = false\r\n        // this.node_countdown.getComponent(cc.Sprite).fillRange = 1;\r\n        //this.free_raise.getComponent(cc.Button).enabled = false;\r\n        //this.sd_raise.getComponent(cc.Slider).enabled = false;\r\n        this.node_countdown.setPosition(200, -434)\r\n\r\n        let seatinfo = this.selfSeatInfo\r\n        if (!seatinfo) {\r\n            return\r\n        }\r\n        if (seatinfo.auto) {\r\n            this.btn_auto.node.active = true\r\n        }\r\n        let tableinfo = this.tableInfo\r\n        if (tableinfo.state == ETableState.Idle) {\r\n            return\r\n        }\r\n\r\n        if(seatinfo.state==ETexasSeatState.Fold)\r\n        {\r\n            // this.node_showcards0.active=true\r\n            // this.node_showcards1.active=true\r\n            if (!this.node_showcards0.getChildByName(\"Background\").active) {\r\n                this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(0).setColor(cc.Color.BLACK.fromHEX(\"#4D4D4D\"))\r\n            }\r\n            if (!this.node_showcards1.getChildByName(\"Background\").active) {\r\n                this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(1).setColor(cc.Color.BLACK.fromHEX(\"#4D4D4D\"))\r\n            }\r\n            \r\n            \r\n            // this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(0).setColor(cc.Color.BLACK.fromHEX(\"#4D4D4D\"))\r\n            // this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(1).setColor(cc.Color.BLACK.fromHEX(\"#4D4D4D\"))\r\n\r\n            // if (!this.node_showcards0.getChildByName(\"Background\").active) {\r\n            //     this.node_showcards0.getChildByName(\"Background\").active = true\r\n            //     this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(0).setColor(cc.Color.BLACK.fromHEX(\"#4D4D4D\"))\r\n            // }\r\n\r\n            // if (!this.node_showcards1.getChildByName(\"Background\").active) {\r\n            //     this.node_showcards1.getChildByName(\"Background\").active = true\r\n            //     this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(1).setColor(cc.Color.BLACK.fromHEX(\"#4D4D4D\"))\r\n            // }\r\n            return\r\n        }\r\n        if((tableinfo.curmaxbet - seatinfo.bet)!=this._preany)\r\n        {\r\n            this._isany=false\r\n        }\r\n        if (tableinfo.turn_user_id < 0) {\r\n            return\r\n        }\r\n        if(tableinfo.state==ETableState.End)\r\n        {\r\n            return\r\n        }\r\n        if(seatinfo.state==ETexasSeatState.AllIn)\r\n        {\r\n            return\r\n        }\r\n        ///////以下是个人操作部分\r\n        if (tableinfo.turn_user_id != seatinfo.playerinfo.id) {\r\n            if (seatinfo.state == ETexasSeatState.Waiting) {\r\n                return\r\n            }\r\n            if (seatinfo.state == ETexasSeatState.AllIn || seatinfo.state == ETexasSeatState.Fold) {\r\n                return\r\n            }\r\n            //没出过牌，或者，出的钱未到最高\r\n            if (seatinfo.action == ETexasAction.None || seatinfo.bet < tableinfo.curmaxbet) {\r\n                //显示看或弃，跟任何注\r\n                this.btn_auto_callfold.node.active = true\r\n                this.btn_auto_callfold.node.getChildByName(\"lbl_auto_callfold\").getComponent(cc.Label).string = \"看或弃\"\r\n                this.btn_auto_callfold.node.getChildByName(\"btn_action_bg1\").active=this._iscallfold\r\n\r\n                if((tableinfo.curmaxbet - seatinfo.bet)!=this._preany)\r\n                {\r\n                    this._isany=false\r\n                }\r\n                if (tableinfo.curmaxbet - seatinfo.bet != 0) {\r\n                    this.btn_auto_any.node.active = true\r\n                    //0看牌 不一样取消选中\r\n                    //tableinfo.curmaxbet - seatinfo.bet\r\n                    this._preany=(tableinfo.curmaxbet - seatinfo.bet)\r\n                    let page = GPageMgr.getPage(\"Page_Game\")\r\n                    this.btn_auto_any.node.getChildByName(\"lbl_auto_any\").getComponent(cc.Label).string = \"跟\" + this.convertChip(this._preany)\r\n\r\n                    if (this._preany > seatinfo.playerinfo.point) {\r\n                        this.btn_auto_callfold.node.getChildByName(\"lbl_auto_callfold\").getComponent(cc.Label).string = \"弃牌\"\r\n                        this.btn_auto_any.node.getChildByName(\"lbl_auto_any\").getComponent(cc.Label).string = \"All In\"\r\n                    }\r\n                    this.btn_auto_any.node.getChildByName(\"btn_action_bg1\").active=this._isany\r\n                }\r\n                else\r\n                {\r\n                    this.btn_auto_any.node.active = true\r\n                    //0看牌 不一样取消选中\r\n                    //tableinfo.curmaxbet - seatinfo.bet\r\n                    // this._isany = !this._isany\r\n                    // this._iscallfold = false\r\n                    // this.refreshButtons()\r\n\r\n                    this.btn_auto_any.node.getChildByName(\"lbl_auto_any\").getComponent(cc.Label).string = \"看牌\"\r\n                    this.btn_auto_any.node.getChildByName(\"btn_action_bg1\").active=this._isany\r\n                }\r\n            }\r\n            return\r\n        }\r\n        if (seatinfo.state == ETexasSeatState.AllIn || seatinfo.state == ETexasSeatState.Fold) {\r\n            return\r\n        }\r\n        if(seatinfo.auto)\r\n        {\r\n            return\r\n        }\r\n        this.btn_menu.node.active=false\r\n        this.btn_setup.node.active=false\r\n        this.btn_review.node.active=false\r\n\r\n        this.btn_fold.node.active = true\r\n        let dtchip = tableinfo.curmaxbet - seatinfo.bet\r\n        if(dtchip>0)\r\n        {\r\n            dtchip = Math.ceil(dtchip/this.getBlindMod())*this.getBlindMod()\r\n        }\r\n        //倒计时在弃牌那边\r\n        this.node_countdown.setPosition(-200, -434);\r\n        //不够跟注\r\n        if (seatinfo.playerinfo.point < dtchip) {\r\n            this.btn_allin.node.active = true\r\n            let lefttime = Math.floor((tableinfo.timeout-GHelper.getServerTime())/1000)\r\n            if (lefttime > 0) {\r\n                this.startTimeCut(lefttime)\r\n            }\r\n        }\r\n        else {\r\n            this.btn_raise.active=true\r\n            this.free_raise.active = true;\r\n            this.sd_raise.node.parent.active=true\r\n            this.node_raise_top.active=false\r\n            this.lbl_slider_text.node.parent.active=false\r\n\r\n            this.node_raise.zIndex = 0\r\n            this.node_btn.zIndex = -1;\r\n            this.percent_img.parent.active=false\r\n            if (tableinfo.curmaxbet == 0||dtchip==0) {\r\n                this.btn_check.node.active = true\r\n                this.node_countdown.setPosition(200, -434)\r\n                \r\n                let lefttime = Math.floor((tableinfo.timeout-GHelper.getServerTime())/1000)\r\n                if (lefttime > 0) {\r\n                    this.startTimeCut(lefttime)\r\n                }\r\n                this.btn_fold.node.active = false\r\n            }\r\n            else {\r\n                this.btn_call.node.active = true\r\n                let lefttime = Math.floor((tableinfo.timeout-GHelper.getServerTime())/1000)\r\n                if (lefttime > 0) {\r\n                    this.startTimeCut(lefttime)\r\n                }\r\n                this.lbl_call.string = this.convertChip(dtchip)\r\n            }\r\n        }\r\n        let pot = tableinfo.pot\r\n        let curmax = tableinfo.curmaxbet\r\n\r\n        //处理快速加注\r\n        this._quickRaiseStrategy = [\r\n            { chip: Math.floor(2 * curmax), tip: \"2x\" },\r\n            { chip: Math.floor(2.5 * curmax), tip: \"2.5x\" },\r\n            { chip: Math.floor(2.8 * curmax), tip: \"2.8x\" },\r\n            { chip: Math.floor(3 * curmax), tip: \"3x\" }\r\n        ]\r\n        let pre=GSettingDM.quick_raise_pre||[2,2.5,2.8,3]\r\n        let m = this.getBlindMod()\r\n        if(tableinfo.curmaxbet>0)\r\n        {\r\n            pre.sort((a,b)=>a-b)\r\n            for(let i=0;i<pre.length&&i<this._quickRaiseStrategy.length;++i)\r\n            {\r\n                if(pre[i]<100)\r\n                {\r\n                    this._quickRaiseStrategy[i].chip=Math.floor(pre[i]*curmax)\r\n                    this._quickRaiseStrategy[i].tip=pre[i]+\"x\"\r\n                    this._quickRaiseStrategy[i].chip-=this._quickRaiseStrategy[i].chip%m\r\n                }\r\n                else\r\n                {\r\n                    this._quickRaiseStrategy[i].chip=seatinfo.playerinfo.point\r\n                    this._quickRaiseStrategy[i].tip=\"All In\"\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            pre=GSettingDM.quick_raise_aft||[33,50,60,100]\r\n            pre.sort((a,b)=>a-b)\r\n            for(let i=0;i<pre.length&&i<this._quickRaiseStrategy.length;++i)\r\n            {\r\n                if(pre[i]<900)\r\n                {\r\n                    this._quickRaiseStrategy[i].chip=pre[i]/100*pot\r\n                    this._quickRaiseStrategy[i].tip=pre[i]+\"%\"\r\n                    this._quickRaiseStrategy[i].chip-=this._quickRaiseStrategy[i].chip%m\r\n                }\r\n                else\r\n                {\r\n                    this._quickRaiseStrategy[i].chip=seatinfo.playerinfo.point\r\n                    this._quickRaiseStrategy[i].tip=\"All In\"\r\n                }\r\n            }\r\n        }\r\n        this.lbl_quickbet_tips[0].node.parent.parent.active = true\r\n        let min = this._getMinRaise()\r\n        let max = this._getMaxRaise()\r\n        for (let k = 0; k < this.lbl_quickbet_tips.length; ++k) {\r\n            this.lbl_quickbet_tips[k].node.parent.active = true\r\n            this.lbl_quickbet_tips[k].node.parent.setPosition(this.raise5Vec2[k])\r\n            let lbl_q_t = this.lbl_quickbet_tips[k]\r\n            lbl_q_t.string = this._quickRaiseStrategy[k].tip\r\n            let lbl_q_b = this.lbl_quickbet_bets[k]\r\n\r\n\r\n\r\n            \r\n            lbl_q_b.string = this.node.parent.getComponent('Page').getFormatNum(this._quickRaiseStrategy[k].chip)\r\n            lbl_q_b['cur_betNum'] =  this._quickRaiseStrategy[k].chip\r\n            let totalbet = this._quickRaiseStrategy[k].chip\r\n            let dtbet = totalbet-seatinfo.bet\r\n            let bb = this.getBigBlind()\r\n            if (totalbet>=min\r\n                &&totalbet<=max\r\n                &&seatinfo.playerinfo.point >= dtbet\r\n                &&totalbet>=2*curmax\r\n                &&dtbet>=bb) {\r\n                lbl_q_b.node.parent.active = true\r\n                lbl_q_t.node.color = cc.Color.WHITE\r\n                lbl_q_b.node.color = cc.Color.WHITE\r\n            }\r\n            else {\r\n                lbl_q_b.node.parent.active = false\r\n                let dt = max-seatinfo.bet\r\n                if(!this.btn_allin.node.active&&dt==seatinfo.playerinfo.point)\r\n                {\r\n                    this.btn_allin2.node.active = true\r\n                }\r\n            }\r\n        }\r\n\r\n        let total = 0;\r\n        for (let j = 0; j < this.lbl_quickbet_tips.length; j++) {\r\n            const element = this.lbl_quickbet_tips[j];\r\n            if (element.node.parent.active) {\r\n                total = total + 1\r\n            }\r\n            \r\n        }\r\n\r\n        if (this.btn_allin2.node.active) {\r\n            total = total + 1\r\n        }\r\n\r\n        if (total==1) {\r\n            if (this.btn_allin2.node.active == true) {\r\n                this.btn_allin2.node.setPosition(this.raise1Vec2[0])\r\n            }\r\n            else\r\n            {\r\n                for (let j = 0; j < this.lbl_quickbet_bets.length; j++) {\r\n                    if (this.lbl_quickbet_bets[j].node.parent.active) {\r\n                        this.lbl_quickbet_bets[j].node.parent.setPosition(this.raise1Vec2[0])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (total==2) {\r\n            if (this.btn_allin2.node.active==true) {\r\n                this.btn_allin2.node.setPosition(this.raise2Vec2[1])\r\n            }\r\n            else\r\n            {\r\n                let aa = 0\r\n                for (let j = 0; j < this.lbl_quickbet_bets.length; j++) {\r\n                    if (this.lbl_quickbet_bets[j].node.parent.active) {\r\n                        this.lbl_quickbet_bets[j].node.parent.setPosition(this.raise2Vec2[aa++])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (total==3) {\r\n            if (this.btn_allin2.node.active==true) {\r\n                this.btn_allin2.node.setPosition(this.raise3Vec2[2])\r\n            }\r\n            else\r\n            {\r\n                let aa = 0\r\n                for (let j = 0; j < this.lbl_quickbet_bets.length; j++) {\r\n                    if (this.lbl_quickbet_bets[j].node.parent.active) {\r\n                        this.lbl_quickbet_bets[j].node.parent.setPosition(this.raise3Vec2[aa++])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (total==4) {\r\n            if (this.btn_allin2.node.active==true) {\r\n                this.btn_allin2.node.setPosition(this.raise5Vec2[3])\r\n            }\r\n            else\r\n            {\r\n                let aa = 0\r\n                for (let j = 0; j < this.lbl_quickbet_bets.length; j++) {\r\n                    if (this.lbl_quickbet_bets[j].node.parent.active) {\r\n                        this.lbl_quickbet_bets[j].node.parent.setPosition(this.raise5Vec2[aa++])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (total==5) {\r\n            // if (this.btn_allin2.node.active==true) {\r\n                this.btn_allin2.node.setPosition(this.raise5Vec2[4])\r\n            //}\r\n\r\n            let aa = 0\r\n            for (let j = 0; j < this.lbl_quickbet_bets.length; j++) {\r\n                if (this.lbl_quickbet_bets[j].node.parent.active) {\r\n                    this.lbl_quickbet_bets[j].node.parent.setPosition(this.raise5Vec2[aa++])\r\n                }\r\n            }\r\n        }\r\n    }\r\n    convertChip(chip:number)\r\n    {\r\n        let strchip = this.node.parent.getComponent('Page').getFormatNum(chip)\r\n        return strchip\r\n    }\r\n    getBlindMod()\r\n    {\r\n        let bi = GMatchSer.getCurBlindItem(this._table_id)\r\n        if(!bi)\r\n        {\r\n            return 1\r\n        }\r\n        let m = 100\r\n        if(bi.small_blind<=400)\r\n        {\r\n            m=25\r\n        }\r\n        else if(bi.small_blind<=3000)\r\n        {\r\n            m=50\r\n        }\r\n        return m\r\n    }\r\n    getBigBlind()\r\n    {\r\n        let bi = GMatchSer.getCurBlindItem(this._table_id)\r\n        if(!bi)\r\n        {\r\n            return 100\r\n        }\r\n        return bi.big_blind\r\n    }\r\n    onBeginBet()\r\n    {\r\n        let ti = this.tableInfo\r\n        if(ti.turn_user_id==GUserMgr.self_user_id)\r\n        {\r\n            this.sd_raise.progress = 0\r\n            if(this._isany)\r\n            {\r\n                let seatinfo = this.selfSeatInfo\r\n                let bet = ti.curmaxbet-seatinfo.bet\r\n                if(bet>seatinfo.playerinfo.point)\r\n                {\r\n                    bet=seatinfo.playerinfo.point\r\n                }\r\n                GNetGameTexas.send_texas_bet(this._table_id, bet)\r\n                this._isany=false\r\n                return\r\n            }\r\n            if(this._iscallfold)\r\n            {\r\n                let seatinfo = this.selfSeatInfo\r\n                let bet = ti.curmaxbet-seatinfo.bet\r\n                if(bet>0)\r\n                {\r\n                    bet=-1\r\n                }\r\n                GNetGameTexas.send_texas_bet(this._table_id, bet)\r\n                this._iscallfold=false\r\n                return\r\n            }\r\n        }\r\n        this.refreshButtons()\r\n    }\r\n    onGameStart()\r\n    {\r\n        this.node_showcards0.getChildByName(\"Background\").active=false\r\n        this.node_showcards1.getChildByName(\"Background\").active=false\r\n\r\n        this.showleft = -1\r\n        this.showright = -1\r\n        this.refreshButtons()\r\n\r\n        let seatinfo = this.selfSeatInfo\r\n        if (!seatinfo) {\r\n            return\r\n        }\r\n        if(seatinfo.state==ETexasSeatState.Fold) {    \r\n            this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(0).setColor(cc.Color.BLACK.fromHEX(\"#4D4D4D\"))\r\n            this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(1).setColor(cc.Color.BLACK.fromHEX(\"#4D4D4D\"))\r\n        }\r\n        else\r\n        {\r\n            this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(0).setColor(cc.Color.WHITE)\r\n            this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(1).setColor(cc.Color.WHITE)\r\n        }\r\n    }\r\n    onGameResult()\r\n    {\r\n        this.refreshButtons()\r\n        this.tgshowCard()\r\n    }\r\n    \r\n    tgshowCard() {\r\n        let tableinfo = this.tableInfo\r\n        if(tableinfo.state==ETableState.End)\r\n        {\r\n            let battleRecords = GTexasTableDM.battleRecords[this._table_id]\r\n            if(battleRecords)\r\n            {\r\n                let gameresult = battleRecords[battleRecords.length-1]\r\n                if(gameresult)\r\n                {\r\n                    let userrecord = gameresult.userrecords[GUserMgr.self_user_id]\r\n                    if(userrecord)\r\n                    {\r\n                        if (this.showleft!=-1) {\r\n                            GNetGameTexas.send_texas_showcard(this._table_id, 1)\r\n                            MessageCenter.getInstance().send(\"turnShowCard\", 1)\r\n                        }\r\n                        if (this.showright!=-1) {\r\n                            GNetGameTexas.send_texas_showcard(this._table_id, 2)\r\n                            MessageCenter.getInstance().send(\"turnShowCard\", 2)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    showCardEnd(leftorright) {\r\n        let tableinfo = this.tableInfo\r\n        if(tableinfo.state==ETableState.End)\r\n        {\r\n            let battleRecords = GTexasTableDM.battleRecords[this._table_id]\r\n            if(battleRecords)\r\n            {\r\n                let gameresult = battleRecords[battleRecords.length-1]\r\n                if(gameresult)\r\n                {\r\n                    let userrecord = gameresult.userrecords[GUserMgr.self_user_id]\r\n                    if(userrecord)\r\n                    {\r\n                        if (this.showleft!=-1&&this.showright!=-1) {\r\n                            this.node_showcards0.getChildByName(\"Background\").active = true\r\n                            this.node_showcards1.getChildByName(\"Background\").active = true\r\n                            this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(0).setColor(cc.Color.WHITE)\r\n                            this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(1).setColor(cc.Color.WHITE)\r\n\r\n                            GNetGameTexas.send_texas_showcard(this._table_id, 3)\r\n                            if (leftorright==2) {\r\n                                MessageCenter.getInstance().send(\"turnShowCard\", 1)\r\n                            }\r\n                            else\r\n                            {\r\n                                MessageCenter.getInstance().send(\"turnShowCard\", 2)\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            if (this.showleft!=-1) {\r\n                                this.node_showcards0.getChildByName(\"Background\").active = true\r\n                                this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(0).setColor(cc.Color.WHITE)\r\n                                GNetGameTexas.send_texas_showcard(this._table_id, 1)\r\n                                MessageCenter.getInstance().send(\"turnShowCard\", 1)\r\n                            }\r\n                            if (this.showright!=-1) {\r\n                                this.node_showcards1.getChildByName(\"Background\").active=true\r\n                                this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(1).setColor(cc.Color.WHITE)\r\n                                GNetGameTexas.send_texas_showcard(this._table_id, 2)\r\n                                MessageCenter.getInstance().send(\"turnShowCard\", 2)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    Btn_QuickRaise_OnClick(event, param) {\r\n        let index = parseInt(param)\r\n        let dtchip =(parseInt(this.lbl_quickbet_bets[index]['cur_betNum'])-this.selfSeatInfo.bet)\r\n        GNetGameTexas.send_texas_bet(this._table_id, dtchip)\r\n        this.tableInfo.turn_user_id=-1\r\n        this.refreshButtons()\r\n    }\r\n    //自动看或者弃\r\n    Btn_AutoCallFold_OnClick(event) {\r\n        this._iscallfold = !this._iscallfold\r\n        this._isany=false\r\n        this.refreshButtons()\r\n    }\r\n    //自动跟所有\r\n    Btn_AutoAny_OnClick(event) {\r\n        this._isany = !this._isany\r\n        this._iscallfold = false\r\n        if (this._isany)\r\n        {\r\n            let seatinfo = this.selfSeatInfo\r\n            let tableinfo = this.tableInfo\r\n            if (seatinfo&&tableinfo) {\r\n                this._preany=tableinfo.curmaxbet-seatinfo.bet\r\n            }\r\n        }\r\n        this.refreshButtons()\r\n    }\r\n    Btn_Fold_OnClick(event) {\r\n        GNetGameTexas.send_texas_bet(this._table_id, -1)\r\n        this.tableInfo.turn_user_id=-1\r\n        this.refreshButtons()\r\n    }\r\n    Btn_Check_OnClick(event) {\r\n        //\r\n        GNetGameTexas.send_texas_bet(this._table_id, 0)\r\n        this.tableInfo.turn_user_id=-1\r\n        this.refreshButtons()\r\n    }\r\n    Btn_Call_OnClick(event) {\r\n        let tableinfo = this.tableInfo\r\n        let seatinfo = this.selfSeatInfo\r\n        let dtchip = tableinfo.curmaxbet - seatinfo.bet\r\n        GNetGameTexas.send_texas_bet(this._table_id, dtchip)\r\n        this.tableInfo.turn_user_id=-1\r\n        this.refreshButtons()\r\n    }\r\n\r\n    Btn_Allin_OnClick(event) {\r\n        let seatinfo = this.selfSeatInfo\r\n        GNetGameTexas.send_texas_bet(this._table_id, seatinfo.playerinfo.point)\r\n        this.tableInfo.turn_user_id=-1\r\n        this.refreshButtons()\r\n    }\r\n\r\n    protected _getRaise() {\r\n        let min = this._getMinRaise()\r\n        let max = this._getMaxRaise()\r\n        if(min>max)\r\n        {\r\n            min = max\r\n        }\r\n        let seatinfo = this.selfSeatInfo\r\n        let tableinfo=this.tableInfo\r\n        let bet = min+Math.floor((max-min)*this.sd_raise.progress)\r\n        //allin不管\r\n        if(bet==seatinfo.bet+seatinfo.playerinfo.point)\r\n        {\r\n\r\n        }\r\n        else\r\n        {\r\n            let dtbet = bet-seatinfo.bet\r\n            if(tableinfo.min_raise_bet>0)\r\n            {\r\n                let num=Math.floor(dtbet/tableinfo.min_raise_bet)\r\n                dtbet=num*tableinfo.min_raise_bet\r\n                bet = seatinfo.bet+dtbet\r\n            }\r\n        }\r\n        // let m = this.getBlindMod()\r\n        // if(bet!=max)\r\n        // {\r\n        //     bet = bet-bet%m\r\n        // }\r\n        if(bet<min)\r\n        {\r\n            bet=min\r\n        }\r\n        if(bet>max)\r\n        {\r\n            bet=max\r\n        }\r\n        return bet\r\n    }\r\n    /**\r\n     * 加注的最小值（加到）\r\n     */\r\n    protected _getMinRaise()\r\n    {\r\n        let tableinfo = this.tableInfo\r\n        let seatinfo = this.selfSeatInfo\r\n        if(tableinfo.min_raise_bet<=0)\r\n        {\r\n            tableinfo.min_raise_bet=tableinfo.big_blind\r\n        }\r\n        //1,翻牌前\r\n        let min = tableinfo.curmaxbet\r\n        if(!tableinfo.cards||tableinfo.cards.length<=0)\r\n        {\r\n            min += tableinfo.min_raise_bet\r\n        }\r\n        //2,翻牌后\r\n        else\r\n        {\r\n            if(seatinfo.bet==0||min==0||min-seatinfo.bet>tableinfo.min_raise_bet)\r\n            {\r\n                min+=tableinfo.min_raise_bet\r\n            }\r\n        }\r\n        if(min>seatinfo.bet+seatinfo.playerinfo.point)\r\n        {\r\n            min = seatinfo.bet+seatinfo.playerinfo.point\r\n        }\r\n        return min\r\n    }\r\n    /**nul\r\n     * 加注的最大值（加到）\r\n     */\r\n     protected _getMaxRaise()\r\n     {\r\n        let tableinfo = this.tableInfo\r\n        let seatinfo = this.selfSeatInfo\r\n        if(tableinfo.min_raise_bet<=0)\r\n        {\r\n            tableinfo.min_raise_bet=tableinfo.big_blind\r\n        }\r\n        //1,翻牌前\r\n        let max = seatinfo.bet+seatinfo.playerinfo.point\r\n        if(!tableinfo.cards||tableinfo.cards.length<=0)\r\n        {\r\n            //最大值就是allin\r\n        }\r\n        //2,翻牌后\r\n        else\r\n        {\r\n            //只能call\r\n            if(tableinfo.curmaxbet-seatinfo.bet>0&&tableinfo.curmaxbet-seatinfo.bet<tableinfo.min_raise_bet)\r\n            {\r\n                max=tableinfo.curmaxbet\r\n            }\r\n        }\r\n        if(max>seatinfo.bet+seatinfo.playerinfo.point)\r\n        {\r\n            max = seatinfo.bet+seatinfo.playerinfo.point\r\n        }\r\n        return max\r\n     }\r\n    Slider_More_OnChanged(slider: cc.Slider) {\r\n        //this.free_raise.getComponent(cc.Button).enabled = true\r\n        if(!this._onclickSliderDown)\r\n        {\r\n            this.sd_raise.progress = 0\r\n            return\r\n        }\r\n        this.lbl_slider_total.string =  this.node.parent.getComponent('Page').getFormatNum(this._getRaise())\r\n\r\n        this.percent_img.height = this._slider_height*this.sd_raise.progress\r\n        let rate=Math.floor(this.sd_raise.progress*100)\r\n        this.lbl_slider_text.string=rate+\"%\"\r\n    }\r\n\r\n    public onsliderHandDown(evt) {\r\n        if(this._onclickSliderDown||this.percent_img.parent.active)\r\n        {\r\n            this._onclickSliderDown = true\r\n            return\r\n        }\r\n        this.percent_img.parent.active=true\r\n        this.btn_raise.active = false\r\n        this._onclickSliderDown = true\r\n        this.sd_raise.progress = 0\r\n        this.sd_raise.node.parent.opacity = 255\r\n        this.percent_img.height = 0\r\n        this.lbl_slider_text.string=\"0%\"\r\n        this.node_raise_top.active=true\r\n        this.lbl_slider_text.node.parent.active=true\r\n        this.node_raise.zIndex = -1\r\n        this.node_btn.zIndex = 0\r\n        this.lbl_slider_total.string =  this.node.parent.getComponent('Page').getFormatNum(this._getRaise())\r\n    }\r\n\r\n    public onsliderHandUp(evt) {\r\n        if (!this._onclickSliderDown) return\r\n        this._onclickSliderDown = false\r\n    }\r\n\r\n    public onsliderHandCancel(evt) {\r\n        if (!this._onclickSliderDown) return\r\n        this._onclickSliderDown = false\r\n    }\r\n\r\n    Btn_Auto_OnClick() {\r\n        GNetGameTexas.send_texas_auto(this.tableInfo.id, false)\r\n    }\r\n\r\n    onAuto(table_id: number, user_id: number, auto: boolean) {\r\n        if (table_id != this._table_id) {\r\n            return\r\n        }\r\n        if (user_id == GUserMgr.self_user_id) {\r\n            this.refreshButtons()\r\n        }\r\n    }\r\n\r\n    Btn_Bet_OnClick()\r\n    {\r\n        let bet = this._getRaise()-this.selfSeatInfo.bet\r\n        GNetGameTexas.send_texas_bet(this._table_id,bet)\r\n        this.tableInfo.turn_user_id=-1\r\n        this.refreshButtons()\r\n    }\r\n\r\n    Btn_ShowLeft_OnClick()\r\n    {\r\n        let tableinfo = this.tableInfo\r\n        let seatinfo = this.selfSeatInfo\r\n        if (seatinfo==undefined) {\r\n            return;\r\n        }\r\n        if (seatinfo.state==ETexasSeatState.Fold) {\r\n            if (seatinfo != undefined && tableinfo.state != ETableState.Idle) {\r\n                if (!this.node_showcards0.getChildByName(\"Background\").active) {\r\n                    this.node_showcards0.getChildByName(\"Background\").active = true;\r\n                    this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(0).setColor(cc.Color.WHITE)\r\n                    this.showleft = 1;\r\n                }\r\n                else\r\n                {\r\n                    if (tableinfo.state == ETableState.End) {\r\n                        return\r\n                    }\r\n                    else\r\n                    {\r\n                        this.node_showcards0.getChildByName(\"Background\").active = false;\r\n                        this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(0).setColor(cc.Color.BLACK.fromHEX(\"#4D4D4D\"))\r\n                        this.showleft = -1;\r\n                    }\r\n                }\r\n                this.showCardEnd(this.showright)\r\n            }\r\n        }\r\n        else if(tableinfo.state==ETableState.End)\r\n        {\r\n            let results = GTexasTableDM.battleRecords[tableinfo.id]\r\n            if(!results||results.length<=0)\r\n            {\r\n                return\r\n            }\r\n            let rs = results[results.length-1]\r\n            let rr = rs.userrecords[seatinfo.playerinfo.id]\r\n            if(rr&&rr.showcards!=1&&rr.showcards!=3)\r\n            {\r\n                this.showleft=1\r\n                GNetGameTexas.send_texas_showcard(this._table_id, 1)\r\n                this.showCardEnd(rr.showcards|1)\r\n            }\r\n        }\r\n    }\r\n\r\n    Btn_ShowRight_OnClick()\r\n    {\r\n        let tableinfo = this.tableInfo\r\n        let seatinfo = this.selfSeatInfo\r\n        if (seatinfo==undefined) {\r\n            return;\r\n        }\r\n        if (seatinfo.state==ETexasSeatState.Fold) {\r\n            if (seatinfo != undefined && tableinfo.state != ETableState.Idle) {\r\n                if (!this.node_showcards1.getChildByName(\"Background\").active) {\r\n                    this.node_showcards1.getChildByName(\"Background\").active = true;\r\n                    this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(1).setColor(cc.Color.WHITE)\r\n                    this.showright = 2;\r\n                }\r\n                else\r\n                {\r\n                    if (tableinfo.state == ETableState.End) {\r\n                        return\r\n                    }\r\n                    this.node_showcards1.getChildByName(\"Background\").active = false\r\n                    this.node.parent.getComponent(\"Page_Table\").seats[0].getCard(1).setColor(cc.Color.BLACK.fromHEX(\"#4D4D4D\"))\r\n                    this.showright = -1;\r\n                }\r\n                this.showCardEnd(this.showleft)\r\n            }\r\n        }\r\n        else if(tableinfo.state==ETableState.End)\r\n        {\r\n            let results = GTexasTableDM.battleRecords[tableinfo.id]\r\n            if(!results||results.length<=0)\r\n            {\r\n                return\r\n            }\r\n            let rs = results[results.length-1]\r\n            let rr = rs.userrecords[seatinfo.playerinfo.id]\r\n            if(rr&&rr.showcards!=2&&rr.showcards!=3)\r\n            {\r\n                this.showright=2\r\n                GNetGameTexas.send_texas_showcard(this._table_id, 2)\r\n                this.showCardEnd(rr.showcards|1)\r\n            }\r\n        }\r\n    }\r\n\r\n    onHideFreeRaise() {\r\n        this.btn_raise.active=true\r\n        this.free_raise.active = true;\r\n        this.node_raise_top.active=false\r\n        this.lbl_slider_text.node.parent.active=false\r\n        this.percent_img.parent.active=false\r\n        this.sd_raise.progress = 0;\r\n\r\n        this.node_raise.zIndex = 0\r\n        this.node_btn.zIndex = -1\r\n    }\r\n\r\n    startTimeCut(time) {\r\n        this.node_countdown.active = true;\r\n        this.node_countdown.getChildByName(\"lbl_timer\").getComponent(cc.Label).unscheduleAllCallbacks();\r\n        let alltime = time;\r\n        let lefttime = time;\r\n        this.node_countdown.getChildByName(\"lbl_timer\").getComponent(cc.Label).string = \"\"//allTime;\r\n        let scheduleCallback = ()=>{\r\n            lefttime = lefttime - 1;\r\n            if (lefttime <= 0) {\r\n                this.stopTimeCut();\r\n            }\r\n            this.node_countdown.getChildByName(\"lbl_timer\").getComponent(cc.Label).string = lefttime+\"s\"\r\n            this.node_countdown.getComponent(cc.Sprite).fillRange = lefttime/alltime;\r\n        }\r\n\r\n        scheduleCallback()\r\n        this.node_countdown.zIndex=9999\r\n        this.node_countdown.getChildByName(\"lbl_timer\").getComponent(cc.Label).schedule(scheduleCallback, 1);\r\n    }\r\n\r\n    stopTimeCut() {\r\n        this.btn_auto_any.node.getChildByName(\"lbl_auto_any\").getComponent(cc.Label).string = \"跟任何\"\r\n        this.node_countdown.getChildByName(\"lbl_timer\").getComponent(cc.Label).unscheduleAllCallbacks();\r\n        this.node_countdown.active = false;\r\n    }\r\n}\r\n","import { GTexasTableDM } from \"../../DataModel/TexasTableDataModel\";\r\nimport { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\";\r\nimport { GMatchSer, MatchPlayer } from \"../../Service/MatchService\";\r\nimport Page_Game from \"../Page/Page_Game\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_Time extends cc.Component {\r\n    onLoad()\r\n    {        \r\n        this.onRefresh()\r\n    }\r\n    \r\n    onRefresh()\r\n    {\r\n        this.schedule(this.onUpdate.bind(this),0.5)\r\n        this.onUpdate()\r\n    }\r\n    onUpdate()\r\n    {\r\n        let page = GPageMgr.getPage(\"Page_Game\") as Page_Game\r\n        if(!page)\r\n        {\r\n            return\r\n        }\r\n        let table_id = page.tableId\r\n        let tableinfo = GTexasTableDM.getTableInfo(table_id)\r\n        let matchInsM = GMatchSer.getMatchInsById(tableinfo.match_insid)\r\n        let matchM = matchInsM.match\r\n        let now = new Date();\r\n        let start = new Date(matchInsM.start_time)\r\n        let bm = GMatchSer.getBlindModel(matchM.blind_id)\r\n\r\n        let dttime = start.getTime()-GHelper.getServerTime()\r\n        if(dttime<0)\r\n        {\r\n            this.node.active = false\r\n            dttime=0\r\n        }\r\n        else\r\n        {\r\n            this.node.active = true;\r\n            this.node.parent.getChildByName(\"Widget_MatchInfo\").active = false\r\n        }\r\n        dttime=Math.floor(dttime/1000)\r\n        let m = Math.floor(dttime/60)\r\n        let s = dttime%60\r\n        let str=m+\":\"\r\n        let tm=m+\"\"\r\n        if(m<10)\r\n        {\r\n            tm=\"0\"+tm\r\n            str=\"0\"+str\r\n        }\r\n        if(s>10)\r\n        {\r\n            tm+=s\r\n            str+=s\r\n        }\r\n        else\r\n        {\r\n            tm+=\"0\"+s\r\n            str+=\"0\"+s\r\n        }\r\n\r\n        var digits = tm.toString().split('');\r\n\r\n        var realDigits = digits.map(Number)\r\n\r\n        console.log(realDigits);\r\n        if (realDigits.length>4) {\r\n            this.node.getChildByName(\"sp_1\").getChildByName(\"lb_1\").getComponent(cc.Label).string = realDigits[1].toString()\r\n            this.node.getChildByName(\"sp_2\").getChildByName(\"lb_2\").getComponent(cc.Label).string = realDigits[2].toString()\r\n            this.node.getChildByName(\"sp_3\").getChildByName(\"lb_3\").getComponent(cc.Label).string = realDigits[3].toString()\r\n            this.node.getChildByName(\"sp_4\").getChildByName(\"lb_4\").getComponent(cc.Label).string = realDigits[4].toString()\r\n        }\r\n        else\r\n        {\r\n            this.node.getChildByName(\"sp_1\").getChildByName(\"lb_1\").getComponent(cc.Label).string = realDigits[0].toString()\r\n            this.node.getChildByName(\"sp_2\").getChildByName(\"lb_2\").getComponent(cc.Label).string = realDigits[1].toString()\r\n            this.node.getChildByName(\"sp_3\").getChildByName(\"lb_3\").getComponent(cc.Label).string = realDigits[2].toString()\r\n            this.node.getChildByName(\"sp_4\").getChildByName(\"lb_4\").getComponent(cc.Label).string = realDigits[3].toString()\r\n        }\r\n    }\r\n}\r\n","\r\nimport viewCell from \"../../Framework/TableView/viewCell\"\r\nimport { utils } from \"../../utils/Utils\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_mathinfo_level_cell extends viewCell {\r\n    protected onLoad(): void {\r\n        \r\n    }\r\n    init(index: number, data?: any): void {\r\n        this.refreshData(index,data)\r\n    }\r\n    refreshData(index,data){\r\n        let bi = data\r\n        let node = this.node\r\n        let i = index\r\n        let cur_index = this.delegate.delegate.cur_index\r\n        let matchInsM =  this.delegate.delegate.matchInsM\r\n        \r\n        node.getChildByName('img_curlevel').active = true;\r\n        node.getChildByName('node_deadline').active = true;\r\n        node.getChildByName('label_rest').active = true;\r\n\r\n        if(bi.small_blind+bi.big_blind+bi.ante>0)\r\n        {\r\n            node.getChildByName('label_level').getComponent(cc.Label).string = bi.level+\"\"\r\n            node.getChildByName('label_blind').getComponent(cc.Label).string = utils.formatNumber(bi.small_blind, 0) + '/' + utils.formatNumber(bi.big_blind, 0)\r\n            node.getChildByName('label_ante').getComponent(cc.Label).string = utils.formatNumber(bi.ante, 0)\r\n            node.getChildByName('label_duration').getComponent(cc.Label).string = Math.floor(bi.seconds / 60) + '分钟'\r\n            let shadow = node.getChildByName('img_shadow')\r\n            shadow.active = false;\r\n            // if(cur_index==i)\r\n            // {\r\n            //     shadow.active=true\r\n            // }\r\n            // else\r\n            // {\r\n            //     shadow.active=false\r\n            // }\r\n\r\n            node.getChildByName('img_curlevel').active = false;\r\n            node.getChildByName('node_deadline').active = false;\r\n            node.getChildByName('label_rest').active = false;\r\n            if (i < cur_index) {\r\n                node.getChildByName('label_level').color = new cc.Color().fromHEX(\"#CCCCCC\");\r\n                node.getChildByName('label_blind').color = new cc.Color().fromHEX(\"#CCCCCC\");\r\n                node.getChildByName('label_ante').color = new cc.Color().fromHEX(\"#CCCCCC\");\r\n                node.getChildByName('label_duration').color = new cc.Color().fromHEX(\"#CCCCCC\");\r\n            }\r\n            else if (i == cur_index) {\r\n                node.getChildByName('label_level').color = new cc.Color().fromHEX(\"#EC9630\");\r\n                node.getChildByName('label_blind').color = new cc.Color().fromHEX(\"#EC9630\");\r\n                node.getChildByName('label_ante').color = new cc.Color().fromHEX(\"#EC9630\");\r\n                node.getChildByName('label_duration').color = new cc.Color().fromHEX(\"#EC9630\");\r\n                node.getChildByName('img_curlevel').active = true;\r\n            }\r\n            else\r\n            {\r\n                node.getChildByName('label_level').color = new cc.Color().fromHEX(\"#666666\");\r\n                node.getChildByName('label_blind').color = new cc.Color().fromHEX(\"#666666\");\r\n                node.getChildByName('label_ante').color = new cc.Color().fromHEX(\"#666666\");\r\n                node.getChildByName('label_duration').color = new cc.Color().fromHEX(\"#666666\");\r\n            }\r\n        }\r\n        else\r\n        {\r\n            node.getChildByName('img_curlevel').active = false;\r\n            node.getChildByName('node_deadline').active = false;\r\n            node.getChildByName('label_level').getComponent(cc.Label).string = \"\"\r\n            node.getChildByName('label_blind').getComponent(cc.Label).string = \"\"\r\n            node.getChildByName('label_ante').getComponent(cc.Label).string = \"\"\r\n            node.getChildByName('label_duration').getComponent(cc.Label).string = \"\"\r\n            // let lbl_ante = node.getChildByName('label_ante').getComponent(cc.Label)\r\n            // lbl_ante.node.color=cc.Color.RED\r\n            // node.getChildByName('label_duration').getComponent(cc.Label).string = Math.floor(bi.seconds / 60) + '分钟'\r\n            node.getChildByName('label_rest').active = true\r\n            node.getChildByName('label_rest').getComponent(cc.Label).string = '休息' + Math.floor(bi.seconds / 60) + '分钟'\r\n            // let shadow = node.getChildByName('img_shadow')\r\n            // if(cur_index==i)\r\n            // {\r\n            //     shadow.active=true\r\n            // }\r\n            // else\r\n            // {\r\n            //     shadow.active=false\r\n            // }\r\n        }\r\n        if(matchInsM.match.reenter_blind_index==i)\r\n        {\r\n            //lbl_ante.string = \"截止报名\"\r\n            node.getChildByName('node_deadline').active = true\r\n        }\r\n    }\r\n}   ","import { core } from \"../../Framework/Core/Base\"\r\nimport { GHelper } from \"../../Framework/Logic/Helper\"\r\nimport { GPageMgr } from \"../../Framework/View/Page/PageManager\"\r\nimport { AddressItem, GUserMgr } from \"../../Logic/UserManager\"\r\nimport { GHallHttp } from \"../../Net/HallHttp\"\r\nimport { BagItemItem, EBagItemState, GItemCfg, ItemItem } from \"../../Service/ItemService\"\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\"\r\nimport { GAccountHttp } from '../../Net/AccountHttp';\r\nimport { GAppDM } from '../../DataModel/AppDataModel';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Widget_serverListItem extends cc.Component {\r\n\r\n    \r\n\r\n    @property(cc.Label)\r\n    lbl_title: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_host: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    lbl_port: cc.Label = null\r\n\r\n   \r\n\r\n\r\n    item_data = null;\r\n    item_index = -1;\r\n\r\n   \r\n    onLoad()\r\n    {\r\n       \r\n    }\r\n    protected onDestroy(): void {\r\n        \r\n    }\r\n    init(m_item_data:any,mIndex) \r\n    {\r\n        this.item_index = mIndex;\r\n        this.item_data = m_item_data;\r\n        this.lbl_title.string = this.item_data.name;\r\n        this.lbl_host.string = \"host : \" + this.item_data.host\r\n        this.lbl_port.string = \"port : \" + this.item_data.port;\r\n    }\r\n    Btn_Connect_OnClick(event)\r\n    {\r\n        GAppDM.account_server={host:this.item_data.host,port:this.item_data.port};\r\n         // 获取地址\r\n         GAccountHttp.init(\"auth\",GAppDM.account_server.host,GAppDM.account_server.port)\r\n         GPageMgr.openPage(\"Page_Start\")\r\n         GPageMgr.closePage('Page_ServerList');\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WithdrawLayer extends cc.Component {\r\n\r\n    initTable() {\r\n    }\r\n}\r\n","import { GUserMgr } from \"../Logic/UserManager\";\r\nimport { GHallHttp } from \"../Net/HallHttp\";\r\n\r\n\r\n\r\n\r\nexport let ykUtils:YkUtils =  null\r\nclass YkUtils {\r\n    public _obsUrl ='http://dzgame.obs.cn-east-2.myhuaweicloud.com/texasres/'\r\n    public PATH = {\r\n        game_poster:this._obsUrl+'game_poster/',//海报路径\r\n        png_kefu: this._obsUrl+'imgs/kefu/kefuwechat1.png',//客服微信 png\r\n        png_kefuCode: this._obsUrl+'imgs/invitecode/invidecode.png',//海报分享链接 png\r\n\r\n        item_icon:this._obsUrl+'imgs/item/',\r\n        item_icon_reward_share:this._obsUrl+'imgs/item_match_rewards/'\r\n    }\r\n    \r\n\r\n    getPosterNet(hbName){\r\n        return this.PATH.game_poster+hbName\r\n    }\r\n\r\n    getKefu(){\r\n        return this.PATH.png_kefu\r\n    }\r\n\r\n    // 获得icon图标\r\n    getItemIcon(reIcon){\r\n        if(reIcon.indexOf('/')!=-1){\r\n            return  this.PATH.item_icon+'ticket.png'\r\n        }\r\n\r\n        return this.PATH.item_icon+reIcon\r\n    }\r\n    // 获得奖励图标\r\n    getItemIconReward(reIcon){\r\n        if(reIcon.indexOf('/')!=-1){\r\n            return  this.PATH.item_icon_reward_share+'gasCard.png'\r\n        }\r\n\r\n        return this.PATH.item_icon_reward_share+reIcon\r\n    }\r\n\r\n\r\n\r\n    public addClickEventListener(node:cc.Node,button:cc.Button,scriptName:string,callBack:string,eventData:string){\r\n        let clickEventHandler = new cc.Component.EventHandler();\r\n\r\n        clickEventHandler.target = node; // 这个 node 节点是你的事件处理代码组件所属的节点\r\n        clickEventHandler.component = scriptName;// 这个是脚本类名\r\n        clickEventHandler.handler = callBack;\r\n        clickEventHandler.customEventData = eventData;\r\n\r\n        button.clickEvents.push(clickEventHandler);\r\n    }\r\nX\r\n    isEmpty(value:any){\r\n        if(value == null || value == undefined){\r\n            return true\r\n        }\r\n\r\n\r\n\r\n        if(typeof(value) == 'string'){\r\n            value = value.replace(/^\\s+|\\s+$/g,\"\").toLowerCase()\r\n            if( value== ''||value == 'null'|| value == 'nullptr' || value == 'undefined'||value == 'nan'){\r\n                return true\r\n            }\r\n        }else if(typeof(value)=='object'){\r\n            if(JSON.stringify(value)=='{}'){\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    // true \r\n    compareVersionMax(version1,version2){\r\n        console.log('compare',version1,version2)\r\n        if(this.isEmpty(version1)||this.isEmpty(version2)){\r\n            // 不需要更新\r\n            return false\r\n        }\r\n\r\n        let valuse1 = version1.split('.')\r\n        let valuse2 = version2.split('.')\r\n\r\n        console.log(valuse1)\r\n        console.log(valuse2)\r\n\r\n        for(var k in  valuse1){\r\n            if(Number(valuse1[k])>Number(valuse2[k])){\r\n                return true\r\n            }else if(Number(valuse1[k])<Number(valuse2[k])){\r\n                return false\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if(valuse1.length>valuse2.length){\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n\r\n    async waitTime(seconds:number):Promise<void>{\r\n        let promise =  new Promise<void>(resolve => {\r\n            setTimeout(()=>{\r\n                resolve()\r\n            },seconds*1000)\r\n        })\r\n        return promise\r\n    }\r\n\r\n    async waitTimeNode(node:cc.Node,seconds:number):Promise<void>{\r\n        let promise =  new Promise<void>(resolve => {\r\n            node.runAction(cc.sequence(cc.delayTime(seconds),cc.callFunc(()=>{\r\n                resolve()\r\n            })))\r\n        })\r\n      \r\n        return promise\r\n    }\r\n\r\n\r\n\r\n    clone(obj){\r\n        var copy;\r\n        switch(typeof obj){\r\n            case 'undefined':break;\r\n            case 'number':\r\n            case 'string':\r\n            case 'boolean':copy = obj;break;\r\n            case 'function':\r\n                //先把函数转成字符串 在把字符串克隆转成函数  cc.log(g_clone(g_arrayEqual) == g_arrayEqual) 结果false\r\n                copy = new Function(\"return \" + obj.toString())();\r\n    \r\n                //或者直接返回引用 cc.log(g_clone(g_arrayEqual) == g_arrayEqual) 结果true\r\n                //copy = obj;break;\r\n                break;\r\n            case 'object':\r\n                if(obj == null) copy = null;\r\n                else if(toString.apply(obj) === '[object Array]')\r\n                {\r\n                    copy = [];\r\n                    for(var i in obj) copy.push(this.clone(obj[i]));\r\n                }\r\n                else \r\n                {\r\n                    copy = {};\r\n                    for(var j in obj)\r\n                        copy[j]= this.clone(obj[j]);\r\n                }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    saveData(key,value)\r\n    {\r\n\r\n        console.log('saveData',key,value)\r\n        cc.sys.localStorage.setItem(key,value)\r\n    }\r\n\r\n    getData(key){\r\n        let res =  cc.sys.localStorage.getItem(key)\r\n        if(this.isEmpty(res)){\r\n            return null\r\n        }\r\n        console.log('getData',key,res)\r\n        return res\r\n    }\r\n    \r\n\r\n\r\n    loadResourse(loadPath:string,typp:typeof cc.Asset): Promise<any>{\r\n        var promise = new Promise<any>(resolve => {\r\n            cc.resources.load(loadPath,typp,(error,spriteFrame)=>{\r\n                if(error){\r\n                    console.log('resources.load'+error)\r\n                }\r\n                resolve(spriteFrame)\r\n            })\r\n        })\r\n        return promise \r\n    }\r\n\r\n    loadNetSpriteFrame(imgPath,pngTp = '.png'):Promise<any>{\r\n        console.log('loadPath',imgPath)\r\n        var promise = new Promise<any>(resolve => {\r\n            cc.assetManager.loadRemote(imgPath,{ext: pngTp},(err,tex:cc.Texture2D)=>{\r\n                if(err){\r\n                    console.log(err)\r\n                    resolve(null)\r\n                }\r\n                let sp = new cc.SpriteFrame(tex)\r\n                resolve(sp)\r\n            })\r\n        })\r\n        return promise\r\n    }\r\n\r\n\r\n    async loadNetSpriteFrameWithNode(sprite:cc.Sprite,imgPath,pngTp = '.png'){\r\n        let frame = await this.loadNetSpriteFrame(imgPath,pngTp)\r\n        sprite.spriteFrame = frame\r\n    }\r\n\r\n\r\n    // 返回 min（包含）～ max（包含）之间的数字\r\n    getRndInteger(min:number, max:number) {\r\n      return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n    }\r\n\r\n    async getServerTime(){\r\n        let time = await GHallHttp.request(\"GetTime\")\r\n        if(time&&time.time){\r\n            return time.time\r\n        }\r\n        // console.log('getServerTime',time.time)\r\n        // 获取服务器时间失败\r\n        return 0\r\n    }\r\n\r\n    \r\n}\r\n\r\nykUtils = new YkUtils()","export enum EPrepareTimeOutType\r\n{\r\n    /**\r\n     * 不做处理\r\n     */\r\n    None,\r\n    /**\r\n     * 踢出牌局\r\n     */\r\n    KickOut,\r\n    /**\r\n     * 自动准备\r\n     */\r\n    AutoPrepare\r\n}\r\n\r\nexport enum EFeeType\r\n{\r\n    Free=1,//免费\r\n    AA,//AA制\r\n    Creator,//房主付费\r\n    Club,//俱乐部基金付费\r\n}\r\n\r\nexport enum ETexasAction {\r\n    None = 0,\r\n    Raise, // 加注\r\n    Call, // 跟注\r\n    Allin,\r\n    Check, // 不下注\r\n    Fold  // 弃牌\r\n}\r\n\r\nexport enum ECardType\r\n{\r\n    None            = 0, // 未知\r\n    High            = 1, // 高牌\r\n    OnePair         = 2, // 一对\r\n    TwoPair         = 3, // 两对\r\n    Tribble         = 4, // 三条\r\n    Flush           = 5, // 顺子\r\n    Straight        = 6, // 同花\r\n    FullHouse       = 7, // 葫芦\r\n    Quadruple       = 8, // 四条\r\n    StraightFlush   = 9, // 同花顺\r\n    RoyalFlush      = 10 // 皇家同花顺\r\n}\r\nexport let GCardTypeStr=[\"\",\"高牌\",\"一对\",\"两对\",\"三条\",\"顺子\",\"同花\",\"葫芦\",\"四条\",\"同花顺\",\"皇家同花顺\"]\r\n\r\nexport enum EMatchState\r\n{\r\n    Waiting,\r\n    Playing,\r\n    PlayingEnd,\r\n    Cancel,\r\n    End,\r\n}\r\n\r\nexport class ETableState\r\n{\r\n    static Waiting=1//等待游戏开始\r\n    static Prepare=2//准备阶段\r\n    static Playing=3\r\n    static WaintingCombine=4 //等待合作\r\n    static Idle=5            // 休息\r\n    static WaitingStart = 6\r\n    static End=100//游戏结束\r\n}","﻿\r\n/* jshint node:true *//* global define */\r\n'use strict';\r\n\r\n\r\n/**\r\n * Rijndael cipher encryption routines,\r\n *\r\n * Reference implementation of FIPS-197 http://csrc.nist.gov/publications/fips/fips197/fips-197.pdf.\r\n *\r\n * @namespace\r\n */\r\nvar Algo = {};\r\n\r\n\r\n/**\r\n *  Cipher function: encrypt 'input' state with Rijndael algorithm [§5.1];\r\n *   applies Nr rounds (10/12/14) using key schedule w for 'add round key' stage.\r\n *\r\n * @param   {number[]}   input - 16-byte (128-bit) input state array.\r\n * @param   {number[][]} w - Key schedule as 2D byte-array (Nr+1 x Nb bytes).\r\n * @returns {number[]}   Encrypted output state array.\r\n */\r\nAlgo.cipher = function(input, w) {\r\n    var Nb = 4;               // block size (in words): no of columns in state\r\n    var Nr = w.length/Nb - 1; // no of rounds: 10/12/14 for 128/192/256-bit keys\r\n\r\n    var state = [[],[],[],[]];  // initialise 4xNb byte-array 'state' with input [§3.4]\r\n    for (var i=0; i<4*Nb; i++) state[i%4][Math.floor(i/4)] = input[i];\r\n\r\n    state = Algo.addRoundKey(state, w, 0, Nb);\r\n\r\n    for (var round=1; round<Nr; round++) {\r\n        state = Algo.subBytes(state, Nb);\r\n        state = Algo.shiftRows(state, Nb);\r\n        state = Algo.mixColumns(state, Nb);\r\n        state = Algo.addRoundKey(state, w, round, Nb);\r\n    }\r\n\r\n    state = Algo.subBytes(state, Nb);\r\n    state = Algo.shiftRows(state, Nb);\r\n    state = Algo.addRoundKey(state, w, Nr, Nb);\r\n\r\n    var output = new Array(4*Nb);  // convert state to 1-d array before returning [§3.4]\r\n    for (var i=0; i<4*Nb; i++) output[i] = state[i%4][Math.floor(i/4)];\r\n\r\n    return output;\r\n};\r\n\r\n\r\n/**\r\n * Perform key expansion to generate a key schedule from a cipher key [§5.2].\r\n *\r\n * @param   {number[]}   key - Cipher key as 16/24/32-byte array.\r\n * @returns {number[][]} Expanded key schedule as 2D byte-array (Nr+1 x Nb bytes).\r\n */\r\nAlgo.keyExpansion = function(key) {\r\n    var Nb = 4;            // block size (in words): no of columns in state\r\n    var Nk = key.length/4; // key length (in words): 4/6/8 for 128/192/256-bit keys\r\n    var Nr = Nk + 6;       // no of rounds: 10/12/14 for 128/192/256-bit keys\r\n\r\n    var w = new Array(Nb*(Nr+1));\r\n    var temp = new Array(4);\r\n\r\n    // initialise first Nk words of expanded key with cipher key\r\n    for (var i=0; i<Nk; i++) {\r\n        var r = [key[4*i], key[4*i+1], key[4*i+2], key[4*i+3]];\r\n        w[i] = r;\r\n    }\r\n\r\n    // expand the key into the remainder of the schedule\r\n    for (var i=Nk; i<(Nb*(Nr+1)); i++) {\r\n        w[i] = new Array(4);\r\n        for (var t=0; t<4; t++) temp[t] = w[i-1][t];\r\n        // each Nk'th word has extra transformation\r\n        if (i % Nk == 0) {\r\n            temp = Algo.subWord(Algo.rotWord(temp));\r\n            for (var t=0; t<4; t++) temp[t] ^= Algo.rCon[i/Nk][t];\r\n        }\r\n        // 256-bit key has subWord applied every 4th word\r\n        else if (Nk > 6 && i%Nk == 4) {\r\n            temp = Algo.subWord(temp);\r\n        }\r\n        // xor w[i] with w[i-1] and w[i-Nk]\r\n        for (var t=0; t<4; t++) w[i][t] = w[i-Nk][t] ^ temp[t];\r\n    }\r\n\r\n    return w;\r\n};\r\n\r\n\r\n/**\r\n * Apply SBox to state S [§5.1.1]\r\n * @private\r\n */\r\nAlgo.subBytes = function(s, Nb) {\r\n    for (var r=0; r<4; r++) {\r\n        for (var c=0; c<Nb; c++) s[r][c] = Algo.sBox[s[r][c]];\r\n    }\r\n    return s;\r\n};\r\n\r\n\r\n/**\r\n * Shift row r of state S left by r bytes [§5.1.2]\r\n * @private\r\n */\r\nAlgo.shiftRows = function(s, Nb) {\r\n    var t = new Array(4);\r\n    for (var r=1; r<4; r++) {\r\n        for (var c=0; c<4; c++) t[c] = s[r][(c+r)%Nb];  // shift into temp copy\r\n        for (var c=0; c<4; c++) s[r][c] = t[c];         // and copy back\r\n    }          // note that this will work for Nb=4,5,6, but not 7,8\r\n    return s;  // see asmaes.sourceforge.net/rijndael/rijndaelImplementation.pdf\r\n};\r\n\r\n\r\n/**\r\n * Combine bytes of each col of state S [§5.1.3]\r\n * @private\r\n */\r\nAlgo.mixColumns = function(s, Nb) {\r\n    for (var c=0; c<4; c++) {\r\n        var a = new Array(4);  // 'a' is a copy of the current column from 's'\r\n        var b = new Array(4);  // 'b' is a•{02} in GF(2^8)\r\n        for (var i=0; i<4; i++) {\r\n            a[i] = s[i][c];\r\n            b[i] = s[i][c]&0x80 ? s[i][c]<<1 ^ 0x011b : s[i][c]<<1;\r\n        }\r\n        // a[n] ^ b[n] is a•{03} in GF(2^8)\r\n        s[0][c] = b[0] ^ a[1] ^ b[1] ^ a[2] ^ a[3]; // {02}•a0 + {03}•a1 + a2 + a3\r\n        s[1][c] = a[0] ^ b[1] ^ a[2] ^ b[2] ^ a[3]; // a0 • {02}•a1 + {03}•a2 + a3\r\n        s[2][c] = a[0] ^ a[1] ^ b[2] ^ a[3] ^ b[3]; // a0 + a1 + {02}•a2 + {03}•a3\r\n        s[3][c] = a[0] ^ b[0] ^ a[1] ^ a[2] ^ b[3]; // {03}•a0 + a1 + a2 + {02}•a3\r\n    }\r\n    return s;\r\n};\r\n\r\n\r\n/**\r\n * Xor Round Key into state S [§5.1.4]\r\n * @private\r\n */\r\nAlgo.addRoundKey = function(state, w, rnd, Nb) {\r\n    for (var r=0; r<4; r++) {\r\n        for (var c=0; c<Nb; c++) state[r][c] ^= w[rnd*4+c][r];\r\n    }\r\n    return state;\r\n};\r\n\r\n\r\n/**\r\n * Apply SBox to 4-byte word w\r\n * @private\r\n */\r\nAlgo.subWord = function(w) {\r\n    for (var i=0; i<4; i++) w[i] = Algo.sBox[w[i]];\r\n    return w;\r\n};\r\n\r\n\r\n/**\r\n * Rotate 4-byte word w left by one byte\r\n * @private\r\n */\r\nAlgo.rotWord = function(w) {\r\n    var tmp = w[0];\r\n    for (var i=0; i<3; i++) w[i] = w[i+1];\r\n    w[3] = tmp;\r\n    return w;\r\n};\r\n\r\n\r\n// sBox is pre-computed multiplicative inverse in GF(2^8) used in subBytes and keyExpansion [§5.1.1]\r\nAlgo.sBox =  [0x63,0x7c,0x77,0x7b,0xf2,0x6b,0x6f,0xc5,0x30,0x01,0x67,0x2b,0xfe,0xd7,0xab,0x76,\r\n             0xca,0x82,0xc9,0x7d,0xfa,0x59,0x47,0xf0,0xad,0xd4,0xa2,0xaf,0x9c,0xa4,0x72,0xc0,\r\n             0xb7,0xfd,0x93,0x26,0x36,0x3f,0xf7,0xcc,0x34,0xa5,0xe5,0xf1,0x71,0xd8,0x31,0x15,\r\n             0x04,0xc7,0x23,0xc3,0x18,0x96,0x05,0x9a,0x07,0x12,0x80,0xe2,0xeb,0x27,0xb2,0x75,\r\n             0x09,0x83,0x2c,0x1a,0x1b,0x6e,0x5a,0xa0,0x52,0x3b,0xd6,0xb3,0x29,0xe3,0x2f,0x84,\r\n             0x53,0xd1,0x00,0xed,0x20,0xfc,0xb1,0x5b,0x6a,0xcb,0xbe,0x39,0x4a,0x4c,0x58,0xcf,\r\n             0xd0,0xef,0xaa,0xfb,0x43,0x4d,0x33,0x85,0x45,0xf9,0x02,0x7f,0x50,0x3c,0x9f,0xa8,\r\n             0x51,0xa3,0x40,0x8f,0x92,0x9d,0x38,0xf5,0xbc,0xb6,0xda,0x21,0x10,0xff,0xf3,0xd2,\r\n             0xcd,0x0c,0x13,0xec,0x5f,0x97,0x44,0x17,0xc4,0xa7,0x7e,0x3d,0x64,0x5d,0x19,0x73,\r\n             0x60,0x81,0x4f,0xdc,0x22,0x2a,0x90,0x88,0x46,0xee,0xb8,0x14,0xde,0x5e,0x0b,0xdb,\r\n             0xe0,0x32,0x3a,0x0a,0x49,0x06,0x24,0x5c,0xc2,0xd3,0xac,0x62,0x91,0x95,0xe4,0x79,\r\n             0xe7,0xc8,0x37,0x6d,0x8d,0xd5,0x4e,0xa9,0x6c,0x56,0xf4,0xea,0x65,0x7a,0xae,0x08,\r\n             0xba,0x78,0x25,0x2e,0x1c,0xa6,0xb4,0xc6,0xe8,0xdd,0x74,0x1f,0x4b,0xbd,0x8b,0x8a,\r\n             0x70,0x3e,0xb5,0x66,0x48,0x03,0xf6,0x0e,0x61,0x35,0x57,0xb9,0x86,0xc1,0x1d,0x9e,\r\n             0xe1,0xf8,0x98,0x11,0x69,0xd9,0x8e,0x94,0x9b,0x1e,0x87,0xe9,0xce,0x55,0x28,0xdf,\r\n             0x8c,0xa1,0x89,0x0d,0xbf,0xe6,0x42,0x68,0x41,0x99,0x2d,0x0f,0xb0,0x54,0xbb,0x16];\r\n\r\n\r\n// rCon is Round Constant used for the Key Expansion [1st col is 2^(r-1) in GF(2^8)] [§5.2]\r\nAlgo.rCon = [ [0x00, 0x00, 0x00, 0x00],\r\n             [0x01, 0x00, 0x00, 0x00],\r\n             [0x02, 0x00, 0x00, 0x00],\r\n             [0x04, 0x00, 0x00, 0x00],\r\n             [0x08, 0x00, 0x00, 0x00],\r\n             [0x10, 0x00, 0x00, 0x00],\r\n             [0x20, 0x00, 0x00, 0x00],\r\n             [0x40, 0x00, 0x00, 0x00],\r\n             [0x80, 0x00, 0x00, 0x00],\r\n             [0x1b, 0x00, 0x00, 0x00],\r\n             [0x36, 0x00, 0x00, 0x00] ]; \r\n\r\n\r\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\r\nif (typeof module != 'undefined' && module.exports) module.exports = Algo; // CommonJs export\r\nif (typeof define == 'function' && define.amd) define([], function() { return Algo; }); // AMD","'use strict'\r\n\r\nexports.byteLength = byteLength\r\nexports.toByteArray = toByteArray\r\nexports.fromByteArray = fromByteArray\r\n\r\nvar lookup = []\r\nvar revLookup = []\r\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\r\n\r\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\r\nfor (var i = 0, len = code.length; i < len; ++i) {\r\n  lookup[i] = code[i]\r\n  revLookup[code.charCodeAt(i)] = i\r\n}\r\n\r\n// Support decoding URL-safe base64 strings, as Node.js does.\r\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\r\nrevLookup['-'.charCodeAt(0)] = 62\r\nrevLookup['_'.charCodeAt(0)] = 63\r\n\r\nfunction getLens (b64) {\r\n  var len = b64.length\r\n\r\n  if (len % 4 > 0) {\r\n    throw new Error('Invalid string. Length must be a multiple of 4')\r\n  }\r\n\r\n  // Trim off extra bytes after placeholder bytes are found\r\n  // See: https://github.com/beatgammit/base64-js/issues/42\r\n  var validLen = b64.indexOf('=')\r\n  if (validLen === -1) validLen = len\r\n\r\n  var placeHoldersLen = validLen === len\r\n    ? 0\r\n    : 4 - (validLen % 4)\r\n\r\n  return [validLen, placeHoldersLen]\r\n}\r\n\r\n// base64 is 4/3 + up to two characters of the original data\r\nfunction byteLength (b64) {\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction _byteLength (b64, validLen, placeHoldersLen) {\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction toByteArray (b64) {\r\n  var tmp\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n\r\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\r\n\r\n  var curByte = 0\r\n\r\n  // if there are placeholders, only get up to the last complete 4 chars\r\n  var len = placeHoldersLen > 0\r\n    ? validLen - 4\r\n    : validLen\r\n\r\n  var i\r\n  for (i = 0; i < len; i += 4) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 18) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\r\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\r\n      revLookup[b64.charCodeAt(i + 3)]\r\n    arr[curByte++] = (tmp >> 16) & 0xFF\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 2) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 2) |\r\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 1) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 10) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\r\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction tripletToBase64 (num) {\r\n  return lookup[num >> 18 & 0x3F] +\r\n    lookup[num >> 12 & 0x3F] +\r\n    lookup[num >> 6 & 0x3F] +\r\n    lookup[num & 0x3F]\r\n}\r\n\r\nfunction encodeChunk (uint8, start, end) {\r\n  var tmp\r\n  var output = []\r\n  for (var i = start; i < end; i += 3) {\r\n    tmp =\r\n      ((uint8[i] << 16) & 0xFF0000) +\r\n      ((uint8[i + 1] << 8) & 0xFF00) +\r\n      (uint8[i + 2] & 0xFF)\r\n    output.push(tripletToBase64(tmp))\r\n  }\r\n  return output.join('')\r\n}\r\n\r\nfunction fromByteArray (uint8) {\r\n  var tmp\r\n  var len = uint8.length\r\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\r\n  var parts = []\r\n  var maxChunkLength = 16383 // must be multiple of 3\r\n\r\n  // go through the array every three bytes, we'll deal with trailing stuff later\r\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\r\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\r\n  }\r\n\r\n  // pad the end with zeros, but make sure to not forget the extra bytes\r\n  if (extraBytes === 1) {\r\n    tmp = uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 2] +\r\n      lookup[(tmp << 4) & 0x3F] +\r\n      '=='\r\n    )\r\n  } else if (extraBytes === 2) {\r\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 10] +\r\n      lookup[(tmp >> 4) & 0x3F] +\r\n      lookup[(tmp << 2) & 0x3F] +\r\n      '='\r\n    )\r\n  }\r\n\r\n  return parts.join('')\r\n}\r\n","/*!\r\n * The buffer module from node.js, for the browser.\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */\r\n/* eslint-disable no-proto */\r\n\r\n'use strict'\r\n\r\nvar base64 = require('base64-js')\r\nvar ieee754 = require('ieee754')\r\nvar customInspectSymbol =\r\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\r\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\r\n    : null\r\n\r\nexports.Buffer = Buffer\r\nexports.SlowBuffer = SlowBuffer\r\nexports.INSPECT_MAX_BYTES = 50\r\n\r\nvar K_MAX_LENGTH = 0x7fffffff\r\nexports.kMaxLength = K_MAX_LENGTH\r\n\r\n/**\r\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\r\n *   === true    Use Uint8Array implementation (fastest)\r\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\r\n *               implementation (most compatible, even IE6)\r\n *\r\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\r\n * Opera 11.6+, iOS 4.2+.\r\n *\r\n * We report that the browser does not support typed arrays if the are not subclassable\r\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\r\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\r\n * for __proto__ and has a buggy typed array implementation.\r\n */\r\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\r\n\r\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\r\n    typeof console.error === 'function') {\r\n  console.error(\r\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\r\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\r\n  )\r\n}\r\n\r\nfunction typedArraySupport () {\r\n  // Can typed array instances can be augmented?\r\n  try {\r\n    var arr = new Uint8Array(1)\r\n    var proto = { foo: function () { return 42 } }\r\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\r\n    Object.setPrototypeOf(arr, proto)\r\n    return arr.foo() === 42\r\n  } catch (e) {\r\n    return false\r\n  }\r\n}\r\n\r\nObject.defineProperty(Buffer.prototype, 'parent', {\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!Buffer.isBuffer(this)) return undefined\r\n    return this.buffer\r\n  }\r\n})\r\n\r\nObject.defineProperty(Buffer.prototype, 'offset', {\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!Buffer.isBuffer(this)) return undefined\r\n    return this.byteOffset\r\n  }\r\n})\r\n\r\nfunction createBuffer (length) {\r\n  if (length > K_MAX_LENGTH) {\r\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\r\n  }\r\n  // Return an augmented `Uint8Array` instance\r\n  var buf = new Uint8Array(length)\r\n  Object.setPrototypeOf(buf, Buffer.prototype)\r\n  return buf\r\n}\r\n\r\n/**\r\n * The Buffer constructor returns instances of `Uint8Array` that have their\r\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\r\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\r\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\r\n * returns a single octet.\r\n *\r\n * The `Uint8Array` prototype remains unmodified.\r\n */\r\n\r\nfunction Buffer (arg, encodingOrOffset, length) {\r\n  // Common case.\r\n  if (typeof arg === 'number') {\r\n    if (typeof encodingOrOffset === 'string') {\r\n      throw new TypeError(\r\n        'The \"string\" argument must be of type string. Received type number'\r\n      )\r\n    }\r\n    return allocUnsafe(arg)\r\n  }\r\n  return from(arg, encodingOrOffset, length)\r\n}\r\n\r\nBuffer.poolSize = 8192 // not used by this implementation\r\n\r\nfunction from (value, encodingOrOffset, length) {\r\n  if (typeof value === 'string') {\r\n    return fromString(value, encodingOrOffset)\r\n  }\r\n\r\n  if (ArrayBuffer.isView(value)) {\r\n    return fromArrayView(value)\r\n  }\r\n\r\n  if (value == null) {\r\n    throw new TypeError(\r\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\r\n      'or Array-like Object. Received type ' + (typeof value)\r\n    )\r\n  }\r\n\r\n  if (isInstance(value, ArrayBuffer) ||\r\n      (value && isInstance(value.buffer, ArrayBuffer))) {\r\n    return fromArrayBuffer(value, encodingOrOffset, length)\r\n  }\r\n\r\n  if (typeof SharedArrayBuffer !== 'undefined' &&\r\n      (isInstance(value, SharedArrayBuffer) ||\r\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\r\n    return fromArrayBuffer(value, encodingOrOffset, length)\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    throw new TypeError(\r\n      'The \"value\" argument must not be of type number. Received type number'\r\n    )\r\n  }\r\n\r\n  var valueOf = value.valueOf && value.valueOf()\r\n  if (valueOf != null && valueOf !== value) {\r\n    return Buffer.from(valueOf, encodingOrOffset, length)\r\n  }\r\n\r\n  var b = fromObject(value)\r\n  if (b) return b\r\n\r\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\r\n      typeof value[Symbol.toPrimitive] === 'function') {\r\n    return Buffer.from(\r\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\r\n    )\r\n  }\r\n\r\n  throw new TypeError(\r\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\r\n    'or Array-like Object. Received type ' + (typeof value)\r\n  )\r\n}\r\n\r\n/**\r\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\r\n * if value is a number.\r\n * Buffer.from(str[, encoding])\r\n * Buffer.from(array)\r\n * Buffer.from(buffer)\r\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\r\n **/\r\nBuffer.from = function (value, encodingOrOffset, length) {\r\n  return from(value, encodingOrOffset, length)\r\n}\r\n\r\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\r\n// https://github.com/feross/buffer/pull/148\r\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\r\nObject.setPrototypeOf(Buffer, Uint8Array)\r\n\r\nfunction assertSize (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('\"size\" argument must be of type number')\r\n  } else if (size < 0) {\r\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\r\n  }\r\n}\r\n\r\nfunction alloc (size, fill, encoding) {\r\n  assertSize(size)\r\n  if (size <= 0) {\r\n    return createBuffer(size)\r\n  }\r\n  if (fill !== undefined) {\r\n    // Only pay attention to encoding if it's a string. This\r\n    // prevents accidentally sending in a number that would\r\n    // be interpreted as a start offset.\r\n    return typeof encoding === 'string'\r\n      ? createBuffer(size).fill(fill, encoding)\r\n      : createBuffer(size).fill(fill)\r\n  }\r\n  return createBuffer(size)\r\n}\r\n\r\n/**\r\n * Creates a new filled Buffer instance.\r\n * alloc(size[, fill[, encoding]])\r\n **/\r\nBuffer.alloc = function (size, fill, encoding) {\r\n  return alloc(size, fill, encoding)\r\n}\r\n\r\nfunction allocUnsafe (size) {\r\n  assertSize(size)\r\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\r\n}\r\n\r\n/**\r\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\r\n * */\r\nBuffer.allocUnsafe = function (size) {\r\n  return allocUnsafe(size)\r\n}\r\n/**\r\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\r\n */\r\nBuffer.allocUnsafeSlow = function (size) {\r\n  return allocUnsafe(size)\r\n}\r\n\r\nfunction fromString (string, encoding) {\r\n  if (typeof encoding !== 'string' || encoding === '') {\r\n    encoding = 'utf8'\r\n  }\r\n\r\n  if (!Buffer.isEncoding(encoding)) {\r\n    throw new TypeError('Unknown encoding: ' + encoding)\r\n  }\r\n\r\n  var length = byteLength(string, encoding) | 0\r\n  var buf = createBuffer(length)\r\n\r\n  var actual = buf.write(string, encoding)\r\n\r\n  if (actual !== length) {\r\n    // Writing a hex string, for example, that contains invalid characters will\r\n    // cause everything after the first invalid character to be ignored. (e.g.\r\n    // 'abxxcd' will be treated as 'ab')\r\n    buf = buf.slice(0, actual)\r\n  }\r\n\r\n  return buf\r\n}\r\n\r\nfunction fromArrayLike (array) {\r\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\r\n  var buf = createBuffer(length)\r\n  for (var i = 0; i < length; i += 1) {\r\n    buf[i] = array[i] & 255\r\n  }\r\n  return buf\r\n}\r\n\r\nfunction fromArrayView (arrayView) {\r\n  if (isInstance(arrayView, Uint8Array)) {\r\n    var copy = new Uint8Array(arrayView)\r\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\r\n  }\r\n  return fromArrayLike(arrayView)\r\n}\r\n\r\nfunction fromArrayBuffer (array, byteOffset, length) {\r\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\r\n    throw new RangeError('\"offset\" is outside of buffer bounds')\r\n  }\r\n\r\n  if (array.byteLength < byteOffset + (length || 0)) {\r\n    throw new RangeError('\"length\" is outside of buffer bounds')\r\n  }\r\n\r\n  var buf\r\n  if (byteOffset === undefined && length === undefined) {\r\n    buf = new Uint8Array(array)\r\n  } else if (length === undefined) {\r\n    buf = new Uint8Array(array, byteOffset)\r\n  } else {\r\n    buf = new Uint8Array(array, byteOffset, length)\r\n  }\r\n\r\n  // Return an augmented `Uint8Array` instance\r\n  Object.setPrototypeOf(buf, Buffer.prototype)\r\n\r\n  return buf\r\n}\r\n\r\nfunction fromObject (obj) {\r\n  if (Buffer.isBuffer(obj)) {\r\n    var len = checked(obj.length) | 0\r\n    var buf = createBuffer(len)\r\n\r\n    if (buf.length === 0) {\r\n      return buf\r\n    }\r\n\r\n    obj.copy(buf, 0, 0, len)\r\n    return buf\r\n  }\r\n\r\n  if (obj.length !== undefined) {\r\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\r\n      return createBuffer(0)\r\n    }\r\n    return fromArrayLike(obj)\r\n  }\r\n\r\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\r\n    return fromArrayLike(obj.data)\r\n  }\r\n}\r\n\r\nfunction checked (length) {\r\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\r\n  // length is NaN (which is otherwise coerced to zero.)\r\n  if (length >= K_MAX_LENGTH) {\r\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\r\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\r\n  }\r\n  return length | 0\r\n}\r\n\r\nfunction SlowBuffer (length) {\r\n  if (+length != length) { // eslint-disable-line eqeqeq\r\n    length = 0\r\n  }\r\n  return Buffer.alloc(+length)\r\n}\r\n\r\nBuffer.isBuffer = function isBuffer (b) {\r\n  return b != null && b._isBuffer === true &&\r\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\r\n}\r\n\r\nBuffer.compare = function compare (a, b) {\r\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\r\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\r\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\r\n    throw new TypeError(\r\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\r\n    )\r\n  }\r\n\r\n  if (a === b) return 0\r\n\r\n  var x = a.length\r\n  var y = b.length\r\n\r\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\r\n    if (a[i] !== b[i]) {\r\n      x = a[i]\r\n      y = b[i]\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n}\r\n\r\nBuffer.isEncoding = function isEncoding (encoding) {\r\n  switch (String(encoding).toLowerCase()) {\r\n    case 'hex':\r\n    case 'utf8':\r\n    case 'utf-8':\r\n    case 'ascii':\r\n    case 'latin1':\r\n    case 'binary':\r\n    case 'base64':\r\n    case 'ucs2':\r\n    case 'ucs-2':\r\n    case 'utf16le':\r\n    case 'utf-16le':\r\n      return true\r\n    default:\r\n      return false\r\n  }\r\n}\r\n\r\nBuffer.concat = function concat (list, length) {\r\n  if (!Array.isArray(list)) {\r\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n  }\r\n\r\n  if (list.length === 0) {\r\n    return Buffer.alloc(0)\r\n  }\r\n\r\n  var i\r\n  if (length === undefined) {\r\n    length = 0\r\n    for (i = 0; i < list.length; ++i) {\r\n      length += list[i].length\r\n    }\r\n  }\r\n\r\n  var buffer = Buffer.allocUnsafe(length)\r\n  var pos = 0\r\n  for (i = 0; i < list.length; ++i) {\r\n    var buf = list[i]\r\n    if (isInstance(buf, Uint8Array)) {\r\n      if (pos + buf.length > buffer.length) {\r\n        Buffer.from(buf).copy(buffer, pos)\r\n      } else {\r\n        Uint8Array.prototype.set.call(\r\n          buffer,\r\n          buf,\r\n          pos\r\n        )\r\n      }\r\n    } else if (!Buffer.isBuffer(buf)) {\r\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n    } else {\r\n      buf.copy(buffer, pos)\r\n    }\r\n    pos += buf.length\r\n  }\r\n  return buffer\r\n}\r\n\r\nfunction byteLength (string, encoding) {\r\n  if (Buffer.isBuffer(string)) {\r\n    return string.length\r\n  }\r\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\r\n    return string.byteLength\r\n  }\r\n  if (typeof string !== 'string') {\r\n    throw new TypeError(\r\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\r\n      'Received type ' + typeof string\r\n    )\r\n  }\r\n\r\n  var len = string.length\r\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\r\n  if (!mustMatch && len === 0) return 0\r\n\r\n  // Use a for loop to avoid recursion\r\n  var loweredCase = false\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'ascii':\r\n      case 'latin1':\r\n      case 'binary':\r\n        return len\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8ToBytes(string).length\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return len * 2\r\n      case 'hex':\r\n        return len >>> 1\r\n      case 'base64':\r\n        return base64ToBytes(string).length\r\n      default:\r\n        if (loweredCase) {\r\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\r\n        }\r\n        encoding = ('' + encoding).toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\nBuffer.byteLength = byteLength\r\n\r\nfunction slowToString (encoding, start, end) {\r\n  var loweredCase = false\r\n\r\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\r\n  // property of a typed array.\r\n\r\n  // This behaves neither like String nor Uint8Array in that we set start/end\r\n  // to their upper/lower bounds if the value passed is out of range.\r\n  // undefined is handled specially as per ECMA-262 6th Edition,\r\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\r\n  if (start === undefined || start < 0) {\r\n    start = 0\r\n  }\r\n  // Return early if start > this.length. Done here to prevent potential uint32\r\n  // coercion fail below.\r\n  if (start > this.length) {\r\n    return ''\r\n  }\r\n\r\n  if (end === undefined || end > this.length) {\r\n    end = this.length\r\n  }\r\n\r\n  if (end <= 0) {\r\n    return ''\r\n  }\r\n\r\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\r\n  end >>>= 0\r\n  start >>>= 0\r\n\r\n  if (end <= start) {\r\n    return ''\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8'\r\n\r\n  while (true) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexSlice(this, start, end)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Slice(this, start, end)\r\n\r\n      case 'ascii':\r\n        return asciiSlice(this, start, end)\r\n\r\n      case 'latin1':\r\n      case 'binary':\r\n        return latin1Slice(this, start, end)\r\n\r\n      case 'base64':\r\n        return base64Slice(this, start, end)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return utf16leSlice(this, start, end)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = (encoding + '').toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\n\r\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\r\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\r\n// reliably in a browserify context because there could be multiple different\r\n// copies of the 'buffer' package in use. This method works even for Buffer\r\n// instances that were created from another copy of the `buffer` package.\r\n// See: https://github.com/feross/buffer/issues/154\r\nBuffer.prototype._isBuffer = true\r\n\r\nfunction swap (b, n, m) {\r\n  var i = b[n]\r\n  b[n] = b[m]\r\n  b[m] = i\r\n}\r\n\r\nBuffer.prototype.swap16 = function swap16 () {\r\n  var len = this.length\r\n  if (len % 2 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 2) {\r\n    swap(this, i, i + 1)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.swap32 = function swap32 () {\r\n  var len = this.length\r\n  if (len % 4 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 4) {\r\n    swap(this, i, i + 3)\r\n    swap(this, i + 1, i + 2)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.swap64 = function swap64 () {\r\n  var len = this.length\r\n  if (len % 8 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\r\n  }\r\n  for (var i = 0; i < len; i += 8) {\r\n    swap(this, i, i + 7)\r\n    swap(this, i + 1, i + 6)\r\n    swap(this, i + 2, i + 5)\r\n    swap(this, i + 3, i + 4)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.toString = function toString () {\r\n  var length = this.length\r\n  if (length === 0) return ''\r\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\r\n  return slowToString.apply(this, arguments)\r\n}\r\n\r\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\r\n\r\nBuffer.prototype.equals = function equals (b) {\r\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\r\n  if (this === b) return true\r\n  return Buffer.compare(this, b) === 0\r\n}\r\n\r\nBuffer.prototype.inspect = function inspect () {\r\n  var str = ''\r\n  var max = exports.INSPECT_MAX_BYTES\r\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\r\n  if (this.length > max) str += ' ... '\r\n  return '<Buffer ' + str + '>'\r\n}\r\nif (customInspectSymbol) {\r\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\r\n}\r\n\r\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\r\n  if (isInstance(target, Uint8Array)) {\r\n    target = Buffer.from(target, target.offset, target.byteLength)\r\n  }\r\n  if (!Buffer.isBuffer(target)) {\r\n    throw new TypeError(\r\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\r\n      'Received type ' + (typeof target)\r\n    )\r\n  }\r\n\r\n  if (start === undefined) {\r\n    start = 0\r\n  }\r\n  if (end === undefined) {\r\n    end = target ? target.length : 0\r\n  }\r\n  if (thisStart === undefined) {\r\n    thisStart = 0\r\n  }\r\n  if (thisEnd === undefined) {\r\n    thisEnd = this.length\r\n  }\r\n\r\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\r\n    throw new RangeError('out of range index')\r\n  }\r\n\r\n  if (thisStart >= thisEnd && start >= end) {\r\n    return 0\r\n  }\r\n  if (thisStart >= thisEnd) {\r\n    return -1\r\n  }\r\n  if (start >= end) {\r\n    return 1\r\n  }\r\n\r\n  start >>>= 0\r\n  end >>>= 0\r\n  thisStart >>>= 0\r\n  thisEnd >>>= 0\r\n\r\n  if (this === target) return 0\r\n\r\n  var x = thisEnd - thisStart\r\n  var y = end - start\r\n  var len = Math.min(x, y)\r\n\r\n  var thisCopy = this.slice(thisStart, thisEnd)\r\n  var targetCopy = target.slice(start, end)\r\n\r\n  for (var i = 0; i < len; ++i) {\r\n    if (thisCopy[i] !== targetCopy[i]) {\r\n      x = thisCopy[i]\r\n      y = targetCopy[i]\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n}\r\n\r\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\r\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\r\n//\r\n// Arguments:\r\n// - buffer - a Buffer to search\r\n// - val - a string, Buffer, or number\r\n// - byteOffset - an index into `buffer`; will be clamped to an int32\r\n// - encoding - an optional encoding, relevant is val is a string\r\n// - dir - true for indexOf, false for lastIndexOf\r\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\r\n  // Empty buffer means no match\r\n  if (buffer.length === 0) return -1\r\n\r\n  // Normalize byteOffset\r\n  if (typeof byteOffset === 'string') {\r\n    encoding = byteOffset\r\n    byteOffset = 0\r\n  } else if (byteOffset > 0x7fffffff) {\r\n    byteOffset = 0x7fffffff\r\n  } else if (byteOffset < -0x80000000) {\r\n    byteOffset = -0x80000000\r\n  }\r\n  byteOffset = +byteOffset // Coerce to Number.\r\n  if (numberIsNaN(byteOffset)) {\r\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\r\n    byteOffset = dir ? 0 : (buffer.length - 1)\r\n  }\r\n\r\n  // Normalize byteOffset: negative offsets start from the end of the buffer\r\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\r\n  if (byteOffset >= buffer.length) {\r\n    if (dir) return -1\r\n    else byteOffset = buffer.length - 1\r\n  } else if (byteOffset < 0) {\r\n    if (dir) byteOffset = 0\r\n    else return -1\r\n  }\r\n\r\n  // Normalize val\r\n  if (typeof val === 'string') {\r\n    val = Buffer.from(val, encoding)\r\n  }\r\n\r\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\r\n  if (Buffer.isBuffer(val)) {\r\n    // Special case: looking for empty string/buffer always fails\r\n    if (val.length === 0) {\r\n      return -1\r\n    }\r\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\r\n  } else if (typeof val === 'number') {\r\n    val = val & 0xFF // Search for a byte value [0-255]\r\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\r\n      if (dir) {\r\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\r\n      } else {\r\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\r\n      }\r\n    }\r\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\r\n  }\r\n\r\n  throw new TypeError('val must be string, number or Buffer')\r\n}\r\n\r\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\r\n  var indexSize = 1\r\n  var arrLength = arr.length\r\n  var valLength = val.length\r\n\r\n  if (encoding !== undefined) {\r\n    encoding = String(encoding).toLowerCase()\r\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\r\n        encoding === 'utf16le' || encoding === 'utf-16le') {\r\n      if (arr.length < 2 || val.length < 2) {\r\n        return -1\r\n      }\r\n      indexSize = 2\r\n      arrLength /= 2\r\n      valLength /= 2\r\n      byteOffset /= 2\r\n    }\r\n  }\r\n\r\n  function read (buf, i) {\r\n    if (indexSize === 1) {\r\n      return buf[i]\r\n    } else {\r\n      return buf.readUInt16BE(i * indexSize)\r\n    }\r\n  }\r\n\r\n  var i\r\n  if (dir) {\r\n    var foundIndex = -1\r\n    for (i = byteOffset; i < arrLength; i++) {\r\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\r\n        if (foundIndex === -1) foundIndex = i\r\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\r\n      } else {\r\n        if (foundIndex !== -1) i -= i - foundIndex\r\n        foundIndex = -1\r\n      }\r\n    }\r\n  } else {\r\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\r\n    for (i = byteOffset; i >= 0; i--) {\r\n      var found = true\r\n      for (var j = 0; j < valLength; j++) {\r\n        if (read(arr, i + j) !== read(val, j)) {\r\n          found = false\r\n          break\r\n        }\r\n      }\r\n      if (found) return i\r\n    }\r\n  }\r\n\r\n  return -1\r\n}\r\n\r\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\r\n  return this.indexOf(val, byteOffset, encoding) !== -1\r\n}\r\n\r\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\r\n}\r\n\r\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\r\n}\r\n\r\nfunction hexWrite (buf, string, offset, length) {\r\n  offset = Number(offset) || 0\r\n  var remaining = buf.length - offset\r\n  if (!length) {\r\n    length = remaining\r\n  } else {\r\n    length = Number(length)\r\n    if (length > remaining) {\r\n      length = remaining\r\n    }\r\n  }\r\n\r\n  var strLen = string.length\r\n\r\n  if (length > strLen / 2) {\r\n    length = strLen / 2\r\n  }\r\n  for (var i = 0; i < length; ++i) {\r\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\r\n    if (numberIsNaN(parsed)) return i\r\n    buf[offset + i] = parsed\r\n  }\r\n  return i\r\n}\r\n\r\nfunction utf8Write (buf, string, offset, length) {\r\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nfunction asciiWrite (buf, string, offset, length) {\r\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction base64Write (buf, string, offset, length) {\r\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction ucs2Write (buf, string, offset, length) {\r\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nBuffer.prototype.write = function write (string, offset, length, encoding) {\r\n  // Buffer#write(string)\r\n  if (offset === undefined) {\r\n    encoding = 'utf8'\r\n    length = this.length\r\n    offset = 0\r\n  // Buffer#write(string, encoding)\r\n  } else if (length === undefined && typeof offset === 'string') {\r\n    encoding = offset\r\n    length = this.length\r\n    offset = 0\r\n  // Buffer#write(string, offset[, length][, encoding])\r\n  } else if (isFinite(offset)) {\r\n    offset = offset >>> 0\r\n    if (isFinite(length)) {\r\n      length = length >>> 0\r\n      if (encoding === undefined) encoding = 'utf8'\r\n    } else {\r\n      encoding = length\r\n      length = undefined\r\n    }\r\n  } else {\r\n    throw new Error(\r\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\r\n    )\r\n  }\r\n\r\n  var remaining = this.length - offset\r\n  if (length === undefined || length > remaining) length = remaining\r\n\r\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\r\n    throw new RangeError('Attempt to write outside buffer bounds')\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8'\r\n\r\n  var loweredCase = false\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexWrite(this, string, offset, length)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Write(this, string, offset, length)\r\n\r\n      case 'ascii':\r\n      case 'latin1':\r\n      case 'binary':\r\n        return asciiWrite(this, string, offset, length)\r\n\r\n      case 'base64':\r\n        // Warning: maxLength not taken into account in base64Write\r\n        return base64Write(this, string, offset, length)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return ucs2Write(this, string, offset, length)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = ('' + encoding).toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\n\r\nBuffer.prototype.toJSON = function toJSON () {\r\n  return {\r\n    type: 'Buffer',\r\n    data: Array.prototype.slice.call(this._arr || this, 0)\r\n  }\r\n}\r\n\r\nfunction base64Slice (buf, start, end) {\r\n  if (start === 0 && end === buf.length) {\r\n    return base64.fromByteArray(buf)\r\n  } else {\r\n    return base64.fromByteArray(buf.slice(start, end))\r\n  }\r\n}\r\n\r\nfunction utf8Slice (buf, start, end) {\r\n  end = Math.min(buf.length, end)\r\n  var res = []\r\n\r\n  var i = start\r\n  while (i < end) {\r\n    var firstByte = buf[i]\r\n    var codePoint = null\r\n    var bytesPerSequence = (firstByte > 0xEF)\r\n      ? 4\r\n      : (firstByte > 0xDF)\r\n          ? 3\r\n          : (firstByte > 0xBF)\r\n              ? 2\r\n              : 1\r\n\r\n    if (i + bytesPerSequence <= end) {\r\n      var secondByte, thirdByte, fourthByte, tempCodePoint\r\n\r\n      switch (bytesPerSequence) {\r\n        case 1:\r\n          if (firstByte < 0x80) {\r\n            codePoint = firstByte\r\n          }\r\n          break\r\n        case 2:\r\n          secondByte = buf[i + 1]\r\n          if ((secondByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\r\n            if (tempCodePoint > 0x7F) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n          break\r\n        case 3:\r\n          secondByte = buf[i + 1]\r\n          thirdByte = buf[i + 2]\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\r\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n          break\r\n        case 4:\r\n          secondByte = buf[i + 1]\r\n          thirdByte = buf[i + 2]\r\n          fourthByte = buf[i + 3]\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\r\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n      }\r\n    }\r\n\r\n    if (codePoint === null) {\r\n      // we did not generate a valid codePoint so insert a\r\n      // replacement char (U+FFFD) and advance only 1 byte\r\n      codePoint = 0xFFFD\r\n      bytesPerSequence = 1\r\n    } else if (codePoint > 0xFFFF) {\r\n      // encode to utf16 (surrogate pair dance)\r\n      codePoint -= 0x10000\r\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\r\n      codePoint = 0xDC00 | codePoint & 0x3FF\r\n    }\r\n\r\n    res.push(codePoint)\r\n    i += bytesPerSequence\r\n  }\r\n\r\n  return decodeCodePointsArray(res)\r\n}\r\n\r\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\r\n// the lowest limit is Chrome, with 0x10000 args.\r\n// We go 1 magnitude less, for safety\r\nvar MAX_ARGUMENTS_LENGTH = 0x1000\r\n\r\nfunction decodeCodePointsArray (codePoints) {\r\n  var len = codePoints.length\r\n  if (len <= MAX_ARGUMENTS_LENGTH) {\r\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\r\n  }\r\n\r\n  // Decode in chunks to avoid \"call stack size exceeded\".\r\n  var res = ''\r\n  var i = 0\r\n  while (i < len) {\r\n    res += String.fromCharCode.apply(\r\n      String,\r\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\r\n    )\r\n  }\r\n  return res\r\n}\r\n\r\nfunction asciiSlice (buf, start, end) {\r\n  var ret = ''\r\n  end = Math.min(buf.length, end)\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i] & 0x7F)\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction latin1Slice (buf, start, end) {\r\n  var ret = ''\r\n  end = Math.min(buf.length, end)\r\n\r\n  for (var i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i])\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction hexSlice (buf, start, end) {\r\n  var len = buf.length\r\n\r\n  if (!start || start < 0) start = 0\r\n  if (!end || end < 0 || end > len) end = len\r\n\r\n  var out = ''\r\n  for (var i = start; i < end; ++i) {\r\n    out += hexSliceLookupTable[buf[i]]\r\n  }\r\n  return out\r\n}\r\n\r\nfunction utf16leSlice (buf, start, end) {\r\n  var bytes = buf.slice(start, end)\r\n  var res = ''\r\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\r\n  for (var i = 0; i < bytes.length - 1; i += 2) {\r\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\r\n  }\r\n  return res\r\n}\r\n\r\nBuffer.prototype.slice = function slice (start, end) {\r\n  var len = this.length\r\n  start = ~~start\r\n  end = end === undefined ? len : ~~end\r\n\r\n  if (start < 0) {\r\n    start += len\r\n    if (start < 0) start = 0\r\n  } else if (start > len) {\r\n    start = len\r\n  }\r\n\r\n  if (end < 0) {\r\n    end += len\r\n    if (end < 0) end = 0\r\n  } else if (end > len) {\r\n    end = len\r\n  }\r\n\r\n  if (end < start) end = start\r\n\r\n  var newBuf = this.subarray(start, end)\r\n  // Return an augmented `Uint8Array` instance\r\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\r\n\r\n  return newBuf\r\n}\r\n\r\n/*\r\n * Need to make sure that buffer isn't trying to write out of bounds.\r\n */\r\nfunction checkOffset (offset, ext, length) {\r\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\r\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\r\n}\r\n\r\nBuffer.prototype.readUintLE =\r\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var val = this[offset]\r\n  var mul = 1\r\n  var i = 0\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul\r\n  }\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readUintBE =\r\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) {\r\n    checkOffset(offset, byteLength, this.length)\r\n  }\r\n\r\n  var val = this[offset + --byteLength]\r\n  var mul = 1\r\n  while (byteLength > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --byteLength] * mul\r\n  }\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readUint8 =\r\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 1, this.length)\r\n  return this[offset]\r\n}\r\n\r\nBuffer.prototype.readUint16LE =\r\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  return this[offset] | (this[offset + 1] << 8)\r\n}\r\n\r\nBuffer.prototype.readUint16BE =\r\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  return (this[offset] << 8) | this[offset + 1]\r\n}\r\n\r\nBuffer.prototype.readUint32LE =\r\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return ((this[offset]) |\r\n      (this[offset + 1] << 8) |\r\n      (this[offset + 2] << 16)) +\r\n      (this[offset + 3] * 0x1000000)\r\n}\r\n\r\nBuffer.prototype.readUint32BE =\r\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset] * 0x1000000) +\r\n    ((this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    this[offset + 3])\r\n}\r\n\r\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var val = this[offset]\r\n  var mul = 1\r\n  var i = 0\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul\r\n  }\r\n  mul *= 0x80\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  var i = byteLength\r\n  var mul = 1\r\n  var val = this[offset + --i]\r\n  while (i > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --i] * mul\r\n  }\r\n  mul *= 0x80\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 1, this.length)\r\n  if (!(this[offset] & 0x80)) return (this[offset])\r\n  return ((0xff - this[offset] + 1) * -1)\r\n}\r\n\r\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  var val = this[offset] | (this[offset + 1] << 8)\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  var val = this[offset + 1] | (this[offset] << 8)\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset]) |\r\n    (this[offset + 1] << 8) |\r\n    (this[offset + 2] << 16) |\r\n    (this[offset + 3] << 24)\r\n}\r\n\r\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset] << 24) |\r\n    (this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    (this[offset + 3])\r\n}\r\n\r\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n  return ieee754.read(this, offset, true, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n  return ieee754.read(this, offset, false, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 8, this.length)\r\n  return ieee754.read(this, offset, true, 52, 8)\r\n}\r\n\r\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 8, this.length)\r\n  return ieee754.read(this, offset, false, 52, 8)\r\n}\r\n\r\nfunction checkInt (buf, value, offset, ext, max, min) {\r\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\r\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n}\r\n\r\nBuffer.prototype.writeUintLE =\r\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n  }\r\n\r\n  var mul = 1\r\n  var i = 0\r\n  this[offset] = value & 0xFF\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUintBE =\r\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) {\r\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n  }\r\n\r\n  var i = byteLength - 1\r\n  var mul = 1\r\n  this[offset + i] = value & 0xFF\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUint8 =\r\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\r\n  this[offset] = (value & 0xff)\r\n  return offset + 1\r\n}\r\n\r\nBuffer.prototype.writeUint16LE =\r\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n  this[offset] = (value & 0xff)\r\n  this[offset + 1] = (value >>> 8)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeUint16BE =\r\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n  this[offset] = (value >>> 8)\r\n  this[offset + 1] = (value & 0xff)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeUint32LE =\r\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n  this[offset + 3] = (value >>> 24)\r\n  this[offset + 2] = (value >>> 16)\r\n  this[offset + 1] = (value >>> 8)\r\n  this[offset] = (value & 0xff)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeUint32BE =\r\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n  this[offset] = (value >>> 24)\r\n  this[offset + 1] = (value >>> 16)\r\n  this[offset + 2] = (value >>> 8)\r\n  this[offset + 3] = (value & 0xff)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, (8 * byteLength) - 1)\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n  }\r\n\r\n  var i = 0\r\n  var mul = 1\r\n  var sub = 0\r\n  this[offset] = value & 0xFF\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\r\n      sub = 1\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    var limit = Math.pow(2, (8 * byteLength) - 1)\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n  }\r\n\r\n  var i = byteLength - 1\r\n  var mul = 1\r\n  var sub = 0\r\n  this[offset + i] = value & 0xFF\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\r\n      sub = 1\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\r\n  if (value < 0) value = 0xff + value + 1\r\n  this[offset] = (value & 0xff)\r\n  return offset + 1\r\n}\r\n\r\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n  this[offset] = (value & 0xff)\r\n  this[offset + 1] = (value >>> 8)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n  this[offset] = (value >>> 8)\r\n  this[offset + 1] = (value & 0xff)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n  this[offset] = (value & 0xff)\r\n  this[offset + 1] = (value >>> 8)\r\n  this[offset + 2] = (value >>> 16)\r\n  this[offset + 3] = (value >>> 24)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n  if (value < 0) value = 0xffffffff + value + 1\r\n  this[offset] = (value >>> 24)\r\n  this[offset + 1] = (value >>> 16)\r\n  this[offset + 2] = (value >>> 8)\r\n  this[offset + 3] = (value & 0xff)\r\n  return offset + 4\r\n}\r\n\r\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n  if (offset < 0) throw new RangeError('Index out of range')\r\n}\r\n\r\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\r\n  }\r\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, false, noAssert)\r\n}\r\n\r\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\r\n  }\r\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\r\n  return offset + 8\r\n}\r\n\r\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, false, noAssert)\r\n}\r\n\r\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\r\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\r\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\r\n  if (!start) start = 0\r\n  if (!end && end !== 0) end = this.length\r\n  if (targetStart >= target.length) targetStart = target.length\r\n  if (!targetStart) targetStart = 0\r\n  if (end > 0 && end < start) end = start\r\n\r\n  // Copy 0 bytes; we're done\r\n  if (end === start) return 0\r\n  if (target.length === 0 || this.length === 0) return 0\r\n\r\n  // Fatal error conditions\r\n  if (targetStart < 0) {\r\n    throw new RangeError('targetStart out of bounds')\r\n  }\r\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\r\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\r\n\r\n  // Are we oob?\r\n  if (end > this.length) end = this.length\r\n  if (target.length - targetStart < end - start) {\r\n    end = target.length - targetStart + start\r\n  }\r\n\r\n  var len = end - start\r\n\r\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\r\n    // Use built-in when available, missing from IE11\r\n    this.copyWithin(targetStart, start, end)\r\n  } else {\r\n    Uint8Array.prototype.set.call(\r\n      target,\r\n      this.subarray(start, end),\r\n      targetStart\r\n    )\r\n  }\r\n\r\n  return len\r\n}\r\n\r\n// Usage:\r\n//    buffer.fill(number[, offset[, end]])\r\n//    buffer.fill(buffer[, offset[, end]])\r\n//    buffer.fill(string[, offset[, end]][, encoding])\r\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\r\n  // Handle string cases:\r\n  if (typeof val === 'string') {\r\n    if (typeof start === 'string') {\r\n      encoding = start\r\n      start = 0\r\n      end = this.length\r\n    } else if (typeof end === 'string') {\r\n      encoding = end\r\n      end = this.length\r\n    }\r\n    if (encoding !== undefined && typeof encoding !== 'string') {\r\n      throw new TypeError('encoding must be a string')\r\n    }\r\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\r\n      throw new TypeError('Unknown encoding: ' + encoding)\r\n    }\r\n    if (val.length === 1) {\r\n      var code = val.charCodeAt(0)\r\n      if ((encoding === 'utf8' && code < 128) ||\r\n          encoding === 'latin1') {\r\n        // Fast path: If `val` fits into a single byte, use that numeric value.\r\n        val = code\r\n      }\r\n    }\r\n  } else if (typeof val === 'number') {\r\n    val = val & 255\r\n  } else if (typeof val === 'boolean') {\r\n    val = Number(val)\r\n  }\r\n\r\n  // Invalid ranges are not set to a default, so can range check early.\r\n  if (start < 0 || this.length < start || this.length < end) {\r\n    throw new RangeError('Out of range index')\r\n  }\r\n\r\n  if (end <= start) {\r\n    return this\r\n  }\r\n\r\n  start = start >>> 0\r\n  end = end === undefined ? this.length : end >>> 0\r\n\r\n  if (!val) val = 0\r\n\r\n  var i\r\n  if (typeof val === 'number') {\r\n    for (i = start; i < end; ++i) {\r\n      this[i] = val\r\n    }\r\n  } else {\r\n    var bytes = Buffer.isBuffer(val)\r\n      ? val\r\n      : Buffer.from(val, encoding)\r\n    var len = bytes.length\r\n    if (len === 0) {\r\n      throw new TypeError('The value \"' + val +\r\n        '\" is invalid for argument \"value\"')\r\n    }\r\n    for (i = 0; i < end - start; ++i) {\r\n      this[i + start] = bytes[i % len]\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// HELPER FUNCTIONS\r\n// ================\r\n\r\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\r\n\r\nfunction base64clean (str) {\r\n  // Node takes equal signs as end of the Base64 encoding\r\n  str = str.split('=')[0]\r\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\r\n  str = str.trim().replace(INVALID_BASE64_RE, '')\r\n  // Node converts strings with length < 2 to ''\r\n  if (str.length < 2) return ''\r\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\r\n  while (str.length % 4 !== 0) {\r\n    str = str + '='\r\n  }\r\n  return str\r\n}\r\n\r\nfunction utf8ToBytes (string, units) {\r\n  units = units || Infinity\r\n  var codePoint\r\n  var length = string.length\r\n  var leadSurrogate = null\r\n  var bytes = []\r\n\r\n  for (var i = 0; i < length; ++i) {\r\n    codePoint = string.charCodeAt(i)\r\n\r\n    // is surrogate component\r\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\r\n      // last char was a lead\r\n      if (!leadSurrogate) {\r\n        // no lead yet\r\n        if (codePoint > 0xDBFF) {\r\n          // unexpected trail\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n          continue\r\n        } else if (i + 1 === length) {\r\n          // unpaired lead\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n          continue\r\n        }\r\n\r\n        // valid lead\r\n        leadSurrogate = codePoint\r\n\r\n        continue\r\n      }\r\n\r\n      // 2 leads in a row\r\n      if (codePoint < 0xDC00) {\r\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n        leadSurrogate = codePoint\r\n        continue\r\n      }\r\n\r\n      // valid surrogate pair\r\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\r\n    } else if (leadSurrogate) {\r\n      // valid bmp char, but last char was a lead\r\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n    }\r\n\r\n    leadSurrogate = null\r\n\r\n    // encode utf8\r\n    if (codePoint < 0x80) {\r\n      if ((units -= 1) < 0) break\r\n      bytes.push(codePoint)\r\n    } else if (codePoint < 0x800) {\r\n      if ((units -= 2) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x6 | 0xC0,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else if (codePoint < 0x10000) {\r\n      if ((units -= 3) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0xC | 0xE0,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else if (codePoint < 0x110000) {\r\n      if ((units -= 4) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x12 | 0xF0,\r\n        codePoint >> 0xC & 0x3F | 0x80,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else {\r\n      throw new Error('Invalid code point')\r\n    }\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nfunction asciiToBytes (str) {\r\n  var byteArray = []\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Node's code seems to be doing this and not & 0x7F..\r\n    byteArray.push(str.charCodeAt(i) & 0xFF)\r\n  }\r\n  return byteArray\r\n}\r\n\r\nfunction utf16leToBytes (str, units) {\r\n  var c, hi, lo\r\n  var byteArray = []\r\n  for (var i = 0; i < str.length; ++i) {\r\n    if ((units -= 2) < 0) break\r\n\r\n    c = str.charCodeAt(i)\r\n    hi = c >> 8\r\n    lo = c % 256\r\n    byteArray.push(lo)\r\n    byteArray.push(hi)\r\n  }\r\n\r\n  return byteArray\r\n}\r\n\r\nfunction base64ToBytes (str) {\r\n  return base64.toByteArray(base64clean(str))\r\n}\r\n\r\nfunction blitBuffer (src, dst, offset, length) {\r\n  for (var i = 0; i < length; ++i) {\r\n    if ((i + offset >= dst.length) || (i >= src.length)) break\r\n    dst[i + offset] = src[i]\r\n  }\r\n  return i\r\n}\r\n\r\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\r\n// the `instanceof` check but they should be treated as of that type.\r\n// See: https://github.com/feross/buffer/issues/166\r\nfunction isInstance (obj, type) {\r\n  return obj instanceof type ||\r\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\r\n      obj.constructor.name === type.name)\r\n}\r\nfunction numberIsNaN (obj) {\r\n  // For IE11 support\r\n  return obj !== obj // eslint-disable-line no-self-compare\r\n}\r\n\r\n// Create lookup table for `toString('hex')`\r\n// See: https://github.com/feross/buffer/issues/219\r\nvar hexSliceLookupTable = (function () {\r\n  var alphabet = '0123456789abcdef'\r\n  var table = new Array(256)\r\n  for (var i = 0; i < 16; ++i) {\r\n    var i16 = i * 16\r\n    for (var j = 0; j < 16; ++j) {\r\n      table[i16 + j] = alphabet[i] + alphabet[j]\r\n    }\r\n  }\r\n  return table\r\n})()\r\n","import { GHelper } from \"../../Framework/Logic/Helper\";\r\nimport { GUserMgr } from \"../../Logic/UserManager\";\r\nimport { resMgr } from \"../../manager/ResourceManager\";\r\nimport { GHallHttp } from \"../../Net/HallHttp\";\r\nimport { GMatchSer } from \"../../Service/MatchService\";\r\nimport { GMsgCenter } from \"../../utils/MessageCenter\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class changeHead extends cc.Component {\r\n    @property(cc.Sprite)\r\n    imgAvatar: cc.Sprite = null;\r\n\r\n    @property([cc.Node])\r\n    heads = new Array<cc.Node>()\r\n\r\n    random: number = 0;\r\n\r\n    onLoad() {\r\n        this.onClickHead()\r\n        let suffix: string = \"image/head/\" + GUserMgr.self_user.logo;\r\n        let path = `${suffix}`;\r\n\r\n        resMgr.loadImage(path, (res) => {\r\n            cc.isValid(this.imgAvatar) && (this.imgAvatar.getComponent(cc.Sprite).spriteFrame = res);\r\n        })\r\n    }\r\n\r\n    start() {\r\n    }\r\n\r\n    clickHeadCallback(selfTg) {\r\n        let name = selfTg.node.name\r\n        let random = Number(name.replace(\"head\", \"\"))\r\n        for (let index = 0; index < this.heads.length; index++) {\r\n            const element = this.heads[index]\r\n            element.getComponent(cc.Toggle).uncheck()\r\n        }\r\n\r\n        selfTg.check()\r\n\r\n        GHallHttp.request(\"changelogo\", {logo: random}).then((res)=>\r\n        {\r\n            if (res.errcode==null) {\r\n                GHelper.showTip(\"修改成功\");\r\n                GUserMgr.self_user.logo = random.toString();\r\n                GMsgCenter.send(\"changelogo\", random)\r\n            }\r\n        })\r\n    }\r\n\r\n    // onClickClose() {\r\n    //     this.headNode.active = false\r\n    //     let suffix: string = \"image/head/\" + this.random;\r\n    //     let path = `${suffix}`;\r\n\r\n    //     resMgr.loadImage(path, (res) => {\r\n    //         cc.isValid(this.imgAvatar) && (this.imgAvatar.getComponent(cc.Sprite).spriteFrame = res);\r\n    //     })\r\n    // }\r\n    onClickClose() {\r\n        this.node.active = false\r\n    }\r\n\r\n    onClickHead() {\r\n        //之前随机的头像带上勾选框\r\n        for (let index = 0; index < this.heads.length; index++) {\r\n            const element = this.heads[index]\r\n            element.on('toggle', this.clickHeadCallback.bind(this), this);\r\n            if (Number(GUserMgr.self_user.logo) == (index + 1)) {\r\n                element.getComponent(cc.Toggle).check()\r\n            }\r\n            else\r\n            {\r\n                element.getComponent(cc.Toggle).uncheck()\r\n            }\r\n        }\r\n    }\r\n\r\n    getRandomInt(min, max) {\r\n        return Math.floor(Math.random()*(max - min)) + min\r\n    }\r\n}\r\n","import { ECardType } from \"../Config/_ini_\";\r\n\r\nexport enum ITEM_TYPE {\r\n    UNKNOWN = 0,\r\n    PROP = 1,           //道具\r\n    CARD = 2,           //卡片\r\n    HERO = 3,           //英雄\r\n    WEAPON = 4,         //武器\r\n    SKIN = 5,           //皮肤\r\n}\r\n\r\nexport enum PROP {\r\n    UNKNOWN = 0,\r\n    COIN = 101,\r\n    DIAMOND = 102,\r\n    SCORE = 103,\r\n    TICKET_1 = 201,\r\n    TICKET_2 = 202,\r\n    TICKET_3 = 203,\r\n}\r\n\r\nexport class ItemInfo {\r\n    type: ITEM_TYPE;\r\n    id: number;\r\n    count: number;\r\n\r\n    constructor(type: number = 0, id: number = 0, count: number = 0) {\r\n        this.type = type;\r\n        this.id = id;\r\n        this.count = count;\r\n    }\r\n}\r\n\r\n//\"101=100,102=10,201=5\" => ItemInfo[]\r\nfunction parseItems(data: string) {\r\n    let items = data ? data.split(',') : [];\r\n    return items.map((item) => {\r\n        let [id, count] = item.split('=');\r\n        return new ItemInfo(ITEM_TYPE.PROP, Number(id), Number(count));\r\n    })\r\n}\r\n\r\n//\"101=100,102=10,201=5\" => {101:100, 102:10, 103:5}\r\nfunction parseObject(data: string) {\r\n    let items = data ? data.split(',') : [];\r\n    let obj = {};\r\n    items.forEach(item => {\r\n        let [key, value] = item.split('=');\r\n        obj[key] = Number(value);\r\n    })\r\n    return obj;\r\n}\r\n\r\n//12:34:56 => {hour:12, minute:24, second:56}\r\nfunction parseTime(data: string) {\r\n    let [hour, minute, second] = data ? data.split(':') : [];\r\n    return {\r\n        hour: Number(hour) || 0,\r\n        minute: Number(minute) || 0,\r\n        second: Number(second) || 0\r\n    }\r\n}\r\n\r\nexport class PropConfig {\r\n    id: number;\r\n    name: string;\r\n    desc: string;\r\n    icon: string;\r\n\r\n    constructor(data?) {\r\n        data = data || {};\r\n        this.id = Number(data.id || 0);\r\n        this.name = String(data.name || \"\");\r\n        this.desc = String(data.desc || \"\");\r\n        this.icon = String(data.icon || \"\");\r\n    }\r\n}\r\n\r\nexport class WeightInfo {\r\n    id: number;\r\n    weight: number;\r\n\r\n    constructor(id: number = 0, weight: number = 0) {\r\n        this.id = id;\r\n        this.weight = weight;\r\n    }\r\n}\r\n\r\nexport enum TASK_TYPE {\r\n    BIND_INVITER = 1,\r\n    JOIN_MATCH = 2,\r\n}\r\n\r\nexport class TaskConfig {\r\n    id: number;\r\n    name: string;\r\n    desc: string;\r\n    icon: string;\r\n    type: number;\r\n    target: number;\r\n    reward: ItemInfo[];\r\n\r\n    constructor(data?) {\r\n        data = data || {};\r\n        this.id = Number(data.id || 0);\r\n        this.name = String(data.name || \"\");\r\n        this.desc = String(data.desc || \"\");\r\n        this.icon = String(data.icon || \"\");\r\n        this.type = Number(data.type || 0);\r\n        this.target = Number(data.target || 0);\r\n        this.reward = parseItems(data.reward);\r\n    }\r\n}\r\n\r\nexport class TaskInfo {\r\n    id: number;\r\n    type: number;\r\n    mode: number;       //1.日常任务 2.成就\r\n    target: number;\r\n    index: number;\r\n\r\n    constructor(data?) {\r\n        data = data || {};\r\n        this.id = Number(data.id || 0);\r\n        this.type = Number(data.type || 0);\r\n        this.mode = Number(data.mode || 0);\r\n        this.target = Number(data.target || 0);\r\n        this.index = Number(data.index || 0);\r\n    }\r\n}\r\n\r\nexport class SignConfig {\r\n    id: number;\r\n    name: string;\r\n    desc: string;\r\n    reward: ItemInfo[];\r\n\r\n    constructor(data?) {\r\n        data = data || {};\r\n        this.id = Number(data.id || 0);\r\n        this.name = String(data.name || \"\");\r\n        this.desc = String(data.desc || \"\");\r\n        this.reward = parseItems(data.reward);\r\n    }\r\n}\r\n\r\nexport enum TEACH_TYPE {\r\n    TIPS = 0,   //支持多个mask节点 点击任意区域\r\n    CLICK = 1,  //支持多个mask节点 点击高亮区域\r\n    MOVE = 2    //支持两个mask节点 起点>>终点\r\n}\r\n\r\nexport class TeachConfig {\r\n    id: number;\r\n    type: TEACH_TYPE;\r\n    layer: string;\r\n    node: string[];\r\n    tips: string;\r\n    event: string;\r\n    next: number;\r\n    check: {[key: string]: number};\r\n\r\n    constructor(data?) {\r\n        data = data || {};\r\n        this.id = Number(data.id || 0);\r\n        this.type = Number(data.type || 0);\r\n        this.layer = String(data.layer || \"\");\r\n        this.node = data.node ? data.node.split(',') : [];\r\n        this.tips = String(data.tips || \"\").replace(/\\\\n/g, \"\\n\");\r\n        this.event = String(data.event || \"\");\r\n        this.next = Number(data.next || 0);\r\n        this.check = parseObject(data.check);\r\n    }\r\n}\r\n\r\nexport class TeachInfo {\r\n    id: number;\r\n    status: number;\r\n\r\n    constructor(data?) {\r\n        data = data || {};\r\n        this.id = Number(data.id || 0);\r\n        this.status = Number(data.status || 0);\r\n    }\r\n}\r\n\r\nexport class UserInfo {\r\n    uid: number;\r\n    nickname: string;\r\n    avatar: string;\r\n    gender: number;\r\n\r\n    constructor(data?) {\r\n        data = data || {};\r\n        this.uid = Number(data.uid || 0);\r\n        this.nickname = String(data.nickname || \"\");\r\n        this.avatar = String(data.avatar || \"\");\r\n        this.gender = Number(data.gender || 0);\r\n    }\r\n}\r\n\r\nexport class InviteeInfo {\r\n    uid: number;\r\n    nickname: string;\r\n    avatar: string;\r\n    gender: number;\r\n    bind_time: string;\r\n    money: number;\r\n    last_login: string;\r\n}\r\n\r\nexport enum CARD_TYPE {\r\n    UNKNOWN = 0,                //未知\r\n    HIGH_CARD = 1,              //高牌\r\n    ONE_PAIR = 2,               //一对\r\n    TWO_PAIR = 3,               //两对\r\n    THREE_OF_A_KIND = 4,        //三条\r\n    STRAIGHT = 5,               //顺子\r\n    FLUSH = 6,                  //同花\r\n    FULL_HOUSE = 7,             //葫芦\r\n    FOUR_OF_A_KIND = 8,         //四条\r\n    STRAIGHT_FLUSH = 9,         //同花顺\r\n    ROYAL_FLUSH = 10,           //皇家同花顺\r\n}\r\n\r\nexport enum TABLE_STATUS {\r\n    WAITING = 0,    //等待\r\n    READY,          //准备\r\n    PREFLOP,        //翻牌前\r\n    FLOP,           //翻牌圈\r\n    POSTFLOP,       //翻牌后\r\n    TURN,           //转牌\r\n    RIVER,          //河牌\r\n    END,            //结束\r\n}\r\n\r\nexport enum SEAT_STATUS {\r\n    WAITING = 0,    //等待\r\n    READY,          //准备\r\n    BET,            //下注\r\n    END,            //结束\r\n}\r\n\r\nexport enum ACTION {\r\n    UNKNOWN = 0,\r\n    BET,\r\n    RAISE,\r\n    CALL,\r\n    ALLIN,\r\n    CHECK,\r\n    FLOD\r\n}\r\n\r\nexport class ChargeConfig {\r\n    id: number;\r\n    name: string;\r\n    desc: string;\r\n    price: number;\r\n    score: number;\r\n\r\n    constructor(data?) {\r\n        data = data || {};\r\n        this.id = Number(data.id || 0);\r\n        this.name = String(data.name || \"\");\r\n        this.desc = String(data.desc || \"\");\r\n        this.price = Number(data.price || 0);\r\n        this.score = Number(data.score || 0);\r\n    }\r\n}\r\n\r\nexport class ExchangeConfig {\r\n    id: number;\r\n    prop: number;\r\n    price: number;\r\n\r\n    constructor(data?) {\r\n        data = data || {};\r\n        this.id = Number(data.id || 0);\r\n        this.prop = Number(data.prop || 0);\r\n        this.price = Number(data.price || 0);\r\n    }\r\n}\r\n\r\nexport class MatchConfig {\r\n    id: number;\r\n    type: number;\r\n    name: string;\r\n    desc: string;\r\n    icon: string;\r\n    start_time: number;\r\n    end_time: number;\r\n    cycle_day: number[];\r\n    cycle_time: {hour: number, minute: number}[];\r\n    entry_cost: ItemInfo[];\r\n    reentry_cost: ItemInfo[];\r\n    reentry_count: number;\r\n    reentry_blind: number;\r\n    player_min: number;\r\n    player_max: number;\r\n    blind_id: number;\r\n    chips: number;\r\n    reward: ItemInfo[];\r\n\r\n    constructor(data?) {\r\n        data = data || {};\r\n        this.id = Number(data.id || 0);\r\n        this.type = Number(data.type || 0);\r\n        this.name = String(data.name || \"\");\r\n        this.desc = String(data.desc || \"\");\r\n        this.icon = String(data.icon || \"\");\r\n        this.start_time = new Date(data.start_time || 0).getTime();\r\n        this.end_time = new Date(data.end_time || 0).getTime();\r\n        this.cycle_day = data.cycle_day ? data.cycle_day.split(',').map(Number) : [];\r\n        this.cycle_time = data.cycle_time ? data.cycle_time.split(',').map(parseTime) : [];\r\n        this.entry_cost = parseItems(data.entry_cost);\r\n        this.reentry_cost = parseItems(data.reentry_cost);\r\n        this.reentry_count = Number(data.reentry_count || 0);\r\n        this.reentry_blind = Number(data.reentry_blind || 0);\r\n        this.player_min = Number(data.player_min || 0);\r\n        this.player_max = Number(data.player_max || 0);\r\n        this.blind_id = Number(data.blind_id || 0);\r\n        this.chips = Number(data.chips || 0);\r\n        this.reward = parseItems(data.reward);\r\n    }\r\n}\r\n\r\nexport class RoomConfig {\r\n    id: number;\r\n    name: string;\r\n    desc: string;\r\n    start_time: number;\r\n    interval_levelup: number;\r\n    entry_cost: number;\r\n    reentry_cost: number;\r\n    match_limit: number;\r\n    blind_limit: number;\r\n    chip: number;\r\n    reward: ItemInfo[];\r\n\r\n    constructor(data?) {\r\n        data = data || {};\r\n        this.id = Number(data.id || 0);\r\n        this.name = String(data.name || \"\");\r\n        this.desc = String(data.desc || \"\");\r\n        this.start_time = Number(data.start_time || 0);\r\n        this.interval_levelup = Number(data.interval_levelup || 0);\r\n        this.entry_cost = Number(data.entry_cost || 0);\r\n        this.reentry_cost = Number(data.reentry_cost || 0);\r\n        this.match_limit = Number(data.match_limit || 0);\r\n        this.blind_limit = Number(data.blind_limit || 0);\r\n        this.chip = Number(data.chip || 0);\r\n        this.reward = parseItems(data.reward);\r\n    }\r\n}\r\n\r\nexport class RoomInfo {\r\n    id: number;\r\n    config: RoomConfig;\r\n    count_match: number;    //报名参赛人数\r\n    count_play: number;     //当前比赛人数\r\n\r\n    constructor(data?) {\r\n        data = data || {};\r\n        this.id = Number(data.id || 0);\r\n        this.config = new RoomConfig(data.config);\r\n        this.count_match = Number(data.count_match || 0);\r\n        this.count_play = Number(data.count_play || 0);\r\n    }\r\n}\r\n\r\nexport class Pot\r\n{\r\n    seat_index=-1\r\n    win=-1\r\n}\r\n\r\nexport class GameResult\r\n{\r\n    seats:{[seat_index:number]:{chip:number,cardtype:ECardType,win:number,cards:number[]}}=null\r\n    pots:Array<Array<Pot>>=null\r\n}\r\n\r\nexport class RecordSeat\r\n{\r\n    uid=0\r\n    nickname=\"\"\r\n    gender=-1\r\n    avatar=\"\"\r\n    //剩余金币\r\n    chip=0\r\n    //总共下注\r\n    bet=0\r\n    //赢取金币\r\n    win=0\r\n    cards:number[]=[]\r\n    cardtype=ECardType.None\r\n    state=0//-1弃牌，0普通，1allin\r\n}\r\nexport class Record\r\n{\r\n    match_id=0\r\n    match_start_time=0\r\n    match_name=\"\"\r\n    table_id=0\r\n    dealer_index=0\r\n    small_blink_index=0\r\n    big_blind_index=0\r\n    small_blind=0\r\n    big_blind=0\r\n    cards:number[]=[]\r\n    seats=new Array<RecordSeat>()\r\n    begin_time=0\r\n    end_time=0\r\n}","/*!\r\n * Copyright (c) 2015 Sri Harsha <sri.harsha@zenq.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n(function (name, definition) {\r\n    if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\r\n        module.exports = definition();\r\n    } else if (typeof define === 'function' && typeof define.amd === 'object') {\r\n        define(definition);\r\n    } else if (typeof define === 'function' && typeof define.petal === 'object') {\r\n        define(name, [], definition);\r\n    } else {\r\n        this[name] = definition();\r\n    }\r\n})('encryptjs', function (encryptjs) {\r\n\r\n    'use strict';\r\n\r\n    encryptjs = { version: '1.0.0' };\r\n\r\n    //Right before exporting the validator object, pass each of the builtins\r\n    //through extend() so that their first argument is coerced to a string\r\n    encryptjs.init = function () {\r\n        // console.log(\"--------------------Applying Encryption Algorithm------------------ \");\r\n    };\r\n    'use strict';\r\n    if (typeof module!='undefined' && module.exports) { // CommonJS (Node.js)\r\n        var Algo = require('./algo');\r\n        var Buffer = require('./buffer').Buffer;\r\n    }\r\n\r\n    encryptjs.encrypt = function(plaintext, password, nBits) {\r\n        var blockSize = 16;  // block size fixed at 16 bytes / 128 bits (Nb=4)\r\n        if (!(nBits==128 || nBits==192 || nBits==256)) return ''; // standard allows 128/192/256 bit keys\r\n        plaintext = String(plaintext).utf8Encode();\r\n        password = String(password).utf8Encode();\r\n\r\n        // use AES itself to encrypt password to get cipher key (using plain password as source for key\r\n        // expansion) - gives us well encrypted key (though hashed key might be preferred for prod'n use)\r\n        var nBytes = nBits/8;  // no bytes in key (16/24/32)\r\n        var pwBytes = new Array(nBytes);\r\n        for (var i=0; i<nBytes; i++) {  // use 1st 16/24/32 chars of password for key\r\n            pwBytes[i] = isNaN(password.charCodeAt(i)) ? 0 : password.charCodeAt(i);\r\n        }\r\n        var key = Algo.cipher(pwBytes, Algo.keyExpansion(pwBytes)); // gives us 16-byte key\r\n        key = key.concat(key.slice(0, nBytes-16));  // expand key to 16/24/32 bytes long\r\n\r\n        // initialise 1st 8 bytes of counter block with nonce (NIST SP800-38A �B.2): [0-1] = millisec,\r\n        // [2-3] = random, [4-7] = seconds, together giving full sub-millisec uniqueness up to Feb 2106\r\n        var counterBlock = new Array(blockSize);\r\n\r\n        var nonce = (new Date()).getTime();  // timestamp: milliseconds since 1-Jan-1970\r\n        var nonceMs = nonce%1000;\r\n        var nonceSec = Math.floor(nonce/1000);\r\n        var nonceRnd = Math.floor(Math.random()*0xffff);\r\n        // for debugging: nonce = nonceMs = nonceSec = nonceRnd = 0;\r\n\r\n        for (var i=0; i<2; i++) counterBlock[i]   = (nonceMs  >>> i*8) & 0xff;\r\n        for (var i=0; i<2; i++) counterBlock[i+2] = (nonceRnd >>> i*8) & 0xff;\r\n        for (var i=0; i<4; i++) counterBlock[i+4] = (nonceSec >>> i*8) & 0xff;\r\n\r\n        // and convert it to a string to go on the front of the ciphertext\r\n        var ctrTxt = '';\r\n        for (var i=0; i<8; i++) ctrTxt += String.fromCharCode(counterBlock[i]);\r\n\r\n        // generate key schedule - an expansion of the key into distinct Key Rounds for each round\r\n        var keySchedule = Algo.keyExpansion(key);\r\n\r\n        var blockCount = Math.ceil(plaintext.length/blockSize);\r\n        var ciphertxt = new Array(blockCount);  // ciphertext as array of strings\r\n\r\n        for (var b=0; b<blockCount; b++) {\r\n            // set counter (block #) in last 8 bytes of counter block (leaving nonce in 1st 8 bytes)\r\n            // done in two stages for 32-bit ops: using two words allows us to go past 2^32 blocks (68GB)\r\n            for (var c=0; c<4; c++) counterBlock[15-c] = (b >>> c*8) & 0xff;\r\n            for (var c=0; c<4; c++) counterBlock[15-c-4] = (b/0x100000000 >>> c*8);\r\n\r\n            var cipherCntr = Algo.cipher(counterBlock, keySchedule);  // -- encrypt counter block --\r\n\r\n            // block size is reduced on final block\r\n            var blockLength = b<blockCount-1 ? blockSize : (plaintext.length-1)%blockSize+1;\r\n            var cipherChar = new Array(blockLength);\r\n\r\n            for (var i=0; i<blockLength; i++) {  // -- xor plaintext with ciphered counter char-by-char --\r\n                cipherChar[i] = cipherCntr[i] ^ plaintext.charCodeAt(b*blockSize+i);\r\n                cipherChar[i] = String.fromCharCode(cipherChar[i]);\r\n            }\r\n            ciphertxt[b] = cipherChar.join('');\r\n        }\r\n\r\n        // use Array.join() for better performance than repeated string appends\r\n        var ciphertext = ctrTxt + ciphertxt.join('');\r\n        ciphertext = ciphertext.base64Encode();\r\n\r\n        return ciphertext;\r\n    };\r\n\r\n    encryptjs.decrypt = function(ciphertext, password, nBits) {\r\n        var blockSize = 16;  // block size fixed at 16 bytes / 128 bits (Nb=4) for AES\r\n        if (!(nBits==128 || nBits==192 || nBits==256)) return ''; // standard allows 128/192/256 bit keys\r\n        ciphertext = String(ciphertext).base64Decode();\r\n        password = String(password).utf8Encode();\r\n\r\n        // use AES to encrypt password (mirroring encrypt routine)\r\n        var nBytes = nBits/8;  // no bytes in key\r\n        var pwBytes = new Array(nBytes);\r\n        for (var i=0; i<nBytes; i++) {\r\n            pwBytes[i] = isNaN(password.charCodeAt(i)) ? 0 : password.charCodeAt(i);\r\n        }\r\n        var key = Algo.cipher(pwBytes, Algo.keyExpansion(pwBytes));\r\n        key = key.concat(key.slice(0, nBytes-16));  // expand key to 16/24/32 bytes long\r\n\r\n        // recover nonce from 1st 8 bytes of ciphertext\r\n        var counterBlock = new Array(8);\r\n        var ctrTxt = ciphertext.slice(0, 8);\r\n        for (var i=0; i<8; i++) counterBlock[i] = ctrTxt.charCodeAt(i);\r\n\r\n        // generate key schedule\r\n        var keySchedule = Algo.keyExpansion(key);\r\n\r\n        // separate ciphertext into blocks (skipping past initial 8 bytes)\r\n        var nBlocks = Math.ceil((ciphertext.length-8) / blockSize);\r\n        var ct = new Array(nBlocks);\r\n        for (var b=0; b<nBlocks; b++) ct[b] = ciphertext.slice(8+b*blockSize, 8+b*blockSize+blockSize);\r\n        ciphertext = ct;  // ciphertext is now array of block-length strings\r\n\r\n        // plaintext will get generated block-by-block into array of block-length strings\r\n        var plaintxt = new Array(ciphertext.length);\r\n\r\n        for (var b=0; b<nBlocks; b++) {\r\n            // set counter (block #) in last 8 bytes of counter block (leaving nonce in 1st 8 bytes)\r\n            for (var c=0; c<4; c++) counterBlock[15-c] = ((b) >>> c*8) & 0xff;\r\n            for (var c=0; c<4; c++) counterBlock[15-c-4] = (((b+1)/0x100000000-1) >>> c*8) & 0xff;\r\n\r\n            var cipherCntr = Algo.cipher(counterBlock, keySchedule);  // encrypt counter block\r\n\r\n            var plaintxtByte = new Array(ciphertext[b].length);\r\n            for (var i=0; i<ciphertext[b].length; i++) {\r\n                // -- xor plaintxt with ciphered counter byte-by-byte --\r\n                plaintxtByte[i] = cipherCntr[i] ^ ciphertext[b].charCodeAt(i);\r\n                plaintxtByte[i] = String.fromCharCode(plaintxtByte[i]);\r\n            }\r\n            plaintxt[b] = plaintxtByte.join('');\r\n        }\r\n\r\n        // join array of blocks into single plaintext string\r\n        var plaintext = plaintxt.join('');\r\n        plaintext = plaintext.utf8Decode();  // decode from UTF8 back to Unicode multi-byte chars\r\n\r\n        return plaintext;\r\n    };\r\n\r\n    if (typeof String.prototype.utf8Encode == 'undefined') {\r\n        String.prototype.utf8Encode = function() {\r\n            return unescape( encodeURIComponent( this ) );\r\n        };\r\n    }\r\n\r\n    if (typeof String.prototype.utf8Decode == 'undefined') {\r\n        String.prototype.utf8Decode = function() {\r\n            try {\r\n                return decodeURIComponent( escape( this ) );\r\n            } catch (e) {\r\n                return this; // invalid UTF-8? return as-is\r\n            }\r\n        };\r\n    }\r\n\r\n    if (typeof String.prototype.base64Encode == 'undefined') {\r\n        String.prototype.base64Encode = function() {\r\n            if (typeof btoa != 'undefined' && typeof atob != 'undefined') return btoa(this); // browser\r\n            if (typeof Buffer != 'undefined') return new Buffer(this, 'utf8').toString('base64'); // Node.js\r\n            throw new Error('No Base64 Encode');\r\n        };\r\n    }\r\n\r\n    if (typeof String.prototype.base64Decode == 'undefined') {\r\n        String.prototype.base64Decode = function() {\r\n            if (typeof atob != 'undefined' && typeof btoa != 'undefined') return atob(this); // browser\r\n            if (typeof Buffer != 'undefined') return new Buffer(this, 'base64').toString('utf8'); // Node.js\r\n            throw new Error('No Base64 Decode');\r\n        };\r\n    }\r\n\r\n    encryptjs.init();\r\n\r\n    return encryptjs;\r\n\r\n});\r\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\r\n  var e, m\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var nBits = -7\r\n  var i = isLE ? (nBytes - 1) : 0\r\n  var d = isLE ? -1 : 1\r\n  var s = buffer[offset + i]\r\n\r\n  i += d\r\n\r\n  e = s & ((1 << (-nBits)) - 1)\r\n  s >>= (-nBits)\r\n  nBits += eLen\r\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  m = e & ((1 << (-nBits)) - 1)\r\n  e >>= (-nBits)\r\n  nBits += mLen\r\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  if (e === 0) {\r\n    e = 1 - eBias\r\n  } else if (e === eMax) {\r\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\r\n  } else {\r\n    m = m + Math.pow(2, mLen)\r\n    e = e - eBias\r\n  }\r\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\r\n}\r\n\r\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\r\n  var e, m, c\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\r\n  var i = isLE ? 0 : (nBytes - 1)\r\n  var d = isLE ? 1 : -1\r\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\r\n\r\n  value = Math.abs(value)\r\n\r\n  if (isNaN(value) || value === Infinity) {\r\n    m = isNaN(value) ? 1 : 0\r\n    e = eMax\r\n  } else {\r\n    e = Math.floor(Math.log(value) / Math.LN2)\r\n    if (value * (c = Math.pow(2, -e)) < 1) {\r\n      e--\r\n      c *= 2\r\n    }\r\n    if (e + eBias >= 1) {\r\n      value += rt / c\r\n    } else {\r\n      value += rt * Math.pow(2, 1 - eBias)\r\n    }\r\n    if (value * c >= 2) {\r\n      e++\r\n      c /= 2\r\n    }\r\n\r\n    if (e + eBias >= eMax) {\r\n      m = 0\r\n      e = eMax\r\n    } else if (e + eBias >= 1) {\r\n      m = ((value * c) - 1) * Math.pow(2, mLen)\r\n      e = e + eBias\r\n    } else {\r\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\r\n      e = 0\r\n    }\r\n  }\r\n\r\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n  e = (e << mLen) | m\r\n  eLen += mLen\r\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n  buffer[offset + i - d] |= s * 128\r\n}\r\n","export class Pool<T extends Object> {\r\n    private func: {new (): T;};\r\n    private pool: T[];\r\n\r\n    constructor(type: {new (): T;}) {\r\n        this.func = type;\r\n        this.pool = [];\r\n    }\r\n\r\n    clear() {\r\n        this.pool = [];\r\n    }\r\n\r\n    size() {\r\n        return this.pool.length;\r\n    }\r\n\r\n    get(): T {\r\n        if (this.pool.length) {\r\n            return this.pool.shift();\r\n        } else {\r\n            return new this.func();\r\n        }\r\n    }\r\n\r\n    put(obj: T) {\r\n        if (obj && this.pool.indexOf(obj) < 0) {\r\n            this.pool.push(obj);\r\n        }\r\n    }\r\n}","/* global window, exports, define */\r\n\r\n!function() {\r\n    'use strict'\r\n\r\n    var re = {\r\n        not_string: /[^s]/,\r\n        not_bool: /[^t]/,\r\n        not_type: /[^T]/,\r\n        not_primitive: /[^v]/,\r\n        number: /[diefg]/,\r\n        numeric_arg: /[bcdiefguxX]/,\r\n        json: /[j]/,\r\n        not_json: /[^j]/,\r\n        text: /^[^\\x25]+/,\r\n        modulo: /^\\x25{2}/,\r\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\r\n        key: /^([a-z_][a-z_\\d]*)/i,\r\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\r\n        index_access: /^\\[(\\d+)\\]/,\r\n        sign: /^[+-]/\r\n    }\r\n\r\n    function sprintf(key) {\r\n        // `arguments` is not an array, but should be fine for this call\r\n        return sprintf_format(sprintf_parse(key), arguments)\r\n    }\r\n\r\n    function vsprintf(fmt, argv) {\r\n        return sprintf.apply(null, [fmt].concat(argv || []))\r\n    }\r\n\r\n    function sprintf_format(parse_tree, argv) {\r\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\r\n        for (i = 0; i < tree_length; i++) {\r\n            if (typeof parse_tree[i] === 'string') {\r\n                output += parse_tree[i]\r\n            }\r\n            else if (typeof parse_tree[i] === 'object') {\r\n                ph = parse_tree[i] // convenience purposes only\r\n                if (ph.keys) { // keyword argument\r\n                    arg = argv[cursor]\r\n                    for (k = 0; k < ph.keys.length; k++) {\r\n                        if (arg == undefined) {\r\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\r\n                        }\r\n                        arg = arg[ph.keys[k]]\r\n                    }\r\n                }\r\n                else if (ph.param_no) { // positional argument (explicit)\r\n                    arg = argv[ph.param_no]\r\n                }\r\n                else { // positional argument (implicit)\r\n                    arg = argv[cursor++]\r\n                }\r\n\r\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\r\n                    arg = arg()\r\n                }\r\n\r\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\r\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\r\n                }\r\n\r\n                if (re.number.test(ph.type)) {\r\n                    is_positive = arg >= 0\r\n                }\r\n\r\n                switch (ph.type) {\r\n                    case 'b':\r\n                        arg = parseInt(arg, 10).toString(2)\r\n                        break\r\n                    case 'c':\r\n                        arg = String.fromCharCode(parseInt(arg, 10))\r\n                        break\r\n                    case 'd':\r\n                    case 'i':\r\n                        arg = parseInt(arg, 10)\r\n                        break\r\n                    case 'j':\r\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\r\n                        break\r\n                    case 'e':\r\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\r\n                        break\r\n                    case 'f':\r\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\r\n                        break\r\n                    case 'g':\r\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\r\n                        break\r\n                    case 'o':\r\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\r\n                        break\r\n                    case 's':\r\n                        arg = String(arg)\r\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\r\n                        break\r\n                    case 't':\r\n                        arg = String(!!arg)\r\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\r\n                        break\r\n                    case 'T':\r\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\r\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\r\n                        break\r\n                    case 'u':\r\n                        arg = parseInt(arg, 10) >>> 0\r\n                        break\r\n                    case 'v':\r\n                        arg = arg.valueOf()\r\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\r\n                        break\r\n                    case 'x':\r\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\r\n                        break\r\n                    case 'X':\r\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\r\n                        break\r\n                }\r\n                if (re.json.test(ph.type)) {\r\n                    output += arg\r\n                }\r\n                else {\r\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\r\n                        sign = is_positive ? '+' : '-'\r\n                        arg = arg.toString().replace(re.sign, '')\r\n                    }\r\n                    else {\r\n                        sign = ''\r\n                    }\r\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\r\n                    pad_length = ph.width - (sign + arg).length\r\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\r\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\r\n                }\r\n            }\r\n        }\r\n        return output\r\n    }\r\n\r\n    var sprintf_cache = Object.create(null)\r\n\r\n    function sprintf_parse(fmt) {\r\n        if (sprintf_cache[fmt]) {\r\n            return sprintf_cache[fmt]\r\n        }\r\n\r\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\r\n        while (_fmt) {\r\n            if ((match = re.text.exec(_fmt)) !== null) {\r\n                parse_tree.push(match[0])\r\n            }\r\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\r\n                parse_tree.push('%')\r\n            }\r\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\r\n                if (match[2]) {\r\n                    arg_names |= 1\r\n                    var field_list = [], replacement_field = match[2], field_match = []\r\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\r\n                        field_list.push(field_match[1])\r\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\r\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\r\n                                field_list.push(field_match[1])\r\n                            }\r\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\r\n                                field_list.push(field_match[1])\r\n                            }\r\n                            else {\r\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\r\n                    }\r\n                    match[2] = field_list\r\n                }\r\n                else {\r\n                    arg_names |= 2\r\n                }\r\n                if (arg_names === 3) {\r\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\r\n                }\r\n\r\n                parse_tree.push(\r\n                    {\r\n                        placeholder: match[0],\r\n                        param_no:    match[1],\r\n                        keys:        match[2],\r\n                        sign:        match[3],\r\n                        pad_char:    match[4],\r\n                        align:       match[5],\r\n                        width:       match[6],\r\n                        precision:   match[7],\r\n                        type:        match[8]\r\n                    }\r\n                )\r\n            }\r\n            else {\r\n                throw new SyntaxError('[sprintf] unexpected placeholder')\r\n            }\r\n            _fmt = _fmt.substring(match[0].length)\r\n        }\r\n        return sprintf_cache[fmt] = parse_tree\r\n    }\r\n\r\n    /**\r\n     * export to either browser or node.js\r\n     */\r\n    /* eslint-disable quote-props */\r\n    if (typeof exports !== 'undefined') {\r\n        exports['sprintf'] = sprintf\r\n        exports['vsprintf'] = vsprintf\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        window['sprintf'] = sprintf\r\n        window['vsprintf'] = vsprintf\r\n\r\n        if (typeof define === 'function' && define['amd']) {\r\n            define(function() {\r\n                return {\r\n                    'sprintf': sprintf,\r\n                    'vsprintf': vsprintf\r\n                }\r\n            })\r\n        }\r\n    }\r\n    /* eslint-enable quote-props */\r\n}(); // eslint-disable-line\r\n","\r\n\r\n/**\r\n * 目前只支持单行单列模式。\r\n * \r\n */\r\nconst { ccclass, property } = cc._decorator;\r\nconst ScrollModel = cc.Enum({ Horizontal: 0, Vertical: 1 });\r\nconst ScrollType = cc.Enum({ Single: 0, Multiple: 1 });\r\n\r\ninterface viewCell {\r\n    getSize(index: number, data?: any): number;\r\n}\r\n\r\ninterface tvCell extends cc.Node {\r\n    // 当前实际的下标\r\n    tvIndex: number;\r\n    // 将要转变的下标(用于增删操作)\r\n    _tvIndex: number;\r\n}\r\n\r\n@ccclass\r\nexport default class tableView extends cc.ScrollView {\r\n    // 重写\r\n    @property({ visible: false, override: true })\r\n    horizontal = false;\r\n    @property({ visible: false, override: true })\r\n    vertical = true;\r\n    @property({ type: cc.Component.EventHandler, visible: false, override: true })\r\n    scrollEvents = [];\r\n\r\n    // 新增\r\n    @property(cc.Prefab)\r\n    _cell: cc.Prefab = null;\r\n    @property({ type: cc.Prefab, tooltip: '渲染节点' })\r\n    get cell() { return this._cell; }\r\n    set cell(value) {\r\n        if (!CC_EDITOR) {\r\n            this.clear();\r\n            this.cellPool.clear();\r\n        }\r\n        this._cell = value;\r\n    }\r\n\r\n    @property({ type: ScrollModel, tooltip: '滑动方向' })\r\n    get scrollModel() { return this.horizontal ? ScrollModel.Horizontal : ScrollModel.Vertical; }\r\n    set scrollModel(value) {\r\n        if (!CC_EDITOR) {\r\n            cc.error('[tableView] 不允许动态修改scrollModel');\r\n            return;\r\n        }\r\n        if (value === ScrollModel.Horizontal) {\r\n            this.horizontal = true;\r\n            this.vertical = false;\r\n        } else {\r\n            this.horizontal = false;\r\n            this.vertical = true;\r\n        }\r\n    }\r\n\r\n    // @property({ type: ScrollType, tooltip: 'Single: 单行/单列\\nMultiple: 多行/多列' })\r\n    // scrollType: number = ScrollType.Single;\r\n\r\n    // @property({ visible: function () { return this.scrollType == ScrollType.Multiple }, tooltip: 'Horizontal: 有几行\\Vertical: 有几列' })\r\n    // mulCount: number = 0;\r\n\r\n    private cellPool: cc.NodePool = new cc.NodePool('viewCell');\r\n    private cellData = null;\r\n    private cellCount = 0;\r\n    private childCount = 0;\r\n\r\n    private startIndex = 0;\r\n    private maxStartIndex = 0;\r\n    private endIndex = 0;\r\n\r\n    private anchorCenterX = 0;\r\n    private anchorCenterY = 0;\r\n    private anchorLeftX = 0;\r\n    private anchorTopY = 0;\r\n    private cellAnchorX = 0;\r\n    private cellAnchorY = 0;\r\n\r\n    private customSize = false;\r\n    private cellAccumSizes: number[] = [];\r\n    private cellSizes: number[] = [];\r\n    private cellSize: number = 0;\r\n\r\n    private updateRefreshOnce = false;\r\n    private updateRefreshForce = false;\r\n    private updateCellsOn = false;\r\n    private updateCellsOnce = false;\r\n\r\n    onDestroy() {\r\n        while (this.cellPool.size()) {\r\n            this.cellPool.get().destroy();\r\n        }\r\n        if (super.onDestroy) {\r\n            super.onDestroy();\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n        this.node.on('scroll-began', this.onScrollBegin, this);\r\n        this.node.on('scroll-ended', this.onScrollEnd, this);\r\n\r\n        if (super.onEnable) {\r\n            super.onEnable();\r\n        }\r\n    }\r\n\r\n    onDisable() {\r\n        this.node.off('scroll-began', this.onScrollBegin, this);\r\n        this.node.off('scroll-ended', this.onScrollEnd, this);\r\n\r\n        if (super.onDisable) {\r\n            super.onDisable();\r\n        }\r\n    }\r\n\r\n    private onScrollBegin() {\r\n        this.updateCellsOn = true;\r\n    }\r\n\r\n    private onScrollEnd() {\r\n        this.updateCellsOn = false;\r\n        this.updateCellsOnce = true;\r\n    }\r\n\r\n    getCellCount() {\r\n        return this.cellCount;\r\n    }\r\n\r\n    setCellCount(num: number) {\r\n        console.log('setCellCount',num)\r\n        if (typeof num === 'number' && num >= 0) {\r\n            this.cellCount = num;\r\n        } else {\r\n            cc.error('[tableView] setCellCount 参数错误');\r\n        }\r\n    }\r\n\r\n    getCellData() {\r\n        return this.cellData;\r\n    }\r\n\r\n    setCellData(data: any) {\r\n        if (typeof data !== 'undefined') {\r\n            this.cellData = data;\r\n        }\r\n    }\r\n\r\n    getCellRange() {\r\n        const children: tvCell[] = <tvCell[]>this.content.children;\r\n        if (children.length == 0) {\r\n            return { min: -1, max: -1 };\r\n        }\r\n        return { min: children[0].tvIndex, max: children[children.length - 1].tvIndex };\r\n    }\r\n\r\n    /**\r\n     * [实时操作] 如果动态修改scrollBar的大小了，则需要调用此方法更新\r\n     */\r\n    refreshScrollBar() {\r\n        // @ts-ignore\r\n        this._updateScrollBar(this._getHowMuchOutOfBoundary());\r\n    }\r\n\r\n    /**\r\n     * [延时操作] 刷新\r\n     * 1、cell大小改变需要刷新cell位置时调用\r\n     * 2、content大小、锚点发生改变后，需要刷新cell位置时调用\r\n     * 3、cellCount改变，需要刷新cell时调用\r\n     * \r\n     * 调用refresh并不代表会执行cell的init或uninit方法\r\n     * 只有当cell的index因插入、删除、滚屏、初始化等原因需要发生变化时，才会触发init或uninit方法\r\n     */\r\n    refresh(force = true) {\r\n        this.updateRefreshOnce = true;\r\n        if (force) {\r\n            this.updateRefreshForce = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * [实时操作] 刷新\r\n     */\r\n    refreshSync(force = true) {\r\n        this.stopRefresh();\r\n        this.initData();\r\n        this.updateCells(force);\r\n    }\r\n\r\n    /**\r\n     * 停止refresh\r\n     */\r\n    private stopRefresh() {\r\n        this.updateRefreshOnce = false;\r\n        this.updateRefreshForce = false;\r\n    }\r\n\r\n    private initPromiseBack = null\r\n    /**\r\n     * [实时操作] 初始化\r\n     */\r\n   async init(data = []): Promise<any> {\r\n\r\n\r\n        var promise = new Promise<any>(resolve => {\r\n            if(data.length==0||data==null){\r\n                this.clear()\r\n                return\r\n            }\r\n            if (CC_DEBUG) {\r\n                if (!this.content) {\r\n                    return cc.error('[tableView] 请指定content');\r\n                }\r\n                if (!this.cell) {\r\n                    return cc.error('[tableView] 请指定cell');\r\n                }\r\n                if (!this.getViewCell()) {\r\n                    return cc.error('[tableView] 请在cell中添加继承自<viewCell>的自定义组件');\r\n                }\r\n            }\r\n            this.clear();\r\n\r\n            this.setCellData(data || null);\r\n            this.setCellCount(data.length);\r\n\r\n            this.initData();\r\n\r\n            this.stopAutoScroll();\r\n            this.scrollToOrigin();\r\n\r\n            this.updateCells(true);\r\n\r\n            this.initPromiseBack = ()=>{\r\n                resolve(null)\r\n            }\r\n        })\r\n        return  promise\r\n    }\r\n\r\n    /**\r\n     * [实时操作] 清空\r\n     */\r\n    clear() {\r\n        this.cellCount = 0;\r\n        this.childCount = 0;\r\n        this.startIndex = 0;\r\n        this.endIndex = 0;\r\n        this.maxStartIndex = 0;\r\n        this.content[this.horizontal ? 'width' : 'height'] = 0;\r\n\r\n        this.stopRefresh();\r\n        this.updateCellCount();\r\n    }\r\n\r\n    /**\r\n     * [实时操作] 重载\r\n     */\r\n    reload(start = 0, num?: number) {\r\n        if (typeof num === 'undefined') {\r\n            this.content.children.forEach((cell: tvCell) => {\r\n                if (cell.tvIndex >= start) {\r\n                    this.reloadCell(cell,cell.tvIndex);\r\n                }\r\n            })\r\n        } else {\r\n            if (num <= 0) return;\r\n\r\n            if (start < 0) start = start + this.cellCount;\r\n\r\n            if (start + num < 0) return;\r\n\r\n            this.content.children.forEach((cell: tvCell) => {\r\n                if (cell.tvIndex >= start && cell.tvIndex < start + num) {\r\n                    this.reloadCell(cell,cell.tvIndex);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * [延时操作] 插入\r\n     */\r\n    insert(start = -1, num = 1, data?: any) {\r\n        if (num <= 0) return;\r\n\r\n        if (start < 0) start = start + this.cellCount + 1;\r\n        if (start < 0) start = 0;\r\n\r\n        this.setCellData(data);\r\n\r\n        const children = this.content.children;\r\n        for (let index = children.length - 1; index >= 0; index--) {\r\n            const node: tvCell = <tvCell>children[index];\r\n            if (node._tvIndex >= start) {\r\n                node._tvIndex += num;\r\n            }\r\n        }\r\n\r\n        this.setCellCount(this.cellCount + num);\r\n        this.refresh();\r\n    }\r\n\r\n    /**\r\n     * [延时操作] 删除\r\n     */\r\n    remove(start = -1, num = 1, data?: any) {\r\n        if (num <= 0) return;\r\n\r\n        if (start < 0) start = start + this.cellCount;\r\n        let end = start + num;\r\n\r\n        if (start < 0) {\r\n            start = 0;\r\n        }\r\n        if (end > this.cellCount) {\r\n            end = this.cellCount;\r\n        }\r\n\r\n        num = end - start;\r\n\r\n        if (start >= this.cellCount || end <= 0 || num < 0 || start >= end) return;\r\n\r\n        this.setCellData(data);\r\n\r\n        const children = this.content.children;\r\n        for (let index = children.length - 1; index >= 0; index--) {\r\n            const node: tvCell = <tvCell>children[index];\r\n            if (node._tvIndex >= start) {\r\n                if (node._tvIndex < end) {\r\n                    node._tvIndex = -1;\r\n                } else {\r\n                    node._tvIndex -= num;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setCellCount(this.cellCount - num);\r\n        this.refresh();\r\n    }\r\n\r\n    private getCell(): tvCell {\r\n        let node: tvCell = null;\r\n        if (this.cellPool.size()) {\r\n            node = <tvCell>this.cellPool.get();\r\n        } else {\r\n            node = <tvCell>cc.instantiate(this.cell);\r\n            node.getComponent('viewCell').delegate = this\r\n        }\r\n        node.tvIndex = -1;\r\n        node._tvIndex = -1;\r\n        return node;\r\n    }\r\n\r\n    private putCell(node: tvCell) {\r\n        this.cellPool.put(node);\r\n    }\r\n\r\n    private initCell(cell: tvCell, index: number) {\r\n        if (index >= 0) {\r\n            if (cell.tvIndex != index || cell.tvIndex != cell._tvIndex) {\r\n                const com = cell.getComponent('viewCell');\r\n                if (cell.tvIndex >= 0) com.uninit();\r\n                com.init(index, this.cellData[index]);\r\n            }\r\n            cell.tvIndex = index;\r\n            cell._tvIndex = index;\r\n        }\r\n    }\r\n\r\n    private uninitCell(cell: tvCell) {\r\n        if (cell.tvIndex >= 0) {\r\n            cell.getComponent('viewCell').uninit();\r\n            cell.tvIndex = -1;\r\n            cell._tvIndex = -1;\r\n        }\r\n    }\r\n\r\n    private reloadCell(cell: tvCell,idx) {\r\n        // cell.getComponent('viewCell').reload(this.cellData[idx]);\r\n        cell.getComponent('viewCell').init(idx,this.cellData[idx])\r\n    }\r\n\r\n    private getViewCell(): viewCell {\r\n        if (this.cell) {\r\n            const com = this.cell.data.getComponent('viewCell');\r\n            if (com) {\r\n                // return <typeof viewCell>cc.js.getClassByName(cc.js.getClassName(com));\r\n                return com.constructor || cc.js.getClassByName(cc.js.getClassName(com));\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 获取默认cell大小\r\n     */\r\n    private getDefaultCellSize() {\r\n        if (this.cell) {\r\n            if (CC_DEBUG && this.cell.data.getComponent(cc.Widget)) {\r\n                cc.warn('[tableView] cell根节点中存在cc.Widget，可能无法正确获取Size');\r\n            }\r\n            return this.cell.data.getContentSize();\r\n        }\r\n        return cc.Size.ZERO;\r\n    }\r\n\r\n    private _delegate = null\r\n    set delegate(dele){\r\n        this._delegate = dele\r\n    }\r\n    get delegate(){\r\n        return this._delegate\r\n    }\r\n    \r\n\r\n    /**\r\n     * 获取默认cell锚点\r\n     */\r\n    private getDefaultCellAnchor() {\r\n        if (this.cell) {\r\n            return this.cell.data.getAnchorPoint();\r\n        }\r\n        return cc.Vec2.ZERO;\r\n    }\r\n\r\n    private getScrollLengh() {\r\n        const offset = this.getScrollOffset();\r\n        const scrollLen = this.horizontal ? -offset.x : offset.y;\r\n\r\n        if (scrollLen < 0) {\r\n            return 0;\r\n        }\r\n\r\n        // 有maxStartIndex作为限制，这里可以不做限制\r\n        // const maxOffset = this.getMaxScrollOffset();\r\n        // const maxScrollLen = this.horizontal ? -maxOffset.x : maxOffset.y;\r\n        // if (scrollLen > maxScrollLen) {\r\n        //     return maxScrollLen;\r\n        // }\r\n        return scrollLen;\r\n    }\r\n\r\n    /**\r\n     * 初始化数值\r\n     */\r\n    private initData() {\r\n        const view = this.getViewCell();\r\n        const defaultCellSize = this.getDefaultCellSize();\r\n        const prop = this.horizontal ? 'width' : 'height';\r\n        const viewLen = this.content.parent[prop];\r\n\r\n        // 是否自定义大小\r\n        this.customSize = !!view && !!view.hasOwnProperty('getSize');\r\n\r\n        // 初始默认数据\r\n        this.cellSize = defaultCellSize[prop];\r\n        this.cellAccumSizes.length = 0;\r\n        this.cellSizes.length = 0;\r\n        this.maxStartIndex = 0;\r\n        this.startIndex = 0;\r\n        this.endIndex = 0;\r\n\r\n        // 填充cell数据\r\n        if (this.customSize) {\r\n            /**\r\n             * [性能问题] 这里有可能会出现性能问题, 原因可能有：\r\n             * 1、view.getSize的复杂度过高\r\n             * 2、数据量极大\r\n             */\r\n            for (let index = 0, accumSize = 0, size = 0; index < this.cellCount; index++) {\r\n                size = view.getSize(index, this.cellData);\r\n                if (!size || size < 0) size = this.cellSize;\r\n                this.cellSizes.push(size);\r\n\r\n                accumSize += size;\r\n                this.cellAccumSizes.push(accumSize);\r\n            }\r\n        }\r\n\r\n        // 计算childCount\r\n        if (this.customSize) {\r\n            // 自定义cell大小时，childCount需要实时动态计算，这里计算一下滑到最底部时的childCount(因为后面正好用上)\r\n            this.childCount = this.cellCount;\r\n\r\n            const accumIndex = this.cellAccumSizes.length - 1;\r\n            const accumSize = this.cellAccumSizes[accumIndex];\r\n            for (let index = 1, size = 0; index <= accumIndex; index++) {\r\n                size = this.cellAccumSizes[accumIndex - index];\r\n\r\n                if (accumSize - size >= viewLen) {\r\n                    this.childCount = index + 1;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            this.childCount = Math.ceil(viewLen / this.cellSize) + 1;\r\n        }\r\n\r\n        // 计算最大的开始下标\r\n        if (this.cellCount > this.childCount) {\r\n            this.maxStartIndex = this.cellCount - this.childCount;\r\n        } else {\r\n            this.maxStartIndex = 0;\r\n        }\r\n\r\n        // 计算content大小\r\n        if (this.customSize) {\r\n            this.content[prop] = this.cellAccumSizes[this.cellAccumSizes.length - 1] || 0;\r\n        } else {\r\n            this.content[prop] = this.cellSize * this.cellCount;\r\n        }\r\n\r\n        // 计算基础定位数值\r\n        const cellAnchor = this.getDefaultCellAnchor();\r\n        this.anchorCenterX = (0.5 - this.content.anchorX) * this.content.width;\r\n        this.anchorCenterY = (0.5 - this.content.anchorY) * this.content.height;\r\n        this.anchorLeftX = (0 - this.content.anchorX) * this.content.width;\r\n        this.anchorTopY = (1 - this.content.anchorY) * this.content.height;\r\n        this.cellAnchorX = cellAnchor.x;\r\n        this.cellAnchorY = 1 - cellAnchor.y;\r\n    }\r\n\r\n    /**\r\n     * 更新cell的数量，不够添加，多了删除\r\n     */\r\n    private updateCellCount() {\r\n        const children: tvCell[] = <tvCell[]>this.content.children;\r\n\r\n        if (children.length == this.childCount) {\r\n            return;\r\n        } else if (children.length > this.childCount) {\r\n            let cell: tvCell = null;\r\n\r\n            // 优先删除即将要废弃的cell\r\n            for (let index = children.length - 1; index >= this.childCount; index--) {\r\n                cell = children[index];\r\n\r\n                if (cell._tvIndex < this.startIndex || cell._tvIndex > this.endIndex) {\r\n                    this.uninitCell(cell);\r\n                    this.putCell(cell);\r\n                }\r\n            }\r\n\r\n            // 从后往前删除\r\n            for (let index = children.length - 1; index >= this.childCount; index--) {\r\n                cell = children[index];\r\n\r\n                this.uninitCell(cell);\r\n                this.putCell(cell);\r\n            }\r\n        } else {\r\n            for (let index = children.length; index < this.childCount ; index++) {\r\n                if(index < this.cellCount){\r\n                    this.content.addChild(this.getCell())\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据滑动距离，获得startIndex\r\n     */\r\n    private getStartIndex(scrollLen: number) {\r\n        let startIndex = 0;\r\n        const maxStartIndex = this.maxStartIndex;\r\n\r\n        if (this.customSize) {\r\n            const cellAccumSizes = this.cellAccumSizes;\r\n            if (cellAccumSizes.length < 5) {\r\n                // 普通循环\r\n                for (; startIndex < maxStartIndex; startIndex++) {\r\n                    if (cellAccumSizes[startIndex] > scrollLen) {\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                // 二分查找\r\n                let min = 0, max = maxStartIndex, value = 0;\r\n                while (max >= min) {\r\n                    startIndex = Math.floor((max + min) / 2);\r\n                    value = cellAccumSizes[startIndex];\r\n\r\n                    if (scrollLen == value) {\r\n                        if (startIndex < maxStartIndex) startIndex += 1;\r\n                        break;\r\n                    } else if (scrollLen < value && (startIndex == 0 || scrollLen >= cellAccumSizes[startIndex - 1])) {\r\n                        break;\r\n                    } else if (scrollLen > value) {\r\n                        min = startIndex + 1;\r\n                    } else {\r\n                        max = startIndex - 1;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            startIndex = Math.floor(scrollLen / this.cellSize);\r\n            if (startIndex < 0) { startIndex = 0 }\r\n            else if (startIndex > maxStartIndex) { startIndex = maxStartIndex }\r\n        }\r\n\r\n        return startIndex;\r\n    }\r\n\r\n    /**\r\n     * 更新开始下标、结束下标、childNum(只有自定义cell大小才会更新)\r\n     */\r\n    private updateCellRange() {\r\n        // 滚动距离\r\n        const scrollLen = this.getScrollLengh();\r\n\r\n        // 当前滚动距离对应的起始cell下标\r\n        this.startIndex = this.getStartIndex(scrollLen);\r\n\r\n        // 自定义cell大小需要更新childCount\r\n        if (this.customSize) {\r\n            const viewLen = this.content.parent[this.horizontal ? 'width' : 'height'];\r\n            const cellAccumLen = this.cellAccumSizes.length;\r\n\r\n            // 这里小数比较大小的做法，会出现0.1+0.2!=0.3的情况么?\r\n            if (this.cellAccumSizes[cellAccumLen - 1] - viewLen <= scrollLen) {\r\n                this.childCount = cellAccumLen - this.startIndex;\r\n            } else {\r\n                const startSize = this.cellAccumSizes[this.startIndex];\r\n\r\n                for (let endIndex = this.startIndex + 1, accumSize = 0; endIndex < cellAccumLen; endIndex++) {\r\n                    accumSize = this.cellAccumSizes[endIndex];\r\n\r\n                    // 这里小数比较大小的做法，会出现0.1+0.2!=0.3的情况么?\r\n                    if (accumSize - viewLen >= scrollLen) {\r\n                        if (accumSize - startSize >= viewLen) {\r\n                            this.childCount = endIndex - this.startIndex + 1;\r\n                        } else {\r\n                            this.childCount = endIndex - this.startIndex + 2;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // 当前滚动距离对应的终止cell下标\r\n        this.endIndex = this.startIndex + this.childCount - 1;\r\n    }\r\n\r\n    /**\r\n     * 更新cell状态\r\n     */\r\n    private updateCell(cell: tvCell, index?: number) {\r\n        if (typeof index === 'number') {\r\n            this.initCell(cell, index);\r\n        } else {\r\n            this.initCell(cell, cell._tvIndex);\r\n            index = cell.tvIndex;\r\n        }\r\n\r\n        if (this.horizontal) {\r\n            if (this.customSize) {\r\n                cell.x = this.anchorLeftX - this.cellSizes[index] * this.cellAnchorX + this.cellAccumSizes[index];\r\n            } else {\r\n                cell.x = this.anchorLeftX - this.cellSize * this.cellAnchorX + this.cellSize * (index + 1);\r\n            }\r\n            cell.y = this.anchorCenterY;\r\n        } else {\r\n            if (this.customSize) {\r\n                cell.y = this.anchorTopY + this.cellSizes[index] * this.cellAnchorY - this.cellAccumSizes[index];\r\n            } else {\r\n                cell.y = this.anchorTopY + this.cellSize * this.cellAnchorY - this.cellSize * (index + 1);\r\n            }\r\n            cell.x = this.anchorCenterX;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新cells状态\r\n     * \r\n     * 根据startIndex和endIndex，将content下的节点分成keepCells和changeCells\r\n     * 1、统一更新keepCells和changeCells里cell的坐标\r\n     * 2、changeCells里的cell会进行init\r\n     */\r\n    private updateCells(force = false) {\r\n        this.updateCellsOnce = false;\r\n\r\n        this.updateCellRange();\r\n        this.updateCellCount();\r\n\r\n        if (!this.childCount) {\r\n            return;\r\n        }\r\n\r\n        const startIndex = this.startIndex;\r\n        const endIndex = this.endIndex;\r\n\r\n        const children: tvCell[] = <tvCell[]>this.content.children;\r\n\r\n        // 正常滑动下，只要第一个cell的_tvIndex与startIndex相等最后一个cell的_tvIndex与endIndex相等, 就没必要进行下一步计算\r\n        // 如果是其它情况一定要进行接下来的计算，可以通过force进行控制\r\n        if (!force && children[0]._tvIndex == startIndex && children[children.length - 1]._tvIndex == endIndex) {\r\n            return;\r\n        }\r\n\r\n        const keepCells: tvCell[] = [];\r\n        const changeCells: tvCell[] = [];\r\n        children.forEach((cell) => {\r\n            if (cell._tvIndex < startIndex || cell._tvIndex > endIndex || cell._tvIndex != cell.tvIndex) {\r\n                this.uninitCell(cell);\r\n                changeCells.push(cell);\r\n            } else {\r\n                keepCells.push(cell);\r\n            }\r\n        });\r\n\r\n        // 没有可刷新的\r\n        if (changeCells.length == 0) {\r\n            if (force) children.forEach((cell) => this.updateCell(cell));\r\n        }\r\n        // 全部cell都需要刷新\r\n        else if (keepCells.length == 0) {\r\n            children.forEach((cell, index) => this.updateCell(cell, startIndex + index));\r\n        }\r\n        // 只有部分cell需要刷新\r\n        else {\r\n            for (let index = startIndex, keepPoint = 0, changePoint = 0, i = 0; index <= endIndex; index++ , i++) {\r\n                if (keepPoint < keepCells.length && index == keepCells[keepPoint]._tvIndex) {\r\n                    this.updateCell(keepCells[keepPoint++]);\r\n                } else {\r\n                    this.updateCell(changeCells[changePoint++], index);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 排序\r\n        children.forEach(function (node) {\r\n            node.zIndex = node.tvIndex - startIndex;\r\n        })\r\n        this.content.sortAllChildren();\r\n    }\r\n\r\n    scrollToIndex(index?: number, timeInSecond?: number, attenuated?: boolean) {\r\n        // todo\r\n        console.log('[tableView] scrollToIndex')\r\n    }\r\n\r\n    getPerScrollOffset() {\r\n        if (this.horizontal) {\r\n            return cc.v2(this.getScrollOffset().x / this.getMaxScrollOffset().x, 0);\r\n        } else {\r\n            return cc.v2(0, this.getScrollOffset().y / this.getMaxScrollOffset().y);\r\n        }\r\n    }\r\n\r\n    scrollToPerOffset(offset: cc.Vec2, timeInSecond?: number, attenuated?: boolean) {\r\n        if (this.horizontal) {\r\n            offset.x *= this.getMaxScrollOffset().x;\r\n        } else {\r\n            offset.y *= this.getMaxScrollOffset().y;\r\n        }\r\n        this.scrollToOffset(offset, timeInSecond, attenuated);\r\n    }\r\n\r\n    scrollToOrigin(timeInSecond?: number, attenuated?: boolean) {\r\n        if (this.horizontal) {\r\n            this.scrollToLeft(timeInSecond, attenuated)\r\n        } else {\r\n            this.scrollToTop(timeInSecond, attenuated)\r\n        }\r\n    }\r\n\r\n    stopAutoScroll() {\r\n        if (!this.updateCellsOnce && this.updateCellsOn) {\r\n            this.updateCellsOnce = true;\r\n        }\r\n        super.stopAutoScroll();\r\n    }\r\n\r\n    scrollToBottom(timeInSecond?: number, attenuated?: boolean) {\r\n        if (timeInSecond) {\r\n            this.updateCellsOn = true;\r\n        } else {\r\n            this.updateCellsOnce = true;\r\n        }\r\n        super.scrollToBottom(timeInSecond, attenuated);\r\n    }\r\n\r\n    scrollToTop(timeInSecond?: number, attenuated?: boolean) {\r\n        if (timeInSecond) {\r\n            this.updateCellsOn = true;\r\n        } else {\r\n            this.updateCellsOnce = true;\r\n        }\r\n        super.scrollToTop(timeInSecond, attenuated);\r\n    }\r\n\r\n    scrollToLeft(timeInSecond?: number, attenuated?: boolean) {\r\n        if (timeInSecond) {\r\n            this.updateCellsOn = true;\r\n        } else {\r\n            this.updateCellsOnce = true;\r\n        }\r\n        super.scrollToLeft(timeInSecond, attenuated);\r\n    }\r\n\r\n    scrollToRight(timeInSecond?: number, attenuated?: boolean) {\r\n        if (timeInSecond) {\r\n            this.updateCellsOn = true;\r\n        } else {\r\n            this.updateCellsOnce = true;\r\n        }\r\n        super.scrollToRight(timeInSecond, attenuated);\r\n    }\r\n\r\n    scrollToOffset(offset: cc.Vec2, timeInSecond?: number, attenuated?: boolean) {\r\n        if (timeInSecond) {\r\n            this.updateCellsOn = true;\r\n        } else {\r\n            this.updateCellsOnce = true;\r\n        }\r\n        super.scrollToOffset(offset, timeInSecond, attenuated);\r\n    }\r\n\r\n    update(dt) {\r\n        super.update(dt);\r\n        if (this.updateRefreshOnce) this.refreshSync(this.updateRefreshForce);\r\n        if (this.updateCellsOn || this.updateCellsOnce) this.updateCells();\r\n\r\n        \r\n        if(this.initPromiseBack){\r\n            this.initPromiseBack()\r\n            this.initPromiseBack = null\r\n        }\r\n    }\r\n}","const { ccclass, property } = cc._decorator;\r\n\r\nimport tableView from './tableView'\r\n\r\n@ccclass\r\nexport default class viewCell extends cc.Component {\r\n    protected _delegate:tableView = null\r\n    set delegate(data){\r\n        this._delegate = data\r\n    }\r\n    get delegate(){\r\n        return this._delegate\r\n    }\r\n    static getSize(index: number, data?: any): number {\r\n        return 0;\r\n    }\r\n    \r\n    \r\n\r\n    init(index: number, data?: any) {\r\n    }\r\n\r\n    uninit() {\r\n    }\r\n\r\n    reload(data?: any) {\r\n    }\r\n}\r\n","export let cityDatas = {\r\n    \"华东\":['上海市','江苏省','浙江省','安徽省','福建省','江西省','山东省'],\r\n    \"华北\":['北京市','天津市','山西省','河北省','内蒙古自治区'],\r\n    \"华中\":['河南省','湖北省','湖南省'],\r\n    \"华南\":['广东省','广西壮族自治区','海南省'],\r\n    \"东北\":['辽宁','吉林','黑龙江'],\r\n    \"西南\":['辽宁','吉林','黑龙江'],\r\n    \"西北\":['陕西','甘肃','新疆','青海','宁夏'],\r\n}"],"file":"index.js"}